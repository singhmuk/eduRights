(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[71],{140:function(e,n,t){"use strict";t.d(n,"a",(function(){return d}));var a=t(45),r=t(28),l=t(136),i=t(137),s=t(139),o=t(0),c=t.n(o),u=t(138),m=t.n(u),d=(t(59),function(e){function n(e){var t;return Object(a.a)(this,n),(t=Object(l.a)(this,Object(i.a)(n).call(this,e))).highlight=function(){t.ref&&t.ref.current&&m.a.highlightElement(t.ref.current)},t.ref=c.a.createRef(),t}return Object(s.a)(n,e),Object(r.a)(n,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,n=e.code,t=(e.plugins,e.language);return c.a.createElement("pre",{className:"code-prism"},c.a.createElement("code",{ref:this.ref,className:"language-".concat(t)},n.trim()))}}]),n}(c.a.Component))},141:function(e,n,t){},148:function(e,n,t){"use strict";t.d(n,"a",(function(){return u}));var a=t(0),r=t.n(a),l=t(26),i=t(297),s=t(295),o=t(114),c=Object(o.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function u(){var e=c();return r.a.createElement("div",{className:e.root},r.a.createElement(s.a,null,r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/introReact",className:e.line},"Intro-Lazy-Children")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/reactInter",className:e.line},"Intro")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/codingInter",className:e.line},"CodesPro")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/mainCompo",className:e.line},"Event-hoc-form",r.a.createElement("br",null),"curd-slider")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/pureComp",className:e.line},"PureComp-conComp")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/useStates",className:e.line},"useMultiState")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/contextHooks",className:e.line},"Context Hooks")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/customHooks",className:e.line},"CustomHooks-memo")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/useReducersSta",className:e.line},"UseReducers")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/contextMethods",className:e.line},"Curd Hooks")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/jsonPlaceholder",className:e.line},"JsonPlaceholder")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/async_await",className:e.line},"Async-await-sideMenu",r.a.createElement("br",null),"Mouse hover")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/ticGame",className:e.line},"Share-maxMinDate",r.a.createElement("br",null),"moveBtn-slideshow")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/linkGet",className:e.line},"LinkGet")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/numberFormats",className:e.line},"Random NumFor-biToDe",r.a.createElement("br",null)," Validations Step DateTimw")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/models",className:e.line},"Models-chidData-csv",r.a.createElement("br",null),"Icon-router")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/like",className:e.line},"Like-checkbox-radio",r.a.createElement("br",null),"select-scroll")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/textEditors",className:e.line},"TextEditors-paginations",r.a.createElement("br",null),"translator-sortCheck")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/sortItems",className:e.line},"IncOnClick-pushBtn-fizzBuzz",r.a.createElement("br",null),"show-addDocs-ratings")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/serverSideRend",className:e.line},"Jwt-multiSel")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/dropdownSelect",className:e.line},"SelectFtr-checkFtr-updtCrd")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/kanban",className:e.line},"Kanban")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/hackeRank",className:e.line},"HackeRank"))),r.a.createElement("div",null))}},314:function(e,n,t){"use strict";t.r(n);var a=t(45),r=t(28),l=t(136),i=t(137),s=t(139),o=t(0),c=t.n(o),u=t(138),m=t.n(u),d=t(120),h=t(57),p=t(296),g=t(5),v=(t(141),t(148)),E=t(140),f={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},b="\nfunction solve(meal_cost, tip_percent, tax_percent) {\n\n  let total_cost;\n  total_cost =  meal_cost + meal_cost * tip_percent/100 + meal_cost * tax_percent/100;\n  console.log(Math.round(total_cost));\n}\n\nfunction main() {\n  const meal_cost = parseFloat(10.20);\n\n  const tip_percent = parseInt(10, 10);\n\n  const tax_percent = parseInt(10, 10);\n\n  solve(meal_cost, tip_percent, tax_percent);\n}\nmain();".trim(),y='\nfunction processData(input) {\n  var myArray = input.split("\n");                                    //Splitting string between each newline into myArray values.\n                                                                      //input is: "2\nHacker\nRank". myArray = [[2], ["Hacker"], ["Rank"]], [[0], [1], [2]]\n  var evenChar = "";\n  var oddChar = "";\n\n  for (var i = 1; i= myArray; i++){                                   //Starting from 1 (Hacker) to length of array.\n      for (var j = 0; j -myArray[i]; j++) {\n          if (j%2 == 0) {\n              evenChar += myArray[i][j];                              //Therefore, add value to evenChar string.\n          } else {\n              oddChar += myArray[i][j];                               //If odd, add value to oddChar string.\n          }\n      }\n      console.log(evenChar + " " + oddChar);\n      evenChar = "";\n      oddChar = "";\n  }\n}\n\nprocessData(\'Hacker Rank\')'.trim(),N="\nfunction main() {\n  const n = parseInt(readLine(), 10);\n\n  const arr = readLine().split(' ').map(arrTemp => parseInt(arrTemp, 10));\n\n  console.log(arr.reverse().join(' '));\n}\n\nmain();\n\n\n//2\nfunction main2() {\n  const n = parseInt(readLine(), 10);\n\n  const arr = readLine().split(' ').map(arrTemp => parseInt(arrTemp, 10));\n\n  const reverseArray = (array) => {\n      let temp = null;\n      const length = array.length;\n      \n      for (let i = 0; i < length / 2; i++){\n          temp = array[i];\n          array[i] = array[length - 1 - i];\n          array[length - 1 - i] = temp;\n      }\n\n      return array;\n  }\n  console.log(reverseArray(arr).join(' '));\n}\n\n\nmain2();".trim(),k='\nfunction main() {\n  var n = parseInt(10);\n\n  pbookname = [];\n  pbooknums = [];\n  query = [];\n  \n  for (i=0; i<n; i++) {\n       pbook = [];\n       pbook = \'readLine\'.split(\' \');\n       pbookname.push(pbook[0])\n       pbooknums.push(pbook[1]);  \n  }\n  \n  for (j=i; j<n*2; j++) {\n      if (\'readLine\' != "") {\n          query = \'readLine\'; \n          pos = pbookname.indexOf(query);\n          if (pos < 0) {\n              console.log("Not found");\n          } else {\n              console.log(query +"="+ pbooknums[pos]);\n          }\n      } else {\n          break;\n      }\n  }\n  \n  /*\n  console.log("Names " + pbookname);\n  console.log("Numbers " + pbooknums);\n  console.log("Queries " + query);\n  */\n}\nmain();'.trim(),j="\nfunction factorial(n) {\n  return (!+n) ? 1 : n * factorial(n - 1);\n}\n\nfactorial(4);\n\n\n//2\nlet memoization = [0, 1];\n\nconst factorial2 = (n) => {\n  (typeof memoization[n] !== 'number') && (\n      memoization[n] = (n - 1) > 0 ? n * factorial(n - 1) : 1 \n  );\n\n  return memoization[n];\n}\n\n\nfactorial2(4);".trim(),x="\nfunction main() {\n  let n = parseInt(10, 10);\n  let values = [];\n\n  while (+n != 0) {\n      values.push(n % 2);\n\n      n = Math.floor(n / 2);\n  }\n\n  let { result } = values.reduce((target, item, index) => {\n      item\n          ? target['accumulator']++\n          : (target['accumulator'] = 0);\n\n      target['accumulator'] > target['result'] && (target['result'] = target['accumulator']);\n\n      return target;\n  }, { accumulator: 0, result: 0 });\n\n  console.log(result);\n}\n\nmain();\n\n\n//2\nfunction main2() {\n  const n = parseInt(10, 10);\n  let result = 0;\n\n  const temp = n.toString(2).split('').reduce((target, num) => {\n      let value = Number(num) > 0 ? Number(target) + Number(num) : (\n          result = target > result ? target : result,\n          0\n      );\n\n      return value;\n\n  }, 0);\n\n  console.log(result - temp > 0 ? result : temp)\n}\n\nmain2();\n\n\n//3\nfunction main3() {\n  const n = parseInt(10, 10);\n  const array = n.toString(2).split('');\n  let max = 0;\n  let cur = 0;\n\n  for (let i = 0, itotal = array.length; i < itotal; i++) {\n      if (array[i] == 1) {\n          cur++;\n      } else if (array[i] == 0) {\n          if (cur > max) {\n              max = cur;\n          }\n          cur = 0;\n      }\n  }\n\n  if (cur > max) {\n      max = cur;\n  }\n  \n  console.log(max);\n}\n\nmain3();".trim(),w="\nfunction main() {\n  let arr = Array(6);\n\n  for (let i = 0; i < 6; i++) {\n    arr[i] = 'readLine'\n      .split(\" \")\n      .map((arrTemp) => parseInt(arrTemp, 10));\n  }\n\n  let sumArr = [];\n  for (let i = 0; i < arr.length - 2; i++) {\n    for (let j = 0; j < arr[i].length - 2; j++) {\n      let sum = 0;\n      sum = arr[i][j] + arr[i][j + 1] + arr[i][j + 2] \n            + arr[i + 1][j + 1] \n            + arr[i + 2][j] + arr[i + 2][j + 1] + arr[i + 2][j + 2];\n      sumArr.push(sum);\n    }\n  }\n  console.log(Math.max(...sumArr));\n  return;\n}\n\nmain();\n\n\n//2\nfunction main2() {\n  let arr = [];\n  for(arr_i = 0; arr_i < 6; arr_i++){\n     arr[arr_i] = 'readLine'.split(' ');\n     arr[arr_i] = arr[arr_i].map(Number);\n  }\n\n  //totalSum initializes at -63 because that is lowest possible outcome for any hourglass.\n  //-9 -9 -9\n  //   -9\n  //-9 -9 -9 = -63    \n  let totalSum = -63;\n  for (let i=0; i < arr.length-2; i++) {\n      for (let j=0, curSum = 0; j < arr[i].length-2; j++) {\n          //                  //i=0; j=0     i=0; j=1    i=0; j=2    i=0; j=3\n          curSum = arr[i][j] +     //arr[0][0]    arr[0][1]   arr[0][2]   arr[0][3]\n                   arr[i][j+1] +   //arr[0][1]    arr[0][2]   arr[0][3]   arr[0][4]\n                   arr[i][j+2] +   //arr[0][2]    arr[0][3]   arr[0][4]   arr[0][5]\n                   arr[i+1][j+1] + //arr[1][1]    arr[1][2]   arr[1][3]   arr[1][4]\n                   arr[i+2][j] +   //arr[2][0]    arr[2][1]   arr[2][2]   arr[2][3]\n                   arr[i+2][j+1] + //arr[2][1]    arr[2][2]   arr[2][3]   arr[2][4]\n                   arr[i+2][j+2];  //arr[2][2]    arr[2][3]   arr[2][4]   arr[2][5]\n          if (curSum > totalSum) { //We're checking for MAX hourglass value, so if curSum is greater, set that one.\n              totalSum = curSum;\n          }\n      }\n  }\n  console.log(totalSum);\n}\n\nmain2();".trim(),L="\nconsole.clear();\nclass Person{\n  constructor(firstName, lastName, id) {\n    this.firstName = firstName;\n\t\tthis.lastName = lastName;\n\t\tthis.id = id;\n  }\n\tprintPerson() {\n    console.log('Name: '$'{this.firstName} '$'{this.lastName}, ID: '$'{this.id}');\n  }\n}\n\nclass Student extends Person{\n  constructor(firstName, lastName, id, scores){\n    super(firstName, lastName, id);\n    this.grade = this.calcGrade(scores)\n  }\n  printPerson() {\n    super.printPerson();\n    console.log('Grade: '$'{this.grade}');\n  }\n  calcGrade(scores) {\n    let avg = scores.reduce((prev, curr, i, arr)=>{\n      return ( (prev + curr) /arr.length )\n    }, 0);\n    if(avg>=40 &&  avg<55) return 'D';\n    else if(avg>=55 &&  avg<70) return 'P';\n    else if(avg>=70 &&  avg<80) return 'A';\n    else if(avg>=80 &&  avg<90) return 'E';\n    else if(avg>=90 &&  avg<=100) return 'O';\n  }\n}\n\nlet ivan = new Student('Ivan', 'Ivanov', '222', [80, 90, 100]);\nivan.printPerson();".trim(),S="\n// class Book{\n//     constructor(title, author, price) {\n//       this.title = title;\n//           this.author = author;\n//           this.price = price;\n//     }\n//     display() {\n//       console.log('Name: '$'{this.title} '$'{this.author}, ID: '$'{this.price}');\n//     }\n//   }\n\nclass MyBook extends Book {\n    constructor(title, author, price) {\n        super(title, author);\n\n        this.price = price;\n    }\n\n    display() {\n        console.log('Title: '$'{this.title}\nAuthor: '$'{this.author}\nPrice: '$'{this.price}');\n    }\n}\n".trim(),C='\nlet input = "3\n1 2 5";\nconst difference = () => {\n  const result = input.split(\'\n\')[1].split(\' \').reduce(\n    (target, el) => {\n      let { min, max } = target;\n\n      target["min"] = el > min ? el : min;\n      target["max"] = el < max ? el : max;\n\n      return target;\n    },\n    { min: -999, max: 999 }\n  );\n\n  console.log(Math.abs(result["max"] - result["min"]));\n};\n\ndifference();\n\n\n//2\nlet input = "3\n1 2 5";\n\nfunction difference2(input) {\n  const split = input.split("\n");\n  const length = +split[0];\n  const array = split[1].split(" ");\n  console.log(array, length);\n  let maximum = 0;\n  let result = 0;\n  \n  array.forEach(value1 => {\n    array.forEach(value2 =>{\n      result = Math.abs(value1-value2);\n      if(result > maximum) {\n        maximum = result;\n      }\n    })\n  });\n  console.log(maximum);\n}\n\nconsole.log(input);\n\ndifference2(input);'.trim(),I="\nfunction LinkedList() {\n  this.head = null;\n  this.tail = null;\n}\n\nfunction Node(value, next, prev) {\n  this.value = value;\n  this.next = next;\n  this.prev = prev;\n}\n\n\n\nLinkedList.prototype.addToHead = function(value) {\n  var newNode = new Node(value, this.head, null);\n  \n  if (this.head) this.head.prev = newNode;\n  else this.tail = newNode;\n\n  this.head = newNode;\n};\n\nLinkedList.prototype.addToTail = function(value) {\n  var newNode = new Node(value, null, this.tail);\n  \n  if (this.tail) this.tail.next = newNode;\n  else this.head = newNode;\n  \n  this.tail = newNode;\n};\n\nLinkedList.prototype.removeFromHead = function() {\n  if (!this.head) return null;                                                    // empty list, return null\n\n  var value = this.head.value;\n  this.head = this.head.next;                                                     // update head pointer to new head\n  \n  if (this.head) this.head.prev = null;\n  else this.tail = null;                                                          // linked list is empty\n\n  return value;\n};\n\nLinkedList.prototype.removeFromTail = function() {\n  if (!this.tail) return null;\n  \n  var value = this.tail.value;\n  \n  this.tail = this.tail.prev;\n  \n  if (this.tail) this.tail.next = null;\n  else this.head = null;\n  \n  return value;\n}\n\nLinkedList.prototype.search = function(searchValue) {\n  var currentNode = this.head;\n  \n  while (currentNode) {\n    if (currentNode.value === searchValue) return currentNode;\n    currentNode = currentNode.next;\n  }\n  return null;\n}\n\nLinkedList.prototype.indexOf = function(searchValue) {\n  var currentNode = this.head;\n  var currentIndex = 0;\n  var indexes = [];\n  \n  while (currentNode) {\n    if (currentNode.value === searchValue) indexes.push(currentIndex);\n    currentNode = currentNode.next;\n    currentIndex++;\n  }\n  return indexes;\n}\n\n\nvar ll = new LinkedList();\n\nll.addToHead(10);\nll.addToTail(15);\nll.addToTail(99);\nll.addToTail(105);\nll.addToTail(40);\nll.addToTail(20);\nll.removeFromTail();\n\nconsole.log('LOG: linked list object');\nconsole.log(ll);                                                              // should show head 10 and tail as node 40\nconsole.log('LOG: search for node with 99');\nconsole.log(ll.search(99));                                                   // should show node object with value 99\nconsole.log('LOG: find indexOf node with 99');\nconsole.log(ll.indexOf(99));                                                  // should log [2]\n".trim(),A='\nclass AdvancedArithmetic {\n  divisor(n) {\n    return n || 0;\n  };\n}\n\nclass Calculator extends AdvancedArithmetic {\n  constructor(props) {\n    super(props);\n\n    this.divisor = this.divisorSum.bind(this);\n  }\n\n  divisorSum(n) {\n    return Array(n).fill(0).reduce((target, item, index) => {\n      !(n % (index + 1)) && (target += (index + 1)) ;\n\n      return target;\n    }, 0);\n  }\n}\n\nfunction Solution () {\n  const n = 6;\n\n  const myCalculator = new Calculator();\n\n  let sum = myCalculator.divisor(n);\n\n  console.log("I implemented: AdvancedArithmetic\n" + sum); \n}\n\nSolution();'.trim(),T="".trim(),_=function(e){function n(){return Object(a.a)(this,n),Object(l.a)(this,Object(i.a)(n).apply(this,arguments))}return Object(s.a)(n,e),Object(r.a)(n,[{key:"componentDidMount",value:function(){setTimeout((function(){return m.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return c.a.createElement(d.a,{container:!0},c.a.createElement(d.a,{item:!0,xs:2},c.a.createElement(h.a,{className:e.paper},c.a.createElement("h4",null,c.a.createElement(v.a,null)))),c.a.createElement(d.a,{item:!0,xs:10},c.a.createElement(h.a,{className:e.paper},c.a.createElement(p.a,null,c.a.createElement("h3",null,"1. Operators"),c.a.createElement("div",{style:f},c.a.createElement(E.a,{code:b,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"2. Let's Review"),'Ie: "Hacker" and  "Rank" becomes:',c.a.createElement("br",null),'"Hce akr" even values - odd values [H, a, c, k, e, r] equals [0, 1, 2, 3, 4, 5]',c.a.createElement("br",null),'"Rn ak" even values - odd values [R, a, n, k] equals [0, 1, 2, 3]',c.a.createElement("br",null),c.a.createElement("br",null),c.a.createElement("div",{style:f},c.a.createElement(E.a,{code:y,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"3. Arrays"),c.a.createElement("div",{style:f},c.a.createElement(E.a,{code:N,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"4. Dictionaries and Maps"),c.a.createElement("div",{style:f},c.a.createElement(E.a,{code:k,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"5. Recursion"),c.a.createElement("div",{style:f},c.a.createElement(E.a,{code:j,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"6. Binary Numbers"),c.a.createElement("div",{style:f},c.a.createElement(E.a,{code:x,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"7. 2D Arrays"),c.a.createElement("div",{style:f},c.a.createElement(E.a,{code:w,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"8. Inheritance"),c.a.createElement("div",{style:f},c.a.createElement(E.a,{code:L,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"9. Abstract Classes"),c.a.createElement("div",{style:f},c.a.createElement(E.a,{code:S,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"10. Scope"),c.a.createElement("div",{style:f},c.a.createElement(E.a,{code:C,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"11. Linked List"),c.a.createElement("div",{style:f},c.a.createElement(E.a,{code:I,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"12. Interfaces"),c.a.createElement("div",{style:f},c.a.createElement(E.a,{code:A,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"13. Generics"),c.a.createElement("div",{style:f},c.a.createElement(E.a,{code:T,language:"js",plugins:["line-numbers"]}))))))}}]),n}(o.Component);n.default=Object(g.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(_)}}]);
//# sourceMappingURL=71.2b350774.chunk.js.map