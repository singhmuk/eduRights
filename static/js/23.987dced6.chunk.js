(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[23],{140:function(e,n,t){"use strict";t.d(n,"a",(function(){return p}));var a=t(45),l=t(28),o=t(136),r=t(137),c=t(139),s=t(0),i=t.n(s),m=t(138),u=t.n(m),p=(t(59),function(e){function n(e){var t;return Object(a.a)(this,n),(t=Object(o.a)(this,Object(r.a)(n).call(this,e))).highlight=function(){t.ref&&t.ref.current&&u.a.highlightElement(t.ref.current)},t.ref=i.a.createRef(),t}return Object(c.a)(n,e),Object(l.a)(n,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,n=e.code,t=(e.plugins,e.language);return i.a.createElement("pre",{className:"code-prism"},i.a.createElement("code",{ref:this.ref,className:"language-".concat(t)},n.trim()))}}]),n}(i.a.Component))},141:function(e,n,t){},145:function(e,n,t){"use strict";t.d(n,"a",(function(){return m}));var a=t(0),l=t.n(a),o=t(26),r=t(297),c=t(295),s=t(114),i=Object(s.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function m(){var e=i();return l.a.createElement("div",{className:e.root},l.a.createElement(c.a,null,l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/apiLogic3",className:e.line},"new updated")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/ngRepeat",className:e.line},"NgRepeat")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/ngModel",className:e.line},"ng-model")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/scope",className:e.line},"Scope")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/filter",className:e.line},"Events")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/directives",className:e.line},"Directives")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/angularConditions",className:e.line},"Condition")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/angularlFlters",className:e.line},"Fiters")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/services",className:e.line},"Services")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/validations",className:e.line},"Validations")),l.a.createElement("p",null,"Angular 12"),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/introAngularjs",className:e.line},"Intro")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/flows",className:e.line},"Interviews")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/angularDir2",className:e.line},"Architecture")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/metedata",className:e.line},"MetaData")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/ngFor",className:e.line},"NgFor")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/pipes",className:e.line},"Pipes")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/anguRoutes",className:e.line},"Routes")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/lifeCycleAng",className:e.line},"LifeCycle")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/angularSelector",className:e.line},"Change Detection")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/angularDir",className:e.line},"Custom Elements")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/viewProvider",className:e.line},"ViewProvider")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/dynamicallyLoad",className:e.line},"DynamicallyLoad")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/rxjs",className:e.line},"Rxjs")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/ngrxCurd",className:e.line},"Ngrx")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/ngrxCounter",className:e.line},"NgrxCounter")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/projection",className:e.line},"Pro-Input-Output-Iterates-",l.a.createElement("br",null),"IncrDecr-Toggle-keyIn-If")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/angularCurd",className:e.line},"Curd")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/filterPlace",className:e.line},"FilterPlace-get-live-",l.a.createElement("br",null),"Agree-NoName-Excel")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/radioButton",className:e.line},"Radio-s/h-add-",l.a.createElement("br",null),"version-Launch-Font")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/multiCheck",className:e.line},"MultiSel-MultiCheck")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/services12",className:e.line},"Services")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/dropdownsAngu",className:e.line},"pick-ddSelectData")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/vote",className:e.line},"Vote")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/debounce",className:e.line},"Debounce")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/loader",className:e.line},"Loader")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/paginations",className:e.line},"Paginations"))),l.a.createElement("div",null))}},161:function(e,n,t){e.exports=t.p+"static/media/customElement.c08db00a.png"},162:function(e,n,t){e.exports=t.p+"static/media/create.54f68c51.png"},499:function(e,n,t){"use strict";t.r(n);var a=t(45),l=t(28),o=t(136),r=t(137),c=t(139),s=t(0),i=t.n(s),m=t(138),u=t.n(m),p=t(120),d=t(57),E=t(296),g=t(5),f=(t(141),t(145)),h=t(140),b=(t(161),t(162),{backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"}),v="\n//in app.module.ts\nentryComponents: [Child, StudentInfoComponent]\n\n\n//childs.ts\n@Component({\n  selector: 'app-childs',\n  template: 'Child'\n})\nexport class Child {\n  message: string;\n  constructor() { }\n\n  ngOnInit() {\n    alert('Child Call', this.message);\n  }\n}\n\n\n//student-info.ts\n@Component({\n  selector: 'app-student-info',\n  template: 'Student',\n})\nexport class StudentInfoComponent implements OnInit {\n  message: string;\n  constructor() { }\n\n  ngOnInit() {\n    alert('Student Called', this.message);\n  }\n}\n\n\n//app.component.ts\nimport { Component, ViewChild, ViewContainerRef, ComponentFactoryResolver, ComponentRef,\n  ComponentFactory } from '@angular/core';\nimport { Child } from './childs';\nimport { StudentInfoComponent } from './student-info';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n\n})\nexport class AppComponent {\n  componentRef: any;\n  @ViewChild('loadComponent', {read: ViewContainerRef}) entry: ViewContainerRef;\n  constructor(private resolver: ComponentFactoryResolver) { }\n  createComponent(Id: number) {\n    this.entry.clear();\n    if (Id == 1) {\n      const factory = this.resolver.resolveComponentFactory(StudentInfoComponent);\n      this.componentRef = this.entry.createComponent(factory);\n    } else if (Id == 2) {\n      const factory = this.resolver.resolveComponentFactory(Child);\n      this.componentRef = this.entry.createComponent(factory);\n    }\n    this.componentRef.instance.message = \"Called by appComponent\";\n  }\n  destroyComponent() {\n    this.componentRef.destroy();\n  }\n  data = [\n    { \"Id\": 1, \"Name\": \"Student Info\" },\n    { \"Id\": 2, \"Name\": \"Parent Info\" }\n  ]\n  selectName(id : number) {\n    this.createComponent(id);\n  }\n}\n".trim(),y='\n//app.component.ts\nimport { environment } from \'../environments/environment\';\n\n@Component({\n  selector: \'app-root\',\n  templateUrl: \'./app.component.html\',\n  styleUrls: [\'./app.component.scss\']\n})\nexport class AppComponent {\n\n  title = \'my-web-worker-app\';\n  selectedColour: string;\n  result: any;\n  colourArr = [\'#9999ff\', \'#00aaff\', \'#008000\', \'#b33c00\', \'#663300\', \'#cc3399\'];\n  isBusy = false;\n  cpuWorker: any;\n\n  constructor() {\n  }\n\n  changeColor(color: string) {\n    this.selectedColour = color;\n  }\n\n  cpuIntensiveWork() {\n    this.isBusy = true;\n    const start = new Date().getTime();\n    let calResult = 0;\n    for (let i = Math.pow(environment.baseNumber, 7); i >= 0; i--) {\n      calResult += Math.atan(i) * Math.tan(i);\n    };\n\n    let elapsed = new Date().getTime() - start;\n    const milliseconds = (elapsed % 1000) / 100;\n    const seconds = Math.floor((elapsed / 1000) % 60);\n    const minutes = Math.floor((elapsed / (1000 * 60)) % 60);\n    this.result = {\'TimeElapsed\': \'\'$\'{ minutes }m, \'$\'{ seconds }s, \'$\'{ milliseconds }ms\', \'output\': calResult};\n    this.isBusy = false;\n  }\n}\n\n\n\n//app.component.html\n<div class="container pt-4 mt-4">\n    <div class="row">\n        <div class="col">\n            <div class="row">\n                <div id=\'colorDiv\' [ngStyle]="{\'background-color\':selectedColour}"></div>\n            </div>\n            <div class="row">\n                <span [style.color]=selectedColour>{{selectedColour}}</span>\n            </div>\n            <div class="row pt-4">\n                <div class="dropdown show">\n                    <a class="btn btn-primary btn-lg dropdown-toggle" role="button" id="dropdownMenuLink" \n                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n                        Pick colour\n                        </a>\n                    <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">\n                        <a *ngFor=" let colour of colourArr" (click)="changeColor(colour)" class="dropdown-item">\n                            <div class="drpDwnItem" [style.background-color]=colour>\n                                <span [style.color]=colour>{{colour}}</span>\n                            </div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="col">\n            <div class="row">\n                <button class="btn btn-primary btn-lg" (click)="cpuIntensiveWork()"> CPU Intensive Work\n                        <i *ngIf="isBusy" class="fa fa-spinner fa-spin fa-2x fa-fw"></i>\n                </button>\n            </div>\n            <ng-container *ngIf="result">\n                <div class="row pt-4">\n                    <h1 class="display-4">{{result.TimeElapsed}}</h1>\n                </div>\n                <div class="row">\n                    <h1 class="display-4">{{result.output}}</h1>\n                </div>\n            </ng-container>\n        </div>\n    </div>\n</div>\n'.trim(),C='\n//app.component.ts\nimport { Component, OnInit } from \'@angular/core\';\nimport { environment } from \'../environments/environment\';\n\n@Component({\n  selector: \'app-root\',\n  templateUrl: \'./app.component.html\',\n  styleUrls: [\'./app.component.scss\']\n})\nexport class AppComponent {\n\n  title = \'my-web-worker-app\';\n  selectedColour: string;\n  result: any;\n  colourArr = [\'#9999ff\', \'#00aaff\', \'#008000\', \'#b33c00\', \'#663300\', \'#cc3399\'];\n  isBusy = false;\n  cpuWorker: any;\n\n  constructor() {\n    this.intializeWorker();\n  }\n\n  intializeWorker() {\n    if (typeof Worker !== \'undefined\') {\n      if (!this.cpuWorker) {\n        this.cpuWorker = new Worker(\'./worker/cpu.worker\',\n          { type: "module" });\n      }\n    } else {\n      // Web workers are not supported in this environment.\n      // You should add a fallback so that your\n      // program still executes correctly.\n    }\n  }\n\n  cpuIntensiveWork() {\n    this.cpuWorker.postMessage(\'Message from main thread.\');\n    // listen back from worker\n    this.cpuWorker.addEventListener(\'message\', ({data}) => {\n      this.result = data;\n    });\n  }\n\n  changeColor(color: string) {\n    this.selectedColour = color;\n  }\n}\n\n\n//app.component.html\n<div class="container pt-4 mt-4">\n    <div class="row">\n        <div class="col">\n            <div class="row">\n                <div id=\'colorDiv\' [ngStyle]="{\'background-color\':selectedColour}"></div>\n            </div>\n            <div class="row">\n                <span [style.color]=selectedColour>{{selectedColour}}</span>\n            </div>\n            <div class="row pt-4">\n                <div class="dropdown show">\n                    <a class="btn btn-primary btn-lg dropdown-toggle" role="button" id="dropdownMenuLink" \n                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n                        Pick colour\n                        </a>\n                    <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">\n                        <a *ngFor=" let colour of colourArr" (click)="changeColor(colour)" class="dropdown-item">\n                            <div class="drpDwnItem" [style.background-color]=colour>\n                                <span [style.color]=colour>{{colour}}</span>\n                            </div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="col">\n            <div class="row">\n                <button class="btn btn-primary btn-lg" (click)="cpuIntensiveWork()"> CPU Intensive Work\n                        <i *ngIf="isBusy" class="fa fa-spinner fa-spin fa-2x fa-fw"></i>\n                </button>\n            </div>\n            <ng-container *ngIf="result">\n                <div class="row pt-4">\n                    <h1 class="display-4">{{result.TimeElapsed}}</h1>\n                </div>\n                <div class="row">\n                    <h1 class="display-4">{{result.output}}</h1>\n                </div>\n            </ng-container>\n        </div>\n    </div>\n</div>\n\n\n\n//worker/cpu.worker.ts\nimport { environment } from "../../environments/environment";\n\naddEventListener(\'message\', ({data}) => {\n  const result = cpuIntensiveWork();\n  postMessage(result);\n});\n\nconst cpuIntensiveWork = function () {\n  const start = new Date().getTime();\n  let calResult = 0;\n  for (let i = Math.pow(environment.baseNumber, 7); i >= 0; i--) {\n    calResult += Math.atan(i) * Math.tan(i);\n  };\n\n  let elapsed = new Date().getTime() - start;\n  const milliseconds = (elapsed % 1000) / 100;\n  const seconds = Math.floor((elapsed / 1000) % 60);\n  const minutes = Math.floor((elapsed / (1000 * 60)) % 60);\n  const result = {\'TimeElapsed\': \'\'$\'{ minutes }m, \'$\'{ seconds }s, \'$\'{ milliseconds }ms\', \'output\': calResult};\n  return result;\n}\n'.trim(),w="let componentRef = viewContainerRef.createComponent(componentFactory);".trim(),k=function(e){function n(){return Object(a.a)(this,n),Object(o.a)(this,Object(r.a)(n).apply(this,arguments))}return Object(c.a)(n,e),Object(l.a)(n,[{key:"componentDidMount",value:function(){setTimeout((function(){return u.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return i.a.createElement(p.a,{container:!0},i.a.createElement(p.a,{item:!0,xs:2},i.a.createElement(d.a,{className:e.paper},i.a.createElement("h4",null,i.a.createElement(f.a,null)))),i.a.createElement(p.a,{item:!0,xs:10},i.a.createElement(d.a,{className:e.paper},i.a.createElement(E.a,null,i.a.createElement("h3",null,"Dynamically Load Component"),i.a.createElement("ul",null,i.a.createElement("li",null,"Dynamic components are the components in which components location in the application is not defined at build time.i.e, They are not used in any angular template. But the component is instantiated and placed in the application at runtime."),i.a.createElement("br",null),i.a.createElement("li",null,"Mainly, in the component template, a component is loaded using the component selector at angular compile time. The component can also be loaded dynamically at runtime with the help of",i.a.createElement("b",null,"ComponentFactory, ComponentFactoryResolver"),", and ",i.a.createElement("b",null,"ViewContainerRef"),"."),i.a.createElement("br",null),i.a.createElement("li",null,"Those components which need to be loaded dynamically must also be configured in ",i.a.createElement("b",null,"entryComponents"),"metadata of @NgModule decorator. To load a dynamic component in a template we required an insert location and to get it we need ",i.a.createElement("b",null,"ViewContainerRef")," of a decorator or a component."),i.a.createElement("br",null),i.a.createElement("li",null,"ComponentFactory is used to create an instance of components where ComponentFactoryResolver resolves a ComponentFactory for a particular component. It is used as follows."),i.a.createElement("b",null,"let componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);")),i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement("b",null,"ViewContainerRef"),i.a.createElement("br",null),i.a.createElement("ul",null,i.a.createElement("li",null,"ViewContainerRef represents a container where we can attach one or more views to a component and also show an API to create components. Some important methods of ViewContainerRef are:",i.a.createElement("ul",null,i.a.createElement("li",null,"createEmbeddedView()"),i.a.createElement("li",null,"clear()"),i.a.createElement("li",null,"get()"),i.a.createElement("li",null,"insert()"),i.a.createElement("li",null,"move()"),i.a.createElement("li",null,"createComponent()"))),i.a.createElement("br",null),i.a.createElement("li",null,i.a.createElement("b",null,"CreateEmbeddedView()")," instantiates an embedded view and inserts it into container."),i.a.createElement("li",null,i.a.createElement("b",null,"createComponent()")," instantiates a single component and inserts its host view into the container at a specified index.")),i.a.createElement("br",null),"In dynamic component loader, load component using createComponent() of ViewContainerRef.",i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement("div",{style:b},i.a.createElement(h.a,{code:w,language:"js",plugins:["line-numbers"]})),i.a.createElement("br",null),"clear() method of ViewContainerRef destroys all existing views in the container.",i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement("div",{style:b},i.a.createElement(h.a,{code:v,language:"js",plugins:["line-numbers"]})),i.a.createElement("br",null),i.a.createElement("h3",null,"Web-Worker (Blocking UI)"),i.a.createElement("div",{style:b},i.a.createElement(h.a,{code:y,language:"js",plugins:["line-numbers"]})),i.a.createElement("br",null),i.a.createElement("h3",null,"Web-Worker (Non-Blocking UI)"),i.a.createElement("div",{style:b},i.a.createElement(h.a,{code:C,language:"js",plugins:["line-numbers"]}))))))}}]),n}(s.Component);n.default=Object(g.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(k)}}]);
//# sourceMappingURL=23.987dced6.chunk.js.map