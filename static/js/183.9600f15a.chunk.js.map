{"version":3,"sources":["components/ReactJs/prismCode.js","components/ml/sidebar.js","components/ml/deepMl/capture.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","image","video","webcam","gray","blur","canny","dialation","eroded","resize","crop","shapes","draw","Prespective","Capture","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/183.9600f15a.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/infoMl' className={classes.line}>InfoMl</Link></MenuItem>\n        <MenuItem><Link to='/gredient_decents' className={classes.line}>Gredient Decents</Link></MenuItem>\n        <MenuItem><Link to='/training' className={classes.line}>Traning</Link></MenuItem>\n\n        <MenuItem><Link to='/regularizations' className={classes.line}>Regularizations</Link></MenuItem>\n        <MenuItem><Link to='/featuresEng' className={classes.line}>FeaturesEng</Link></MenuItem>\n        <MenuItem><Link to='/adaboost' className={classes.line}>Adaboots</Link></MenuItem>\n        <MenuItem><Link to='/greedSearch' className={classes.line}>Greed Search</Link></MenuItem>\n        <MenuItem><Link to='/perceptron' className={classes.line}>Perceptron</Link></MenuItem>\n        <MenuItem><Link to='/pcaPy' className={classes.line}>PCA</Link></MenuItem>\n\n        <MenuItem><Link to='/leanearRegression' className={classes.line}>Leanear Regression</Link></MenuItem>\n        <MenuItem><Link to='/logisticReg' className={classes.line}>Logistic Regression</Link></MenuItem>\n        <MenuItem><Link to='/lda' className={classes.line}>Lda</Link></MenuItem>\n        <MenuItem><Link to='/knn' className={classes.line}>Knn</Link></MenuItem>\n        <MenuItem><Link to='/k_meanClustring' className={classes.line}>K_Mean</Link></MenuItem>\n        <MenuItem><Link to='/naiveBar' className={classes.line}>Naive Bayes</Link></MenuItem>\n        <MenuItem><Link to='/randomForest' className={classes.line}>Random Forest</Link></MenuItem>\n        <MenuItem><Link to='/decisiontree' className={classes.line}>Decision Tree</Link></MenuItem>\n        <MenuItem><Link to='/svmPy' className={classes.line}>SVM</Link></MenuItem>\n\n        <MenuItem><Link to='/numpyPy' className={classes.line}>Numpy</Link></MenuItem>\n        <MenuItem><Link to='/pandas' className={classes.line}>Pandas</Link></MenuItem>\n        <MenuItem><Link to='/bagging' className={classes.line}>Matplotlib</Link></MenuItem>\n        <MenuItem><Link to='/logisticRegrations' className={classes.line}>Scikit Learn</Link></MenuItem>\n        <MenuItem><Link to='/regrations' className={classes.line}>SciPy</Link></MenuItem>\n        <MenuItem><Link to='/libraries' className={classes.line}>OpenCV</Link></MenuItem>\n        <MenuItem><Link to='/capture' className={classes.line}>Capture</Link></MenuItem>\n        <MenuItem><Link to='/joinImages' className={classes.line}>JoinImages</Link></MenuItem>\n        <br />\n\n        Deep Learning\n        <MenuItem><Link to='/superwise' className={classes.line}>Superwise</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = {backgroundColor:'#F0F8FF', padding:'1px', fontSize:'16px'}\n\nconst styles = theme => ({\n  paper: {\n      margin: theme.spacing(1),\n      padding: theme.spacing(1)\n  },\n  smMargin: {\n      margin: theme.spacing(1)\n  },\n  actionDiv: {\n      textAlign: \"center\"\n  }\n})\n\n\nconst image = `\nimport cv2\nprint(\"Package cv2 imorted\");\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\ncv2.imshow(\"output\", img)\ncv2.waitKey(0)\n`.trim()\n\nconst video = `\nimport cv2\ncap = cv2.VideoCapture(\"Resources/test.mp4\")\n\nwhile True:\n    success, img = cap.read();\n    cv2.imshow(\"Video\", img)\n    if cv2.waitKey(1) & 0xFF == ord('q'):\n        break;\n`.trim()\n\nconst webcam = `\nimport cv2\n\ncap = cv2.VideoCapture(0)  //0 is default for laptop camra\ncap.set(3,640)\ncap.set(4,640)\nimport cv2\n\ncap = cv2.VideoCapture(0)  //0 is default for laptop camra\ncap.set(3,640)\ncap.set(4,640)\n`.trim()\n\nconst gray = `\nimport cv2\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nimgGray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n\ncv2.imshow(\"Gray Image\", imgGray)\ncv2.waitKey(0)\n`.trim()\n\nconst blur = `\nimport cv2\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nimgBlur = cv2.GaussianBlur(img, (7,7),0)\n\ncv2.imshow(\"Blur Image\", imgBlur)\ncv2.waitKey(0)\n`.trim()\n\nconst canny = `\nimport cv2\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nimgCanny = cv2.Canny(img, 100,100)\n\ncv2.imshow(\"Canny Image\", imgCanny)\ncv2.waitKey(0)\n`.trim()\n\nconst dialation = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nkernel = np.ones((5,5),np.uint8)\n\nimgCanny = cv2.Canny(img, 100,100)\nimgDialation = cv2.dilate(imgCanny, kernel, iterations=1)\n\ncv2.imshow(\"Canny Image\", imgCanny)\ncv2.imshow(\"Dialation Image\", imgDialation)\ncv2.waitKey(0)\n`.trim()\n\nconst eroded = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nkernel = np.ones((5,5),np.uint8)\n\nimgCanny = cv2.Canny(img, 100,100)\nimgDialation = cv2.dilate(imgCanny, kernel, iterations=1)\nimgEroded = cv2.erode(imgDialation, kernel, iterations=1)\n\ncv2.imshow(\"Canny Image\", imgCanny)\ncv2.imshow(\"Dialation Image\", imgDialation)\ncv2.imshow(\"Eroded Image\", imgEroded)\ncv2.waitKey(0)\n`.trim()\n\nconst resize = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nprint(img.shape)\n\nimgResize = cv2.resize(img, (300,200))\n\ncv2.imshow(\"Image\",img)\ncv2.imshow(\"Resize\",imgResize)\n\ncv2.waitKey(0)\n`.trim()\n\nconst crop = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\n\nimgCropped = img[0:200,200:500]\n\ncv2.imshow(\"Image\",img)\ncv2.imshow(\"Cropped\",imgCropped)\n\ncv2.waitKey(0)\n`.trim()\n\nconst shapes = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nimg = np.zeros((512,512,3),np.uint8)\nprint(img)\nimg[:]= 255,0,0\n\ncv2.imshow(\"Image\", img)\ncv2.waitKey(0)\n`.trim()\n\nconst draw = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nimg = np.zeros((512,512,3),np.uint8)\n\ncv2.line(img,(0,0),(300,300),(0,255),3)\n\ncv2.imshow(\"Image\", img)\ncv2.waitKey(0)\n`.trim()\n\nconst Prespective = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nwidth,height = 250,350\npts1 = np.float32([[111, 219],[287, 188],[154, 482], [352, 440]])\npts2 = np.float32([[0,0],[width,0],[0,height],[width,height]])\nmatrix = cv2.getPerspectiveTransform(pts1, pts2)\nimgOutput = cv2.warpPerspective(img,matrix,(width,height))\n\ncv2.imshow(\"Output\", imgOutput)\ncv2.waitKey(0)\n`.trim()\n\n\nclass Capture extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n            <Grid item xs={2}>\n                <Paper className={classes.paper}>\n                    <h4><Sidebar /></h4>\n                </Paper>\n            </Grid>\n<Grid item xs={10}>\n<Paper className={classes.paper}>\n<List>\n      <h3>Capture image:</h3>\n      <div style={titles}>\n      <PrismCode\n        code={image}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Capture video</h3>\n      <div style={titles}>\n      <PrismCode\n        code={video}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <i>To close video press 'q' on terminal</i>\n      <br/>\n      <br/>\n      <h3>Capture video use webcam:</h3>\n      <div style={titles}>\n      <PrismCode\n        code={webcam}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Basic function: Find Gray Img</h3>\n      <div style={titles}>\n      <PrismCode\n        code={gray}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Blur</h3>\n      <div style={titles}>\n      <PrismCode\n        code={blur}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Canny</h3>\n      <div style={titles}>\n      <PrismCode\n        code={canny}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Dialation</h3>\n      <div style={titles}>\n      <PrismCode\n        code={dialation}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Eroded: Opposite to Dialation</h3>\n      <div style={titles}>\n      <PrismCode\n        code={eroded}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Opencv Convention/Resize Image</h3>\n      <div style={titles}>\n      <PrismCode\n        code={resize}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Crop Image</h3>\n      <div style={titles}>\n      <PrismCode\n        code={crop}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Shapes and Texts:</h3>\n      <div style={titles}>\n      <PrismCode\n        code={shapes}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Line draw:</h3>\n      <div style={titles}>\n      <PrismCode\n        code={draw}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Earp Prespective:</h3>\n      <div style={titles}>\n      <PrismCode\n        code={Prespective}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      </List>\n      </Paper>\n      </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Capture));\n"],"sourceRoot":""}