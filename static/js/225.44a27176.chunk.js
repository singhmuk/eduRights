(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[225],{140:function(e,n,t){"use strict";t.d(n,"a",(function(){return p}));var a=t(45),l=t(28),r=t(136),s=t(137),o=t(139),c=t(0),i=t.n(c),m=t(138),u=t.n(m),p=(t(59),function(e){function n(e){var t;return Object(a.a)(this,n),(t=Object(r.a)(this,Object(s.a)(n).call(this,e))).highlight=function(){t.ref&&t.ref.current&&u.a.highlightElement(t.ref.current)},t.ref=i.a.createRef(),t}return Object(o.a)(n,e),Object(l.a)(n,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,n=e.code,t=(e.plugins,e.language);return i.a.createElement("pre",{className:"code-prism"},i.a.createElement("code",{ref:this.ref,className:"language-".concat(t)},n.trim()))}}]),n}(i.a.Component))},141:function(e,n,t){},149:function(e,n,t){"use strict";t.d(n,"a",(function(){return m}));var a=t(0),l=t.n(a),r=t(26),s=t(297),o=t(295),c=t(114),i=Object(c.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function m(){var e=i();return l.a.createElement("div",{className:e.root},l.a.createElement(o.a,null,l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/introNodejs",className:e.line},"Intro")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/ejsNode",className:e.line},"Basics")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/buffers",className:e.line},"Buffer")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/childs",className:e.line},"Child Process-fork()-exec()")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/tut_1",className:e.line},"Callback")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/filSystems",className:e.line},"File System")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/evtNode",className:e.line},"EvtEmter-Capture data")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/codes",className:e.line},"Codes")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/url_shortener",className:e.line},"Url_Shortener")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/stripe_payment",className:e.line},"stripe_payment")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/sendEmail",className:e.line},"sendEmail")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/search_pagination",className:e.line},"search_pagination")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/push_notifications",className:e.line},"push_notifications")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/nodetext",className:e.line},"nodetext")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/file_upload",className:e.line},"file_upload")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/e_acco_veri",className:e.line},"email_acco_veri")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/2fa_speakearst",className:e.line},"2fa_speakearst")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/authentications",className:e.line},"SignUp")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/serverSide",className:e.line},"Server Side")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/tut_2",className:e.line},"Geocode-Upload")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/tut_6",className:e.line},"Chat")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/udemy",className:e.line},"Udemy"))),l.a.createElement("div",null))}},364:function(e,n,t){"use strict";t.r(n);var a=t(45),l=t(28),r=t(136),s=t(137),o=t(139),c=t(0),i=t.n(c),m=t(138),u=t.n(m),p=t(120),d=t(57),E=t(296),h=t(5),b=(t(141),t(149)),g=t(140),f={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},w='\nlet owners = new WeakMap();\nlet task = { title: "Big Project" };\nowners.set(task, \'John\');\n\nfunction owner(task) {\n    if (owners.has(task)) {\n        return console.log(owners.get(task));\n    }\n    console.log("No owner for this task.");\n}\nowner(task);                                                            // "John" \nowner({});                                                              // "No owner for this task".\n'.trim(),y="\nconst add = (a, b) => {\n  return new Promise((resolve, reject) => {\n      setTimeout(() => {\n          if (a < 0 || b < 0) {\n              return reject('Numbers must be non-negative')\n          }\n\n          resolve(a + b)\n      }, 2000)\n  })\n}\n\nconst doWork = async () => {\n  const sum = await add(1, -99)\n  const sum2 = await add(sum, 50)\n  const sum3 = await add(sum2, -3)\n  return sum3\n}\n\ndoWork().then((result) => {\n  console.log('result', result)\n}).catch((e) => {\n  console.log('e', e)\n})".trim(),v='\nconst express = require(\'express\');\nconst bodyParser = require(\'body-parser\');\nconst app = express();\n\napp.use(bodyParser.urlencoded({ extended: true }));\n\napp.get("/", (req, res) => {\n  res.sendFile(__dirname + "/index.html");\n});\n\napp.post("/", (req, res) => {\n  var num = Number(req.body.num);\n  var num2 = Number(req.body.num2);\n\n  var result = num + num2;\n\n  res.send("Sum is" + result);\n});\n\napp.listen(4000, () => console.log(\'server running on port 4000\'));\n\n\n//index.html\n<head>\n    <body>\n      <form action="/" method="post">\n        <input type="text" name="num" placeholder="num">\n        <input type="text" name="num2" placeholder="num2">\n        <button type="submit" name="submit">sum</button>\n      </form>\n    </body>\n  </head>\n'.trim(),N='\nconst p1 = new Promise((res, rej) => {\n  setTimeout(() => {\n    res("Promise 1")\n  }, 2000)\n})\n\nconst p2 = new Promise((res, rej) => {\n  setTimeout(() => {\n    res("Promise 2")\n  }, 2000)\n})\n\nconst p3 = new Promise((res, rej) => {\n  setTimeout(() => {\n    res("Promise 3")\n  }, 2000)\n})\n\nPromise.all([p1, p2, p3]).then((prMSG) => {\n  console.log(prMSG)\n}).catch((err) => {\n  console.log(err)\n})\n\nPromise.allSettled([p1, p2, p3]).then((prMSG) => {\n  console.log(prMSG)\n}).catch((err) => {\n  console.log(err)\n})\n\nPromise.race([p1, p2, p3]).then((prMSG) => {\n  console.log(prMSG)\n}).catch((err) => {\n  console.log(err)\n})\n'.trim(),k=function(e){function n(){return Object(a.a)(this,n),Object(r.a)(this,Object(s.a)(n).apply(this,arguments))}return Object(o.a)(n,e),Object(l.a)(n,[{key:"componentDidMount",value:function(){setTimeout((function(){return u.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return i.a.createElement(p.a,{container:!0},i.a.createElement(p.a,{item:!0,xs:2},i.a.createElement(d.a,{className:e.paper},i.a.createElement("h4",null,i.a.createElement(b.a,null)))),i.a.createElement(p.a,{item:!0,xs:10},i.a.createElement(d.a,{className:e.paper},i.a.createElement(E.a,null,i.a.createElement("h3",null,"1. WeakMap"),"ES6's weakMap allows the use of non-strings as keys in a HashMap:",i.a.createElement("div",{style:f},i.a.createElement(g.a,{code:w,language:"js",plugins:["line-numbers"]})),i.a.createElement("h3",null,"2. Async-Await"),i.a.createElement("ul",null,i.a.createElement("li",null,"It's an easier way to deal with Promises."),i.a.createElement("li",null,"Promises is an easier way to deal with CB."),i.a.createElement("li",null,"To handle an asynchronous process, we return a Promis object from a function."),i.a.createElement("li",null,"By default any function without ",i.a.createElement("b",null,"return")," statement return ",i.a.createElement("b",null,"undefined")," in javascript."),i.a.createElement("li",null,"By writing async function don't need to write return statement."),i.a.createElement("li",null,"await make sure to wait till a Promise is settled, be resolved/ rejected."),i.a.createElement("li",null,"The way we write then() for handling promise, now in await we can remove than() and replace it with await.")),"server.js",i.a.createElement("div",{style:f},i.a.createElement(g.a,{code:y,language:"js",plugins:["line-numbers"]})),i.a.createElement("br",null),i.a.createElement("ul",null,i.a.createElement("li",null,i.a.createElement("b",null,"promise.all(): "),"When we have multiple promises as i/p it should return a single promise after all promises are resolved, then use the all() method."),i.a.createElement("li",null,"all() is settled with only resolve promises, so if any promise returns error then it won't work."),i.a.createElement("br",null),i.a.createElement("li",null,i.a.createElement("b",null,"allSettled(): "),"Waits for all promises regardless of their state & returns promises at the end."),i.a.createElement("li",null,i.a.createElement("b",null,"race(): "),"Return a promise as soon as  any of the promise returns the state from the iterable list.")),i.a.createElement("br",null),i.a.createElement("div",{style:f},i.a.createElement(g.a,{code:N,language:"js",plugins:["line-numbers"]})),i.a.createElement("br",null),i.a.createElement("h3",null,"3. Add two numbers"),i.a.createElement("div",{style:f},i.a.createElement(g.a,{code:v,language:"js",plugins:["line-numbers"]}))))))}}]),n}(c.Component);n.default=Object(h.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(k)}}]);
//# sourceMappingURL=225.44a27176.chunk.js.map