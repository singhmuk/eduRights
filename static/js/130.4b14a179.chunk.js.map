{"version":3,"sources":["components/ReactJs/prismCode.js","components/angularjsd/sidebar.js","components/angularjsd/deepAngularjs/apiLogic3.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","commonArray","commonStr","arrObj","objArr","sumAll","dotVal","lastMatch","functions","functionsH","empty","Pick","sum","object","Array","Logic3","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/130.4b14a179.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/apiLogic3' className={classes.line}>new updated</Link></MenuItem>\n        <MenuItem><Link to='/ngRepeat' className={classes.line}>NgRepeat</Link></MenuItem>\n        <MenuItem><Link to='/ngModel' className={classes.line}>ng-model</Link></MenuItem>\n        <MenuItem><Link to='/scope' className={classes.line}>Scope</Link></MenuItem>\n        <MenuItem><Link to='/filter' className={classes.line}>Events</Link></MenuItem>\n        <MenuItem><Link to='/directives' className={classes.line}>Directives</Link></MenuItem>\n        <MenuItem><Link to='/angularConditions' className={classes.line}>Condition</Link></MenuItem>\n        <MenuItem><Link to='/angularlFlters' className={classes.line}>Fiters</Link></MenuItem>\n        <MenuItem><Link to='/services' className={classes.line}>Services</Link></MenuItem>\n        <MenuItem><Link to='/validations' className={classes.line}>Validations</Link></MenuItem>\n\n        <p>Angular 12</p>\n        <MenuItem><Link to='/introAngularjs' className={classes.line}>Intro</Link></MenuItem>\n        <MenuItem><Link to='/flows' className={classes.line}>Interviews</Link></MenuItem>\n        <MenuItem><Link to='/angularDir2' className={classes.line}>Architecture</Link></MenuItem>\n        <MenuItem><Link to='/metedata' className={classes.line}>MetaData</Link></MenuItem>\n        <MenuItem><Link to='/ngFor' className={classes.line}>NgFor</Link></MenuItem>\n        <MenuItem><Link to='/pipes' className={classes.line}>Pipes</Link></MenuItem>\n        <MenuItem><Link to='/anguRoutes' className={classes.line}>Routes</Link></MenuItem>\n        <MenuItem><Link to='/lifeCycleAng' className={classes.line}>LifeCycle</Link></MenuItem>\n        <MenuItem><Link to='/angularSelector' className={classes.line}>Change Detection</Link></MenuItem>\n        <MenuItem><Link to='/angularDir' className={classes.line}>Custom Elements</Link></MenuItem>\n        <MenuItem><Link to='/viewProvider' className={classes.line}>ViewProvider</Link></MenuItem>\n        <MenuItem><Link to='/dynamicallyLoad' className={classes.line}>DynamicallyLoad</Link></MenuItem>\n        <MenuItem><Link to='/rxjs' className={classes.line}>Rxjs</Link></MenuItem>\n        <MenuItem><Link to='/ngrxCurd' className={classes.line}>Ngrx</Link></MenuItem>\n        <MenuItem><Link to='/ngrxCounter' className={classes.line}>NgrxCounter</Link></MenuItem>\n\n        <MenuItem><Link to='/projection' className={classes.line}>Pro-Input-Output-Iterates-<br />IncrDecr-Toggle-keyIn-If</Link></MenuItem>\n        <MenuItem><Link to='/angularCurd' className={classes.line}>Curd</Link></MenuItem>\n        <MenuItem><Link to='/filterPlace' className={classes.line}>FilterPlace-get-live-<br />Agree-NoName-Excel</Link></MenuItem>\n        <MenuItem><Link to='/radioButton' className={classes.line}>Radio-s/h-add-<br />version-Launch-Font</Link></MenuItem>\n        <MenuItem><Link to='/multiCheck' className={classes.line}>MultiSel-MultiCheck</Link></MenuItem>\n        <MenuItem><Link to='/services12' className={classes.line}>Services</Link></MenuItem>\n        <MenuItem><Link to='/dropdownsAngu' className={classes.line}>pick-ddSelectData</Link></MenuItem>\n        <MenuItem><Link to='/vote' className={classes.line}>Vote</Link></MenuItem>\n        <MenuItem><Link to='/debounce' className={classes.line}>Debounce</Link></MenuItem>\n        <MenuItem><Link to='/loader' className={classes.line}>Loader</Link></MenuItem>\n        <MenuItem><Link to='/paginations' className={classes.line}>Paginations</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst commonArray = `\nvar mockData=[];\nvar mockData2 = [6,7,8,9,23];\nvar commonEle = [];\nfunction myCtrl($scope, $http){\n    $http({\n        method:'get',\n        url:'https://jsonplaceholder.typicode.com/users'\n    }).then((res) => {\n        person = res.data;\n        person.map(val=>{\n            mockData.push(val.id)\n        })\n\n    var common = mockData.filter(item=>{\n        return mockData2.includes(item)\n    })\n\n    for(var i=0; i<=common.length; i++){\n        commonEle.push(common[i])\n    }\n    console.log(\"commonEle\",commonEle);\n    })\n}`.trim()\n\nconst commonStr = `var str='';\nvar str2='';\nvar dict = {};\nfunction myCtrl($scope, $http){\n    $http({\n        method:'get',\n        url:'https://jsonplaceholder.typicode.com/users'\n    }).then(mySuccess = (res) => {\n        person = res.data;\n        person.map(val=>{\n            str=val.name;\n            str2=val.username;\n        })\n        \n        for(var i=0; i < str.length; i++) {\n            dict[str.charAt(i)] = 1;\n          }\n          console.log('str',dict);\n\n          var commonChars =[];\n      for(var i=0; i < str2.length; i++) {\n        if( dict[str2.charAt(i)] == 1) {\n          commonChars.push(str2.charAt(i)); // this is optional we can simply print\n        }\n        console.log('str2',commonChars);  \n\n      }\n      \n      dict = commonChars.join(\"\"); \n      console.log('commonChars',dict);\n    })\n}`.trim()\n\nconst arrObj = `var arr = [];\nfunction myCtrl($scope, $http){\n    $http({\n        method:'get',\n        url:'https://jsonplaceholder.typicode.com/users'\n    }).then(mySuccess = (res) => {\n        person = res.data;\n        \n        console.log('arr',person)\n        console.log('obj',...person)\n        \n       })\n}`.trim()\n\nconst objArr = `var obj = {};\nvar objKey = [];\nfunction myCtrl($scope, $http){\n    $http({\n        method:'get',\n        url:'https://jsonplaceholder.typicode.com/users'\n    }).then(mySuccess = (res) => {\n        person = res.data;\n        person.map(val=>{\n            obj=val;\n        })\n        console.log('obj',obj)\n\n        //Convert the keys to Array using - Object.keys()\n        objKey = Object.keys(obj)\n        console.log('objKey',objKey)\n\n        //Converts the Values to Array using - Object.values()\n        objVal = Object.values(obj)\n        console.log('objVal',objVal)\n\n        //Converts both keys and values using - Object.entries()\n        objAll = Object.entries(obj)\n        console.log('objAll',objAll)\n       })\n}`.trim()\n\nconst sumAll = `var arr=[];\nvar sum = 0;\nfunction myCtrl($scope, $http){\n    $http({\n        method:'get',\n        url:'https://jsonplaceholder.typicode.com/users'\n    }).then(mySuccess = (res) => {\n        person = res.data;\n        person.map(val=>{\n            arr.push(val.id);\n        })\n        \n        var sum = arr.reduce((a, i) => {\n            return a + i;\n          });\n        console.log('sum',sum)\n       })\n}`.trim()\n\nconst dotVal = `var person=[];\nvar personEmail=[];\nfunction myCtrl($scope, $http){\n    $http({\n        method:'get',\n        url:'https://jsonplaceholder.typicode.com/users'\n    }).then(mySuccess = (res) => {\n        $scope.person = res.data;\n        $scope.person.map(val=>{\n             personEmail.push(val.email);\n        })\n        console.log('personEmail',personEmail)\n        $scope.personEmail=personEmail\n    })\n}`.trim()\n\nconst lastMatch = `\nvar mockData=[];\n var apiId = 10;\n var names = [];\nfunction myCtrl($scope, $http){\n    $http({\n        method:'get',\n        url:'https://jsonplaceholder.typicode.com/users'\n    }).then(mySuccess = (res) => {\n        $scope.person = res.data;\n        $scope.person.map(val=>{\n             mockData.push(val.id);\n             if(val.id == apiId){\n                names.push(val.name)\n                for(let i=0; i<=names.length; i++){\n                    console.log('inside loop',names)\n                }\n             }\n        })\n    })\n}\n`.trim()\n\nconst functions = `\nvar app = angular.module(\"myApp\", []);\napp.controller(\"myCtrl\", myCtrl);\n\nvar mainId=1;\nvar subParameters=[];\nvar subParametersIds=[];\nvar matchingData=[];\n\nfunction myCtrl ($scope, $http){\n      $http({\n        method:'get',\n        url:'https://jsonplaceholder.typicode.com/users'\n      }).then(res => {\n        $scope.person = res.data;\n          \n        for(var i = 0; i < $scope.person.length; i++){\n         // console.log('json placeholder data in loop',$scope.person[i].id)\n         if(mainId == $scope.person[i].id){\n             // console.log('only match id',$scope.person[i].id)\n             \n             $scope.person.map(score=>{\n                 if(subParametersIds.indexOf(score.id)==-1){\n                     // console.log('only unique records',score.id)\n                     let newObj={\"id\":score.id, \"name\":score.name,'value':[]}\n                     // console.log('push object',newObj)\n                     $scope.newObj = newObj.value.push(score.address.zipcode)\n                     // console.log('after push object',newObj)\n                     subParametersIds.push(score.id);\n                     $scope.subParameters = subParameters.push(newObj);\n                     \n                     let scores={\"ids\":[\"2\"]}\n                     // console.log('hard coded',scores.ids)\n                     \n                     var index=subParameters.indexOf(score.id)\n                     // console.log('index value',index,\":\",score.id)\n                     // subParameters[index].value = subParameters[index].concat(score.id)\n                     \n                     if((score.id == scores.ids || score.id == mainId)){\n                         console.log('matching hard coded value: ',score.id,\"=\",scores.ids,\":\",mainId);\n                         matchingData=matchingData.concat(score.id);\n                         console.log('matching values: ',matchingData)\n                     }\n                     \n                 }\n                 else{\n                 var index=subParameters.indexOf(score.phone)\n                 subParameters[index].value = subParameters[index].value.concat(score.id)\n                 }\n             })\n         }\n     }\n    })\n    console.log('concate data in the array',subParameters)\n }`.trim()\n\nconst functionsH = `\n<body>\n    <div ng-controller=\"myCtrl\">\n        <table>\n            <tr>\n              <th>Country</th>\n              <th>Address</th>\n              <th>Geo</th>\n            </tr>\n            <tr ng-repeat=\"persons in person\">\n              <td>{{persons.name}}</td>\n              <td>{{persons.address.street}}</td>\n              <td>{{persons.address.geo.lat}}</td>\n            </tr>\n          </table> \n          <h1>SubParameters</h1>\n          {{subParameters}}\n          <br/>\n          <b>New object</b>\n          {{newObj}}\n    </div>  \n</body>\n`.trim()\n\nconst empty = `\n//app.js\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', timeCtrl);\n  \n var mockData=[];\n var apiId = 10;\n var names = [];\n function timeCtrl ($scope, $http){\n   $http({\n     method:'get',\n     url:'https://jsonplaceholder.typicode.com/users'\n   }).then(res => {\n    $scope.person = res.data;\n    $scope.person.map(fields => {\n              mockData.push(fields.id);\n              \n              if(fields.id == apiId){\n                  console.log('fields',mockData)\n                  for(let i=0; i<=mockData.length; i++){\n                      console.log('Matched Id',fields.id)\n                  }\n              }\n          })\n       console.log('after map',mockData);\n   })\n}\n\n\n//index.html\n<body ng-controller=\"myCtrl\">\n</body>\n`.trim();\n\nconst Pick = `\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', timeCtrl);\n  \nvar mockData=[];\nvar apiId = 2;\nvar names = ['Bret'];\nnameObj = []\n function timeCtrl ($scope, $http){\n   $http({\n     method:'get',\n     url:'https://jsonplaceholder.typicode.com/users'\n   }).then(res => {\n    $scope.person = res.data;\n    $scope.person.map(fields => {\n        if(fields.id == apiId){\n            mockData.push(fields);\n            console.log('map function',mockData)\n        }\n    // apiId = mockData.push(fields);\n    if(fields.username == names){\n        for(let i=0; i<=mockData.length; i++){\n            nameObj.push(mockData)\n        }\n    }\n})\nconsole.log('inside for loop',nameObj)\nconsole.log('after map',mockData);\n});\n}`.trim();\n\nconst sum = `\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', timeCtrl);\n  \nvar tempObj = [];\nvar sum = 0;\nvar avg;\n function timeCtrl ($scope, $http){\n   $http({\n     method:'get',\n     url:'https://jsonplaceholder.typicode.com/users'\n   }).then(res => {\n    $scope.person = res.data;\n            $scope.person.map(fields => {\n                tempObj.push(fields.id) \n        });\n        for(let i =0; i<=tempObj.length;i++){\n            sum +=tempObj[i];\n            avg = sum/tempObj.length\n            console.log('sum',sum)\n            console.log('avg',avg)\n        }\n     });\n   \n//Flattening an array of arrays\n     const nested = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n     let flat = nested.reduce((acc, it) => [...acc, ...it], []);\n     console.log('flat',flat)\n  }`.trim();\n\nconst object = `\nvar percentage;\n var sum=0;\n function timeCtrl (){\n        var data = \n           [\n            {label:1, quater :'Q1', y:34},\n            {label:2, quater:'Q1', y:20},\n            {label:3, quater:'Q1', y:30},\n     \n            {label:1, quater:'Q2', y:77},\n            {label:2, quater:'Q2', y:52},\n            {label:3, quater:'Q2', y:3},\n     \n            {label:1, quater:'Q3', y:65},\n            {label:2, quater:'Q3', y:12},\n            {label:3, quater:'Q3', y:9},\n     \n            {label:1, quater:'Q4', y:77},\n            {label:2, quater:'Q4', y:34},\n            {label:3, quater:'Q4', y:5}\n           ];\n \n quartersum = {}\n data.map(function(entry) {\n   quartersum[entry.label] = (quartersum[entry.label]||0) + entry.y\n })\n \n data.map(function(entry) {\n   entry.percent = entry.y / quartersum[entry.label] * 100;\n   console.log(JSON.stringify(entry))\n })\n \n console.log('data',quartersum);\n console.log('extract object keys',Object.keys(quartersum));\n console.log('extract object values',Object.values(quartersum));\n \n        for(let [key, value] of Object.entries(quartersum)){\n            console.log('extract object property',key, value);\n        }\n        percentage = parseInt((sum*100/quartersum.length));\n        console.log('percentage',percentage);\n}`.trim();\n\nconst Array = `\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', timeCtrl);\n  \nvar names = [];\n function timeCtrl ($scope, $http){\n   $http({\n     method:'get',\n     url:'https://jsonplaceholder.typicode.com/users'\n   }).then(res => {\n    $scope.person = res.data;\n    $scope.person.map(data => {\n      names.push(data.id)\n    })\n    let scores = names.find(element => element > 4);\n    let filterScores = names.filter(element => element > 4);\n    let joinArr = filterScores.join(\"*\");\n    let spliceArr = filterScores.splice(0,2)\n    let concatArr = filterScores.concat(scores,joinArr,\"100\");\n    \n    //The slice() method slices out a piece of an array into a new array.\n    let sliceArr = filterScores.slice(0,2);\n    let toStringArr = names.toString()\n    let position = filterScores.indexOf(8)\n    \n    //The includes() method determines whether an array contains a specified element.\n    let includeArr = filterScores.includes(10)\n    console.log('find',includeArr)\n  });\n}\n`.trim();\n\n\nclass Logic3 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Common element in arrays</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={commonArray}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Common element in strings</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={commonStr}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>convert an Array to Object</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={arrObj}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Convert an Object into an Array </h3>\n              <div style={titles}>\n                <PrismCode\n                  code={objArr}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Sum of all elements of a given array</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={sumAll}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Dispay dot value</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={dotVal}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Last match name</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={lastMatch}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Apply deep logic</h3>\n              <b>functions.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={functions}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <b>functions.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={functionsH}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Add data in empty array from api values</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={empty}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <h3>Pick a record from list of records</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Pick}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <h3>Add sum/avg of number from a list</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={sum}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <h3>Avrage and keys/valuue pair extract from an object</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={object}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Array methods</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Array}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Logic3));\n"],"sourceRoot":""}