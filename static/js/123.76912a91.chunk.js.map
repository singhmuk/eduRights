{"version":3,"sources":["components/ReactJs/prismCode.js","components/angularjsd/sidebar.js","components/angularjsd/angular 12/projection.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","projection","parentChild","childParent","counting","toggle","keyInput","ifConditions","ifElse","ifElseThen","switchCase","pushSplice","Projection12","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/123.76912a91.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/apiLogic3' className={classes.line}>new updated</Link></MenuItem>\n        <MenuItem><Link to='/ngRepeat' className={classes.line}>NgRepeat</Link></MenuItem>\n        <MenuItem><Link to='/ngModel' className={classes.line}>ng-model</Link></MenuItem>\n        <MenuItem><Link to='/scope' className={classes.line}>Scope</Link></MenuItem>\n        <MenuItem><Link to='/filter' className={classes.line}>Events</Link></MenuItem>\n        <MenuItem><Link to='/directives' className={classes.line}>Directives</Link></MenuItem>\n        <MenuItem><Link to='/angularConditions' className={classes.line}>Condition</Link></MenuItem>\n        <MenuItem><Link to='/angularlFlters' className={classes.line}>Fiters</Link></MenuItem>\n        <MenuItem><Link to='/services' className={classes.line}>Services</Link></MenuItem>\n        <MenuItem><Link to='/validations' className={classes.line}>Validations</Link></MenuItem>\n\n        <p>Angular 12</p>\n        <MenuItem><Link to='/introAngularjs' className={classes.line}>Intro</Link></MenuItem>\n        <MenuItem><Link to='/flows' className={classes.line}>Interviews</Link></MenuItem>\n        <MenuItem><Link to='/angularDir2' className={classes.line}>Architecture</Link></MenuItem>\n        <MenuItem><Link to='/metedata' className={classes.line}>MetaData</Link></MenuItem>\n        <MenuItem><Link to='/ngFor' className={classes.line}>NgFor</Link></MenuItem>\n        <MenuItem><Link to='/pipes' className={classes.line}>Pipes</Link></MenuItem>\n        <MenuItem><Link to='/anguRoutes' className={classes.line}>Routes</Link></MenuItem>\n        <MenuItem><Link to='/lifeCycleAng' className={classes.line}>LifeCycle</Link></MenuItem>\n        <MenuItem><Link to='/angularSelector' className={classes.line}>Change Detection</Link></MenuItem>\n        <MenuItem><Link to='/angularDir' className={classes.line}>Custom Elements</Link></MenuItem>\n        <MenuItem><Link to='/viewProvider' className={classes.line}>ViewProvider</Link></MenuItem>\n        <MenuItem><Link to='/dynamicallyLoad' className={classes.line}>DynamicallyLoad</Link></MenuItem>\n        <MenuItem><Link to='/rxjs' className={classes.line}>Rxjs</Link></MenuItem>\n        <MenuItem><Link to='/ngrxCurd' className={classes.line}>Ngrx</Link></MenuItem>\n        <MenuItem><Link to='/ngrxCounter' className={classes.line}>NgrxCounter</Link></MenuItem>\n\n        <MenuItem><Link to='/projection' className={classes.line}>Pro-Input-Output-Iterates-<br />IncrDecr-Toggle-keyIn-If</Link></MenuItem>\n        <MenuItem><Link to='/angularCurd' className={classes.line}>Curd</Link></MenuItem>\n        <MenuItem><Link to='/filterPlace' className={classes.line}>FilterPlace-get-live-<br />Agree-NoName-Excel</Link></MenuItem>\n        <MenuItem><Link to='/radioButton' className={classes.line}>Radio-s/h-add-<br />version-Launch-Font</Link></MenuItem>\n        <MenuItem><Link to='/multiCheck' className={classes.line}>MultiSel-MultiCheck</Link></MenuItem>\n        <MenuItem><Link to='/services12' className={classes.line}>Services</Link></MenuItem>\n        <MenuItem><Link to='/dropdownsAngu' className={classes.line}>pick-ddSelectData</Link></MenuItem>\n        <MenuItem><Link to='/vote' className={classes.line}>Vote</Link></MenuItem>\n        <MenuItem><Link to='/debounce' className={classes.line}>Debounce</Link></MenuItem>\n        <MenuItem><Link to='/loader' className={classes.line}>Loader</Link></MenuItem>\n        <MenuItem><Link to='/paginations' className={classes.line}>Paginations</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst projection = `\n@Component({\n  selector: 'app-root',\n  template: '{{data.name}}',\n})\nexport class AppComponent {\n  data={\n    id:1,\n    name:'Mukesh'\n  }\n}\n`.trim();\n\nconst parentChild = `\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '<app-childs [items]=\"data\"></app-childs>',\n})\nexport class AppComponent {\n  data={\n    id:1,\n    name:'Mukesh'\n  }\n}\n\n\n@Component({\n  selector: 'app-childs',\n  template: '{{items.id}}',\n})\nexport class ChildsComponent {\n  @Input() items:any\n  constructor() { }\n}\n`.trim();\n\nconst childParent = `\nimport { Component, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '<app-childs (parentFun)=\"parentFun($event)\"></app-childs>\n  {{name}}\n'})\nexport class AppComponent {\n  title = 'childparrent';\n  name = \"\";\n  parentFun(data:any){\n    console.log(data)\n    this.name = data.name\n  }\n}\n\n\n@Component({\n  selector: 'app-childs',\n  template: '<button (click)='sendData()'> CallParent</button>',\n})\nexport class ChildsComponent {\n\n  @Output() parentFun:EventEmitter<any> = new EventEmitter()\n\n  sendData(){\n     let user = {\n      name: \"Mukesh\",\n      age: 30\n    }\n    this.parentFun.emit(user)\n  }\n}\n`.trim();\n\nconst counting = `\n@Component({\n  selector: 'app-root',\n  template: '\n  <button (click)=\"handleCount()\"> Count</button>\n    {{ count }}\n<button (click) = \"handleButton()\"> Pause</button>',})\n\nexport class AppComponent {\n  title = 'demo';\n  count=0;\n  isPause: true;\n\n  handleCount(){\n    if(this.isPause==true){\n    this.count=this.count+1\n    }\n    else{\n      this.count=this.count-1\n    }\n  }\n\n  handleButton(){\n    this.isPause = !this.isPause\n  }\n}`.trim();\n\nconst toggle = `\n@Component({\n  selector: 'app-root',\n  template: '{{ toggle }}\n<button (click) = \"onToggle()\"> Toggle</button>\n    ',\n})\n\nexport class AppComponent {\n  toggle=false;\n\n  onToggle(){\n    this.toggle ? \"ON\" : \"OFF\";\n    this.toggle = !this.toggle\n  }\n}`.trim();\n\nconst keyInput = `\n@Component({\n  selector: 'app-root',\n  template: '\n  <input type = \"number\" min = \"0\" max = \"100\"\n  [value] = \"progress\">\n        ',\n      })\n\nexport class AppComponent {\n  constructor() { }\n  progress=0;\n}`.trim();\n\nconst ifConditions = `\n@Component({\n  selector: 'app-root',\n  template: '\n{{hoursOfDay}}<br/>\n    <button (click) = \"checkTime()\"> Check</button> <br/>\n{{msg}}\n',})\n\nexport class AppComponent {\n hoursOfDay = 9;\n msg=\"\"\n\n checkTime(){\n   this.msg = this.hoursOfDay <12 ? \"Good Morning\" : \"Keep on\";\n   this.hoursOfDay = this.hoursOfDay + 1;\n }\n}\n}`.trim();\n\nconst ifElse = `\n@Component({\n  selector: 'app-root',\n  template: '\n  <button (click)=\"getInfo()\">if</button>\n    <div *ngIf=\"isTrue; else elseblock\">\n      {{data}}\n    </div>\n  <ng-template #elseblock>\n    Else\n  </ng-template>\n  ',\n})\nexport class AppComponent {\n  data=\"If\";\n  isTrue=false\n\n  getInfo(){\n    this.isTrue = !this.isTrue\n  }\n}`.trim();\n\nconst ifElseThen = `\n@Component({\n  selector: 'app-root',\n  template: '\n  <button (click)=\"getInfo()\"> click</button>\n    <div *ngIf=\"isTrue; then thenblock else elseblock\"> {{data}}</div>\n    <ng-template #thenblock>\n      Then\n    </ng-template>\n    <ng-template #elseblock>\n      Else\n    </ng-template>\n  ',\n})\nexport class AppComponent {\n  data=\"If\";\n  isTrue=false\n\n  getInfo(){\n    this.isTrue = !this.isTrue\n  }\n}`.trim();\n\nconst switchCase = `\n@Component({\n  selector: 'app-root',\n  template: '\n  < select(change)=\"getValue($event)\" >\n      <option value=\"default\">Select</option>\n      <option value=\"laptop\">Laptop</option>\n      <option value=\"tv\">TV</option>\n      <option value=\"mobile\">Mobile</option>\n      <option value=\"machine\">Machine</option>\n    </select >\n\n  <div [ngSwitch] = \"selectedItems\">\n    <p *ngSwitchCase=\"'laptop'\"> Laptop</p>\n      <p *ngSwitchCase=\"'tv'\"> TV</p>\n        <p *ngSwitchCase=\"'mobile'\"> Mobile</p>\n          <p *ngSwitchCase=\"'machine'\"> Machine</p>\n    </div >\n  ',\n})\nexport class AppComponent {\n  selectedItems?: string;\n\n  getValue(e){\n    this.selectedItems = e.target.value\n  }\n}`.trim();\n\n\nconst pushSplice = `\n@Component({\n  selector: 'app-root',\n  template: '\n    <input type = \"text\" name = \"\" #uname><br/>\n    <button (click) = \"createUser(uname)\">Create</button>\n\n\n  <table>\n    <tr *ngFor=\"let user of users; let i=index\">\n    <td>{{user.name}}</td>\n    <button (click)=\"removeUser(i)\">X</button>\n      </tr>\n    </table>\n  '',\n})\nexport class AppComponent {\n  users = [];\n\n  createUser(uname){\n    this.users.push({\n      name:uname.value\n    })\n  }\n\n  removeUser(id){\n    this.users.splice(id, 1)\n  }\n}`.trim();\n\n\nclass Projection12 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Content projection</h3>\n              <ul>\n                <li>Is used to project content in a component.</li>\n                <li>Allows to insert a shadow DOM in our component.</li>\n                <li>In Angular, achieve content projection using <b>'ng-content'  '/ng-content' </b>.  You</li>\n              </ul>\n              <br/>\n\n              <ol>\n                <li>Single-slot content projection</li>\n                <li>Multi-slot content projection</li>\n                <li>Conditional content projection</li>\n              </ol>\n              <div style={titles}>\n                <PrismCode\n                  code={projection}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Parent-Child</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={parentChild}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Child-Parent</h3>\n              The @Output() decorator in a child component or directive allows data to flow from the child to the parent.\n              <br />\n              <br />\n              The Child Component exposes an EventEmitter Property. This Property is adorned with the @Output decorator. When Child\n              Component needs to communicate with the parent it raises the event. The Parent Component listens to that event and\n              reacts to it.\n              \n              <div style={titles}>\n                <PrismCode\n                  code={childParent}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Count Inc-Dec</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={counting}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Toggle</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={toggle}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Key-input</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={keyInput}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>If-Condition</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={ifConditions}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>If-Else</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={ifElse}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>If-Else-Then</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={ifElseThen}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Switch</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={switchCase}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Push Splice</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={pushSplice}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Projection12));\n"],"sourceRoot":""}