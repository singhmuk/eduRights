(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[240],{140:function(e,n,t){"use strict";t.d(n,"a",(function(){return p}));var a=t(45),r=t(28),l=t(136),i=t(137),s=t(139),o=t(0),c=t.n(o),m=t(138),u=t.n(m),p=(t(59),function(e){function n(e){var t;return Object(a.a)(this,n),(t=Object(l.a)(this,Object(i.a)(n).call(this,e))).highlight=function(){t.ref&&t.ref.current&&u.a.highlightElement(t.ref.current)},t.ref=c.a.createRef(),t}return Object(s.a)(n,e),Object(r.a)(n,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,n=e.code,t=(e.plugins,e.language);return c.a.createElement("pre",{className:"code-prism"},c.a.createElement("code",{ref:this.ref,className:"language-".concat(t)},n.trim()))}}]),n}(c.a.Component))},141:function(e,n,t){},147:function(e,n,t){"use strict";t.d(n,"a",(function(){return m}));var a=t(0),r=t.n(a),l=t(26),i=t(297),s=t(295),o=t(114),c=Object(o.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function m(){var e=c();return r.a.createElement("div",{className:e.root},r.a.createElement(s.a,null,r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/introPython",className:e.line},"intro Python")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/tuples",className:e.line},"Tuples")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/stringPy",className:e.line},"Strings")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/iteratorsPy",className:e.line},"Iterators")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/json",className:e.line},"Json")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/mathematics",className:e.line},"Mathematics")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/oops_",className:e.line},"Oops")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/abstract",className:e.line},"Abstract")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/exceptionsPy",className:e.line},"ExceptionsHandling")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/pyIntro",className:e.line},"Pickle")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/threadings",className:e.line},"Thread")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/collections",className:e.line},"Collections")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/logging",className:e.line},"Logging")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/regex",className:e.line},"Regex")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/tkinter",className:e.line},"TKinter")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/logicalspy",className:e.line},"Logicals")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/pyLogic",className:e.line},"PyLogic")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/csv",className:e.line},"CsvPython")),r.a.createElement("br",null),"Flask",r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/conroutes",className:e.line},"routes")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/httpsMethods",className:e.line},"Https")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/flasksIn",className:e.line},"Interviews")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/flask_signUp",className:e.line},"Flask_signUp")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/get_search",className:e.line},"Get_Search")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/load_search",className:e.line},"Load_Search"))),r.a.createElement("div",null))}},420:function(e,n,t){"use strict";t.r(n);var a=t(45),r=t(28),l=t(136),i=t(137),s=t(139),o=t(0),c=t.n(o),m=t(138),u=t.n(m),p=t(120),d=t(57),E=t(296),f=t(5),b=(t(141),t(147)),g=t(140),h={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},y="\nclass MyNumbers:\n  def __iter__(self):\n    self.a = 1\n    return self\n\n  def __next__(self):\n    if self.a <= 20:\n      x = self.a\n      self.a += 1\n      return x\n    else:\n      raise StopIteration\n\nmyclass = MyNumbers()\nmyiter = iter(myclass)\n\nfor x in myiter:\n  print(x)\n".trim(),v="\nfrom itertools import product\n\nprod = product([1, 2], [3, 4])\nprint(list(prod))                                                       # convert the iterator to a list\n\nprod = product([1, 2], [3], repeat=2)\nprint(list(prod))                             \n".trim(),k="\nfrom itertools import permutations\n\nperm = permutations([1, 2, 3])\nprint(list(perm))\n\nperm = permutations([1, 2, 3], 2)                                         # optional: the length of the permutation tuples\nprint(list(perm))".trim(),x="\nfrom itertools import combinations, combinations_with_replacement\n\n\ncomb = combinations([1, 2, 3, 4], 2)              # second argument is mandatory and specifies length of the output tuples.\nprint(list(comb))\n\ncomb = combinations_with_replacement([1, 2, 3, 4], 2)\nprint(list(comb))".trim(),A="\nfrom itertools import accumulate\n\nacc = accumulate([1,2,3,4])                                       # return accumulated sums\nprint(list(acc))\n\n\n# other possible functions are possible\nimport operator\nacc = accumulate([1,2,3,4], func=operator.mul)\nprint(list(acc))\n\nacc = accumulate([1,5,2,6,3,4], func=max)\nprint(list(acc))".trim(),j="\nfrom itertools import groupby\n\ndef smaller_than_3(x):                                                              # use a function as key\n    return x < 3\n\ngroup_obj = groupby([1, 2, 3, 4], key=smaller_than_3)\nfor key, group in group_obj:\n    print(key, list(group))\n    \n    \n# or use a lamda expression, e.g. words with an 'i':\ngroup_obj = groupby([\"hi\", \"nice\", \"hello\", \"cool\"], key=lambda x: \"i\" in x)\nfor key, group in group_obj:\n    print(key, list(group))\n    \npersons = [{'name': 'Tim', 'age': 25}, {'name': 'Dan', 'age': 25}, \n           {'name': 'Lisa', 'age': 27}, {'name': 'Claire', 'age': 28}]\n\nfor key, group in groupby(persons, key=lambda x: x['age']):\n    print(key, list(group))".trim(),_='\nfrom itertools import count, cycle, repeat\n\nfor i in count(10):                                                 # count(x): count from x: x, x+1, x+2, x+3...\n    print(i)\n    if  i >= 13:\n        break\n\n\nsum = 0\nfor i in cycle([1, 2, 3]):                                         # cycle infinitely through an iterable\n    print(i)\n    sum += i\n    if sum >= 12:\n        break\n\n\nfor i in repeat("A", 3):                                           # repeat x infinitely or n times\n    print(i)'.trim(),N="\nd = dict()\nd['xyz'] = 123\nd['abc'] = 345\n\nfor i in d:\n    print(\"% s % d\" % (i, d[i]))\n    \n    \n    \n#2 \nfor letter in 'geeksforgeeks':\n  if letter == 'e' or letter == 's':                              #Returns the control to the beginning of the loop.\n    continue\n  print('Current Letter :', letter)\n    \n    \n    \n#3 \nfor letter in 'geeksforgeeks':\n  if letter == 'e' or letter == 's':\n    break                                                         #Brings control out of the loop.\n\nprint('Current Letter :', letter)\n    \n    \n#4 pass\nfunction and classes.\nfor letter in 'geeksforgeeks':\n  pass\nprint('Last Letter :', letter)\n\n\n#5 \ndef addition(n):                                                  #Pass one or more iterable to the map() function.\n    return n + n \n\nnumbers = (1, 2, 3, 4) \nresult = map(addition, numbers) \nprint(list(result))\n".trim(),R="\nfrom array import  *\n\nvals = array('i', [1,2,3,4,5,-6,7,8,9,10])                                  // Creating an Array\nfloatArr = array('d', [2.5, 3.2, 3.3])                                      // creating an array with float type\n\nprint(vals.typecode)\nvals.append(100)\nvals.insert(1, 4)\nvals.remove(1)\nvals.pop(2)\nvals.index(2)\nvals[2] = 6                                                                # Updating an Elements in an Array\nprint(len(vals))\n".trim(),w="\nimport array as arr                                           \n\na = arr.array('i', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10])                                         \nfor i in range(0, 3):\n    print(a[i], end=\" \")\n\n    \n//2. Sum of the array\ndef _sum(arr):\n    return(sum(arr))\n\nans = _sum([12, 3, 4, 15])\nprint (ans)\n\n\n//3. Slpit Array\ndef splitArr(arr, n, k):\n    for i in range(0, k):\n        x = arr[0]\n        for j in range(0, n-1):\n            arr[j] = arr[j + 1]\n\n        arr[n-1] = x\n\n\narr = [12, 10, 5, 6, 52, 36]\nn = len(arr)\nposition = 2\n\nsplitArr(arr, n, position)\n\nfor i in range(0, n):\n    print(arr[i], end = ' ')\n".trim(),O='\ndef leftRotate(arr, d, n):\n    for i in range(d):\n        leftRotatebyOne(arr, n)\n\ndef leftRotatebyOne(arr, n):\n    temp = arr[0]\n    for i in range(n-1):\n        arr[i] = arr[i+1]\n    arr[n-1] = temp\n\n\ndef printArray(arr,size):\n    for i in range(size):\n        print ("%d"% arr[i],end=" ")\n\n\narr = [1, 2, 3, 4, 5, 6, 7]\nleftRotate(arr, 2, 7)\nprintArray(arr, 7) \n '.trim(),M="\ndef rverseArray(arr, start, end):\n    while (start < end):\n        temp = arr[start]\n        arr[start] = arr[end]\n        arr[end] = temp\n        start += 1\n        end = end-1\n\ndef leftRotate(arr, d):\n    n = len(arr)\n    rverseArray(arr, 0, d-1)\n    rverseArray(arr, d, n-1)\n    rverseArray(arr, 0, n-1)\n\ndef printArray(arr):\n    for i in range(0, len(arr)):\n        print (arr[i])\n\narr = [1, 2, 3, 4, 5, 6, 7]\nleftRotate(arr, 2)                                                                           # Rotate array by 2\nprintArray(arr)".trim(),S="\ndef isMonotonic(A):\n    return (all(A[i] <= A[i + 1] for i in range(len(A) - 1)) or  all(A[i] >= A[i + 1] for i in range(len(A) - 1)))\n\nA = [6, 5, 4, 4]\nprint(isMonotonic(A))\n".trim(),I=function(e){function n(){return Object(a.a)(this,n),Object(l.a)(this,Object(i.a)(n).apply(this,arguments))}return Object(s.a)(n,e),Object(r.a)(n,[{key:"componentDidMount",value:function(){setTimeout((function(){return u.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return c.a.createElement(p.a,{container:!0},c.a.createElement(p.a,{item:!0,xs:2},c.a.createElement(d.a,{className:e.paper},c.a.createElement("h4",null,c.a.createElement(b.a,null)))),c.a.createElement(p.a,{item:!0,xs:10},c.a.createElement(d.a,{className:e.paper},c.a.createElement(E.a,null,c.a.createElement("h3",null,"Stop after 20 iterations"),c.a.createElement("div",{style:h},c.a.createElement(g.a,{code:y,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"For"),c.a.createElement("ul",null,c.a.createElement("li",null,"To prevent the iteration to go on forever, use the StopIteration statement."),c.a.createElement("li",null,"Use pass statement to write empty loops."),c.a.createElement("li",null,"Pass is also used for empty control statements")),c.a.createElement("div",{style:h},c.a.createElement(g.a,{code:N,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"product()"),c.a.createElement("ul",null,c.a.createElement("li",null,"It computes the cartesian product of input iterables."),c.a.createElement("li",null,"To allow the product of an iterable with itself, specify the number of repetitions"),c.a.createElement("li",null,"It is equivalent to nested for-loops."),c.a.createElement("ul",null,c.a.createElement("li",null,c.a.createElement("b",null,"Ex. product(A, B) returns the same as ((x,y) for x in A for y in B).")))),c.a.createElement("br",null),c.a.createElement("div",{style:h},c.a.createElement(g.a,{code:v,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"permutations()"),"This tool returns successive length permutations of elements in an iterable, with all possible orderings, and no repeated elements.",c.a.createElement("div",{style:h},c.a.createElement(g.a,{code:k,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"combinations() and combinations_with_replacement()"),"r-length tuples, in sorted order. So, if the input iterable is sorted, the combination tuples will be produced in sorted order. combinations() does not allow repeated elements, but combinations_with_replacement() does.",c.a.createElement("div",{style:h},c.a.createElement(g.a,{code:x,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"accumulate()"),"Make an iterator that returns accumulated sums, or accumulated results of other binary functions.",c.a.createElement("div",{style:h},c.a.createElement(g.a,{code:A,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"groupby()"),"Make an iterator that returns consecutive keys and groups from the iterable. The key is a function computing a key value for each element. If not specified, key defaults to an identity function and returns unchanged element.",c.a.createElement("div",{style:h},c.a.createElement(g.a,{code:j,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"Infinite iterators: count(), cycle(), repeat()"),c.a.createElement("div",{style:h},c.a.createElement(g.a,{code:_,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"Array"),c.a.createElement("b",null,"Array don't have fixed size."),c.a.createElement("br",null),c.a.createElement("br",null),c.a.createElement("i",null,c.a.createElement("b",null,"append()")," Adds an element at the end of the list",c.a.createElement("br",null),c.a.createElement("b",null,"clear()")," Removes all the elements from the list",c.a.createElement("br",null),c.a.createElement("b",null,"copy()")," Returns a copy of the list",c.a.createElement("br",null),c.a.createElement("b",null,"count()")," Returns the number of elements with the specified value",c.a.createElement("br",null),c.a.createElement("b",null,"extend()")," Add the elements of a list (or any iterable), to the end of the current list",c.a.createElement("br",null),c.a.createElement("b",null,"index()")," Returns the index of the first element with the specified value",c.a.createElement("br",null),c.a.createElement("b",null,"insert()")," Adds an element at the specified position",c.a.createElement("br",null),c.a.createElement("b",null,"pop()")," Removes the element at the specified position",c.a.createElement("br",null),c.a.createElement("b",null,"remove()")," Removes the first item with the specified value",c.a.createElement("br",null),c.a.createElement("b",null,"reverse()")," Reverses the order of the list",c.a.createElement("br",null),c.a.createElement("b",null,"sort()")," Sorts the list",c.a.createElement("br",null),c.a.createElement("br",null)),c.a.createElement("div",{style:h},c.a.createElement(g.a,{code:R,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("br",null),c.a.createElement("div",{style:h},c.a.createElement(g.a,{code:w,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"Array Rotation"),c.a.createElement("div",{style:h},c.a.createElement(g.a,{code:O,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"Reverse Array Rotation"),c.a.createElement("div",{style:h},c.a.createElement(g.a,{code:M,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"Monotonic"),c.a.createElement("div",{style:h},c.a.createElement(g.a,{code:S,language:"js",plugins:["line-numbers"]}))))))}}]),n}(o.Component);n.default=Object(f.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(I)}}]);
//# sourceMappingURL=240.c873fd06.chunk.js.map