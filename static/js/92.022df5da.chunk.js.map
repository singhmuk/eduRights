{"version":3,"sources":["components/ReactJs/prismCode.js","components/Redux/sidebar.js","components/Redux/deep/reduxMethods.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","reactAdd","reduxAdd","reactDelete","reduxDelete","reduxEdit","actions","ReduxMethods","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/92.022df5da.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/introRedux' className={classes.line}>Intro</Link></MenuItem>\n        <MenuItem><Link to='/counter' className={classes.line}>Counter Select</Link></MenuItem>\n        <MenuItem><Link to='/reduxState' className={classes.line}>Redux State-Curd</Link></MenuItem>\n        <MenuItem><Link to='/reduxMethods' className={classes.line}>Redux Methods</Link></MenuItem>\n        <MenuItem><Link to='/react_redux' className={classes.line}>Filter</Link></MenuItem>\n        <MenuItem><Link to='/reduxCurd' className={classes.line}>Redux Curd</Link></MenuItem>\n        <MenuItem><Link to='/expenseTraMern' className={classes.line}>ReactCurdPlaceholder</Link></MenuItem>\n        <MenuItem><Link to='/contactKeeperApi' className={classes.line}>ReactReduxCurdPlaceholder</Link></MenuItem>\n        <MenuItem><Link to='/mernRedux' className={classes.line}>Mern Redux</Link></MenuItem>\n        <MenuItem><Link to='/signUp' className={classes.line}>SignUP</Link></MenuItem>\n        <MenuItem><Link to='/git' className={classes.line}>Git</Link></MenuItem>\n        <MenuItem><Link to='/gitConcepts' className={classes.line}>Git Concepts</Link></MenuItem>\n        <MenuItem><Link to='/skills' className={classes.line}>Skills</Link></MenuItem>\n        <MenuItem><Link to='/comskills' className={classes.line}>Comskills</Link></MenuItem>\n        <MenuItem><Link to='/techskills' className={classes.line}>Techskills</Link></MenuItem>\n        <MenuItem><Link to='/techinto' className={classes.line}>TechsInto</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst reactAdd = `\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst initialState = [\n  { id: 1, aim: \"Success\" },\n  { id: 2, aim: \"Advanced\" },\n  { id: 3, aim: \"Properly\" },\n];\n\nconst App = () => {\n  const [list, setList] = useState(initialState);\n  const [aim, setName] = useState(\"\");\n\n  const handleChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleAdd = () => {\n    const newItem = list.concat({ aim, id: uuidv4() });\n    setList(newItem);\n    console.log(newItem);\n    setName(\"\");\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={aim} onChange={handleChange} />\n      <button type=\"submit\" onClick={handleAdd}>\n        Add\n      </button>\n      {list.map((val) => (\n        <div>{val.aim}</div>\n      ))}\n    </div>\n  );\n};\n`.trim();\n\nconst reduxAdd = `\n//App.js\nimport { connect } from \"react-redux\";\nimport { addFun } from \"./actions/dataActions\";\n\nconst App = (props) => {\n  const [name, setName] = useState(\"\");\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setName(e.target.value);\n  };\n\n  const handleAdd = () => {\n    const newItem = name;\n    props.addFun(newItem);\n    setName(\"\");\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={name} onChange={handleChange} />\n      <button type=\"submit\" onClick={handleAdd}>\n        Add\n      </button>\n      {props.data.map((val) => (\n        <div>{val.name}</div>\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n});\n\nconst mapDispatchToProps = {\n  addFun,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n//reducers/data.js\nconst initialState = [\n  { id: 1, name: \"Mukesh\" },\n  { id: 2, name: \"Rakesh\" },\n  { id: 3, name: \"Niketh\" },\n];\n\nexport default (state = initialState, action) => {\n  console.log(\"props.list\", state);\n  const { type, payload } = action;\n  switch (type) {\n    case ADD:\n      return [...state, { name: payload }];\n\n    default:\n      return state;\n  }\n};\n\n\n\n//actions/dataActions.js\nexport const addFun = (payload) => {\n  return {\n    type: ADD,\n    payload: payload,\n  };\n};\n`.trim();\n\nconst reactDelete = `\nconst initialState = [\n  { id: 1, name: \"Success\" },\n  { id: 2, name: \"Advanced\" },\n  { id: 3, name: \"Properly\" },\n];\n\nconst App = () => {\n  const [list, setList] = useState(initialState);\n\n  const handleRemoveItem = (id) => {\n    const deleteItems = list.filter((item) => item.id !== id);\n    setList(deleteItems);\n  };\n\n  return (\n    <div>\n      {list.map((val) => (\n        <div>\n          {val.name}\n          <button onClick={() => handleRemoveItem(val.id)}>X</button>\n        </div>\n      ))}\n    </div>\n  );\n};`.trim();\n\nconst reduxDelete = `\n//App.js\nimport { deletFun } from \"./actions/dataActions\";\n\nconst App = (props) => {\n  const handleRemoveItem = (id) => {\n    props.deletFun(id);\n  };\n\n  return (\n    <div>\n      {props.data.map((val) => (\n        <div>\n          {val.name}\n          <button onClick={() => handleRemoveItem(val.id)}>X</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.dataVal,\n});\n\nconst mapDispatchToProps = {\n  deletFun,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n//reducers/dataReducers.js\nconst initialState = [\n  { id: 1, name: \"Mukesh\" },\n  { id: 2, name: \"Rakesh\" },\n  { id: 3, name: \"Niketh\" },\n];\n\nexport default (state = initialState, action) => {\n  console.log(\"props.list\", state);\n  const { type, payload } = action;\n  switch (type) {\n    case DELETE_DATA:\n      state = state.filter((x) => x.id !== payload);\n      return state;\n    default:\n      return state;\n  }\n};\n\n\n\n//actions/dataActions.js\nexport const deletFun = (id) => {\n  return {\n    type: DELETE_DATA,\n    payload: id,\n  };\n};\n`.trim();\n\nconst reduxEdit = `\n//App.js\nimport Forms from \"./components/form\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./actions/transactionActions\";\nimport { bindActionCreators } from \"redux\";\n\nconst App = (props) => {\n  const handleEdit = (index) => {\n    props.updateTransactionIndex(index);\n  };\n\n  return (\n    <div>\n      <Forms />\n      <table>\n        <tbody>\n          {props.list.map((item, index) => {\n            return (\n              <tr key={index}>\n                <td>{item.bAccountNo}</td>\n                <td>{item.amount}</td>\n                <td>\n                  <button onClick={() => handleEdit(index)}>Edit</button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    list: state.list,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      updateTransactionIndex: actions.updateIndex,\n    },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n//components/form.js\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/transactionActions\";\nimport { bindActionCreators } from \"redux\";\n\nclass Forms extends Component {\n  state = {};\n\n  returnStateObject() {\n    if (this.props.currentIndex == -1)\n      return {\n        bAccountNo: \"\",\n        bName: \"\",\n      };\n    else return this.props.list[this.props.currentIndex];\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.currentIndex != this.props.currentIndex ||\n      prevProps.list.length != this.props.list.length\n    ) {\n      this.setState({ ...this.returnStateObject() });\n    }\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.props.currentIndex == -1) this.props.insertTransaction(this.state);\n    else this.props.updateTransaction(this.state);\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n        <input\n          name=\"bAccountNo\"\n          onChange={this.handleInputChange}\n          value={this.state.bAccountNo}\n        />\n        <br />\n\n        <input\n          name=\"amount\"\n          onChange={this.handleInputChange}\n          value={this.state.amount}\n        />\n        <br />\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    list: state.list,\n    currentIndex: state.currentIndex,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      insertTransaction: actions.insert,\n      updateTransaction: actions.update,\n    },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Forms);\n`.trim();\n\nconst actions = `\n//reducers/transactionReducer.js\nexport const transactionReducer = (state, action) => {\n  var list = JSON.parse(localStorage.getItem(\"transactions\"));\n  switch (action.type) {\n    case \"INSERT\":\n      list.push(action.payload);\n      localStorage.setItem(\"transactions\", JSON.stringify(list));\n      return { list, currentIndex: -1 };\n    case \"UPDATE\":\n      list[state.currentIndex] = action.payload;\n      localStorage.setItem(\"transactions\", JSON.stringify(list));\n      return { list, currentIndex: -1 };\n\n    case \"UPDATE-INDEX\":\n      return { list, currentIndex: action.payload };\n\n    case \"DELETE\":\n      list.splice(action.payload, 1);\n      localStorage.setItem(\"transactions\", JSON.stringify(list));\n      return { list, currentIndex: -1 };\n    default:\n      return state;\n  }\n};\n\nexport default transactionReducer;\n\n\n\n\n//actions/transactionActions.js\nexport const insert = data => {\n  return {\n      type: 'INSERT',\n      payload: data\n  }\n}\n\nexport const update = data => {\n  return {\n      type: 'UPDATE',\n      payload: data\n  }\n}\n\nexport const Delete = id => {\n  return {\n      type: 'DELETE',\n      payload: id\n  }\n}\n\nexport const updateIndex = index => {\n  return {\n      type: 'UPDATE-INDEX',\n      payload: index\n  }\n}\n`.trim();\n\n\nclass ReduxMethods extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h2>Add(React)</h2>\n              <div style={titles}>\n                <PrismCode\n                  code={reactAdd}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Add(Redux)</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={reduxAdd}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>Delete(React)</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={reactDelete}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Delete(Redux)</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={reduxDelete}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Edit(Redux)</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={reduxEdit}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>actions</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={actions}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(ReduxMethods));"],"sourceRoot":""}