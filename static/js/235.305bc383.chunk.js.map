{"version":3,"sources":["components/ReactJs/prismCode.js","components/pythone/sidebar.js","components/pythone/deeppy/flask_signUp.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","flasks","appy","about","article","articles","articless","dashboard","edit","home","layout","login","register","formhelpers","messages","navbar","FlaskSignUp","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/235.305bc383.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/introPython' className={classes.line}>intro Python</Link></MenuItem>\n        <MenuItem><Link to='/tuples' className={classes.line}>Tuples</Link></MenuItem>\n        <MenuItem><Link to='/stringPy' className={classes.line}>Strings</Link></MenuItem>\n        <MenuItem><Link to='/iteratorsPy' className={classes.line}>Iterators</Link></MenuItem>\n        <MenuItem><Link to='/json' className={classes.line}>Json</Link></MenuItem>\n        <MenuItem><Link to='/mathematics' className={classes.line}>Mathematics</Link></MenuItem>\n        <MenuItem><Link to='/oops_' className={classes.line}>Oops</Link></MenuItem>\n        <MenuItem><Link to='/abstract' className={classes.line}>Abstract</Link></MenuItem>\n        <MenuItem><Link to='/exceptionsPy' className={classes.line}>ExceptionsHandling</Link></MenuItem>\n\n        <MenuItem><Link to='/pyIntro' className={classes.line}>Pickle</Link></MenuItem>\n\n        <MenuItem><Link to='/threadings' className={classes.line}>Thread</Link></MenuItem>\n        <MenuItem><Link to='/collections' className={classes.line}>Collections</Link></MenuItem>\n        <MenuItem><Link to='/logging' className={classes.line}>Logging</Link></MenuItem>\n        <MenuItem><Link to='/regex' className={classes.line}>Regex</Link></MenuItem>\n        <MenuItem><Link to='/tkinter' className={classes.line}>TKinter</Link></MenuItem>\n\n        <MenuItem><Link to='/logicalspy' className={classes.line}>Logicals</Link></MenuItem>\n        <MenuItem><Link to='/pyLogic' className={classes.line}>PyLogic</Link></MenuItem>\n        <MenuItem><Link to='/csv' className={classes.line}>CsvPython</Link></MenuItem>\n        <br />\n        Flask\n        <MenuItem><Link to='/conroutes' className={classes.line}>routes</Link></MenuItem>\n        <MenuItem><Link to='/httpsMethods' className={classes.line}>Https</Link></MenuItem>\n        <MenuItem><Link to='/flasksIn' className={classes.line}>Interviews</Link></MenuItem>\n\n        <MenuItem><Link to='/flask_signUp' className={classes.line}>Flask_signUp</Link></MenuItem>\n        <MenuItem><Link to='/get_search' className={classes.line}>Get_Search</Link></MenuItem>\n        <MenuItem><Link to='/load_search' className={classes.line}>Load_Search</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst flasks = `\nTo check python: cmd => python --version\npy -m pip install flask\nflask.__version__\n\npip install vertualenv or py -m venv env\nactivate environment: (project name)env\\Scripts\\activate \npip install flask\ncreated file set to flask: set FLASK_APP=app.py\nflask run\nnot required to run every time: set FLASK_DEBUG=1\n\n\n//2\npip install vertualenv or pip install virtualenvwrapper-win\nvirtualenv env\n.\\env\\Scripts/activate.ps1\npip install flask\npython .\\app.py\n\nSet-ExecutionPolicy unrestricted\n\n\n`.trim();\n\nconst appy = `from flask import Flask, render_template, flash, redirect, url_for, session, request, logging\n#from data import Articles\nfrom flask_mysqldb import MySQL\nfrom wtforms import Form, StringField, TextAreaField, PasswordField, validators\nfrom passlib.hash import sha256_crypt\nfrom functools import wraps\n\napp = Flask(__name__)\n\n# Config MySQL\napp.config['MYSQL_HOST'] = 'localhost'\napp.config['MYSQL_USER'] = 'root'\napp.config['MYSQL_PASSWORD'] = ''\napp.config['MYSQL_DB'] = 'myflaskapp'\napp.config['MYSQL_CURSORCLASS'] = 'DictCursor'\n# init MYSQL\nmysql = MySQL(app)\n\n#Articles = Articles()\n\n# Index\n@app.route('/')\ndef index():\n    return render_template('home.html')\n\n\n# About\n@app.route('/about')\ndef about():\n    return render_template('about.html')\n\n\n# Articles\n@app.route('/articles')\ndef articles():\n    # Create cursor\n    cur = mysql.connection.cursor()\n\n    # Get articles\n    result = cur.execute(\"SELECT * FROM articles\")\n\n    articles = cur.fetchall()\n\n    if result > 0:\n        return render_template('articles.html', articles=articles)\n    else:\n        msg = 'No Articles Found'\n        return render_template('articles.html', msg=msg)\n    # Close connection\n    cur.close()\n\n\n#Single Article\n@app.route('/article/<string:id>/')\ndef article(id):\n    # Create cursor\n    cur = mysql.connection.cursor()\n\n    # Get article\n    result = cur.execute(\"SELECT * FROM articles WHERE id = %s\", [id])\n\n    article = cur.fetchone()\n\n    return render_template('article.html', article=article)\n\n\n# Register Form Class\nclass RegisterForm(Form):\n    name = StringField('Name', [validators.Length(min=1, max=50)])\n    username = StringField('Username', [validators.Length(min=4, max=25)])\n    email = StringField('Email', [validators.Length(min=6, max=50)])\n    password = PasswordField('Password', [\n        validators.DataRequired(),\n        validators.EqualTo('confirm', message='Passwords do not match')\n    ])\n    confirm = PasswordField('Confirm Password')\n\n\n# User Register\n@app.route('/register', methods=['GET', 'POST'])\ndef register():\n    form = RegisterForm(request.form)\n    if request.method == 'POST' and form.validate():\n        name = form.name.data\n        email = form.email.data\n        username = form.username.data\n        password = sha256_crypt.encrypt(str(form.password.data))\n\n        # Create cursor\n        cur = mysql.connection.cursor()\n\n        # Execute query\n        cur.execute(\"INSERT INTO users(name, email, username, password) VALUES(%s, %s, %s, %s)\", (name, email, \n                                        username, password))\n\n        # Commit to DB\n        mysql.connection.commit()\n\n        # Close connection\n        cur.close()\n\n        flash('You are now registered and can log in', 'success')\n\n        return redirect(url_for('login'))\n    return render_template('register.html', form=form)\n\n\n# User login\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    if request.method == 'POST':\n        # Get Form Fields\n        username = request.form['username']\n        password_candidate = request.form['password']\n\n        # Create cursor\n        cur = mysql.connection.cursor()\n\n        # Get user by username\n        result = cur.execute(\"SELECT * FROM users WHERE username = %s\", [username])\n\n        if result > 0:\n            # Get stored hash\n            data = cur.fetchone()\n            password = data['password']\n\n            # Compare Passwords\n            if sha256_crypt.verify(password_candidate, password):\n                # Passed\n                session['logged_in'] = True\n                session['username'] = username\n\n                flash('You are now logged in', 'success')\n                return redirect(url_for('dashboard'))\n            else:\n                error = 'Invalid login'\n                return render_template('login.html', error=error)\n            # Close connection\n            cur.close()\n        else:\n            error = 'Username not found'\n            return render_template('login.html', error=error)\n\n    return render_template('login.html')\n\n# Check if user logged in\ndef is_logged_in(f):\n    @wraps(f)\n    def wrap(*args, **kwargs):\n        if 'logged_in' in session:\n            return f(*args, **kwargs)\n        else:\n            flash('Unauthorized, Please login', 'danger')\n            return redirect(url_for('login'))\n    return wrap\n\n# Logout\n@app.route('/logout')\n@is_logged_in\ndef logout():\n    session.clear()\n    flash('You are now logged out', 'success')\n    return redirect(url_for('login'))\n\n# Dashboard\n@app.route('/dashboard')\n@is_logged_in\ndef dashboard():\n    # Create cursor\n    cur = mysql.connection.cursor()\n\n    # Get articles\n    #result = cur.execute(\"SELECT * FROM articles\")\n    # Show articles only from the user logged in \n    result = cur.execute(\"SELECT * FROM articles WHERE author = %s\", [session['username']])\n\n    articles = cur.fetchall()\n\n    if result > 0:\n        return render_template('dashboard.html', articles=articles)\n    else:\n        msg = 'No Articles Found'\n        return render_template('dashboard.html', msg=msg)\n    # Close connection\n    cur.close()\n\n# Article Form Class\nclass ArticleForm(Form):\n    title = StringField('Title', [validators.Length(min=1, max=200)])\n    body = TextAreaField('Body', [validators.Length(min=30)])\n\n# Add Article\n@app.route('/add_article', methods=['GET', 'POST'])\n@is_logged_in\ndef add_article():\n    form = ArticleForm(request.form)\n    if request.method == 'POST' and form.validate():\n        title = form.title.data\n        body = form.body.data\n\n        # Create Cursor\n        cur = mysql.connection.cursor()\n\n        # Execute\n        cur.execute(\"INSERT INTO articles(title, body, author) VALUES(%s, %s, %s)\",(title, body, session['username']))\n\n        # Commit to DB\n        mysql.connection.commit()\n\n        #Close connection\n        cur.close()\n\n        flash('Article Created', 'success')\n\n        return redirect(url_for('dashboard'))\n\n    return render_template('add_article.html', form=form)\n\n\n# Edit Article\n@app.route('/edit_article/<string:id>', methods=['GET', 'POST'])\n@is_logged_in\ndef edit_article(id):\n    # Create cursor\n    cur = mysql.connection.cursor()\n\n    # Get article by id\n    result = cur.execute(\"SELECT * FROM articles WHERE id = %s\", [id])\n\n    article = cur.fetchone()\n    cur.close()\n    # Get form\n    form = ArticleForm(request.form)\n\n    # Populate article form fields\n    form.title.data = article['title']\n    form.body.data = article['body']\n\n    if request.method == 'POST' and form.validate():\n        title = request.form['title']\n        body = request.form['body']\n\n        # Create Cursor\n        cur = mysql.connection.cursor()\n        app.logger.info(title)\n        # Execute\n        cur.execute (\"UPDATE articles SET title=%s, body=%s WHERE id=%s\",(title, body, id))\n        # Commit to DB\n        mysql.connection.commit()\n\n        #Close connection\n        cur.close()\n\n        flash('Article Updated', 'success')\n\n        return redirect(url_for('dashboard'))\n\n    return render_template('edit_article.html', form=form)\n\n# Delete Article\n@app.route('/delete_article/<string:id>', methods=['POST'])\n@is_logged_in\ndef delete_article(id):\n    # Create cursor\n    cur = mysql.connection.cursor()\n\n    # Execute\n    cur.execute(\"DELETE FROM articles WHERE id = %s\", [id])\n\n    # Commit to DB\n    mysql.connection.commit()\n\n    #Close connection\n    cur.close()\n\n    flash('Article Deleted', 'success')\n\n    return redirect(url_for('dashboard'))\n\nif __name__ == '__main__':\n    app.secret_key='secret123'\n    app.run(debug=True)\n`.trim();\n\nconst about = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>About Us</h1>\n  <p>Lorem culpa qui officia deserunt mollit anim id est laborum.</p>\n{% endblock %}\n`.trim();\n\nconst article = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Add Article</h1>\n  {% from \"includes/_formhelpers.html\" import render_field %}\n  <form method=\"POST\" action=\"\">\n    <div class=\"form-group\">\n      {{ render_field(form.title, class_=\"form-control\") }}\n    </div>\n    <div class=\"form-group\">\n      {{ render_field(form.body, class_=\"form-control\", id=\"editor\") }}\n    </div>\n    <p><input class=\"btn btn-primary\" type=\"submit\" value=\"Submit\">\n  </form>\n{% endblock %}\n`.trim();\n\nconst articles = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>{{article.title}}</h1>\n  <small>Written by {{article.author}} on {{article.create_date}}</small>\n  <hr>\n  <div>\n    {{article.body | safe}}\n  </div>\n{% endblock %}\n`.trim();\n\nconst articless = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Articles</h1>\n  <ul class=\"list-group\">\n    {% for article in articles %}\n      <li class=\"list-group-item\"><a href=\"article/{{article.id}}\">{{article.title}}</a></li>\n    {% endfor %}\n  </ul>\n{% endblock %}\n`.trim();\n\nconst dashboard = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Dashboard <small> Welcome {{session.username}}</small></h1>\n  <a class=\"btn btn-success\" href=\"/add_article\"> Add Article</a>\n  <hr>\n  <table class=\"table table-striped\">\n    <tr>\n      <th>ID</th>\n      <th>Title</th>\n      <th>Author</th>\n      <th>Date</th>\n      <th></th>\n      <th></th>\n    </tr>\n    {% for article in articles %}\n      <tr>\n        <td>{{article.id}}</td>\n        <td>{{article.title}}</td>\n        <td>{{article.author}}</td>\n        <td>{{article.create_date}}</td>\n        <td><a href=\"edit_article/{{article.id}}\" class=\"btn btn-default pull-right\">Edit</a></td>\n        <td>\n          <form action=\"{{url_for('delete_article', id=article.id)}}\" method=\"post\">\n            <input type=\"hidden\" name=\"_method\" value=\"DELETE\">\n            <input type=\"submit\" value=\"Delete\" class=\"btn btn-danger\">\n          </form>\n        </td>\n      </tr>\n    {% endfor %}\n  </table>\n{% endblock %}\n`.trim();\n\nconst edit = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Edit Article</h1>\n  {% from \"includes/_formhelpers.html\" import render_field %}\n  <form method=\"POST\" action=\"\">\n    <div class=\"form-group\">\n      {{ render_field(form.title, class_=\"form-control\") }}\n    </div>\n    <div class=\"form-group\">\n      {{ render_field(form.body, class_=\"form-control\", id=\"editor\") }}\n    </div>\n    <p><input class=\"btn btn-primary\" type=\"submit\" value=\"Submit\">\n  </form>\n{% endblock %}\n`.trim();\n\nconst home = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <div class=\"jumbotron text-center\">\n    <h1>Welcome To FlaskApp</h1>\n    <p class=\"lead\">This application YouTube series</p>\n    {% if session.logged_in == NULL %}\n      <a href=\"/register\" class=\"btn btn-primary btn-lg\">Register</a>\n      <a href=\"/login\" class=\"btn btn-success btn-lg\">Login</a>\n    {% endif %}\n  </div>\n{% endblock %}\n`.trim();\n\nconst layout = `\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>MyFlaskApp</title>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n  </head>\n  <body>\n    {% include 'includes/_navbar.html' %}\n    <div class=\"container\">\n      {% include 'includes/_messages.html' %}\n      {% block body %}{% endblock %}\n    </div>\n\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n    <script src=\"//cdn.ckeditor.com/4.6.2/basic/ckeditor.js\"></script>\n    <script type=\"text/javascript\">\n      CKEDITOR.replace('editor')\n    </script>\n  </body>\n</html>\n`.trim();\n\nconst login = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Login</h1>\n  <form action=\"\" method=\"POST\">\n    <div class=\"form-group\">\n      <label>Username</label>\n      <input type=\"text\" name=\"username\" class=\"form-control\" value={{request.form.username}}>\n    </div>\n    <div class=\"form-group\">\n      <label>Password</label>\n      <input type=\"password\" name=\"password\" class=\"form-control\" value={{request.form.password}}>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n  </form>\n{% endblock %}\n`.trim();\n\nconst register = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Register</h1>\n  {% from \"includes/_formhelpers.html\" import render_field %}\n  <form method=\"POST\" action=\"\">\n    <div class=\"form-group\">\n      {{render_field(form.name, class_=\"form-control\")}}\n    </div>\n    <div class=\"form-group\">\n      {{render_field(form.email, class_=\"form-control\")}}\n    </div>\n    <div class=\"form-group\">\n      {{render_field(form.username, class_=\"form-control\")}}\n    </div>\n    <div class=\"form-group\">\n      {{render_field(form.password, class_=\"form-control\")}}\n    </div>\n    <div class=\"form-group\">\n      {{render_field(form.confirm, class_=\"form-control\")}}\n    </div>\n    <p><input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\"></p>\n  </form>\n{% endblock %}\n`.trim();\n\nconst formhelpers = `\n{% macro render_field(field) %}\n  {{ field.label }}\n  {{ field(**kwargs)|safe }}\n  {% if field.errors %}\n    {% for error in field.errors %}\n      <span class=\"help-inline\">{{ error }}</span>\n    {% endfor %}\n  {% endif %}\n{% endmacro %}\n`.trim();\n\nconst messages = `\n{% with messages = get_flashed_messages(with_categories=true) %}\n  {% if messages %}\n    {% for category, message in messages %}\n      <div class=\"alert alert-{{ category }}\">{{ message }}</div>\n    {% endfor %}\n  {% endif %}\n{% endwith %}\n\n{% if error %}\n  <div class=\"alert alert-danger\">{{error}}</div>\n{% endif %}\n\n{% if msg %}\n  <div class=\"alert alert-success\">{{msg}}</div>\n{% endif %}\n`.trim();\n\nconst navbar = `\n<nav class=\"navbar navbar-default\">\n      <div class=\"container\">\n        <div class=\"navbar-header\">\n          <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" \n                        aria-expanded=\"false\" aria-controls=\"navbar\">\n            <span class=\"sr-only\">Toggle navigation</span>\n            <span class=\"icon-bar\"></span>\n            <span class=\"icon-bar\"></span>\n            <span class=\"icon-bar\"></span>\n          </button>\n          <a class=\"navbar-brand\" href=\"#\">MyFlaskApp</a>\n        </div>\n        <div id=\"navbar\" class=\"collapse navbar-collapse\">\n          <ul class=\"nav navbar-nav\">\n            <li><a href=\"/\">Home</a></li>\n            <li><a href=\"/about\">About</a></li>\n            <li><a href=\"/articles\">Articles</a></li>\n          </ul>\n\n          <ul class=\"nav navbar-nav navbar-right\">\n            {% if session.logged_in %}\n              <li><a href=\"/dashboard\">Dashboard</a></li>\n              <li><a href=\"/logout\">Logout</a></li>\n            {% else %}\n              <li><a href=\"/register\">Register</a></li>\n              <li><a href=\"/login\">Login</a></li>\n            {% endif %}\n\n          </ul>\n        </div><!--/.nav-collapse -->\n      </div>\n    </nav>\n`.trim();\n\n\nclass FlaskSignUp extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>SetUp</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={flasks}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>app.py</b>\n              <div style={titles}>\n                <PrismCode\n                  code={appy}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/about.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={about}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n\n              <b>templates/add_article.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={article}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n\n              <b>templates/article.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={articles}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/articles.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={articless}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/dashboard.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={dashboard}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/edit_article.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={edit}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/home.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={home}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/layout.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={layout}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/login.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={login}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/register.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={register}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/includes/_formhelpers.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={formhelpers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/includes/_messages.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={messages}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/includes/_navbar.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={navbar}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(FlaskSignUp));\n"],"sourceRoot":""}