(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[251],{140:function(e,t,n){"use strict";n.d(t,"a",(function(){return E}));var a=n(45),l=n(28),r=n(136),i=n(137),s=n(139),c=n(0),m=n.n(c),u=n(138),o=n.n(u),E=(n(59),function(e){function t(e){var n;return Object(a.a)(this,t),(n=Object(r.a)(this,Object(i.a)(t).call(this,e))).highlight=function(){n.ref&&n.ref.current&&o.a.highlightElement(n.ref.current)},n.ref=m.a.createRef(),n}return Object(s.a)(t,e),Object(l.a)(t,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,t=e.code,n=(e.plugins,e.language);return m.a.createElement("pre",{className:"code-prism"},m.a.createElement("code",{ref:this.ref,className:"language-".concat(n)},t.trim()))}}]),t}(m.a.Component))},141:function(e,t,n){},147:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var a=n(0),l=n.n(a),r=n(26),i=n(297),s=n(295),c=n(114),m=Object(c.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function u(){var e=m();return l.a.createElement("div",{className:e.root},l.a.createElement(s.a,null,l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/introPython",className:e.line},"intro Python")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/tuples",className:e.line},"Tuples")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/stringPy",className:e.line},"Strings")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/iteratorsPy",className:e.line},"Iterators")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/json",className:e.line},"Json")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/mathematics",className:e.line},"Mathematics")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/oops_",className:e.line},"Oops")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/abstract",className:e.line},"Abstract")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/exceptionsPy",className:e.line},"ExceptionsHandling")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/pyIntro",className:e.line},"Pickle")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/threadings",className:e.line},"Thread")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/collections",className:e.line},"Collections")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/logging",className:e.line},"Logging")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/regex",className:e.line},"Regex")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/tkinter",className:e.line},"TKinter")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/logicalspy",className:e.line},"Logicals")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/pyLogic",className:e.line},"PyLogic")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/csv",className:e.line},"CsvPython")),l.a.createElement("br",null),"Flask",l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/conroutes",className:e.line},"routes")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/httpsMethods",className:e.line},"Https")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/flasksIn",className:e.line},"Interviews")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/flask_signUp",className:e.line},"Flask_signUp")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/get_search",className:e.line},"Get_Search")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/load_search",className:e.line},"Load_Search"))),l.a.createElement("div",null))}},419:function(e,t,n){"use strict";n.r(t);var a=n(45),l=n(28),r=n(136),i=n(137),s=n(139),c=n(0),m=n.n(c),u=n(138),o=n.n(u),E=n(120),b=n(57),p=n(296),d=n(5),h=(n(141),n(147)),g=n(140),f={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},y='\ntxt = "My name is John, and I am {}"\n    \nmy_string = """Hello                                              \nWorld"""\n\nprint(type(my_string))\nprint(my_string[1])\nprint(len(my_string))\nprint(my_string.strip())                            \nprint(my_string.lower())\nprint(my_string.upper())\nprint(my_string.replace("H", "J"))\nprint(my_string.split(","))\nprint(len(my_string))  \nprint("hello".startswith("he"))                                      # startswith and endswith\nprint("hello".endswith("llo"))\nprint("Hello".find("o"))                                             # find first index of a given substring, -1 otherwise\nprint("Hello".count("e"))\n\n\nmy_list = [\'How\', \'are\', \'you\', \'doing\']                              \nstr = \' \'.join(my_list)                                              # join elements of a list into a string\nprint(str)\n\nb = my_string[0]                                                     # get character by referring to index\nb = my_string[1:3]                                                   # Substrings with slicing\nb = my_string[::2]                                                   # start to end with every second item\nb = my_string[::-1] \n'.trim(),v="\nmy_string = 'Hello'\nfor i in my_string:\n    print(i)".trim(),w='\na = "Hello {0} and {1}".format("Bob", "Tom")                            # use braces as placeholders\na = "Hello {} and {}".format("Bob", "Tom")                              # positions are optional for the default order\na = "The integer value is {}".format(2)\n\nprint(a)\n\n\na = "The float value is {0:.3f}".format(2.1234)                         # some special format rules for numbers\na = "The float value is {0:e}".format(2.1234)\na = "The binary value is {0:b}".format(2)\n\nprint(a)\n\n\nprint("Hello %s and %s" % ("Bob", "Tom"))                               # must be a tuple for multiple arguments\nval =  3.14159265359\nprint("The decimal value is %d" % val)                                  # old style formatting by using % operator\n'.trim(),x='\nname = "Eric"\nage = 25\na = f"Hello, {name}. You are {age}."\nprint(a)\n\npi = 3.14159\na = f"Pi is {pi:.3f}"\nprint(a)\n\na = f"The value is {2*60}"                                   # f-Strings are evaluated at runtime, which allows expressions\nprint(a)'.trim(),j='\nfrom timeit import default_timer as timer\nmy_list = ["a"] * 1000000\n\nstart = timer()\na = "".join(my_list)\nend = timer()\nprint("concatenate string with join(): %.5f" % (end - start))\n'.trim(),_="\nimport re\n\n#split\nstr = \"Split string into list\"\nnewStr = str.split()\nprint(newStr) \n\n\n#2 sub\nnewStr = re.sub(\"s\", \"9\", str)\nprint(newStr)\n\n\n#3 subn\nstr = re.subn('ov', '~*' , 'The rain in Spain', flags = re.IGNORECASE)\nprint(str)".trim(),N="\ndef sum(a,b):\n    c=a+b\n    return c\nobj=sum(2,3)\nprint(obj)\n\n\n#2\nf=lambda a,b:a+b\nobj=f(2,3)\nprint(obj)".trim(),R="\nf=lambda n: 1 if n==0 else n+f(n-1)\nprint(f(5))\n\n#2\nlist(filter(lambda x:x>6,range(9))) [7, 8]\n\nlist(map(lambda x:x**2,range(5))) [0, 1, 4, 9, 16, 25]\n\nfrom functools import reduce \nreduce(lambda x,y:x-y,[1,2,3,4,5]) -13".trim(),T="\nf = lambda x: x+10                                          \nval1 = f(5)\nval2 = f(100)\nprint(val1, val2)\n\n\nf = lambda x,y: x*y                          \nval3 = f(2,10)\nval4 = f(7,5)\nprint(val3, val4)".trim(),k="\ndef myfunc(n):\n    return lambda x: x * n\n\ndoubler = myfunc(2)\nprint(doubler(6))\n".trim(),S="\npoints2D = [(1, 9), (4, 1), (5, -3), (10, 2)]\nsorted_by_y = sorted(points2D, key= lambda x: x[1])\nprint(sorted_by_y)\n\nmylist = [- 1, -4, -2, -3, 1, 2, 3, 4]\nsorted_by_abs = sorted(mylist, key= lambda x: abs(x))\nprint(sorted_by_abs)".trim(),O="\na  = [1, 2, 3, 4, 5, 6]\nb = list(map(lambda x: x * 2 , a))\n\n\nc = [x*2 for x in a]                                                # Use map if you have an already defined function\nprint(b)\nprint(c)".trim(),H="\na = [1, 2, 3, 4, 5, 6, 7, 8]\nb = list(filter(lambda x: (x%2 == 0) , a))\n\nc = [x for x in a if x%2 == 0]\nprint(b)\nprint(c)".trim(),P="\nfrom functools import reduce\na = [1, 2, 3, 4]\nproduct_a = reduce(lambda x, y: x*y, a)\nprint(product_a)\nsum_a = reduce(lambda x, y: x+y, a)\nprint(sum_a)".trim(),F=function(e){function t(){return Object(a.a)(this,t),Object(r.a)(this,Object(i.a)(t).apply(this,arguments))}return Object(s.a)(t,e),Object(l.a)(t,[{key:"componentDidMount",value:function(){setTimeout((function(){return o.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return m.a.createElement(E.a,{container:!0},m.a.createElement(E.a,{item:!0,xs:2},m.a.createElement(b.a,{className:e.paper},m.a.createElement("h4",null,m.a.createElement(h.a,null)))),m.a.createElement(E.a,{item:!0,xs:10},m.a.createElement(b.a,{className:e.paper},m.a.createElement(p.a,null,m.a.createElement("h3",null,"1. Strings"),m.a.createElement("ul",null,m.a.createElement("li",null,"Python strings are immutable."),m.a.createElement("li",null,"Use triple quotes for multiline strings.")),m.a.createElement("br",null),m.a.createElement("ul",null,m.a.createElement("li",null,m.a.createElement("b",null,"count(): "),"Returns the number of times a specified value occurs in a string."),m.a.createElement("li",null,m.a.createElement("b",null,"endswith(): "),"Returns true if the string ends with the specified value."),m.a.createElement("li",null,m.a.createElement("b",null,"find(): "),"Searches the string for a specified value and returns the position."),m.a.createElement("li",null,m.a.createElement("b",null,"format(): "),"Formats specified values in a string."),m.a.createElement("li",null,m.a.createElement("b",null,"format_map(): "),"Formats specified values in a string"),m.a.createElement("li",null,m.a.createElement("b",null,"index(): "),"Searches the string for a specified value and returns the position."),m.a.createElement("li",null,m.a.createElement("b",null,"isalnum(): "),"Returns True if all characters in the string are alphanumeric."),m.a.createElement("li",null,m.a.createElement("b",null,"isalpha(): "),"Returns True if all characters in the string are in the alphabet."),m.a.createElement("li",null,m.a.createElement("b",null,"isdecimal(): "),"Returns True if all characters in the string are decimals."),m.a.createElement("li",null,m.a.createElement("b",null,"isdigit(): "),"Returns True if all characters in the string are digits."),m.a.createElement("li",null,m.a.createElement("b",null,"isidentifier(): "),"Returns True if the string is an identifier."),m.a.createElement("li",null,m.a.createElement("b",null,"islower(): "),"Returns True if all characters in the string are lower case."),m.a.createElement("li",null,m.a.createElement("b",null,"isupper(): ")),m.a.createElement("li",null,m.a.createElement("b",null,"lower(): "),"Converts a string into lower case."),m.a.createElement("li",null,m.a.createElement("b",null,"isnumeric(): "),"Returns True if all characters in the string are numeric."),m.a.createElement("li",null,m.a.createElement("b",null,"isprintable(): "),"Returns True if all characters in the string are printable."),m.a.createElement("li",null,m.a.createElement("b",null,"isspace(): "),"Returns True if all characters in the string are whitespaces."),m.a.createElement("li",null,m.a.createElement("b",null,"istitle(): "),"Returns True if the string follows the rules of a title."),m.a.createElement("li",null,m.a.createElement("b",null,"join(): "),"Joins the elements of an iterable to the end of the string."),m.a.createElement("li",null,m.a.createElement("b",null,"ljust(): "),"Returns a left justified version of the string."),m.a.createElement("li",null,m.a.createElement("b",null,"lstrip(): "),"Returns a left trim version of the string."),m.a.createElement("li",null,m.a.createElement("b",null,"maketrans(): "),"Returns a translation table to be used in translations."),m.a.createElement("li",null,m.a.createElement("b",null,"partition(): "),"Returns a tuple where the string is parted into three parts."),m.a.createElement("li",null,m.a.createElement("b",null,"rpartition(): "),"Returns a tuple where the string is parted into three parts."),m.a.createElement("li",null,m.a.createElement("b",null,"replace(): "),"Returns a string where a specified value is replaced with a specified value."),m.a.createElement("li",null,m.a.createElement("b",null,"rfind(): "),"Searches the string for a specified value and returns the last position of where it was found."),m.a.createElement("li",null,m.a.createElement("b",null,"rindex(): "),"Searches the string for a specified value and returns the last position of where it was found."),m.a.createElement("li",null,m.a.createElement("b",null,"rjust(): "),"Returns a right justified version of the string."),m.a.createElement("li",null,m.a.createElement("b",null,"rstrip(): "),"Returns a right trim version of the string."),m.a.createElement("li",null,m.a.createElement("b",null,"rsplit(): "),"Splits the string at the specified separator, and returns a list."),m.a.createElement("li",null,m.a.createElement("b",null,"split(): "),"Splits the string at the specified separator, and returns a list"),m.a.createElement("li",null,m.a.createElement("b",null,"splitlines(): "),"Splits the string at line breaks and returns a list."),m.a.createElement("li",null,m.a.createElement("b",null,"startswith(): "),"Returns true if the string starts with the specified value."),m.a.createElement("li",null,m.a.createElement("b",null,"strip(): "),"Returns a trimmed version of the string."),m.a.createElement("li",null,m.a.createElement("b",null,"swapcase(): "),"Swaps cases, lower case becomes upper case."),m.a.createElement("li",null,m.a.createElement("b",null,"title(): "),"Converts the first character of each word to upper case."),m.a.createElement("li",null,m.a.createElement("b",null,"translate(): "),"Returns a translated string."),m.a.createElement("li",null,m.a.createElement("b",null,"zfill(): "),"Fills the string with a specified number of 0 values at the beginning.")),m.a.createElement("br",null),m.a.createElement("div",{style:f},m.a.createElement(g.a,{code:y,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"Iterating"),m.a.createElement("div",{style:f},m.a.createElement(g.a,{code:v,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"2. Format"),m.a.createElement("div",{style:f},m.a.createElement(g.a,{code:w,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"3. f-Strings"),"Use the variables directly inside the braces.",m.a.createElement("div",{style:f},m.a.createElement(g.a,{code:x,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"More on immutability and concatenation"),m.a.createElement("ul",null,m.a.createElement("li",null,"since a string is immutable, adding strings with + always creates a new string, and therefore is expensive for multiple operations."),m.a.createElement("li",null,"join method is much faster.")),m.a.createElement("br",null),m.a.createElement("div",{style:f},m.a.createElement(g.a,{code:j,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"4. What are split(), sub(), and subn() methods in Python?"),"These methods belong to Python RegEx,  \u2018re\u2019 module and are used to modify strings.",m.a.createElement("ul",null,m.a.createElement("li",null,m.a.createElement("b",null,"split():"),"Used to split a given string into a list."),m.a.createElement("li",null,m.a.createElement("b",null,"sub(): "),"Used to find a substring where a regex pattern matches, and then it replaces the matched substring with a different string."),m.a.createElement("li",null,m.a.createElement("b",null,"subn(): "),"similar to the sub() method, but it returns the new string, along with the number of replacements.")),m.a.createElement("div",{style:f},m.a.createElement(g.a,{code:_,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"5. Lambda"),m.a.createElement("div",{style:f},m.a.createElement(g.a,{code:N,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"6. Lambda with Map. Filter"),m.a.createElement("div",{style:f},m.a.createElement(g.a,{code:R,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"7. Lambda functions"),m.a.createElement("ul",null,m.a.createElement("li",null,"A lambda function is defined without a name."),m.a.createElement("li",null,"A lambda function can take any number of arguments, but have only one expression."),m.a.createElement("li",null,"Anonymous functions are defined using the lambda keyword."),m.a.createElement("li",null,"It's most common use is as an argument to higher-order functions.")),m.a.createElement("br",null),m.a.createElement("div",{style:f},m.a.createElement(g.a,{code:T,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"8. Lamdba inside another function"),m.a.createElement("div",{style:f},m.a.createElement(g.a,{code:k,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"9. Custom sorting using a lambda function as key parameter"),"The key function transforms each element before sorting.",m.a.createElement("div",{style:f},m.a.createElement(g.a,{code:S,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"10. Use lambda for map function"),"map(func, seq), transforms each element with the function.",m.a.createElement("div",{style:f},m.a.createElement(g.a,{code:O,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"11. Use lambda for filter function"),"filter(func, seq), returns all elements for which func evaluates to True.",m.a.createElement("div",{style:f},m.a.createElement(g.a,{code:H,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"12. Reduce"),"reduce(func, seq), repeatedly applies the func to the elements and returns a single value. func takes 2 arguments.",m.a.createElement("div",{style:f},m.a.createElement(g.a,{code:P,language:"js",plugins:["line-numbers"]}))))))}}]),t}(c.Component);t.default=Object(d.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(F)}}]);
//# sourceMappingURL=251.d85da36d.chunk.js.map