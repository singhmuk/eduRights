{"version":3,"sources":["components/ReactJs/prismCode.js","components/express/sidebar.js","components/express/deepExpress/jqueries.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","htmls","jqueries","JQueies","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"mPAIqBA,G,kBACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAYRC,UAAY,WACN,EAAKC,KAAO,EAAKA,IAAIC,SACvBC,IAAMC,iBAAiB,EAAKH,IAAIC,UAblC,EAAKD,IAAMI,IAAMC,YAFA,E,iFAMjBC,KAAKP,c,2CAILO,KAAKP,c,+BASG,IAAD,EAC6BO,KAAKR,MAAjCS,EADD,EACCA,KAAeC,GADhB,EACOC,QADP,EACgBD,UACvB,OACE,yBAAKE,UAAU,cACb,0BAAMV,IAAKM,KAAKN,IAAKU,UAAS,mBAAcF,IACzCD,EAAKI,a,GAzBuBP,IAAMQ,a,uDCJ7C,yFAMMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,MAAO,CACLC,YAAaJ,EAAMK,QAAQ,IAE7BC,KAAM,CACJC,eAAgB,YAIL,SAASC,IACtB,IAAMC,EAAUX,IAEhB,OACE,yBAAKH,UAAWc,EAAQR,MACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMS,GAAG,gBAAgBf,UAAWc,EAAQH,MAA5C,iBACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,WAAWf,UAAWc,EAAQH,MAAvC,aACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,cAAcf,UAAWc,EAAQH,MAA1C,WAGV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,cAAcf,UAAWc,EAAQH,MAA1C,eACV,uCACA,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,eAAef,UAAWc,EAAQH,MAA3C,gBACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,YAAYf,UAAWc,EAAQH,MAAxC,aACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,cAAcf,UAAWc,EAAQH,MAA1C,aACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,gBAAgBf,UAAWc,EAAQH,MAA5C,gBAEZ,iC,qLC3BAK,EAAS,CAAEC,gBAAiB,UAAWC,QAAS,MAAOC,SAAU,QAejEC,EAAQ,y6DAsDZnB,OAEIoB,EAAW,4vLA0PfpB,OAGIqB,E,4LAEFC,YAAW,kBAAM/B,IAAMgC,iBAAgB,K,+BAE/B,IACAV,EAAYlB,KAAKR,MAAjB0B,QACR,OACE,kBAAC,IAAD,CAAMW,WAAS,GACb,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,CAAO3B,UAAWc,EAAQN,OACxB,4BAAI,kBAAC,IAAD,SAGR,kBAAC,IAAD,CAAMkB,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CAAO3B,UAAWc,EAAQN,OACxB,kBAAC,IAAD,KACE,oCACA,yBAAKoB,MAAOZ,GACV,kBAAC,IAAD,CACEnB,KAAMuB,EACNtB,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,sCACA,yBAAK6B,MAAOZ,GACV,kBAAC,IAAD,CACEnB,KAAMwB,EACNvB,SAAS,KACTC,QAAS,CAAC,2B,GA/BNG,aA0CN2B,uBA5WD,SAAAxB,GAAK,MAAK,CACvBG,MAAO,CACLsB,OAAQzB,EAAMK,QAAQ,GACtBQ,QAASb,EAAMK,QAAQ,IAEzBqB,SAAU,CACRD,OAAQzB,EAAMK,QAAQ,IAExBsB,UAAW,CACTC,UAAW,aAmWCJ,CAAmBP","file":"static/js/146.cbdc6510.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/introExpress' className={classes.line}>IntroExpress</Link></MenuItem>\n        <MenuItem><Link to='/resDocs' className={classes.line}>Responds</Link></MenuItem>\n        <MenuItem><Link to='/routerDocs' className={classes.line}>Router</Link></MenuItem>\n\n        {/* ---------- */}\n        <MenuItem><Link to='/middleware' className={classes.line}>Middleware</Link></MenuItem>\n        <b>Loopback</b>\n        <MenuItem><Link to='/loopbackcli' className={classes.line}>Loopbackcli</Link></MenuItem>\n        <MenuItem><Link to='/jqueries' className={classes.line}>jqueries</Link></MenuItem>\n        <MenuItem><Link to='/backbonejs' className={classes.line}>Backbone</Link></MenuItem>\n        <MenuItem><Link to='/underscorejs' className={classes.line}>Underscore</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst htmls = `\n<body>\n<button>Button Selector</button>\n<p>Element Selector</p>\n<!-- <button id=\"btn-id\">Button with ID</button>\n<button class=\"btn-class\">Button with Class</button> -->\n\n<p>Key Events</p>\n<input type=\"text\" name=\"name\" id=\"name\" /> <br /><br />\n\n<p>Form Events</p>\n<form action=\"\" method=\"get\" id=\"form-id\">\n  <input type=\"text\" name=\"fname\" id=\"fname\" />\n  <input type=\"submit\" value=\"Submit\" />\n</form>\n\n<input type=\"text\" name=\"name\" id=\"name\" value=\"GeekyShows\" data-sid=\"3\" />\n<p>Hello GeekyShows (Mouse Events)</p>\n<div id=\"div-id\">This is Geeky Shows</div>\n<br />\n<img src=\"image/pic.jpg\" alt=\"\" width=\"300px\" id=\"image-id\" /> <br />\n<img src=\"image/zom.png\" alt=\"\" height=\"200px\" id=\"zom-id\" /> <br />\n\n<button id=\"btn-hide\">Hide Image</button>\n<button id=\"btn-show\">Show Image</button>\n<button id=\"btn-toggle\">Toggle Hide/Show Image</button>\n\n<button id=\"btn-fadeout\">Fade Out</button>\n<button id=\"btn-fadein\">Fade In</button>\n<button id=\"btn-fadetoggle\">Fade Toggle</button>\n<button id=\"btn-fadeto\">Fade To</button>\n\n<button id=\"btn-slideup\">Slide Up</button>\n<button id=\"btn-slidedown\">Slide Down</button>\n<button id=\"btn-slidetoggle\">Slide Toggel</button>\n\n<button id=\"btn-animate\">Animate</button>\n\n<button id=\"btn-setText\">Set Text</button>\n<button id=\"btn-setHTML\">Set HTML</button>\n<button id=\"btn-setValue\">Set Value</button>\n<button id=\"btn-setAttrValue\">Set Attr Value</button>\n<button id=\"btn-setImageAttrValue\">Set Image Attr Value</button>\n<button id=\"btn-addClass\">Add Class</button>\n<button id=\"btn-removeClass\">Remove Class</button>\n<button id=\"btn-toggleClass\">Toggle Class</button>\n\n<button id=\"btn-setCSS\">Set CSS</button>\n<button id=\"btn-setMultiCSS\">Set Multiple CSS</button>\n\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script> -->\n<script src=\"js/jquery.js\"></script>\n<script src=\"js/custom.js\"></script>\n</body>\n`.trim();\n\nconst jqueries = `\n$/jQuery(selector).action(callback)\n\nSelector: jQuery uses CSS syntex to select elements and in addition, it has some own custom selector.\n1.Element selector: Ex. <p>, <div>\n2.Id selector: \"#btn1\"\n3.class selector: \".myClass\"\n4.Universal selector: \"*\"\n\n\n//\nconsole.log('jQuery', $);\nconsole.log('jQuery', jQuery);\n\njQuery(\"button\").click(() => {\n  console.log(\"Button Selector\");\n});\n\n$(\"button\").click(() => {\n  console.log(\"Button Selector\");\n});\n\n$(document).ready(() => {\n  jQuery(\"button\").click(function () {\n    console.log(\"ready function run after DOM loads\");\n  });\n});\n\n//jQuery.noConflict will reset the $ variable so it's no longer an alias of jQuery\n$.noConflict();\njQuery(document).ready(($) => {\n  $(\"button\").click(() => {\n    console.log(\"jQuery.noConflict\");\n  });\n});\n\njQuery.noConflict();\njQuery(document).ready(($) => {\n  $(\"p\").click(() => {\n    alert(\"Element Selector\");\n  });\n\n  $(\"#btn-id\").click(() => {\n    console.log(\"ID Selector\");\n  });\n\n  $(\".btn-class\").click(() => {\n    console.log(\"Class Selector\");\n  });\n});\n\n// jQuery.noConflict();\njQuery(document).ready(($) => {\n  $(\"p\").click(() => {\n    console.log(\"Mouse Events\");\n  });\n  $(\"p\").dblclick(() => {\n    console.log(\"Double Clicked\");\n  });\n  $(\"p\").mouseenter(() => {\n    console.log(\"Mouse Enter\");\n  });\n  $(\"p\").mouseleave(() => {\n    console.log(\"Mouse Leave\");\n  });\n\n  //Keyboard Events\n  $(\"#name\").keypress(() => {\n    console.log(\"Key Pressed\");\n  });\n  $(\"#name\").keydown(() => {\n    console.log(\"Key Down\");\n  });\n  $(\"#name\").keyup(() => {\n    console.log(\"Key Up\");\n  });\n\n  //   // Form Events\n  $(\"#fname\").focus(() => {\n    console.log(\"Focus Field\");\n  });\n  $(\"#fname\").blur(() => {\n    console.log(\"Blur Field\");\n  });\n  $(\"#form-id\").submit((e) => {\n    console.log(\"Form Submitted\");\n    e.preventDefault();\n  });\n\n  //   // Window Event\n  $(window).resize(() => {\n    console.log(\"Window Resized\");\n  });\n});\n\njQuery.noConflict();\njQuery(document).ready(($) => {\n  // Hide\n  $(\"#btn-hide\").click(() => {\n    $(\"#image-id\").hide(5000, () => {\n      console.log(\"Image Hide Ho Chuka Hai\");\n    });\n  });\n\n  // Show\n  $(\"#btn-show\").click(() => {\n    $(\"#image-id\").show(5000, () => {\n      console.log(\"Image Show Ho Chuka Hai\");\n    });\n  });\n\n  // Hide and Show - Toggle\n  $(\"#btn-toggle\").click(() => {\n    $(\"#image-id\").toggle(1000, () => {\n      console.log(\"Image Hide/Show Ho Chuka Hai\");\n    });\n  });\n\n  // Fade Out\n  $(\"#btn-fadeout\").click(() => {\n    $(\"#image-id\").fadeOut(1000, () => {\n      console.log(\"Image Fade Out Ho Chuka Hai\");\n    });\n  });\n  // Fade In\n  $(\"#btn-fadein\").click(() => {\n    $(\"#image-id\").fadeIn(1000, () => {\n      console.log(\"Image Fade In Ho Chuka Hai\");\n    });\n  });\n  // Fade Toggle\n  $(\"#btn-fadetoggle\").click(() => {\n    $(\"#image-id\").fadeToggle(1000, () => {\n      console.log(\"Image Fade Toggle Ho Chuka Hai\");\n    });\n  });\n  // Fade To\n  $(\"#btn-fadeto\").click(() => {\n    $(\"#image-id\").fadeTo(1000, 0.5, () => {\n      console.log(\"Image Fade To Ho Chuka Hai\");\n    });\n  });\n\n  // Slide Up\n  $(\"#btn-slideup\").click(() => {\n    $(\"#image-id\").slideUp(1000, () => {\n      console.log(\"Image Slide Up Ho Chuka Hai\");\n    });\n  });\n  // Slide Down\n  $(\"#btn-slidedown\").click(() => {\n    $(\"#image-id\").slideDown(1000, () => {\n      console.log(\"Image Slide Down Ho Chuka Hai\");\n    });\n  });\n  // Slide Toggle\n  $(\"#btn-slidetoggle\").click(() => {\n    $(\"#image-id\").slideToggle(1000, () => {\n      console.log(\"Image Slide Toggle Ho Chuka Hai\");\n    });\n  });\n\n  // Animate - Perform a custom animation of a set of CSS Properties\n  $(\"#btn-animate\").click(() => {\n    $(\"#zom-id\").animate({ left: \"+=80\" }, 1000, () => {\n      console.log(\"Image Animate Ho Chuka Hai\");\n    });\n  });\n\n  // Get Text\n  let textdata = $(\"p\").text();\n  console.log(textdata);\n  // Set Text\n  $(\"#btn-setText\").click(() => {\n    let newtextdata = \"This is New Text\";\n    $(\"p\").text(newtextdata);\n  });\n\n  // Get HTML\n  let htmldata = $(\"p\").html();\n  console.log(htmldata);\n  // Set HTML\n  $(\"#btn-setHTML\").click(() => {\n    let newhtmldata = \"<b>This is New Text</b>\";\n    $(\"p\").html(newhtmldata);\n  });\n\n  // Get Value\n  let inputValue = $(\"#name\").val();\n  console.log(inputValue);\n  // Set value\n  $(\"#btn-setValue\").click(() => {\n    let newInputValue = \"Sonam\";\n    $(\"#name\").val(newInputValue);\n  });\n\n  // Get Attribute\n  let attrValue1 = $(\"link\").attr(\"href\");\n  console.log(attrValue1);\n\n  let attrValue2 = $(\"#name\").attr(\"data-sid\");\n  console.log(attrValue2);\n\n  // Set Attribute\n  $(\"#btn-setAttrValue\").click(() => {\n    // Get Old Data\n    console.log(\"Old Data:\", $(\"#name\").attr(\"data-sid\"));\n\n    // Set New Data\n    $(\"#name\").attr(\"data-sid\", \"20\");\n    console.log(\"New Data Set\");\n\n    // Get New Data\n    console.log(\"New Data:\", $(\"#name\").attr(\"data-sid\"));\n  });\n\n  // Set Image src Attribute\n  $(\"#btn-setImageAttrValue\").click(() => {\n    $(\"#image-id\").attr(\"src\", \"image/photo.jpg\");\n  });\n\n  // Add CSS Class\n  $(\"#btn-addClass\").click(() => {\n    $(\"p\").addClass(\"myclass\");\n  });\n\n  // Remove CSS Class\n  $(\"#btn-removeClass\").click(() => {\n    $(\"p\").removeClass(\"myclass\");\n  });\n\n  // Toggle CSS Class\n  $(\"#btn-toggleClass\").click(() => {\n    $(\"p\").toggleClass(\"myclass\");\n  });\n\n  // Get CSS Property Value\n  let divColor = $(\"#div-id\").css(\"color\");\n  console.log(divColor);\n\n  // Set CSS Property\n  $(\"#btn-setCSS\").click(() => {\n    $(\"#div-id\").css(\"font-size\", 70);\n  });\n\n  // Set Multiple CSS Property\n  $(\"#btn-setMultiCSS\").click(() => {\n    $(\"#div-id\").css({ \"font-size\": 70, \"background-color\": \"yellow\" });\n  });\n});\n`.trim();\n\n\nclass JQueies extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Html</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={htmls}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>JQuery</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={jqueries}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(JQueies));\n"],"sourceRoot":""}