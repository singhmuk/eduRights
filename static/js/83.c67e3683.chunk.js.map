{"version":3,"sources":["components/ReactJs/prismCode.js","components/ReactJs/sidebar.js","components/ReactJs/reactJs_hooks/ticGame.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","ReactShareSimplified","ShareApp","ShareAppCss","minMaxs","MoveButton","slideshow","slideshowCss","TicGame","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/83.c67e3683.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/introReact' className={classes.line}>Intro-Lazy-Children</Link></MenuItem>\n        <MenuItem><Link to='/reactInter' className={classes.line}>Intro</Link></MenuItem>\n        <MenuItem><Link to='/codingInter' className={classes.line}>CodesPro</Link></MenuItem>\n        <MenuItem><Link to='/mainCompo' className={classes.line}>Event-hoc-form<br />curd-slider</Link></MenuItem>\n        <MenuItem><Link to='/pureComp' className={classes.line}>PureComp-conComp</Link></MenuItem>\n        <MenuItem><Link to='/useStates' className={classes.line}>useMultiState</Link></MenuItem>\n        <MenuItem><Link to='/contextHooks' className={classes.line}>Context Hooks</Link></MenuItem>\n        <MenuItem><Link to='/customHooks' className={classes.line}>CustomHooks-memo</Link></MenuItem>\n        <MenuItem><Link to='/useReducersSta' className={classes.line}>UseReducers</Link></MenuItem>\n        <MenuItem><Link to='/contextMethods' className={classes.line}>Curd Hooks</Link></MenuItem>\n        <MenuItem><Link to='/jsonPlaceholder' className={classes.line}>JsonPlaceholder</Link></MenuItem>\n        <MenuItem><Link to='/async_await' className={classes.line}>Async-await-sideMenu<br />Mouse hover</Link></MenuItem>\n        <MenuItem><Link to='/ticGame' className={classes.line}>Share-maxMinDate<br />moveBtn-slideshow</Link></MenuItem>\n        <MenuItem><Link to='/linkGet' className={classes.line}>LinkGet</Link></MenuItem>\n        <MenuItem><Link to='/numberFormats' className={classes.line}>Random NumFor-biToDe<br /> Validations Step DateTimw</Link></MenuItem>\n        <MenuItem><Link to='/models' className={classes.line}>Models-chidData-csv<br />Icon-router</Link></MenuItem>\n        <MenuItem><Link to='/like' className={classes.line}>Like-checkbox-radio<br />select-scroll</Link></MenuItem>\n        <MenuItem><Link to='/textEditors' className={classes.line}>TextEditors-paginations<br />translator-sortCheck</Link></MenuItem>\n        <MenuItem><Link to='/sortItems' className={classes.line}>IncOnClick-pushBtn-fizzBuzz<br />show-addDocs-ratings</Link></MenuItem>\n        <MenuItem><Link to='/serverSideRend' className={classes.line}>Jwt-multiSel</Link></MenuItem>\n        <MenuItem><Link to='/dropdownSelect' className={classes.line}>SelectFtr-checkFtr-updtCrd</Link></MenuItem>\n        <MenuItem><Link to='/kanban' className={classes.line}>Kanban</Link></MenuItem>\n        <MenuItem><Link to='/hackeRank' className={classes.line}>HackeRank</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst ReactShareSimplified = `\nimport {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n  EmailShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  GooglePlusIcon,\n  EmailIcon,\n  WhatsappIcon\n} from \"react-share\";\n\n\nclass ReactShareSimplified extends Component {\n  render() {\n    const {url,title,facebook,googlePlus,twitter,whatsapp,email,addClass,Previewemail} = this.props;\n    let {facebookClass,twitterClass,googlePlusClass,whatsappClass,emailClass} = this.props || \"shareIcon\";\n    console.log(\"iconsize\",this.props.iconSize);\n    \n    let iconSize = 32;\n    if(this.props.iconSize!==undefined){\n        iconSize = this.props.iconSize\n    }\n    \n    return (\n      <span className={addClass}>\n        {facebook && (<FacebookShareButton url={url} quote={title} style={{outline:'none'}} className={facebookClass}>\n          <FacebookIcon\n            size={iconSize}\n            round />\n        </FacebookShareButton>)}\n        \n        {googlePlus && (<GooglePlusShareButton url={url} quote={title} style={{outline:'none'}} className={googlePlusClass}>\n          <GooglePlusIcon\n            size={iconSize}\n            round />\n        </GooglePlusShareButton>)}\n        \n        {twitter && (<TwitterShareButton url={url} quote={title} style={{outline:'none'}}  className={twitterClass}>\n          <TwitterIcon\n            size={iconSize}\n            round />\n        </TwitterShareButton>)}\n        \n        {whatsapp && (<WhatsappShareButton url={url} quote={title} style={{outline:'none'}} className={whatsappClass}>\n          <WhatsappIcon\n            size={iconSize}\n            round />\n        </WhatsappShareButton>)}\n        \n        {email && (<EmailShareButton url={url} quote={title} style={{outline:'none'}} className={emailClass}>\n          <EmailIcon\n            size={iconSize}\n            round />\n        </EmailShareButton>)}\n        {Previewemail && (<EmailShareButton url={url} quote={title} style={{outline:'none'}} className={emailClass}>\n          <EmailIcon\n            size={iconSize}\n            round />\n        </EmailShareButton>)}\n      </span>\n    );\n  }\n}\nexport default ReactShareSimplified;`.trim();\n\nconst ShareApp = `\nimport ReactShareSimplified from './dist/ReactShareSimplified'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    const url = \"https://www.github.com\";\n    const title = \"React share simplified\";\n    return (\n      <div className=\"App\">\n        <div className=\"align-inline\" style={{marginTop:'10px'}}>\n          <span className=\"share-title\">Share: </span>\n          <ReactShareSimplified\n            url={url}\n            title={title}\n            facebook={true}\n            facebookClass=\"iconStyle\"\n            googlePlus={true}\n            googlePlusClass=\"iconStyle\"\n            twitter={true}\n            twitterClass=\"iconStyle\"\n            email={true}\n            emailClass=\"iconStyle\"\n            whatsapp={true}\n            whatsappClass=\"iconStyle\"\n            iconSize={32}\n            addClass=\"align-inline\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;`.trim();\n\nconst ShareAppCss = `\n.share-title {\n  justify-content: center;\n  align-self: center;\n  font-size: 17px;\n  font-family: \"Nunito\";\n  font-weight: 500;\n  margin-right: 5px;\n}\n.align-inline {\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n}\n.iconStyle {\n    margin: 0 5px 5px;\n    cursor: pointer;\n}`.trim();\n\nconst minMaxs = `\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div>\n    <form className={classes.container} noValidate>\n      <TextField\n        id=\"date\"\n        label=\"Birthday\"\n        type=\"date\"\n        defaultValue=\"2017-05-24\"\n        className={classes.textField}\n        inputProps={{\n          min: \"2020-10-10\"\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <p>End date</p>\n      <TextField\n        id=\"date\"\n        label=\"Birthday\"\n        type=\"date\"\n        defaultValue=\"2017-05-24\"\n        className={classes.textField}\n        inputProps={{\n          min: \"2020-10-10\"\n        }}\n      />\n    </form>\n    </div>\n  );\n}\n\nexport default App;`.trim();\n\nconst MoveButton = `\nconst MoveButton = (props) => {\n  return (\n      <button onClick={props.onClick}>\n          Click To Move\n      </button>\n  );\n}\n\nconst BoxOne = () => <p>Box1</p>;\n\nconst BoxTwo = () => <p>Box2</p>;\n\n\nclass App extends Component {\nstate = { positions: 0 }\n\nhandleClick = () => {\n  this.setState({ positions: (this.state.positions + 1) % 3 })\n}\n\nrender () { \nconst positions = this.state.positions;\n  return (\n      <div>\n          { positions === 0 ? <MoveButton onClick={this.handleClick}/> : ''}\n          <BoxOne />\n          { positions === 1 ? <MoveButton onClick={this.handleClick}/> : ''}\n          <BoxTwo />\n          { positions === 2 ? <MoveButton onClick={this.handleClick}/> : ''}\n      </div>\n  );\n}\n}\n\nexport default App;`.trim();\n\nconst slideshow = `\nimport \"./slideshow.css\";\n\nconst colors = [\"green\", \"blue\", \"yellow\"];\nconst delay = 2500;\n\nexport default function Slideshow() {\n  const [index, setIndex] = useState(0);\n  const timeoutRef = useRef(null);\n\n  function resetTimeout() {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n  }\n\n  useEffect(() => {\n    resetTimeout();\n    timeoutRef.current = setTimeout(() => setIndex((prevIndex) =>\n          prevIndex === colors.length - 1 ? 0 : prevIndex + 1\n        ), delay);\n\n    return () => {\n      resetTimeout();\n    };\n  }, [index]);\n\n  return (\n    <div className=\"slideshow\">\n      <div\n        className=\"slideshowSlider\"\n        style={{ transform: 'translate3d('$'{-index * 100}%, 0, 0)' }}\n      >\n        {colors.map((backgroundColor, index) => (\n          <div className=\"slide\" key={index} style={{ backgroundColor }}></div>\n        ))}\n      </div>\n\n      <div>\n        {colors.map((_, idx) => (\n          <div\n            className={'slideshowDot'$'{index === idx ? \" active\" : \"\"}'}\n            onClick={() => { setIndex(idx) }} />\n        ))}\n      </div>\n    </div>\n  );\n}`.trim();\n\nconst slideshowCss = `\n.slideshow {\n  margin: 0 auto;\n  overflow: hidden;\n  max-width: 500px;\n}\n\n.slideshowSlider {\n  white-space: nowrap;\n  transition: ease 1000ms;\n}\n\n.slide {\n  display: inline-block;\n\n  height: 400px;\n  width: 100%;\n  border-radius: 40px;\n}\n\n.slideshowDots {\n  text-align: center;\n}\n\n.slideshowDot {\n  display: inline-block;\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  background-color: #c4c4c4;\n}\n\n.slideshowDot.active {\n  background-color: #6a0dad;\n}`.trim();\n\n\nclass TicGame extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1.Share</h3>\n              <b>dist/ReactShareSimplified.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={ReactShareSimplified}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>App.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={ShareApp}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <h3>App.css</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={ShareAppCss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <h3>2.Min-Max date</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={minMaxs}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <h3>3.onClick move button</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={MoveButton}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <h3>4.slideshow</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={slideshow}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>slideshow.css</b>\n              <div style={titles}>\n                <PrismCode\n                  code={slideshowCss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(TicGame));\n"],"sourceRoot":""}