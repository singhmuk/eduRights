(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[68],{140:function(e,n,t){"use strict";t.d(n,"a",(function(){return d}));var a=t(45),s=t(28),r=t(136),l=t(137),o=t(139),i=t(0),m=t.n(i),u=t(138),c=t.n(u),d=(t(59),function(e){function n(e){var t;return Object(a.a)(this,n),(t=Object(r.a)(this,Object(l.a)(n).call(this,e))).highlight=function(){t.ref&&t.ref.current&&c.a.highlightElement(t.ref.current)},t.ref=m.a.createRef(),t}return Object(o.a)(n,e),Object(s.a)(n,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,n=e.code,t=(e.plugins,e.language);return m.a.createElement("pre",{className:"code-prism"},m.a.createElement("code",{ref:this.ref,className:"language-".concat(t)},n.trim()))}}]),n}(m.a.Component))},141:function(e,n,t){},148:function(e,n,t){"use strict";t.d(n,"a",(function(){return u}));var a=t(0),s=t.n(a),r=t(26),l=t(297),o=t(295),i=t(114),m=Object(i.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function u(){var e=m();return s.a.createElement("div",{className:e.root},s.a.createElement(o.a,null,s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/introReact",className:e.line},"Intro-Lazy-Children")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/reactInter",className:e.line},"Intro")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/codingInter",className:e.line},"CodesPro")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/mainCompo",className:e.line},"Event-hoc-form",s.a.createElement("br",null),"curd-slider")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/pureComp",className:e.line},"PureComp-conComp")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/useStates",className:e.line},"useMultiState")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/contextHooks",className:e.line},"Context Hooks")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/customHooks",className:e.line},"CustomHooks-memo")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/useReducersSta",className:e.line},"UseReducers")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/contextMethods",className:e.line},"Curd Hooks")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/jsonPlaceholder",className:e.line},"JsonPlaceholder")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/async_await",className:e.line},"Async-await-sideMenu",s.a.createElement("br",null),"Mouse hover")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/ticGame",className:e.line},"Share-maxMinDate",s.a.createElement("br",null),"moveBtn-slideshow")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/linkGet",className:e.line},"LinkGet")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/numberFormats",className:e.line},"Random NumFor-biToDe",s.a.createElement("br",null)," Validations Step DateTimw")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/models",className:e.line},"Models-chidData-csv",s.a.createElement("br",null),"Icon-router")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/like",className:e.line},"Like-checkbox-radio",s.a.createElement("br",null),"select-scroll")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/textEditors",className:e.line},"TextEditors-paginations",s.a.createElement("br",null),"translator-sortCheck")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/sortItems",className:e.line},"IncOnClick-pushBtn-fizzBuzz",s.a.createElement("br",null),"show-addDocs-ratings")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/serverSideRend",className:e.line},"Jwt-multiSel")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/dropdownSelect",className:e.line},"SelectFtr-checkFtr-updtCrd")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/kanban",className:e.line},"Kanban")),s.a.createElement(l.a,null,s.a.createElement(r.b,{to:"/hackeRank",className:e.line},"HackeRank"))),s.a.createElement("div",null))}},316:function(e,n,t){"use strict";t.r(n);var a=t(45),s=t(28),r=t(136),l=t(137),o=t(139),i=t(0),m=t.n(i),u=t(138),c=t.n(u),d=t(120),p=t(57),h=t(296),b=t(5),E=(t(141),t(148)),g=t(140),f={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},C='\nconst App = () => {\n  const usersData = [\n      { id: 1, name: "AAA", username: "aiueo" },\n      { id: 2, name: "BBB", username: "kakikukeko" },\n      { id: 3, name: "CCC", username: "sasisuseso" }\n    ];\n  const [users, setUsers] = useState(usersData);\n\n  const initialFormState={id:\'\',name:\'\',username:\'\'};\n  const [user,setUser]=useState(initialFormState);\n\n  const handleInputChange=(e)=>{\n      const {name,value}=e.target;\n      setUser({...user,[name]:value})        \n  };\n\n  const addUser = user => {\n      user.id = users.length + 1;\n      setUsers([...users, user]);\n    };\n\n  return(\n      <div>\n      <form \n       onSubmit={e=>{\n          e.preventDefault();\n          addUser(user);\n          setUser(initialFormState);\n       }}>\n          <label>Name</label>\n              <input type="text" name="name" value={user.name} onChange={handleInputChange} />\n              <label>Username</label>\n              <input type="text" name="username" value={user.username} onChange={handleInputChange} />\n              <button>Add new user</button>\n       </form>\n       {users.map(items=>(\n          <li>{items.name}-{items.username}</li>\n       ))}\n       </div> \n  )\n}\n\nexport default App;\n'.trim(),v="const url = 'https://jsonplaceholder.typicode.com/posts';\n\nclass App extends Component{\n    state = {\n      posts: []\n    };\n\n   async componentDidMount(){\n      const { data: posts } = await axios.get(url)\n      this.setState({posts})\n    }\n\n    handleAdd = async () => {\n      const obj = {title:'title', body: 'body'}\n      const {data: post} = await axios.post(url, obj)\n      const posts = [post, ...this.state.posts]\n      this.setState({posts})\n    }\n\n    handleUpdate = async post => {\n      post.title = \"update\"\n      await axios.put('$'{ url }/'$'{post.id}', post)\n\nconst posts = [...this.state.posts]\nconst index = posts.indexOf(post)\nposts[index] = { ...post }\nthis.setState({ posts })\n    }\n\nhandleDelete = async post => {\n  await axios.delete('$'{url}/'$'{post.id}')\n\n  const posts = this.state.posts.filter(p => p.id !== post.id)\n  this.setState({ posts })\n}\n\nrender(){\n  return (\n    <div>\n      <button onClick={this.handleAdd}>Add</button>\n      <ul>\n        <li>Title</li>\n        <li>Update</li>\n        <li>Delete</li>\n      </ul>\n      {this.state.posts.map(post => (\n        <li>\n          {post.title}\n          <button onClick={() => this.handleUpdate(post)}>Update</button>\n          <button onClick={() => this.handleDelete(post)}>Delete</button>\n        </li>\n      ))}\n    </div>\n  )\n}\n}".trim(),U="\n//components/myContext.js\nimport React from 'react';\n\nconst MyContext = React.createContext();\n\nexport default MyContext;\n\n\n//components/compA.js\nimport Comp2 from './compB';\n\nconst Comp = () => {\n  return(\n    <div>\n      <Comp2 />\n    </div>\n  )\n}\n\nexport default Comp;\n\n\n//components/compB.js\nimport MyContext from './myContext';\n\nconst Comp2 = () => {\n    return(\n    <MyContext.Consumer>\n      {(data)=>(\n        <li>{data.name}</li>\n      )}\n    </MyContext.Consumer>\n    )\n  }\n\nexport default Comp2;\n\n\n//App.js\nimport React, { useState } from 'react';\nimport MyContext from './components/myContext';\nimport CompA from './components/compA';\n\nconst App = () => {\n  const [ name ] = useState('Mukesh')\n  \n    return(\n      <div>\n        <MyContext.Provider\n          value={{name:name}}>\n          <CompA />\n        </MyContext.Provider>\n      </div>\n    )\n  }\n\nexport default App;\n".trim(),k='\n//forms/AddUserForm.js\nconst AddUserForm = props => {\n  const initialFormState = { id: null, name: "", username: "" };\n  const [user, setUser] = useState(initialFormState);\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setUser({ ...user, [name]: value });\n  };\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        if (!user.name || !user.username) return;\n        props.addUser(user);\n        setUser(initialFormState);\n      }}\n    >\n      <label>Name</label>\n      <input type="text" name="name" value={user.name} onChange={handleInputChange} />\n      <label>Username</label>\n      <input type="text" name="username" value={user.username} onChange={handleInputChange} />\n      <button>Add new user</button>\n    </form>\n  );\n};\n\n\n//forms/EditUserForm.js\nconst EditUserForm = props => {\n  const [user, setUser] = useState(props.currentUser);\n\n  useEffect(() => { setUser(props.currentUser) },\n    [props]\n  );\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setUser({ ...user, [name]: value });\n  };\n\n  return (\n    <form onSubmit={e => { e.preventDefault(); props.updateUser(user.id, user) }} >\n      <label>Name</label>\n      <input type="text" name="name" value={user.name} onChange={handleInputChange} />\n      <label>Username</label>\n      <input type="text" name="username" value={user.username} onChange={handleInputChange} />\n      <button>Update user</button>\n      <button onClick={() => props.setEditing(false)}>Cancel</button>\n    </form>\n  );\n};\n\n\n//tables/UserTable.js\nconst UserTable = props => (\n  <table>\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Username</th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      {props.users.length > 0 ? (\n        props.users.map(user => (\n          <tr key={user.id}>\n            <td>{user.name}</td>\n            <td>{user.username}</td>\n            <td>\n              <button onClick={() => props.editRow(user)}>Edit</button>\n              <button onClick={() => props.deleteUser(user.id)}>Delete</button>\n            </td>\n          </tr>\n        ))\n      ) : (\n        <tr>\n          <td colSpan={3}>No users</td>\n        </tr>\n      )}\n    </tbody>\n  </table>\n);\n\n\n//App.js\nimport UserTable from "./tables/UserTable";\nimport AddUserForm from "./forms/AddUserForm";\nimport EditUserForm from "./forms/EditUserForm";\n\nconst App = () => {\n  const usersData = [\n    { id: 1, name: "AAA", username: "aiueo" },\n    { id: 2, name: "BBB", username: "kakikukeko" },\n    { id: 3, name: "CCC", username: "sasisuseso" }\n  ];\n\n  const [users, setUsers] = useState(usersData);\n\n  const addUser = user => {\n    user.id = users.length + 1;\n    setUsers([...users, user]);\n  };\n\n  const deleteUser = id => {\n    setUsers(users.filter(user => user.id !== id));\n  };\n\n  const [editing, setEditing] = useState(false);\n  const initialFormState = { id: null, name: "", username: "" };\n  const [currentUser, setCurrentUser] = useState(initialFormState);\n\n  const editRow = user => {\n    setEditing(true);\n    setCurrentUser({ id: user.id, name: user.name, username: user.username });\n  };\n\n  const updateUser = (id, updateUser) => {\n    setEditing(false);\n    setUsers(users.map(user => (user.id === id ? updateUser : user)));\n  };\n\n  return (\n    <div className="container">\n      <h1>CRUD App with Hooks</h1>\n      <div className="flex-row">\n        <div className="flex-large">\n          {editing ? (\n            <div>\n              <h2>Eidt User</h2>\n              <EditUserForm\n                editing={editing}\n                setEditing={setEditing}\n                currentUser={currentUser}\n                updateUser={updateUser}\n              />\n            </div>\n          ) : (\n            <div>\n              <h2>Add User</h2>\n              <AddUserForm addUser={addUser} />\n            </div>\n          )}\n        </div>\n        <div className="flex-large">\n          <h2>View users</h2>\n          <UserTable users={users} deleteUser={deleteUser} editRow={editRow} />\n        </div>\n      </div>\n    </div>\n  );\n};'.trim(),x='\nclass App extends Component {\n  state = {\n    mockData: [],\n    text: "",\n    id: Math.random(1,100),\n    editItem: false\n  };\n  \n  handleChange = e => {\n    this.setState({text: e.target.value});\n  };\n  \n  handleAdd = e => {\n    e.preventDefault();\n    if (this.state.text.length === 0) return;\n\n    const newItem = {\n      id: this.state.id,\n      title: this.state.text\n    };\n    \n    const updatedItems = [...this.state.mockData].concat(newItem);\n\n    this.setState({\n      mockData: updatedItems,\n      text: "",\n      id: Math.random(1,100),\n      editItem: false\n    });\n  };\n  \n  clearList = () => {\n    this.setState({ mockData: [] });\n    };\n    \n  handleDelete = (id) => {\n      this.setState({ mockData: this.state.mockData.filter(item => item.id !== id) });\n    };\n    \n  handleEdit = id => {\n    const filteredItems = this.state.mockData.filter(item => item.id !== id);\n    const selectedItem = this.state.mockData.find(item => item.id === id);\n\n    this.setState({\n      mockData: filteredItems,\n      text: selectedItem.title,\n      editItem: true,\n      id: id\n    });\n  };\n  \n  render() {\n    return (\n      <div>\n         <form onSubmit={this.handleAdd}>\n          <div>\n            <input type="text" value={this.state.text} onChange={this.handleChange} />\n          </div>\n          <button>{this.state.editItem ? "edit item" : "add item"}</button>\n        </form>\n            \n        <ul>\n        {this.state.mockData.map(item => {\n          return (\n            <div>\n              <h1>{item.title}</h1>\n            \n              <button onClick={() => this.handleEdit(item.id)}>edit</button>\n              <button onClick={() => this.handleDelete(item.id)}>delete</button>\n            </div>\n          );\n        })}\n\n        <button onClick={this.clearList}>clear list</button>\n        </ul>\n      </div>\n    );\n  }\n}'.trim(),y=function(e){function n(){return Object(a.a)(this,n),Object(r.a)(this,Object(l.a)(n).apply(this,arguments))}return Object(o.a)(n,e),Object(s.a)(n,[{key:"componentDidMount",value:function(){setTimeout((function(){return c.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return m.a.createElement(d.a,{container:!0},m.a.createElement(d.a,{item:!0,xs:2},m.a.createElement(p.a,{className:e.paper},m.a.createElement("h4",null,m.a.createElement(E.a,null)))),m.a.createElement(d.a,{item:!0,xs:10},m.a.createElement(p.a,{className:e.paper},m.a.createElement(h.a,null,m.a.createElement("h3",null,"1. Input"),m.a.createElement("div",{style:f},m.a.createElement(g.a,{code:C,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"2. Curd"),m.a.createElement("div",{style:f},m.a.createElement(g.a,{code:v,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"3. ReactCurd JsonPlaceholder"),m.a.createElement("div",{style:f},m.a.createElement(g.a,{code:k,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"4. Curd"),m.a.createElement("div",{style:f},m.a.createElement(g.a,{code:x,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"5. Context API State"),m.a.createElement("div",{style:f},m.a.createElement(g.a,{code:U,language:"js",plugins:["line-numbers"]}))))))}}]),n}(i.Component);n.default=Object(b.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(y)}}]);
//# sourceMappingURL=68.52113c00.chunk.js.map