{"version":3,"sources":["components/ReactJs/prismCode.js","components/algorithams/sidebar.js","assets/stcks.png","components/algorithams/deepAlgorithams/arrayStrAlgo.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","module","exports","titles","backgroundColor","padding","fontSize","combine","maxProfit","maxProduct","longestCommonPrefix","DSLogic6","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/33.65cffe57.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/introAlgo' className={classes.line}>Deadlock</Link></MenuItem>\n        <MenuItem><Link to='/Stack' className={classes.line}>Stack</Link></MenuItem>\n        <MenuItem><Link to='/Queue' className={classes.line}>Queue</Link></MenuItem>\n        <MenuItem><Link to='/linkedList' className={classes.line}>LinkedList</Link></MenuItem>\n        <MenuItem><Link to='/heap' className={classes.line}>Heap</Link></MenuItem>\n        <MenuItem><Link to='/trees' className={classes.line}>Tree</Link></MenuItem>\n        <MenuItem><Link to='/graph' className={classes.line}>Graph</Link></MenuItem>\n        <MenuItem><Link to='/sort' className={classes.line}>QuickSort</Link></MenuItem>\n        <MenuItem><Link to='/searchAlgo' className={classes.line}>Search</Link></MenuItem>\n        <MenuItem><Link to='/topTech' className={classes.line}>TopTech</Link></MenuItem>\n        <MenuItem><Link to='/stringAlgo' className={classes.line}>String</Link></MenuItem>\n        <MenuItem><Link to='/arrayAlgo' className={classes.line}>Array</Link></MenuItem>\n        <MenuItem><Link to='/nestingArrAlgo' className={classes.line}>Nesting Array</Link></MenuItem>\n        <MenuItem><Link to='/numbersAlgo' className={classes.line}>Numbers</Link></MenuItem>\n        <MenuItem><Link to='/gameAlgo' className={classes.line}>Game</Link></MenuItem>\n        <MenuItem><Link to='/arrayStrAlgo' className={classes.line}>ArrayStr</Link></MenuItem>\n        <MenuItem><Link to='/arrayNumAlgo' className={classes.line}>ArrayNum</Link></MenuItem>\n        <MenuItem><Link to='/dslogic8' className={classes.line}>Logic8</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","module.exports = __webpack_public_path__ + \"static/media/stcks.7efa3b78.png\";","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\nimport Stcksval from '../../../assets/stcks.png';\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst redesign = {\n  height: 200,\n  width: 500\n}\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst combine = `\nfunction combine(n, k) {\n  const result = [];\n  \n  function aux(index = 1, current = []){\n    if (current.length === k) {\n      result.push(current);\n      return;\n    }\n    if (index > n) return;\n\n    aux(index + 1, [...current, index]);\n    aux(index + 1, current);\n  }\n  aux();\n  return result;\n}\n\nconsole.log(combine(4,2))\n`.trim();\n\nconst maxProfit = `\nfunction maxProfit(prices) {\n  let max = 0;\n  let minPrice = Infinity;\n\n  for (const price of prices) {\n    minPrice = Math.min(price, minPrice);\n    max = Math.max(max, price - minPrice);\n  }\n  return max;\n}\n\nconsole.log(maxProfit([7,1,5,3,6,4]))\n`.trim();\n\nconst maxProduct = `\nfunction maxProduct(nums = []){\n  if (nums.length === 0) return 0;\n\n  let prevMax = nums[0];\n  let prevMin = nums[0];\n  let max = nums[0];\n\n  for (let i = 1; i < nums.length; i++) {\n    const currentMax = Math.max(nums[i], prevMax * nums[i], prevMin * nums[i]);\n    const currentMin = Math.min(nums[i], prevMax * nums[i], prevMin * nums[i]);\n    prevMax = currentMax;\n    prevMin = currentMin;\n\n    if (prevMax > max) {\n      max = prevMax;\n    }\n  }\n  return max;\n}\n\nconsole.log(maxProduct([2,3,-2,4]))\n`.trim();\n\nconst longestCommonPrefix = `\nfunction longestCommonPrefix(strs = []){\n  let prefix = '';\n\n  let minLength = strs.reduce((acc, str) => (acc < str.length ? acc : str.length), Infinity);\n  minLength = minLength === Infinity ? 0 : minLength;\n\n  for (let i = 0; i < minLength; i++) {\n    const current = strs[0][i];\n    const isSame = strs.every(str => str[i] === current);\n\n    if (isSame) {\n      prefix += current;\n    } else {\n      return prefix;\n    }\n  }\n  return prefix;\n}\n\nconsole.log(longestCommonPrefix([\"flower\",\"flow\",\"flight\"]))\n`.trim();\n\nclass DSLogic6 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. Combinations</h3>\n              Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.\n              <br/>\n              You may return the answer in any order.<br/><br/>\n              <b>Example 1: </b>\n\n              <b>Input: </b>n = 4, k = 2<br/>\n              <b>Output: </b>\n              [<br/>\n                [2,4],<br/>\n                [3,4],<br/>\n                [2,3],<br/>\n                [1,2],<br/>\n                [1,3],<br/>\n                [1,4],<br/>\n              ]<br/><br/>\n              <b>Example 2: </b>\n\n              <b>Input: </b>n = 1, k = 1<br/>\n              <b>Output: </b>[[1]]\n              <div style={titles}>\n                <PrismCode\n                  code={combine}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br/>\n\n              <h3>2. Best Time to Buy and Sell Stock.</h3>\n              Say you have an array for which the ith element is the price of a given stock on day i.\n              <br/>\n              If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.\n              <br/>\n              Note that you cannot sell a stock before you buy one.<br/><br/>\n              <b>nput: </b>I[7,1,5,3,6,4]<br/>\n              <b>Output: </b>I5<br/>\n              <b>Explanation: </b>IBuy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.<br/>\n             Not 7-1 = 6, as selling price needs to be larger than buying price.\n              <div style={titles}>\n                <PrismCode\n                  code={maxProfit}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br/>\n\n              <h3>3. Maximum Product Subarray.</h3>\n              Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.\n              <br/>\n              <b>Input: </b>[2,3,-2,4]<br/>\n              <b>Output: </b>6\n              <div style={titles}>\n                <PrismCode\n                  code={maxProduct}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br/>\n\n              <h3>4. Longest Common Prefix</h3>\n              Write a function to find the longest common prefix string amongst an array of strings.\n              <br/>\n              If there is no common prefix, return an empty string \"\".\n              <br/><br/>\n              <b>Example 1: </b>\n\n              <b>Input: </b>[\"flower\",\"flow\",\"flight\"]<br/>\n              <b>Output: </b>\"fl\"<br/><br/>\n              <b>Example 2: </b>\n\n              <b>Input: </b>[\"dog\",\"racecar\",\"car\"]<br/>\n              <b>Output: </b>\"\"<br/>\n              <b>Explanation: </b>There is no common prefix among the input strings.<br/><br/>\n              <b>N: </b>All given inputs are in lowercase letters a-z.\n              <div style={titles}>\n                <PrismCode\n                  code={longestCommonPrefix}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br/>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(DSLogic6));\n"],"sourceRoot":""}