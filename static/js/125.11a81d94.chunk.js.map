{"version":3,"sources":["components/ReactJs/prismCode.js","components/angularjsd/sidebar.js","components/angularjsd/angular 12/rxjs.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","purejs","throttleTime","fixrxjs","filteringrxjs","debounceTime","scan","pluck","mergeMap","switchMaps","BehaviorSubject","map","filter","switchMap","concatMap","observableVsPromises","observableV","rxjxLibrary","observableFun","observableAJAX","observableCount","observableEvt","placeholders","Rxjs","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"mPAIqBA,G,kBACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAYRC,UAAY,WACN,EAAKC,KAAO,EAAKA,IAAIC,SACvBC,IAAMC,iBAAiB,EAAKH,IAAIC,UAblC,EAAKD,IAAMI,IAAMC,YAFA,E,iFAMjBC,KAAKP,c,2CAILO,KAAKP,c,+BASG,IAAD,EAC6BO,KAAKR,MAAjCS,EADD,EACCA,KAAeC,GADhB,EACOC,QADP,EACgBD,UACvB,OACE,yBAAKE,UAAU,cACb,0BAAMV,IAAKM,KAAKN,IAAKU,UAAS,mBAAcF,IACzCD,EAAKI,a,GAzBuBP,IAAMQ,a,uDCJ7C,yFAMMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,MAAO,CACLC,YAAaJ,EAAMK,QAAQ,IAE7BC,KAAM,CACJC,eAAgB,YAIL,SAASC,IACtB,IAAMC,EAAUX,IAEhB,OACE,yBAAKH,UAAWc,EAAQR,MACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMS,GAAG,aAAaf,UAAWc,EAAQH,MAAzC,gBACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,YAAYf,UAAWc,EAAQH,MAAxC,aACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,WAAWf,UAAWc,EAAQH,MAAvC,aACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,SAASf,UAAWc,EAAQH,MAArC,UACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,UAAUf,UAAWc,EAAQH,MAAtC,WACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,cAAcf,UAAWc,EAAQH,MAA1C,eACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,qBAAqBf,UAAWc,EAAQH,MAAjD,cACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,kBAAkBf,UAAWc,EAAQH,MAA9C,WACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,YAAYf,UAAWc,EAAQH,MAAxC,aACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,eAAef,UAAWc,EAAQH,MAA3C,gBAEV,yCACA,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,kBAAkBf,UAAWc,EAAQH,MAA9C,UACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,SAASf,UAAWc,EAAQH,MAArC,eACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,eAAef,UAAWc,EAAQH,MAA3C,iBACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,YAAYf,UAAWc,EAAQH,MAAxC,aACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,SAASf,UAAWc,EAAQH,MAArC,UACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,SAASf,UAAWc,EAAQH,MAArC,UACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,cAAcf,UAAWc,EAAQH,MAA1C,WACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,gBAAgBf,UAAWc,EAAQH,MAA5C,cACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,mBAAmBf,UAAWc,EAAQH,MAA/C,qBACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,cAAcf,UAAWc,EAAQH,MAA1C,oBACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,gBAAgBf,UAAWc,EAAQH,MAA5C,iBACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,mBAAmBf,UAAWc,EAAQH,MAA/C,oBACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,QAAQf,UAAWc,EAAQH,MAApC,SACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,YAAYf,UAAWc,EAAQH,MAAxC,SACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,eAAef,UAAWc,EAAQH,MAA3C,gBAEV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,cAAcf,UAAWc,EAAQH,MAA1C,6BAA0E,6BAA1E,6BACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,eAAef,UAAWc,EAAQH,MAA3C,SACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,eAAef,UAAWc,EAAQH,MAA3C,wBAAsE,6BAAtE,uBACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,eAAef,UAAWc,EAAQH,MAA3C,iBAA+D,6BAA/D,wBACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,cAAcf,UAAWc,EAAQH,MAA1C,wBACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,cAAcf,UAAWc,EAAQH,MAA1C,aACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,iBAAiBf,UAAWc,EAAQH,MAA7C,sBACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,QAAQf,UAAWc,EAAQH,MAApC,SACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,YAAYf,UAAWc,EAAQH,MAAxC,aACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,UAAUf,UAAWc,EAAQH,MAAtC,WACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,eAAef,UAAWc,EAAQH,MAA3C,iBAEZ,iC,qLCvDAK,EAAS,CAAEC,gBAAiB,UAAWC,QAAS,MAAOC,SAAU,QAejEC,EAAS,ocAsBbnB,OAwCIoB,GAtCc,OAElBpB,OAEY,yqBAgCZA,OAEmB,oPAWnBA,QAEIqB,EAAU,maAwBdrB,OAEIsB,EAAgB,uSAepBtB,OAEIuB,EAAe,yuBAqCnBvB,OAEIwB,EAAO,6bAyBXxB,OAEIyB,EAAQ,qgBAyBZzB,OAEI0B,EAAW,wqBA0Bf1B,OAEI2B,EAAa,iQAajB3B,OAEI4B,EAAkB,ikBAsBtB5B,OAEI6B,EAAM,+qBA8BR7B,OAEE8B,EAAS,+NAWb9B,OAEI+B,EAAY,0hBAwBb/B,OAECgC,EAAY,qcAeiChC,OAE7CiC,EAAuB,0cA4BzBjC,OAEEkC,EAAc,wYAuBVlC,OAEJmC,EAAc,sGACiCnC,OAE/CoC,EAAgB,8QAMjBpC,OAECqC,EAAiB,8NAI2CrC,OAE5DsC,EAAkB,yMAIkBtC,OAEpCuC,EAAgB,qSAMfvC,OAEDwC,EAAe,6/BA+CnBxC,OAGIyC,E,4LAEFC,YAAW,kBAAMnD,IAAMoD,iBAAgB,K,+BAE/B,IACA9B,EAAYlB,KAAKR,MAAjB0B,QACR,OACE,kBAAC,IAAD,CAAM+B,WAAS,GACb,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,CAAO/C,UAAWc,EAAQN,OACxB,4BAAI,kBAAC,IAAD,SAGR,kBAAC,IAAD,CAAMsC,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CAAO/C,UAAWc,EAAQN,OACxB,kBAAC,IAAD,KACE,qFACA,yBAAKwC,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAMuB,EACNtB,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,2EACA,yBAAKiD,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAMwB,EACNvB,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,4DACA,yBAAKiD,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAMyB,EACNxB,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,iDACA,yBAAKiD,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAM0B,EACNzB,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,oEACA,yBAAKiD,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAM2B,EACN1B,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,kDACA,yBAAKiD,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAM4B,EACN3B,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,uCACA,yBAAKiD,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAM6B,EACN5B,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,0CACA,yBAAKiD,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAM8B,EACN7B,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,2CACA,yBAAKiD,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAM+B,EACN9B,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,+CACA,yBAAKiD,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAMgC,EACN/B,SAAS,KACTC,QAAS,CAAC,mBAId,yDApGF,gPAsGE,yBAAKiD,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAMuC,EACNtC,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,+EA/GF,oGAiHE,4BACE,8FACA,wEACA,iEACA,iDACA,2DAEF,6BAEA,sEA1HF,2IA4HE,6BACA,qEACA,yBAAKiD,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAMwC,EACNvC,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,mFACA,yBAAKiD,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAMyC,EACNxC,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,qEACA,yBAAKiD,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAM0C,EACNzC,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,oEACA,yBAAKiD,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAM2C,EACN1C,SAAS,KACTC,QAAS,CAAC,mBAId,mCACA,4BACE,4DACA,6GAEF,yBAAKiD,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAMiC,EACNhC,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,sCAlLF,6IAoLE,yBAAKiD,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAMkC,EACNjC,SAAS,KACTC,QAAS,CAAC,kBAEZ,6BAEA,yCARF,ySAUE,yBAAKiD,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAMmC,EACNlC,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,yCAEA,yBAAKiD,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAMoC,EACNnC,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,mDAEA,yBAAKiD,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAMqC,EACNpC,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,4DACA,yBAAKiD,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAMsC,EACNrC,SAAS,KACTC,QAAS,CAAC,oBAIhB,6BAEA,4CACA,yBAAKiD,MAAOhC,GACV,kBAAC,IAAD,CACEnB,KAAM4C,EACN3C,SAAS,KACTC,QAAS,CAAC,2B,GA5PTG,aAuQH+C,uBA1wBD,SAAA5C,GAAK,MAAK,CACvBG,MAAO,CACL0C,OAAQ7C,EAAMK,QAAQ,GACtBQ,QAASb,EAAMK,QAAQ,IAEzByC,SAAU,CACRD,OAAQ7C,EAAMK,QAAQ,IAExB0C,UAAW,CACTC,UAAW,aAiwBCJ,CAAmBP","file":"static/js/125.11a81d94.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/apiLogic3' className={classes.line}>new updated</Link></MenuItem>\n        <MenuItem><Link to='/ngRepeat' className={classes.line}>NgRepeat</Link></MenuItem>\n        <MenuItem><Link to='/ngModel' className={classes.line}>ng-model</Link></MenuItem>\n        <MenuItem><Link to='/scope' className={classes.line}>Scope</Link></MenuItem>\n        <MenuItem><Link to='/filter' className={classes.line}>Events</Link></MenuItem>\n        <MenuItem><Link to='/directives' className={classes.line}>Directives</Link></MenuItem>\n        <MenuItem><Link to='/angularConditions' className={classes.line}>Condition</Link></MenuItem>\n        <MenuItem><Link to='/angularlFlters' className={classes.line}>Fiters</Link></MenuItem>\n        <MenuItem><Link to='/services' className={classes.line}>Services</Link></MenuItem>\n        <MenuItem><Link to='/validations' className={classes.line}>Validations</Link></MenuItem>\n\n        <p>Angular 12</p>\n        <MenuItem><Link to='/introAngularjs' className={classes.line}>Intro</Link></MenuItem>\n        <MenuItem><Link to='/flows' className={classes.line}>Interviews</Link></MenuItem>\n        <MenuItem><Link to='/angularDir2' className={classes.line}>Architecture</Link></MenuItem>\n        <MenuItem><Link to='/metedata' className={classes.line}>MetaData</Link></MenuItem>\n        <MenuItem><Link to='/ngFor' className={classes.line}>NgFor</Link></MenuItem>\n        <MenuItem><Link to='/pipes' className={classes.line}>Pipes</Link></MenuItem>\n        <MenuItem><Link to='/anguRoutes' className={classes.line}>Routes</Link></MenuItem>\n        <MenuItem><Link to='/lifeCycleAng' className={classes.line}>LifeCycle</Link></MenuItem>\n        <MenuItem><Link to='/angularSelector' className={classes.line}>Change Detection</Link></MenuItem>\n        <MenuItem><Link to='/angularDir' className={classes.line}>Custom Elements</Link></MenuItem>\n        <MenuItem><Link to='/viewProvider' className={classes.line}>ViewProvider</Link></MenuItem>\n        <MenuItem><Link to='/dynamicallyLoad' className={classes.line}>DynamicallyLoad</Link></MenuItem>\n        <MenuItem><Link to='/rxjs' className={classes.line}>Rxjs</Link></MenuItem>\n        <MenuItem><Link to='/ngrxCurd' className={classes.line}>Ngrx</Link></MenuItem>\n        <MenuItem><Link to='/ngrxCounter' className={classes.line}>NgrxCounter</Link></MenuItem>\n\n        <MenuItem><Link to='/projection' className={classes.line}>Pro-Input-Output-Iterates-<br />IncrDecr-Toggle-keyIn-If</Link></MenuItem>\n        <MenuItem><Link to='/angularCurd' className={classes.line}>Curd</Link></MenuItem>\n        <MenuItem><Link to='/filterPlace' className={classes.line}>FilterPlace-get-live-<br />Agree-NoName-Excel</Link></MenuItem>\n        <MenuItem><Link to='/radioButton' className={classes.line}>Radio-s/h-add-<br />version-Launch-Font</Link></MenuItem>\n        <MenuItem><Link to='/multiCheck' className={classes.line}>MultiSel-MultiCheck</Link></MenuItem>\n        <MenuItem><Link to='/services12' className={classes.line}>Services</Link></MenuItem>\n        <MenuItem><Link to='/dropdownsAngu' className={classes.line}>pick-ddSelectData</Link></MenuItem>\n        <MenuItem><Link to='/vote' className={classes.line}>Vote</Link></MenuItem>\n        <MenuItem><Link to='/debounce' className={classes.line}>Debounce</Link></MenuItem>\n        <MenuItem><Link to='/loader' className={classes.line}>Loader</Link></MenuItem>\n        <MenuItem><Link to='/paginations' className={classes.line}>Paginations</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst purejs = `\n//html\n<html>\n  <script src=\"https://unpkg.com/@reactivex/rxjs@5.3.0/dist/global/Rx.js\"></script>\n  <body>\n    <button>Click me</button>\n    <script src=\"app.js\"></script>\n  </body>\n</html>\n\n\n//js\ndocument.addEventListener('click', (event) => console.log(event));\n\n\n//2\nvar button = document.querySelector('button');\n\nRx.Observable.fromEvent(button, 'click')\n  .subscribe(\n    (value) => console.log(value.clientX)\n  );\n`.trim();\n\nconst observables = `\n\n`.trim();\n\nconst execs = `\nvar button = document.querySelector('button');\n\nvar observer = {\n  next: function (value) {\n    console.log(value);\n  },\n  error: function (error) {\n    console.log(error);\n  },\n  complete: function () {\n    console.log('Completed');\n  }\n};\n\n//Rx.Observable.fromEvent(button, 'click')\nvar subscription = Rx.Observable.create(function (obs) {\n  //obs.next('A value');\n  //obs.error('Error');\n  //setTimeout(function() {\n  //\tobs.complete();\n  //  obs.next('A second value');\n  //}, 2000);\n  button.onclick = function (event) {\n    obs.next(event);\n  }\n})\n  .subscribe(observer);\n\nsetTimeout(function () {\n  subscription.unsubscribe();\n}, 5000);\n`.trim();\n\nconst throttleTime = `\nvar observable = Rx.Observable.interval(1000);\nvar observer = {\n  next: function (value) {\n    console.log(value);\n  }\n};\n\nobservable.map(function (value) {\n  return 'Number: ' + value;\n}).throttleTime(1900).subscribe(observer);\n`.trim();\n\nconst fixrxjs = `\nvar subject = new Rx.Subject();\n\nsubject.subscribe({\n  next: function (value) {\n    console.log(value);\n  },\n  error: function (error) {\n    console.log(error);\n  },\n  complete: function () {\n    console.log('Complete');\n  }\n});\n\nsubject.subscribe({\n  next: function (value) {\n    console.log(value);\n  }\n});\n\nsubject.next('A new data piece');\nsubject.complete();\nsubject.next('New value');\n`.trim();\n\nconst filteringrxjs = `\nvar observable = Rx.Observable.interval(1000);\n\nobservable\n  .filter(function (value) {\n    return value % 2 == 0;\n  })\n  .subscribe({\n    next: function (value) {\n      console.log(value);\n    },\n    error: function (error) {\n      console.log('Error: ', error);\n    }\n  });\n`.trim();\n\nconst debounceTime = `\n//html\n<html>\n  <script src=\"https://unpkg.com/@reactivex/rxjs@5.3.0/dist/global/Rx.js\"></script>\n  <body>\n    <input type=\"text\">\n      <script src=\"app.js\"></script>\n  </body>\n</html>\n\n\n//js\nvar input = document.querySelector('input');\nvar observable = Rx.Observable.fromEvent(input, 'input');\n\nobservable\n  .subscribe({\n    next: function (event) {\n      console.log(event.target.value);\n    }\n  });\n  \n  \n  \n//2\nvar input = document.querySelector('input');\nvar observable = Rx.Observable.fromEvent(input, 'input');\n\nobservable\n  .map(event => event.target.value)\n  .debounceTime(500)\n  .distinctUntilChanged()\n  .subscribe({\n    next: function (value) {\n      console.log(value);\n    }\n  });\n`.trim();\n\nconst scan = `\nvar input = document.querySelector('input');\nvar observable = Rx.Observable.of(1, 2, 3, 4, 5);\n\nobservable\n  .subscribe({\n    next: function (value) {\n      console.log(value);\n    }\n  });\n\n\n\n//2\nvar observable = Rx.Observable.of(1, 2, 3, 4, 5);\n\nobservable\n  .scan((total, currentValue) => {\n    return total + currentValue;\n  }, 0)\n  .subscribe({\n    next: function (value) {\n      console.log(value);\n    }\n  });\n`.trim();\n\nconst pluck = `\nvar input = document.querySelector('input');\nvar observable = Rx.Observable.fromEvent(input, 'input');\n\nobservable\n  .subscribe({\n    next: function (event) {\n      console.log(event.target.value);\n    }\n  });\n\n\n//2\nvar input = document.querySelector('input');\nvar observable = Rx.Observable.fromEvent(input, 'input');\n\nobservable\n  .pluck('target', 'value')\n  .debounceTime(500)\n  .distinctUntilChanged()\n  .subscribe({\n    next: function (value) {\n      console.log(value);\n    }\n  });\n`.trim();\n\nconst mergeMap = `\n//html\n<body>\n    <input type=\"text\" id=\"input1\">\n      <input type=\"text\" id=\"input2\">\n        <p>Combined value: <span></span></p>\n        <script src=\"app.js\"></script>\n      </body>\n      \n      \n//js\nvar input1 = document.querySelector('#input1');\nvar input2 = document.querySelector('#input2');\n\nvar span = document.querySelector('span');\n\nvar obs1 = Rx.Observable.fromEvent(input1, 'input');\nvar obs2 = Rx.Observable.fromEvent(input2, 'input');\n\nobs1.mergeMap(\nevent1 => {\nreturn obs2.map(event2 => event1.target.value + ' ' + event2.target.value)\n      }\n    ).subscribe(\n    combinedValue => span.textContent = combinedValue\n  );\n`.trim();\n\nconst switchMaps = `\nvar button = document.querySelector('button');\n\nvar obs1 = Rx.Observable.fromEvent(button, 'click');\nvar obs2 = Rx.Observable.interval(1000);\n\nobs1.switchMap(\n  event => {\n    return obs2\n  }\n).subscribe(\n  (value) => console.log(value)\n);\n`.trim();\n\nconst BehaviorSubject = `\nvar clickEmitted = new Rx.Subject();\nvar button = document.querySelector('button');\nvar div = document.querySelector('div');\n\nbutton.addEventListener('click', () => clickEmitted.next('Clicked!'));\n\nclickEmitted.subscribe(\n  (value) => div.textContent = value\n);\n\n\n//2\nvar clickEmitted = new Rx.BehaviorSubject('Not clicked');\nvar button = document.querySelector('button');\nvar div = document.querySelector('div');\n\nbutton.addEventListener('click', () => clickEmitted.next('Clicked!'));\n\nclickEmitted.subscribe(\n  (value) => div.textContent = value\n);\n`.trim();\n\nconst map = `\nimport {Observable, interval} from 'rxjs';\nimport {map} from \"rxjs/operators\";\n\ninterval(1000).pipe(map(data => data * 2))\n              .subscribe((data:number) => {\n                console.log(data)\n              });\n\n\n\n//map\nimport {Observable, interval, Subscriber, pipe} from 'rxjs';\nimport {map} from \"rxjs/operators\";\n\nfunction fetchUser(){\n  const newObservable = new Observable((observer:Subscriber<unknown>) => {\n    const user={\n      data:{firstName: 'Sam', mob: 2345342290}\n    }\n    observer.next(user)\n  });\n  return newObservable.pipe(map(user)=>{\n    return user.data\n  })\n}\n\n\nfetchUser().Subscriber((user)=>{\n  console.log(user)\n})`.trim();\n\nconst filter = `\nimport {interval} from 'rxjs';\nimport {filter, map} from \"rxjs/operators\";\n\nconst observable = interval(100).pipe(filter(data=>{\n  return data<5\n}));\n\nobservable.subscribe(data => {\n  console.log(data);\n})\n`.trim();\n\nconst switchMap = `\nimport {Observable} from 'rxjs';\nimport {switchMap} from \"rxjs/operators\";\n\nfunction buySugarInBulk(){\n  return new Observable(observer=>{\n    observer.next('Suger Perchased');\n  })\n}\n\nfunction getSuger(quantity){\n  return new Observable((observer)=>{\n    return observer.next('Suger ' +quantity+ 'for you' )\n  })\n}\n\nfunction getSugarFromShop(quantity){\n  return buySugarInBulk().pipe(switchMap(()=>{\n    return getSuger(quantity);\n  }));\n}\n\ngetSugarFromShop('1Kg').subscribe(data=>{\n  console.log(data);\n});`.trim();\n\nconst concatMap = `\nimport {timer} from \"rxjs\";\nimport {concatMap, map} from \"rxjs/operators\";\n\nconst timer$ = timer(100, 500)\n                .pipe(map(data => data + 'timer1'));\n\nconst timer2$ = timer(100, 500)\n                .pipe(map(data => data + 'timer2'));\n\nconst observables = timer$.pipe(concatMap(timer1Data => {\n                 return timer2$.pipe(map(data => data + timer1Data));\n}))\n\n\nobservables.subscribe(data => console.log(data));`.trim();\n\nconst observableVsPromises = `\nfunction isBreadAvailable(){\n  return true;\n}\n\nfunction isAggAvailable(){\n  return false;\n}\n\nfunction bringBread(){\n  return new Promise((res, rej) =>{\n    if(isBreadAvailable()) {\n      res('Bread is Available');\n    }\n    else if(isAggAvailable){\n      res('Agg is Available')\n    }\n    else{\n      rej('Bread is bring')\n    }\n  })\n}\n\nbringBread().then((data)=>{\n  console.log(data);\n})\n.catch(err => {\n  console.log(err)\n})`.trim();\n\nconst observableV = `\nimport {BehaviorSubject, timeout} from 'rxjs';\n\nconst data = ['A', 'B', 'C', 'D', 'E'];\nconst fm = new BehaviorSubject('First Data');\n\nfunction changeSongs(){\n  for(let song of data){\n    fm.next(song);\n  }\n}\n\n\nfm.subscribe((song:string)=>{\n  console.log(song);\n});\n\nchangeSongs();\n\nsetTimeout(()=>{\n  fm.subscribe((song:string)=>{\n  console.log(song);\n});\n},1000);`.trim();\n\nconst rxjxLibrary = `import { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';`.trim();\n\nconst observableFun = `import { from } from 'rxjs'; // from function\nconst data = from(fetch('/api/endpoint')); //Created from Promise\ndata.subscribe({\n next(response) {console.log(response);},\n error(err) {console.error('Error: ' + err);},\n complete() {console.log('Completed');}\n});`.trim();\n\nconst observableAJAX = `\nimport { ajax } from 'rxjs/ajax'; // ajax function\nconst apiData = ajax('/api/data'); // Created from AJAX request\n// Subscribe to create the request\napiData.subscribe(res => console.log(res.status, res.response));`.trim();\n\nconst observableCount = `\nimport { interval } from 'rxjs'; // interval function\nconst secondsCounter = interval(1000); // Created from Counter value\nsecondsCounter.subscribe(n =>\n  console.log('Counter value: '$'{n}'));`.trim();\n\nconst observableEvt = `\nimport { fromEvent } from 'rxjs';\nconst el = document.getElementById('custom-element');\nconst mouseMoves = fromEvent(el, 'mousemove');\nconst subscription = mouseMoves.subscribe((e: MouseEvent) => {\n  console.log('Coordnitaes of mouse pointer: '$'{e.clientX} * '$'{e.clientY}');\n  });`.trim();\n\nconst placeholders = `\n//app.component.ts\nimport {PlaceholderService} from \"./services/placeholder.service\"\n\n@Component({\n  selector: 'app-root',\n  template: '\n  <button (click)=\"getApi()\">GET</button>\n    <div *ngFor=\"let items of data\">\n      <p>{{items.id}} - {{items.title}}</p>\n    </div>\n  ',\n})\n\nexport class AppComponent implements OnInit{\n  data:Array<any>;\n  \n  constructor( private https:PlaceholderService) { \n    this.data=new Array<any>()\n   }\n\n  ngOnInit(): void {}\n  getApi(){\n    this.https.getData().subscribe((data)=>{\n      this.data=data\n    })\n  }\n}\n\n\n//services/placeholder.service.ts\nimport { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlaceholderService {\n\n  constructor(private http:HttpClient) { }\n\n  getData(): Observable<any>{\n    const url=\"https://jsonplaceholder.typicode.com/posts\";\n    return this.http.get<any>(url)\n  }\n}\n`.trim();\n\n\nclass Rxjs extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Rxjs With Pure Js (Reactive Extension for JavaScript)</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={purejs}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>RxJS OPERATORS LIKE map() OR throttleTime()</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={throttleTime}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>RxJS SUBJECT (~EventEmitter)</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={fixrxjs}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>filter() OPERATOR</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={filteringrxjs}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>debounceTime & distinctUntilChanged </h3>\n              <div style={titles}>\n                <PrismCode\n                  code={debounceTime}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>scan() vs reduce()</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={scan}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>pluck()</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={pluck}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>mergeMap()</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={mergeMap}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>switchMap()</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={switchMaps}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>BehaviorSubject</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={BehaviorSubject}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n\n              <h3>What is RxJS With Angular</h3>\n              RxJS is a library for composing asynchronous and callback-based code in a functional, reactive style using Observables. Many APIs such as HttpClient produce and consume RxJS Observables and also uses operators for processing observables.\n              <div style={titles}>\n                <PrismCode\n                  code={rxjxLibrary}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>What are the utility functions provided by RxJS</h3>\n              The RxJS library also provides below utility functions for creating and working with observables.\n              <ul>\n                <li>Converting existing code for async operations into observables</li>\n                <li>Iterating through the values in a stream</li>\n                <li>Mapping values to different types</li>\n                <li>Filtering streams</li>\n                <li>Composing multiple streams</li>\n              </ul>\n              <br />\n\n              <h3>What are observable creation functions</h3>\n              RxJS provides creation functions for the process of creating observables from things such as promises, events, timers and Ajax requests.\n              <br />\n              <b>1. Create an observable from a promise</b>\n              <div style={titles}>\n                <PrismCode\n                  code={observableFun}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <b>2. Create an observable that creates an AJAX request</b>\n              <div style={titles}>\n                <PrismCode\n                  code={observableAJAX}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <b>3. Create an observable from a counter</b>\n              <div style={titles}>\n                <PrismCode\n                  code={observableCount}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <b>4. Create an observable from an event</b>\n              <div style={titles}>\n                <PrismCode\n                  code={observableEvt}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n\n              <h3>Map</h3>\n              <ul>\n                <li>map change observable value.</li>\n                <li>map to transform a collection of items into a collection of different items.</li>\n              </ul>\n              <div style={titles}>\n                <PrismCode\n                  code={map}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Filter</h3>\n              This operator takes values from the source Observable, passes them through a predicate function and only emits those values that get TRUE.\n              <div style={titles}>\n                <PrismCode\n                  code={filter}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n                <br />\n\n                <h3>SwitchMap</h3>\n                switchMap operator is basically a combination of two operators - switchAll and map. The map part lets you map a value from a higher-order source observable to an inner observable stream. When a new value arrives from a source observable, execute a map function that returns an inner observable.\n                <div style={titles}>\n                  <PrismCode\n                    code={switchMap}\n                    language=\"js\"\n                    plugins={[\"line-numbers\"]}\n                  />\n                </div>\n                <br />\n\n                <h3>concatMap</h3>\n\n                <div style={titles}>\n                  <PrismCode\n                    code={concatMap}\n                    language=\"js\"\n                    plugins={[\"line-numbers\"]}\n                  />\n                </div>\n                <br />\n\n                <h3>OservableVsPromises</h3>\n\n                <div style={titles}>\n                  <PrismCode\n                    code={observableVsPromises}\n                    language=\"js\"\n                    plugins={[\"line-numbers\"]}\n                  />\n                </div>\n                <br />\n\n                <h3>BehaviorSubject ObservableV:</h3>\n                <div style={titles}>\n                  <PrismCode\n                    code={observableV}\n                    language=\"js\"\n                    plugins={[\"line-numbers\"]}\n                  />\n                </div>\n              </div>\n              <br />\n\n              <h3>Placeholders</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={placeholders}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Rxjs));\n"],"sourceRoot":""}