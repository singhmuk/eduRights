{"version":3,"sources":["components/ReactJs/prismCode.js","components/angularjsd/sidebar.js","components/angularjsd/angular 12/filterPlace.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","filters","tempCon","liveInput","agreeDis","setname","excell","getData","FilterPlace","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/114.950ea230.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/apiLogic3' className={classes.line}>new updated</Link></MenuItem>\n        <MenuItem><Link to='/ngRepeat' className={classes.line}>NgRepeat</Link></MenuItem>\n        <MenuItem><Link to='/ngModel' className={classes.line}>ng-model</Link></MenuItem>\n        <MenuItem><Link to='/scope' className={classes.line}>Scope</Link></MenuItem>\n        <MenuItem><Link to='/filter' className={classes.line}>Events</Link></MenuItem>\n        <MenuItem><Link to='/directives' className={classes.line}>Directives</Link></MenuItem>\n        <MenuItem><Link to='/angularConditions' className={classes.line}>Condition</Link></MenuItem>\n        <MenuItem><Link to='/angularlFlters' className={classes.line}>Fiters</Link></MenuItem>\n        <MenuItem><Link to='/services' className={classes.line}>Services</Link></MenuItem>\n        <MenuItem><Link to='/validations' className={classes.line}>Validations</Link></MenuItem>\n\n        <p>Angular 12</p>\n        <MenuItem><Link to='/introAngularjs' className={classes.line}>Intro</Link></MenuItem>\n        <MenuItem><Link to='/flows' className={classes.line}>Interviews</Link></MenuItem>\n        <MenuItem><Link to='/angularDir2' className={classes.line}>Architecture</Link></MenuItem>\n        <MenuItem><Link to='/metedata' className={classes.line}>MetaData</Link></MenuItem>\n        <MenuItem><Link to='/ngFor' className={classes.line}>NgFor</Link></MenuItem>\n        <MenuItem><Link to='/pipes' className={classes.line}>Pipes</Link></MenuItem>\n        <MenuItem><Link to='/anguRoutes' className={classes.line}>Routes</Link></MenuItem>\n        <MenuItem><Link to='/lifeCycleAng' className={classes.line}>LifeCycle</Link></MenuItem>\n        <MenuItem><Link to='/angularSelector' className={classes.line}>Change Detection</Link></MenuItem>\n        <MenuItem><Link to='/angularDir' className={classes.line}>Custom Elements</Link></MenuItem>\n        <MenuItem><Link to='/viewProvider' className={classes.line}>ViewProvider</Link></MenuItem>\n        <MenuItem><Link to='/dynamicallyLoad' className={classes.line}>DynamicallyLoad</Link></MenuItem>\n        <MenuItem><Link to='/rxjs' className={classes.line}>Rxjs</Link></MenuItem>\n        <MenuItem><Link to='/ngrxCurd' className={classes.line}>Ngrx</Link></MenuItem>\n        <MenuItem><Link to='/ngrxCounter' className={classes.line}>NgrxCounter</Link></MenuItem>\n\n        <MenuItem><Link to='/projection' className={classes.line}>Pro-Input-Output-Iterates-<br />IncrDecr-Toggle-keyIn-If</Link></MenuItem>\n        <MenuItem><Link to='/angularCurd' className={classes.line}>Curd</Link></MenuItem>\n        <MenuItem><Link to='/filterPlace' className={classes.line}>FilterPlace-get-live-<br />Agree-NoName-Excel</Link></MenuItem>\n        <MenuItem><Link to='/radioButton' className={classes.line}>Radio-s/h-add-<br />version-Launch-Font</Link></MenuItem>\n        <MenuItem><Link to='/multiCheck' className={classes.line}>MultiSel-MultiCheck</Link></MenuItem>\n        <MenuItem><Link to='/services12' className={classes.line}>Services</Link></MenuItem>\n        <MenuItem><Link to='/dropdownsAngu' className={classes.line}>pick-ddSelectData</Link></MenuItem>\n        <MenuItem><Link to='/vote' className={classes.line}>Vote</Link></MenuItem>\n        <MenuItem><Link to='/debounce' className={classes.line}>Debounce</Link></MenuItem>\n        <MenuItem><Link to='/loader' className={classes.line}>Loader</Link></MenuItem>\n        <MenuItem><Link to='/paginations' className={classes.line}>Paginations</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst filters = `\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n//app.component.ts\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'my-app',\n  template: '\n  <input type = \"text\" [(ngModel)] = \"filterBy\" (keyup) = \"getUsers()\">\n    <div *ngFor=\"let user of filtersUser\"> {{user.name}}</div>',  })\n\n\nexport class AppComponent  {\n users: any[];\n filtersUser: any[];\n filterBy;\n\n constructor(private http:HttpClient){}\n\n ngOnInit(){\n   this.http.get('https://jsonplaceholder.typicode.com/users')\n        .subscribe(user=>{\n          this.users=user;\n          this.filtersUser=[...this.users]\n        })\n }\n getUsers(){\n     this.filtersUser = [...this.users.filter(user => {\n       user.name.includes(this.filterBy)})];\n  }\n}\n`.trim();\n\nconst tempCon = `\n@Component({\n  selector: 'app-root',\n  template:'\n  <div>\n  Celsius\n  <input type = \"number\" [(ngModel)] = \"c\" (ngModelChange) = \"onChange($event, 'c')\" />\n    Fahrenheit\n    <input type = \"number\" [(ngModel)] = \"f\" (ngModelChange) = \"onChange($event, 'f')\" />\n</div >\n  '})\n\nexport class AppComponent {\n   c = \"\";\n   f = \"\";\n\n   onChange(value: string | null, type: \"c\" | \"f\") {\n    if (value === null) {\n      this.c = \"\";\n      this.f = \"\";\n      return;\n    }\n\n    const temperature = Number(value);\n    if (type === \"c\") {\n      this.f = ((temperature * 9) / 5 + 32).toFixed(1);\n    } else {\n      this.c = (((temperature - 32) * 5) / 9).toFixed(1);\n    }\n  }\n}`.trim();\n\nconst liveInput = `\n//app.component.ts\n@Component({\n  selector: 'my-app',\n  template: '\n  <input #box (keyup) = 'onKey(box.value)' >\n    {{result}}',\n            })\n\nexport class HomeComponent {\n  values = '';\n  result = '';\n\n  constructor() { }\n\n  onKey(value: string) {\n    this.values=String(value).replace('a','');\n    this.result =(this.values).replace('a','');\n  }\n}\n`.trim();\n\nconst agreeDis = `\n//app.component.ts\n@Component({\n  selector: 'app-root',\n  template: '\n  <h3> Agree: {{agreed}}, Disagree: {{disagreed}}</h3>\n    <app-voters *ngFor=\"let voter of voters\"\n    [name] = \"voter\"\n      (voted) = \"onVoted($event)\" >\n    </app-voters>\n  '\n})\n\nexport class AppComponent {\n  agreed = 0;\n  disagreed = 0;\n  voters = ['Narco', 'Celeritas', 'Bombasto'];\n\n  onVoted(agreed: boolean) {\n    agreed ? this.agreed++ : this.disagreed++;\n  }\n}\n\n\n//voters.component.ts\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-voters',\n  template: '\n  <h4> {{name}}</h4>\n    <button (click) = \"vote(true)\" [disabled] = \"didVote\"> Agree</button >\n      <button (click) = \"vote(false)\" [disabled] = \"didVote\"> Disagree</button >\n  '\n})\nexport class VotersComponent {\n  @Input()  name = '';\n  @Output() voted = new EventEmitter<boolean>();\n  didVote = false;\n\n  vote(agreed: boolean) {\n    this.voted.emit(agreed);\n    this.didVote = true;\n  }\n}\n`.trim();\n\nconst setname = `\n//app.component.ts\n@Component({\n  selector: 'app-root',\n  template: '\n  <p> Master controls {{names.length}} names</p>\n    <app-voters *ngFor=\"let name of names\" [name] = \"name\"></app-voters>\n        '})\n\nexport class AppComponent {\n  names = ['Dr IQ', '   ', '  Bombasto  '];\n}\n\n\n//voters.component.ts\n@Component({\n  selector: 'app-voters',\n  template: '<h4>{{name}}</h4>'\n})\n\nexport class VotersComponent {\n  @Input()\n  get name(): string { return this._name; }\n  set name(name: string) {\n    this._name = (name && name.trim()) || '<no name set>';\n  }\n  private _name = '';\n}\n`.trim();\n\n\nconst excell = `\n//app.component.ts\nimport * as XLSX from 'xlsx';\n\n@Component({\n  selector: 'app-root',\n  template: '<div>\n  <button (click) = \"exportexcel()\" > Export to Excel</button >\n\n    <table id=\"excel-table\">\n      <tr>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Username</th>\n        <th>Email</th>\n      </tr>\n      <tr *ngFor=\"let item of userList\">\n      <td>{{ item.id }}</td>\n      <td>{{ item.name }}</td>\n      <td>{{ item.username }}</td>\n      <td>{{ item.email }}</td>\n                  </tr>\n                </table>\n              </div>',})\n\nexport class AppComponent {\n  fileName= 'ExcelSheet.xlsx';\n  userList = [\n    { \"id\": 1, \"name\": \"Leanne\", \"username\": \"Bret\", \"email\": \"Sincere@april.biz\" },\n    { \"id\": 2,\"name\": \"Ervin\", \"username\": \"Antonette\", \"email\": \"Shanna@melissa.tv\" },\n    { \"id\": 3,\"name\": \"Clement\",\"username\": \"Samantha\",\"email\": \"Nathan@yesenia.net\" },\n    { \"id\": 4,\"name\": \"Patricia\",\"username\": \"Karianne\",\"email\": \"Julianne@kory.org\" },\n    { \"id\": 5,\"name\": \"Chelsey\",\"username\": \"Kamren\",\"email\": \"Lucio@annie.ca\" }\n  ]\n\n  exportexcel(): void {\n       /* table id is passed over here */\n       let element = document.getElementById('excel-table');\n       const ws: XLSX.WorkSheet =XLSX.utils.table_to_sheet(element);\n\n       /* generate workbook and add the worksheet */\n       const wb: XLSX.WorkBook = XLSX.utils.book_new();\n       XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n\n       /* save to file */\n       XLSX.writeFile(wb, this.fileName);\n\n    }\n}\n`.trim();\n\nconst getData = `\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  template: '\n  <div>\n  Enter Name\n<input type=\"text\" [(ngModel)] =\"searchTerm\" (ngModelChange) =\"onChange($event)\" />\n\n   <div *ngIf=\"searchedData\">\n    id: {{searchedData.id}}\n    email: {{searchedData.email}}\n   </div>\n  <div *ngIf=\"searchTerm && !searchedData\">\n      No Results Found\n    </div>\n  </div>\n  '})\n\n  export class AppComponent {\n  constructor(private http:HttpClient){}\n  mockData:any =[];\n\n  ngOnInit(){\n    this.http.get('https://jsonplaceholder.typicode.com/users')\n        .subscribe(val=>{\n          this.mockData=val;\n        })\n  }\n  searchTerm = \"\";\n  searchedData?;\n\n  onChange(value: string | null) {\n    this.searchedData = this.mockData.find(\n      ({name}) => name.toLowerCase() === value.toLowerCase()\n    );\n  }\n}`.trim();\n\n\nclass FilterPlace extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Get-jsonPlaceholder</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={getData}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Filter-jsonPlaceholder</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={filters}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Temperature Converter</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={tempCon}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Live Input</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={liveInput}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <h3>Agree-Disagree</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={agreeDis}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <h3>No Name Set</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={setname}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Export Excel</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={excell}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(FilterPlace));\n"],"sourceRoot":""}