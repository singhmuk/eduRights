(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[127],{140:function(e,n,t){"use strict";t.d(n,"a",(function(){return p}));var a=t(45),o=t(28),i=t(136),s=t(137),r=t(139),l=t(0),c=t.n(l),m=t(138),u=t.n(m),p=(t(59),function(e){function n(e){var t;return Object(a.a)(this,n),(t=Object(i.a)(this,Object(s.a)(n).call(this,e))).highlight=function(){t.ref&&t.ref.current&&u.a.highlightElement(t.ref.current)},t.ref=c.a.createRef(),t}return Object(r.a)(n,e),Object(o.a)(n,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,n=e.code,t=(e.plugins,e.language);return c.a.createElement("pre",{className:"code-prism"},c.a.createElement("code",{ref:this.ref,className:"language-".concat(t)},n.trim()))}}]),n}(c.a.Component))},141:function(e,n,t){},145:function(e,n,t){"use strict";t.d(n,"a",(function(){return m}));var a=t(0),o=t.n(a),i=t(26),s=t(297),r=t(295),l=t(114),c=Object(l.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function m(){var e=c();return o.a.createElement("div",{className:e.root},o.a.createElement(r.a,null,o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/apiLogic3",className:e.line},"new updated")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/ngRepeat",className:e.line},"NgRepeat")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/ngModel",className:e.line},"ng-model")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/scope",className:e.line},"Scope")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/filter",className:e.line},"Events")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/directives",className:e.line},"Directives")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/angularConditions",className:e.line},"Condition")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/angularlFlters",className:e.line},"Fiters")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/services",className:e.line},"Services")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/validations",className:e.line},"Validations")),o.a.createElement("p",null,"Angular 12"),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/introAngularjs",className:e.line},"Intro")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/flows",className:e.line},"Interviews")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/angularDir2",className:e.line},"Architecture")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/metedata",className:e.line},"MetaData")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/ngFor",className:e.line},"NgFor")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/pipes",className:e.line},"Pipes")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/anguRoutes",className:e.line},"Routes")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/lifeCycleAng",className:e.line},"LifeCycle")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/angularSelector",className:e.line},"Change Detection")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/angularDir",className:e.line},"Custom Elements")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/viewProvider",className:e.line},"ViewProvider")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/dynamicallyLoad",className:e.line},"DynamicallyLoad")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/rxjs",className:e.line},"Rxjs")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/ngrxCurd",className:e.line},"Ngrx")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/ngrxCounter",className:e.line},"NgrxCounter")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/projection",className:e.line},"Pro-Input-Output-Iterates-",o.a.createElement("br",null),"IncrDecr-Toggle-keyIn-If")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/angularCurd",className:e.line},"Curd")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/filterPlace",className:e.line},"FilterPlace-get-live-",o.a.createElement("br",null),"Agree-NoName-Excel")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/radioButton",className:e.line},"Radio-s/h-add-",o.a.createElement("br",null),"version-Launch-Font")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/multiCheck",className:e.line},"MultiSel-MultiCheck")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/services12",className:e.line},"Services")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/dropdownsAngu",className:e.line},"pick-ddSelectData")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/vote",className:e.line},"Vote")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/debounce",className:e.line},"Debounce")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/loader",className:e.line},"Loader")),o.a.createElement(s.a,null,o.a.createElement(i.b,{to:"/paginations",className:e.line},"Paginations"))),o.a.createElement("div",null))}},488:function(e,n,t){"use strict";t.r(n);var a=t(45),o=t(28),i=t(136),s=t(137),r=t(139),l=t(0),c=t.n(l),m=t(138),u=t.n(m),p=t(120),d=t(57),h=t(296),v=t(5),E=(t(141),t(145)),b=t(140),g={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},f="\n//voter.component.ts\n@Component({\n  selector: 'app-voter',\n  template: '\n  <h4>{{name}}</h4>\n    <button (click) = \"vote(true)\" [disabled]=\"didVote\">Agree</button>\n    <button (click) = \"vote(false)\" [disabled]=\"didVote\">Disagree</button>\n  '\n})\nexport class VoterComponent {\n  @Input()  name = '';\n  @Output() voted = new EventEmitter<boolean>();\n  didVote = false;\n\n  vote(agreed: boolean) {\n    this.voted.emit(agreed);\n    this.didVote = true;\n  }\n}\n\n\n//votetaker.component.ts\n@Component({\n  selector: 'app-vote-taker',\n  template: '\n    <h2>Should mankind colonize the Universe?</h2>\n    <h3>Agree: {{agreed}}, Disagree: {{disagreed}}</h3>\n    <app-voter * ngFor=\"let voter of voters\" [name] = \"voter\"\n        (voted) = \"onVoted($event)\">\n    </app-voter>\n  '\n})\n\nexport class VoteTakerComponent {\n  agreed = 0;\n  disagreed = 0;\n  voters = ['Narco', 'Celeritas', 'Bombasto'];\n\n  onVoted(agreed: boolean) {\n    agreed ? this.agreed++ : this.disagreed++;\n  }\n}\n\n\n//app.component.ts\n@Component({\n  selector: 'app-root',\n  template: '\n    <a href = \"#child-to-parent\"> Parent listens for child event</a><br/>\n        <div id=\"child-to-parent\">\n          <app-vote-taker></app-vote-taker>\n        </div>\n        '})\n\nexport class AppComponent { }\n".trim(),C="\n//astronaut.component.ts\nimport { Component, Input, OnDestroy } from '@angular/core';\n\nimport { MissionService } from './mission.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-astronaut',\n  template: '\n    <p>\n      {{astronaut}}: <strong>{{mission}}</strong>\n      <button (click) = \"confirm()\" [disabled]=\"!announced || confirmed\">Confirm</button>\n    </p >\n  '\n})\nexport class AstronautComponent implements OnDestroy {\n  @Input() astronaut = '';\n  mission = '<no mission announced>';\n  confirmed = false;\n  announced = false;\n  subscription: Subscription;\n\n  constructor(private missionService: MissionService) {\n    this.subscription = missionService.missionAnnounced$.subscribe(\n      mission => {\n        this.mission = mission;\n        this.announced = true;\n        this.confirmed = false;\n    });\n  }\n\n  confirm() {\n    this.confirmed = true;\n    this.missionService.confirmMission(this.astronaut);\n  }\n\n  ngOnDestroy() {\n    // prevent memory leak when component destroyed\n    this.subscription.unsubscribe();\n  }\n}\n\n\n//countdown-parent.component.ts\nimport { AfterViewInit, ViewChild } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { CountdownTimerComponent } from './countdown-timer.component';\n\n@Component({\n  selector: 'app-countdown-parent-lv',\n  template: '\n  <h3>Countdown to Liftoff (via local variable)</h3>\n    <button (click) = \"timer.start()\">Start</button>\n      <button (click) = \"timer.stop()\">Stop</button>\n    <div class=\"seconds\">{{timer.seconds}}</div>\n    <app-countdown-timer #timer></app-countdown-timer>\n',\n  styleUrls: ['../assets/demo.css']\n})\nexport class CountdownLocalVarParentComponent { }\n\n//// View Child version\n@Component({\n  selector: 'app-countdown-parent-vc',\n  template: '\n  <h3>Countdown to Liftoff(via ViewChild)</h3>\n      <button (click) =\"start()\">Start</button>\n      <button (click) =\"stop()\"> Stop</button>\n  <div class=\"seconds\">{{seconds()}}</div>\n  <app-countdown-timer></app-countdown-timer>\n  ',\n  styleUrls: ['../assets/demo.css']\n})\nexport class CountdownViewChildParentComponent implements AfterViewInit {\n\n  @ViewChild(CountdownTimerComponent)\n  private timerComponent!: CountdownTimerComponent;\n\n  seconds() { return 0; }\n\n  ngAfterViewInit() {\n    setTimeout(() => this.seconds = () => this.timerComponent.seconds, 0);\n  }\n\n  start() { this.timerComponent.start(); }\n  stop() { this.timerComponent.stop(); }\n}\n\n\n//countdown-timer.component.ts\nimport { Component, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-countdown-timer',\n  template: '<p>{{message}}</p>'\n})\nexport class CountdownTimerComponent implements OnDestroy {\n\n  intervalId = 0;\n  message = '';\n  seconds = 11;\n\n  ngOnDestroy() {this.clearTimer();}\n\n  start() {this.countDown();}\n  stop()  {\n    this.clearTimer();\n    this.message = 'Holding at T-'$'{this.seconds} seconds';\n  }\n\n  private clearTimer() {clearInterval(this.intervalId);}\n\n  private countDown() {\n    this.clearTimer();\n    this.intervalId = window.setInterval(() => {\n      this.seconds -= 1;\n      if (this.seconds === 0) {\n        this.message = 'Blast off!';\n      } else {\n        if (this.seconds < 0) {this.seconds = 10;} // reset\n        this.message = 'T - '$'{this.seconds} seconds and counting';\n      }\n    }, 1000);\n  }\n}\n\n\n\n//missioncontrol.component.ts\nimport { MissionService } from './mission.service';\n\n@Component({\n  selector: 'app-mission-control',\n  template: '\n    <h2> Mission Control</h2>\n    <button (click) = \"announce()\"> Announce mission</button>\n      <app-astronaut ngFor=\"let astronaut of astronauts\" [astronaut]=\"astronaut\">\n    </app-astronaut >\n    <h3>History</h3>\n    <ul>\n      <li *ngFor=\"let event of history\">{{event}}</li>\n    </ul >\n  ',\n  providers: [MissionService]\n})\nexport class MissionControlComponent {\n  astronauts = ['Lovell', 'Swigert', 'Haise'];\n  history: string[] = [];\n  missions = ['Fly to the moon!', Fly to mars!', 'Fly to Vegas!'];\n  nextMission = 0;\n\n  constructor(private missionService: MissionService) {\n    missionService.missionConfirmed$.subscribe(\n      astronaut => {\n        this.history.push(''$'{astronaut} confirmed the mission');\n      });\n  }\n\n  announce() {\n    const mission = this.missions[this.nextMission++];\n    this.missionService.announceMission(mission);\n    this.history.push('Mission \"'$'{mission}\" announced');\n    if (this.nextMission >= this.missions.length) {this.nextMission = 0;}\n  }\n}\n\n\n//mission.service.ts\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class MissionService {\n\n  // Observable string sources\n  private missionAnnouncedSource = new Subject<string>();\n  private missionConfirmedSource = new Subject<string>();\n\n  // Observable string streams\n  missionAnnounced$ = this.missionAnnouncedSource.asObservable();\n  missionConfirmed$ = this.missionConfirmedSource.asObservable();\n\n  // Service message commands\n  announceMission(mission: string) {\n    this.missionAnnouncedSource.next(mission);\n  }\n\n  confirmMission(astronaut: string) {\n    this.missionConfirmedSource.next(astronaut);\n  }\n}\n".trim(),w=function(e){function n(){return Object(a.a)(this,n),Object(i.a)(this,Object(s.a)(n).apply(this,arguments))}return Object(r.a)(n,e),Object(o.a)(n,[{key:"componentDidMount",value:function(){setTimeout((function(){return u.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return c.a.createElement(p.a,{container:!0},c.a.createElement(p.a,{item:!0,xs:2},c.a.createElement(d.a,{className:e.paper},c.a.createElement("h4",null,c.a.createElement(E.a,null)))),c.a.createElement(p.a,{item:!0,xs:10},c.a.createElement(d.a,{className:e.paper},c.a.createElement(h.a,null,c.a.createElement("h3",null,"1. Vote"),c.a.createElement("div",{style:g},c.a.createElement(b.a,{code:f,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"2. Cutdown_liftoff"),c.a.createElement("b",null,"countdown-parent.component"),c.a.createElement("br",null),c.a.createElement("ul",null,c.a.createElement("li",null,"It takes a bit more work to get the child view into the parent component class."),c.a.createElement("li",null,"First, you have to import references to the ViewChild decorator and the AfterViewInit lifecycle hook."),c.a.createElement("li",null,"Next, inject the child CountdownTimerComponent into the private timerComponent property using the @ViewChild property decoration."),c.a.createElement("li",null,"The #timer local variable is gone from the component metadata. Instead, bind the buttons to the parent component's own start and stop methods and present the ticking seconds in an interpolation around the parent component's seconds method."),c.a.createElement("li",null,"These methods access the injected timer component directly."),c.a.createElement("li",null,"The ngAfterViewInit() lifecycle hook is an important wrinkle. The timer component isn't available until after Angular displays the parent view. So it displays 0 seconds initially."),c.a.createElement("li",null,"Then Angular calls the ngAfterViewInit lifecycle hook at which time it is too late to update the parent view's display of the countdown seconds. Angular's unidirectional data flow rule prevents updating the parent view's in the same cycle. The application has to wait one turn before it can display the seconds."),c.a.createElement("li",null,"Use setTimeout() to wait one tick and then revise the seconds() method so that it takes future values from the timer component.")),c.a.createElement("br",null),c.a.createElement("b",null,"mission.service"),c.a.createElement("ul",null,c.a.createElement("li",null,"A parent component and its children share a service whose interface enables bi-directional communication within the family."),c.a.createElement("li",null,"The scope of the service instance is the parent component and its children. Components outside this component subtree have no access to the service or their communications."),c.a.createElement("li",null,"This MissionService connects the MissionControlComponent to multiple AstronautComponent children.")),c.a.createElement("br",null),c.a.createElement("b",null,"MissionControl"),c.a.createElement("ul",null,c.a.createElement("li",null,"The MissionControlComponent both provides the instance of the service that it shares with its children (through the providers metadata array) and injects that instance into itself through its constructor:"),c.a.createElement("li",null,"The AstronautComponent also injects the service in its constructor. Each AstronautComponent is a child of the MissionControlComponent and therefore receives its parent's service instance:")),c.a.createElement("div",{style:g},c.a.createElement(b.a,{code:C,language:"js",plugins:["line-numbers"]}))))))}}]),n}(l.Component);n.default=Object(v.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(w)}}]);
//# sourceMappingURL=127.cb6112d8.chunk.js.map