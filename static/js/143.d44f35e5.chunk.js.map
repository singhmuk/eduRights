{"version":3,"sources":["components/ReactJs/prismCode.js","components/css/sidebar.js","components/css/sass.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","Calc","Mixin","app","stylescss","appcss","Sass","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/143.d44f35e5.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/devtools' className={classes.line}>Devtools</Link></MenuItem>\n        <MenuItem><Link to='/cssbasics' className={classes.line}>CSS</Link></MenuItem>\n        <MenuItem><Link to='/sass' className={classes.line}>SASS</Link></MenuItem>\n        <MenuItem><Link to='/html_1' className={classes.line}>html 1</Link></MenuItem>\n        <MenuItem><Link to='/restApi' className={classes.line}>RestApi</Link></MenuItem>\n        <MenuItem><Link to='/jest' className={classes.line}>Jest</Link></MenuItem>\n        <MenuItem><Link to='/matchers' className={classes.line}>Matchers</Link></MenuItem>\n        <MenuItem><Link to='/enzymes' className={classes.line}>Enzymes</Link></MenuItem>\n        <MenuItem><Link to='/enzyme2' className={classes.line}>Enzymes2</Link></MenuItem>\n        <MenuItem><Link to='/enzyme3' className={classes.line}>Enzymes3</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../ReactJs/styles.css'\nimport Sidebar from './sidebar';\nimport PrismCode from '../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst Calc = `\n.foo {\n\tWidth: calc(100px + 50px)\n}\n`.trim();\n\nconst Mixin = `\n//To define mixin:\n@mixin grid($flex: true /*default argument*/) {\n  @if $flex {\n      @include flex;\n  } @else {\n      display: block;\n  }\n}\n\n\n.row {\n  @include grid(true);\n}\n\n/*css*/\n.row {\n  display: -webkit-flex;\n  display: flex;\n}\n`.trim();\n\nconst app = `\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div>\n       <p className='text'>Paragraph</p>\n       <div className='main'>\n       <p className='nesting'>Nesting</p>\n       </div>\n\n       <nav>\n        <ul>\n          <li><a href=\"#\">HTML</a></li>\n          <li><a href=\"#\">CSS</a></li>\n          <li><a href=\"#\">SASS</a></li>\n        </ul>\n      </nav>\n\n      <div className=\"danger\">Warning! This is some text.</div>\n      <button class=\"button-basic button-report\">Report this</button>\n    </div>\n  );\n}\n\nexport default App;\n`.trim();\n\nconst stylescss = `\n//variables\n$primaryColor:blue;\n$secondaryColor:#008000;\n\n$basePadding:0.75rem;\n$borderRadius:10%;\n\n$font-weight:(\n    \"regular\":400,\n    \"medium\":500,\n    \"bold\":600\n);\n`.trim();\n\nconst appcss = `\n@import 'styles/styles';\n\n.text{\n    color: $secondaryColor;\n    font-weight: map-get($font-weight, bold);\n    margin-bottom: $basePadding;\n}\n\n//nesting\n.main{\n    .nesting {\n        color: $primaryColor;\n        font-weight: map-get($font-weight, medium);  \n    }\n}\n\nnav {\n    ul {\n      margin: 0;\n      padding: 0;\n      list-style: none;\n    }\n    li {\n      display: inline-block;\n    }\n    a {\n      display: block;\n      padding: 6px 12px;\n      text-decoration: none;\n    }\n  }\n\n  \n  //@mixin\n  @mixin important-text {\n    color: red;\n    font-size: 25px;\n    font-weight: bold;\n    border: 1px solid blue;\n  }\n  \n  .danger {\n    @include important-text;\n    background-color: green;\n  }\n\n  //Sass @extend Directive\n  .button-basic  {\n    border: none;\n    padding: 15px 30px;\n    text-align: center;\n    font-size: 16px;\n    cursor: pointer;\n  }\n  \n  .button-report  {\n    @extend .button-basic;\n    background-color: red;\n  }\n  \n  .button-submit  {\n    @extend .button-basic;\n    background-color: green;\n    color: white;\n  }\n`.trim();\n\n\nclass Sass extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. How does Calc work?</h3>\n              calc() function allows us to perform mathematical operations on property values. Instead of declaring.\n              <br />\n              <b>Ex. </b>static pixel values for an element's width, we can use calc() to specify that the width is the result of the addition of\n              two/ more numeric values.\n              <div style={titles}>\n                <PrismCode\n                  code={Calc}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>2. What is a CSS Preprocessor. What is SCSS, Sass Less, and Stylus?</h3>\n              A CSS Preprocessor is a tool used to extend the basic functionality of default vanilla CSS through its own scripting language. It\n              helps us to use complex logical syntax like â€“ variables, functions, mixins, code nesting, and inheritance to name a few, supercharging\n              our vanilla CSS.\n              <br />\n              <br />\n              <b>SASS (Syntactically Awesome Style Sheets): </b>SASS can be written in two different syntaxes using SASS or SCSS.\n              <br />\n              <br />\n              <b>SASS vs SCSS</b>\n              <ol>\n                <li>SASS is based on indentation and SCSS(Sassy CSS) is not.</li>\n                <li>SASS uses .sass extension while SCSS uses .scss extension.</li>\n                <li>SASS uses indentation rather than brackets to indicate nesting of selectors, and newlines rather than semicolons to separate\n                  properties.</li>\n              </ol>\n              <br />\n\n              <h3>3. What is a Mixin and how to use on?</h3>\n              <ol>\n                <li>A Mixin is a block of code that lets us group CSS declarations we may reuse throughout our site.</li>\n                <li>To use a Mixin, we simply use <b>@include</b> followed by the name of the Mixin and a semi-colon.</li>\n              </ol>\n              <div style={titles}>\n                <PrismCode\n                  code={Mixin}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Sass Example</h3>\n              <b>npm install node-sass</b>\n              <br />\n              <b>app.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={app}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>styles/styles.scss</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={stylescss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>App.scss</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={appcss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Sass));\n"],"sourceRoot":""}