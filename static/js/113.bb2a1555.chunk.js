(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[113],{140:function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var a=n(45),r=n(28),l=n(136),o=n(137),s=n(139),c=n(0),i=n.n(c),m=n(138),u=n.n(m),p=(n(59),function(e){function t(e){var n;return Object(a.a)(this,t),(n=Object(l.a)(this,Object(o.a)(t).call(this,e))).highlight=function(){n.ref&&n.ref.current&&u.a.highlightElement(n.ref.current)},n.ref=i.a.createRef(),n}return Object(s.a)(t,e),Object(r.a)(t,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,t=e.code,n=(e.plugins,e.language);return i.a.createElement("pre",{className:"code-prism"},i.a.createElement("code",{ref:this.ref,className:"language-".concat(n)},t.trim()))}}]),t}(i.a.Component))},141:function(e,t,n){},145:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var a=n(0),r=n.n(a),l=n(26),o=n(297),s=n(295),c=n(114),i=Object(c.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function m(){var e=i();return r.a.createElement("div",{className:e.root},r.a.createElement(s.a,null,r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/apiLogic3",className:e.line},"new updated")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/ngRepeat",className:e.line},"NgRepeat")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/ngModel",className:e.line},"ng-model")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/scope",className:e.line},"Scope")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/filter",className:e.line},"Events")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/directives",className:e.line},"Directives")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/angularConditions",className:e.line},"Condition")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/angularlFlters",className:e.line},"Fiters")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/services",className:e.line},"Services")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/validations",className:e.line},"Validations")),r.a.createElement("p",null,"Angular 12"),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/introAngularjs",className:e.line},"Intro")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/flows",className:e.line},"Interviews")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/angularDir2",className:e.line},"Architecture")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/metedata",className:e.line},"MetaData")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/ngFor",className:e.line},"NgFor")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/pipes",className:e.line},"Pipes")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/anguRoutes",className:e.line},"Routes")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/lifeCycleAng",className:e.line},"LifeCycle")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/angularSelector",className:e.line},"Change Detection")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/angularDir",className:e.line},"Custom Elements")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/viewProvider",className:e.line},"ViewProvider")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/dynamicallyLoad",className:e.line},"DynamicallyLoad")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/rxjs",className:e.line},"Rxjs")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/ngrxCurd",className:e.line},"Ngrx")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/ngrxCounter",className:e.line},"NgrxCounter")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/projection",className:e.line},"Pro-Input-Output-Iterates-",r.a.createElement("br",null),"IncrDecr-Toggle-keyIn-If")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/angularCurd",className:e.line},"Curd")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/filterPlace",className:e.line},"FilterPlace-get-live-",r.a.createElement("br",null),"Agree-NoName-Excel")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/radioButton",className:e.line},"Radio-s/h-add-",r.a.createElement("br",null),"version-Launch-Font")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/multiCheck",className:e.line},"MultiSel-MultiCheck")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/services12",className:e.line},"Services")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/dropdownsAngu",className:e.line},"pick-ddSelectData")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/vote",className:e.line},"Vote")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/debounce",className:e.line},"Debounce")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/loader",className:e.line},"Loader")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/paginations",className:e.line},"Paginations"))),r.a.createElement("div",null))}},490:function(e,t,n){"use strict";n.r(t);var a=n(45),r=n(28),l=n(136),o=n(137),s=n(139),c=n(0),i=n.n(c),m=n(138),u=n.n(m),p=n(120),d=n(57),h=n(296),E=n(5),g=(n(141),n(145)),b=n(140),f={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},v="\n//app.component.ts\nimport { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { throwError, of, forkJoin, combineLatest, BehaviorSubject } from 'rxjs';\nimport { catchError, tap, map, switchMap, filter, first, startWith, delay } from 'rxjs/operators';\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  name = 'Angular';\n  todoUrl = 'https://jsonplaceholder.typicode.com/todos';\n  userUrl = 'https://jsonplaceholder.typicode.com/users';\n  postUrl = 'https://jsonplaceholder.typicode.com/posts';\n\n  // Action stream\n  private userSelectedSubject = new BehaviorSubject<string>('');\n  userSelectedAction$ = this.userSelectedSubject.asObservable();\n\n  // All Users\n  users$ = this.http.get<User[]>(this.userUrl)\n    .pipe(\n      // tap(data => console.log('users', JSON.stringify(data))),\n      catchError(err => throwError('Error occurred'))\n    );\n\n  // Gets multiple sets of related data and returns it all as a single object\n  // Uses an action stream to \"pass in\" the parameter for the first query.\n  // Uses forkJoin\n  dataForUser$ = this.userSelectedAction$\n    .pipe(\n      // Handle the case of no selection\n      filter(userName => Boolean(userName)),\n      // Get the user given the user name\n      switchMap(userName => this.http.get<User[]>(''$'{this.userUrl}?username = '$'{userName}')\n        .pipe(\n          // The query returns an array of users, we only want the first one\n          map(users => users[0]),\n          tap(user => console.log(user)),\n          switchMap(user =>\n            // Pull in any related streams\n            combineLatest([\n              this.http.get<ToDo[]>(''$'{this.todoUrl}?userId = '$'{user.id} ')\n                .pipe(startWith([] as ToDo[])),\n              this.http.get<Post[]>(''$'{this.postUrl}? userId = '$'{user.id}')\n                .pipe(startWith([] as Post[]))\n            ])\n              .pipe(\n                tap(data => console.log('data', data)),\n                // Map the data into the desired format for display\n                map(([todos, posts]) => ({\n                  name: user.name,\n                  todos: todos,\n                  posts: posts\n                }) as UserData)\n              )\n          )\n        )\n      )\n    );\n\n  constructor(private http: HttpClient) { }\n\n  onSelected(userName: string): void {\n    this.userSelectedSubject.next(userName);\n  }\n}\n\nexport interface Post {\n  userId: number;\n  id: number;\n  title: string;\n  body: string\n}\n\nexport interface ToDo {\n  userId: number;\n  id: number;\n  title: string;\n  completed: boolean;\n}\n\nexport interface User {\n  id: number;\n  name: string;\n  username: string;\n  email?: string;\n  website?: string;\n}\n\nexport interface UserData {\n  name: string;\n  posts: Post[];\n  todos: ToDo[];\n}\n\n\n//app.module.ts\nimport { NgModule, Injectable } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS, HttpHeaders, HttpInterceptor, HttpRequest, HttpHandler, HttpEvent,\n   HttpEventType } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\n\nimport { timer, Observable } from 'rxjs';\nimport { tap, delay, switchMap } from 'rxjs/operators';\n\n\n@Injectable()\nexport class PreRequestDelayInterceptor implements HttpInterceptor {\n  static count = -2;\n\n  constructor() { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const timerDelay = timer(5);\n    const start = Date.now();\n\n    // Gradually increase the delay\n    PreRequestDelayInterceptor.count = PreRequestDelayInterceptor.count > 6 ? 0 : PreRequestDelayInterceptor.count + 2;\n\n    return timerDelay\n      .pipe(\n        delay(1000 * PreRequestDelayInterceptor.count),\n        switchMap(() => next.handle(req)),\n        tap(event => {\n          if (event.type == HttpEventType.Response) {\n            const elapsed = Date.now()-start;\n            console.log('Request for '$'{req.urlWithParams} took '$'{elapsed} ms.');\n          }\n        }));\n  }\n}\n\n@NgModule({\n  imports: [BrowserModule, FormsModule,\n    HttpClientModule],\n  declarations: [AppComponent],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: PreRequestDelayInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n//app.component.html\n<div *ngIf='users$ | async as users'>\n\t<select (change)=\"onSelected($event.target.value)\">\n    <option value=\"\">--Select a user--</option>\n    <option *ngFor=\"let user of users\"\n            [value]=\"user.username\">{{ user.name }}</option>\n  </select>\n</div>\n\n<div *ngIf='dataForUser$ | async as data'>\n\t<h2>Data for: {{data.name}}</h2>\n\t<table *ngIf=\"data.todos\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>User</th>\n\t\t\t\t<th>Title</th>\n\t\t\t\t<th>Completed?</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody *ngFor=\"let todo of data.todos\">\n\t\t\t<tr>\n\t\t\t\t<td>{{todo.userId}}</td>\n\t\t\t\t<td>{{todo.title}}</td>\n\t\t\t\t<td>{{todo.completed}}</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\t<p></p>\n\t<table *ngIf=\"data.posts\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>User</th>\n\t\t\t\t<th>Title</th>\n\t\t\t\t<th>Body</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody *ngFor=\"let post of data.posts\">\n\t\t\t<tr>\n\t\t\t\t<td>{{post.userId}}</td>\n\t\t\t\t<td>{{post.title}}</td>\n\t\t\t\t<td>{{post.body}}</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n</div>\n".trim(),N="\nimport { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  template: '\n    <div *ngFor=\"let hero of heroes\" (click)=\"onSelect(hero)\">\n      {{hero.id}}\n      {{hero.name}}\n    </div >\n\n  <div *ngIf=\"selectedHero\">\n    <h2>{{selectedHero.name | uppercase}}</h2>\n      id: {{selectedHero.id}}\n      name: {{selectedHero.name}}\n    </div >',\n  })\n\nexport class AppComponent {\n  constructor(private http: HttpClient){}\n\n  heroes:any=[]\n  ngOnInit(){\n    this.http.get('https://jsonplaceholder.typicode.com/users')\n        .subscribe(val=>{\n            this.heroes = val\n        })\n      }\n\n  selectedHero?;\n  onSelect(hero):void {\n     this.selectedHero = hero\n  }\n}\n\n".trim(),y=function(e){function t(){return Object(a.a)(this,t),Object(l.a)(this,Object(o.a)(t).apply(this,arguments))}return Object(s.a)(t,e),Object(r.a)(t,[{key:"componentDidMount",value:function(){setTimeout((function(){return u.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return i.a.createElement(p.a,{container:!0},i.a.createElement(p.a,{item:!0,xs:2},i.a.createElement(d.a,{className:e.paper},i.a.createElement("h4",null,i.a.createElement(g.a,null)))),i.a.createElement(p.a,{item:!0,xs:10},i.a.createElement(d.a,{className:e.paper},i.a.createElement(h.a,null,i.a.createElement("h3",null,"Pick a data from list"),i.a.createElement("div",{style:f},i.a.createElement(b.a,{code:N,language:"js",plugins:["line-numbers"]})),i.a.createElement("br",null),i.a.createElement("h3",null,"On dropdown select data"),i.a.createElement("div",{style:f},i.a.createElement(b.a,{code:v,language:"js",plugins:["line-numbers"]}))))))}}]),t}(c.Component);t.default=Object(E.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(y)}}]);
//# sourceMappingURL=113.bb2a1555.chunk.js.map