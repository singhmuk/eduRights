{"version":3,"sources":["components/ReactJs/prismCode.js","components/angularjsd/sidebar.js","components/angularjsd/angular 12/multiCheck.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","mulSelects","multiCheck","dropdawn","dropForm","currTime","pipes","currency","switching","MultiCheck","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/119.d0be6ea5.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/apiLogic3' className={classes.line}>new updated</Link></MenuItem>\n        <MenuItem><Link to='/ngRepeat' className={classes.line}>NgRepeat</Link></MenuItem>\n        <MenuItem><Link to='/ngModel' className={classes.line}>ng-model</Link></MenuItem>\n        <MenuItem><Link to='/scope' className={classes.line}>Scope</Link></MenuItem>\n        <MenuItem><Link to='/filter' className={classes.line}>Events</Link></MenuItem>\n        <MenuItem><Link to='/directives' className={classes.line}>Directives</Link></MenuItem>\n        <MenuItem><Link to='/angularConditions' className={classes.line}>Condition</Link></MenuItem>\n        <MenuItem><Link to='/angularlFlters' className={classes.line}>Fiters</Link></MenuItem>\n        <MenuItem><Link to='/services' className={classes.line}>Services</Link></MenuItem>\n        <MenuItem><Link to='/validations' className={classes.line}>Validations</Link></MenuItem>\n\n        <p>Angular 12</p>\n        <MenuItem><Link to='/introAngularjs' className={classes.line}>Intro</Link></MenuItem>\n        <MenuItem><Link to='/flows' className={classes.line}>Interviews</Link></MenuItem>\n        <MenuItem><Link to='/angularDir2' className={classes.line}>Architecture</Link></MenuItem>\n        <MenuItem><Link to='/metedata' className={classes.line}>MetaData</Link></MenuItem>\n        <MenuItem><Link to='/ngFor' className={classes.line}>NgFor</Link></MenuItem>\n        <MenuItem><Link to='/pipes' className={classes.line}>Pipes</Link></MenuItem>\n        <MenuItem><Link to='/anguRoutes' className={classes.line}>Routes</Link></MenuItem>\n        <MenuItem><Link to='/lifeCycleAng' className={classes.line}>LifeCycle</Link></MenuItem>\n        <MenuItem><Link to='/angularSelector' className={classes.line}>Change Detection</Link></MenuItem>\n        <MenuItem><Link to='/angularDir' className={classes.line}>Custom Elements</Link></MenuItem>\n        <MenuItem><Link to='/viewProvider' className={classes.line}>ViewProvider</Link></MenuItem>\n        <MenuItem><Link to='/dynamicallyLoad' className={classes.line}>DynamicallyLoad</Link></MenuItem>\n        <MenuItem><Link to='/rxjs' className={classes.line}>Rxjs</Link></MenuItem>\n        <MenuItem><Link to='/ngrxCurd' className={classes.line}>Ngrx</Link></MenuItem>\n        <MenuItem><Link to='/ngrxCounter' className={classes.line}>NgrxCounter</Link></MenuItem>\n\n        <MenuItem><Link to='/projection' className={classes.line}>Pro-Input-Output-Iterates-<br />IncrDecr-Toggle-keyIn-If</Link></MenuItem>\n        <MenuItem><Link to='/angularCurd' className={classes.line}>Curd</Link></MenuItem>\n        <MenuItem><Link to='/filterPlace' className={classes.line}>FilterPlace-get-live-<br />Agree-NoName-Excel</Link></MenuItem>\n        <MenuItem><Link to='/radioButton' className={classes.line}>Radio-s/h-add-<br />version-Launch-Font</Link></MenuItem>\n        <MenuItem><Link to='/multiCheck' className={classes.line}>MultiSel-MultiCheck</Link></MenuItem>\n        <MenuItem><Link to='/services12' className={classes.line}>Services</Link></MenuItem>\n        <MenuItem><Link to='/dropdownsAngu' className={classes.line}>pick-ddSelectData</Link></MenuItem>\n        <MenuItem><Link to='/vote' className={classes.line}>Vote</Link></MenuItem>\n        <MenuItem><Link to='/debounce' className={classes.line}>Debounce</Link></MenuItem>\n        <MenuItem><Link to='/loader' className={classes.line}>Loader</Link></MenuItem>\n        <MenuItem><Link to='/paginations' className={classes.line}>Paginations</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst mulSelects = `\nimport { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  template: '\n    <li *ngFor=\"let item of list\">\n    <input type=\"checkbox\" [(ngModel)] = \"item.checked\">\n      {{item.name}}\n    </li>\n  {{this.result | json}}\n    ',\n})\n\nexport class AppComponent {\n  list: any[];\n\n  constructor(private http: HttpClient){}\n  ngOnInit() {\n    this.http.get('https://jsonplaceholder.typicode.com/users')\n        .subscribe(val => {\n          this.list = val\n        })\n    }\n\n  get result() {\n    return this.list.filter(item => item.checked);\n  }\n\n}\n`.trim();\n\nconst multiCheck = `\n//in app.module => import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray} from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  template: '\n  < form[formGroup]=\"form\"(ngSubmit) = \"submit()\" >\n    <div * ngFor=\"let web of websiteList\" >\n      <input type=\"checkbox\" [value] = \"web.id\"(change) = \"onCheckboxChange($event)\" />\n        {{web.name}}\n      </div >\n\n  <button type=\"submit\" [disabled] = \"!form.valid\"> Submit</button>\n    </form>\n',})\n\nexport class AppComponent {\n form: FormGroup;\n  websiteList: any = [\n    { id: 1, name: 'ItSolutionStuff.com' },\n    { id: 2, name: 'HDTuto.com' },\n    { id: 3, name: 'NiceSnippets.com' }\n  ];\n\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group({\n      website: this.formBuilder.array([], [Validators.required])\n    })\n  }\n\n  onCheckboxChange(e) {\n    const website = this.form.get('website') as FormArray;\n\n    if (e.target.checked) {\n      website.push(new FormControl(e.target.value));\n    } else {\n       const index = website.controls.findIndex(x => x.value === e.target.value);\n       website.removeAt(index);\n    }\n  }\n\n  submit(){\n    console.log(this.form.value);\n  }\n}\n`.trim();\n\nconst dropdawn = `\nimport { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  template: '\n  <select #select (change) = \"onChange()\">\n    <option>Select</option>\n      <option *ngFor=\"let item of this.dataList; let i = index\"\n              value = \"{{item.name}}\" [selected] = \"i == 0\">\n        {{item.name}}\n      </option >\n    </select >\n  ',})\n\nexport class AppComponent {\n  dataList: Array<any> = [];\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(){\n    this.http.get('https://jsonplaceholder.typicode.com/users')\n        .subscribe(val => {\n          this.dataList = val\n        })\n    }\n\n  onChange(){\n    console.log('sss', this.dataList)\n  }\n}`.trim();\n\nconst dropForm = `\nimport { Component } from '@angular/core';\nimport { FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-root',\n  template: '\n  <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\n    <select (change) = \"changeCity($event)\" formControlName=\"cityName\">\n              <option value=\"\">Choose your city</option>\n              <option *ngFor=\"let city of City\" [ngValue]=\"city\">{{city}}</option>\n            </select>\n\n            < !--error block-- >\n  <div *ngIf=\"isSubmitted && cityName.errors?.required\">\n    Please enter your city name\n  </div>\n\n  <button type=\"submit\">Submit</button>\n      </form >',\n})\n\nexport class AppComponent {\n  isSubmitted = false;\n  City: any = ['Florida', 'South Dakota', 'Tennessee', 'Michigan']\n\n  constructor(public fb: FormBuilder) { }\n\n  //Form\n  registrationForm = this.fb.group({\n    cityName: ['', [Validators.required]]\n  })\n\n  changeCity(e) {\n    console.log(e.value)\n    this.cityName.setValue(e.target.value)\n  }\n\n  get cityName() {\n    return this.registrationForm.get('cityName');\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n    if (!this.registrationForm.valid) {\n      return false;\n    } else {\n      alert(JSON.stringify(this.registrationForm.value))\n    }\n  }\n}`.trim();\n\nconst currTime = `\n@Component({\n  selector: 'app-root',\n  template: '{{ time }}',\n})\n\nexport class AppComponent {\n  time='';\n  ngOnInit(){\n    setTimeout(()=>{\n      this.time = new Date().toLocaleTimeString();\n    },1000)\n  }\n}`.trim();\n\n\nconst pipes = `\n@Component({\n  selector: 'app-root',\n  template: '\n    <div> {{product | json}}</div>\n    <div>Birthdate: {{(product?.birthdate | date:'longDate') | uppercase}}</div>\n    <label>Price: </label>{{product.price | currency: 'USD': 'symbol'}}\n  ',\n})\n\nexport class AppComponent {\n  product = {\n    name: 'frimfram',\n    price: 42,\n    birthdate:  new Date(1970, 1, 25)\n  };\n}`.trim();\n\nconst currency = `\n@Component({\n  selector: 'app-root',\n  template: '\n      <div>{{money | currency: 'JPY': 'symbol'}}</div >\n      <div>{{money | currency:'USD':'symbol'}}</div>\n      <div>{{money | currency:'INR':'symbol'}}</div>\n      <div>{{money | currency:'JPY':'' }}円</div>\n    ',\n})\n\nexport class AppComponent {\n\tmoney = 1980;\n}`.trim();\n\nconst switching = `\ninterface name{\n  name:string;\n  city:string;\n  state:string;\n  country:string;\n  street:string;\n}\n\nfunction address(obj:name){\n  switch(obj.name){\n    case 'Mukesh':\n      console.log(obj.name)\n    case 'Gr. Noida':\n      console.log(obj.city)\n    case 'UP':\n      console.log(obj.state)\n    case 'India':\n      console.log(obj.country)\n    case 'Sanjay Vihar':\n      console.log(obj.street)\n    break;\n    default:\n      console.log('Sorry')\n  }\n}\n\nconst obj2={name:'Mukesh', city:'Gr. Noida', state:'UP', country:'India',street:'Sanjay Vihar'};\naddress(obj2)\n}`.trim();\n\n\n\nclass MultiCheck extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Multi Select</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={mulSelects}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <h3>MultiCheck</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={multiCheck}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <h3>Dropdown</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={dropdawn}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <h3>Dropdown Form</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={dropForm}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Current Time</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={currTime}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Pipes</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={pipes}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Currency converter</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={currency}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Switch case</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={switching}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(MultiCheck));\n"],"sourceRoot":""}