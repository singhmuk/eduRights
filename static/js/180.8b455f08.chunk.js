(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[180],{140:function(e,n,t){"use strict";t.d(n,"a",(function(){return p}));var a=t(45),r=t(28),l=t(136),o=t(137),c=t(139),s=t(0),i=t.n(s),m=t(138),u=t.n(m),p=(t(59),function(e){function n(e){var t;return Object(a.a)(this,n),(t=Object(l.a)(this,Object(o.a)(n).call(this,e))).highlight=function(){t.ref&&t.ref.current&&u.a.highlightElement(t.ref.current)},t.ref=i.a.createRef(),t}return Object(c.a)(n,e),Object(r.a)(n,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,n=e.code,t=(e.plugins,e.language);return i.a.createElement("pre",{className:"code-prism"},i.a.createElement("code",{ref:this.ref,className:"language-".concat(t)},n.trim()))}}]),n}(i.a.Component))},141:function(e,n,t){},151:function(e,n,t){"use strict";t.d(n,"a",(function(){return m}));var a=t(0),r=t.n(a),l=t(26),o=t(297),c=t(295),s=t(114),i=Object(s.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function m(){var e=i();return r.a.createElement("div",{className:e.root},r.a.createElement(c.a,null,r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/setUpFiles",className:e.line},"SetUp")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/javaScript",className:e.line},"JavaScript")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/reactCurdMern",className:e.line},"Mern React")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/4_reactCurdHooks",className:e.line},"Mern React Hooks")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/pagination",className:e.line},"Sea Sort Pagi Auth_Token")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/propsModel",className:e.line},"SS pagination-Captcha")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/imageGallery",className:e.line},"ImageGallery")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/stripes",className:e.line},"Stripes-Signin with gfb")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/paginationsMern",className:e.line},"Paginations-push_notifis")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/googleMap",className:e.line},"GoogleMap")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/videoChat",className:e.line},"VideoChat")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/qrSccaners",className:e.line},"QrCode-reCapcha")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/react_share",className:e.line},"Share-Stripe")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/socialSignUp",className:e.line},"SocialSignUp")),r.a.createElement(o.a,null,r.a.createElement(l.b,{to:"/mernSocial",className:e.line},"MernSocial"))),r.a.createElement("div",null))}},542:function(e,n,t){"use strict";t.r(n);var a=t(45),r=t(28),l=t(136),o=t(137),c=t(139),s=t(0),i=t.n(s),m=t(138),u=t.n(m),p=t(120),d=t(57),g=t(296),f=t(5),h=(t(141),t(151)),E=t(140),C={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},b='\nconst app = require("express")();\nconst server = require("http").createServer(app);\nconst cors = require("cors");\n\nconst io = require("socket.io")(server, {\n\tcors: {\n\t\torigin: "*",\n\t\tmethods: ["GET", "POST"]\n\t}\n});\n\napp.use(cors());\n\napp.get(\'/\', (req, res) => { res.send(\'Running\'); });\n\nio.on("connection", (socket) => {\n\tsocket.emit("me", socket.id);\n\n\tsocket.on("disconnect", () => { socket.broadcast.emit("callEnded") });\n\n\tsocket.on("callUser", ({ userToCall, signalData, from, name }) => {\n\t\tio.to(userToCall).emit("callUser", { signal: signalData, from, name });\n\t});\n\n\tsocket.on("answerCall", (data) => { io.to(data.to).emit("callAccepted", data.signal) });\n});\n\nconst PORT = process.env.PORT || 5000;\n\nserver.listen(PORT, () => console.log(\'Server is running on port 5000\'));\n'.trim(),y='\nimport React, { useState, useContext } from \'react\';\nimport { Button, TextField, Grid,  Paper } from \'@material-ui/core\';\nimport { CopyToClipboard } from \'react-copy-to-clipboard\';\nimport { Assignment, Phone, PhoneDisabled } from \'@material-ui/icons\';\nimport { makeStyles } from \'@material-ui/core/styles\';\n\nimport { SocketContext } from \'../Context\';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: \'600px\',\n    margin: \'35px 0\',\n    padding: 0,\n    [theme.breakpoints.down(\'xs\')]: {\n      width: \'80%\',\n    },\n  },\n  margin: {\n    marginTop: 20,\n  },\n  padding: {\n    padding: 20,\n  },\n}));\n\nconst Sidebar = ({ children }) => {\n  const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\n  const [idToCall, setIdToCall] = useState(\'\');\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Paper>\n        <form noValidate autoComplete="off">\n          <Grid container>\n            <Grid item xs={12} md={6}>\n              <h3>Account Info</h3>\n              <TextField label="Name" value={name} onChange={(e) => setName(e.target.value)} fullWidth />\n              <CopyToClipboard text={me} className={classes.margin}>\n                <Button variant="contained" color="primary" fullWidth startIcon={<Assignment fontSize="large" />}>\n                  Copy Your ID\n                </Button>\n              </CopyToClipboard>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <h4>Make a call</h4>\n              <TextField label="ID to call" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth />\n              {callAccepted && !callEnded ? (\n                <Button variant="contained" color="secondary" startIcon={<PhoneDisabled fontSize="large" />} fullWidth \n                    onClick={leaveCall} className={classes.margin}>\n                  Hang Up\n                </Button>\n              ) : (\n                <Button variant="contained" color="primary" startIcon={<Phone fontSize="large" />} fullWidth \n                  onClick={() => callUser(idToCall)} className={classes.margin}>\n                  Call\n                </Button>\n              )}\n            </Grid>\n          </Grid>\n        </form>\n        {children}\n      </Paper>\n    </div>\n  );\n};\n'.trim(),S="\nimport React, { useContext } from 'react';\nimport { SocketContext } from '../Context';\n\nconst Notifications = () => {\n  const { answerCall, call, callAccepted } = useContext(SocketContext);\n\n  return (\n    <>\n      {call.isReceivingCall && !callAccepted && (\n        <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n          <h1>{call.name} is calling:</h1>\n          <button onClick={answerCall}>Answer</button>\n        </div>\n      )}\n    </>\n  );\n};".trim(),v="\nimport React, { useContext } from 'react';\nimport { Grid, Typography, Paper, makeStyles } from '@material-ui/core';\nimport { SocketContext } from '../Context';\n\nconst useStyles = makeStyles((theme) => ({\n  video: {\n    width: '550px',\n    [theme.breakpoints.down('xs')]: {\n      width: '300px',\n    },\n  },\n  gridContainer: {\n    justifyContent: 'center',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n    },\n  },\n  paper: {\n    padding: '10px',\n    border: '2px solid black',\n    margin: '10px',\n  },\n}));\n\nconst VideoPlayer = () => {\n  const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.gridContainer}>\n      {stream && (\n        <Paper className={classes.paper}>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h5\" gutterBottom>{name || 'Name'}</Typography>\n            <video playsInline muted ref={myVideo} autoPlay className={classes.video} />\n          </Grid>\n        </Paper>\n      )}\n      {callAccepted && !callEnded && (\n        <Paper className={classes.paper}>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h5\" gutterBottom>{call.name || 'Name'}</Typography>\n            <video playsInline ref={userVideo} autoPlay className={classes.video} />\n          </Grid>\n        </Paper>\n      )}\n    </Grid>\n  );\n};\n".trim(),x="\nimport React, { createContext, useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\n\nconst SocketContext = createContext();\n\n// const socket = io('http://localhost:5000');\nconst socket = io('https://warm-wildwood-81069.herokuapp.com');\n\nconst ContextProvider = ({ children }) => {\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState('');\n\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n      .then((currentStream) => {\n        setStream(currentStream);\n\n        myVideo.current.srcObject = currentStream;\n      });\n\n    socket.on('me', (id) => setMe(id));\n\n    socket.on('callUser', ({ from, name: callerName, signal }) => {\n      setCall({ isReceivingCall: true, from, name: callerName, signal });\n    });\n  }, []);\n\n  const answerCall = () => {\n    setCallAccepted(true);\n\n    const peer = new Peer({ initiator: false, trickle: false, stream });\n\n    peer.on('signal', (data) => {\n      socket.emit('answerCall', { signal: data, to: call.from });\n    });\n\n    peer.on('stream', (currentStream) => { userVideo.current.srcObject = currentStream; });\n\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n\n  const callUser = (id) => {\n    const peer = new Peer({ initiator: true, trickle: false, stream });\n\n    peer.on('signal', (data) => {\n      socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\n    });\n\n    peer.on('stream', (currentStream) => { userVideo.current.srcObject = currentStream; });\n\n    socket.on('callAccepted', (signal) => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n\n    connectionRef.current.destroy();\n    window.location.reload();\n  };\n\n  return (\n    <SocketContext.Provider value={{\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      me,\n      callUser,\n      leaveCall,\n      answerCall,\n    }}\n    >\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\nexport { ContextProvider, SocketContext };\n".trim(),k="\nimport React from 'react';\nimport { Typography, AppBar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport VideoPlayer from './components/VideoPlayer';\nimport Sidebar from './components/Sidebar';\nimport Notifications from './components/Notifications';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderRadius: 15,\n    margin: '30px 100px',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '600px',\n    border: '2px solid black',\n\n    [theme.breakpoints.down('xs')]: {\n      width: '90%',\n    },\n  },\n  image: {\n    marginLeft: '15px',\n  },\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.wrapper}>\n      <p className={classes.appBar}>Video Chat</p>\n      <VideoPlayer />\n      <Sidebar>\n        <Notifications />\n      </Sidebar>\n    </div>\n  );\n};\n\nexport default App;\n".trim(),N=function(e){function n(){return Object(a.a)(this,n),Object(l.a)(this,Object(o.a)(n).apply(this,arguments))}return Object(c.a)(n,e),Object(r.a)(n,[{key:"componentDidMount",value:function(){setTimeout((function(){return u.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return i.a.createElement(p.a,{container:!0},i.a.createElement(p.a,{item:!0,xs:2},i.a.createElement(d.a,{className:e.paper},i.a.createElement("h4",null,i.a.createElement(h.a,null)))),i.a.createElement(p.a,{item:!0,xs:10},i.a.createElement(d.a,{className:e.paper},i.a.createElement(g.a,null,i.a.createElement("h3",null,"Server"),i.a.createElement("div",{style:C},i.a.createElement(E.a,{code:b,language:"js",plugins:["line-numbers"]})),i.a.createElement("br",null),i.a.createElement("h3",null,"Client"),i.a.createElement("b",null,"components/Sidebar.js"),i.a.createElement("div",{style:C},i.a.createElement(E.a,{code:y,language:"js",plugins:["line-numbers"]})),i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement("b",null,"components/Notifications.js"),i.a.createElement("br",null),i.a.createElement("div",{style:C},i.a.createElement(E.a,{code:S,language:"js",plugins:["line-numbers"]})),i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement("b",null,"components/VideoPlayer.js"),i.a.createElement("br",null),i.a.createElement("div",{style:C},i.a.createElement(E.a,{code:v,language:"js",plugins:["line-numbers"]})),i.a.createElement("br",null),i.a.createElement("b",null,"components/Context.js"),i.a.createElement("br",null),i.a.createElement("div",{style:C},i.a.createElement(E.a,{code:x,language:"js",plugins:["line-numbers"]})),i.a.createElement("br",null),i.a.createElement("h3",null,"components/App.js"),i.a.createElement("div",{style:C},i.a.createElement(E.a,{code:k,language:"js",plugins:["line-numbers"]}))))))}}]),n}(s.Component);n.default=Object(f.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(N)}}]);
//# sourceMappingURL=180.8b455f08.chunk.js.map