{"version":3,"sources":["components/ReactJs/prismCode.js","components/ReactJs/sidebar.js","components/ReactJs/reactJs_hooks/contextMethods.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","inputs","curd2","states","expensAction","curd","ContextMeth","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/68.52113c00.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/introReact' className={classes.line}>Intro-Lazy-Children</Link></MenuItem>\n        <MenuItem><Link to='/reactInter' className={classes.line}>Intro</Link></MenuItem>\n        <MenuItem><Link to='/codingInter' className={classes.line}>CodesPro</Link></MenuItem>\n        <MenuItem><Link to='/mainCompo' className={classes.line}>Event-hoc-form<br />curd-slider</Link></MenuItem>\n        <MenuItem><Link to='/pureComp' className={classes.line}>PureComp-conComp</Link></MenuItem>\n        <MenuItem><Link to='/useStates' className={classes.line}>useMultiState</Link></MenuItem>\n        <MenuItem><Link to='/contextHooks' className={classes.line}>Context Hooks</Link></MenuItem>\n        <MenuItem><Link to='/customHooks' className={classes.line}>CustomHooks-memo</Link></MenuItem>\n        <MenuItem><Link to='/useReducersSta' className={classes.line}>UseReducers</Link></MenuItem>\n        <MenuItem><Link to='/contextMethods' className={classes.line}>Curd Hooks</Link></MenuItem>\n        <MenuItem><Link to='/jsonPlaceholder' className={classes.line}>JsonPlaceholder</Link></MenuItem>\n        <MenuItem><Link to='/async_await' className={classes.line}>Async-await-sideMenu<br />Mouse hover</Link></MenuItem>\n        <MenuItem><Link to='/ticGame' className={classes.line}>Share-maxMinDate<br />moveBtn-slideshow</Link></MenuItem>\n        <MenuItem><Link to='/linkGet' className={classes.line}>LinkGet</Link></MenuItem>\n        <MenuItem><Link to='/numberFormats' className={classes.line}>Random NumFor-biToDe<br /> Validations Step DateTimw</Link></MenuItem>\n        <MenuItem><Link to='/models' className={classes.line}>Models-chidData-csv<br />Icon-router</Link></MenuItem>\n        <MenuItem><Link to='/like' className={classes.line}>Like-checkbox-radio<br />select-scroll</Link></MenuItem>\n        <MenuItem><Link to='/textEditors' className={classes.line}>TextEditors-paginations<br />translator-sortCheck</Link></MenuItem>\n        <MenuItem><Link to='/sortItems' className={classes.line}>IncOnClick-pushBtn-fizzBuzz<br />show-addDocs-ratings</Link></MenuItem>\n        <MenuItem><Link to='/serverSideRend' className={classes.line}>Jwt-multiSel</Link></MenuItem>\n        <MenuItem><Link to='/dropdownSelect' className={classes.line}>SelectFtr-checkFtr-updtCrd</Link></MenuItem>\n        <MenuItem><Link to='/kanban' className={classes.line}>Kanban</Link></MenuItem>\n        <MenuItem><Link to='/hackeRank' className={classes.line}>HackeRank</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst inputs = `\nconst App = () => {\n  const usersData = [\n      { id: 1, name: \"AAA\", username: \"aiueo\" },\n      { id: 2, name: \"BBB\", username: \"kakikukeko\" },\n      { id: 3, name: \"CCC\", username: \"sasisuseso\" }\n    ];\n  const [users, setUsers] = useState(usersData);\n\n  const initialFormState={id:'',name:'',username:''};\n  const [user,setUser]=useState(initialFormState);\n\n  const handleInputChange=(e)=>{\n      const {name,value}=e.target;\n      setUser({...user,[name]:value})        \n  };\n\n  const addUser = user => {\n      user.id = users.length + 1;\n      setUsers([...users, user]);\n    };\n\n  return(\n      <div>\n      <form \n       onSubmit={e=>{\n          e.preventDefault();\n          addUser(user);\n          setUser(initialFormState);\n       }}>\n          <label>Name</label>\n              <input type=\"text\" name=\"name\" value={user.name} onChange={handleInputChange} />\n              <label>Username</label>\n              <input type=\"text\" name=\"username\" value={user.username} onChange={handleInputChange} />\n              <button>Add new user</button>\n       </form>\n       {users.map(items=>(\n          <li>{items.name}-{items.username}</li>\n       ))}\n       </div> \n  )\n}\n\nexport default App;\n`.trim();\n\nconst curd2 = `const url = 'https://jsonplaceholder.typicode.com/posts';\n\nclass App extends Component{\n    state = {\n      posts: []\n    };\n\n   async componentDidMount(){\n      const { data: posts } = await axios.get(url)\n      this.setState({posts})\n    }\n\n    handleAdd = async () => {\n      const obj = {title:'title', body: 'body'}\n      const {data: post} = await axios.post(url, obj)\n      const posts = [post, ...this.state.posts]\n      this.setState({posts})\n    }\n\n    handleUpdate = async post => {\n      post.title = \"update\"\n      await axios.put('$'{ url }/'$'{post.id}', post)\n\nconst posts = [...this.state.posts]\nconst index = posts.indexOf(post)\nposts[index] = { ...post }\nthis.setState({ posts })\n    }\n\nhandleDelete = async post => {\n  await axios.delete('$'{url}/'$'{post.id}')\n\n  const posts = this.state.posts.filter(p => p.id !== post.id)\n  this.setState({ posts })\n}\n\nrender(){\n  return (\n    <div>\n      <button onClick={this.handleAdd}>Add</button>\n      <ul>\n        <li>Title</li>\n        <li>Update</li>\n        <li>Delete</li>\n      </ul>\n      {this.state.posts.map(post => (\n        <li>\n          {post.title}\n          <button onClick={() => this.handleUpdate(post)}>Update</button>\n          <button onClick={() => this.handleDelete(post)}>Delete</button>\n        </li>\n      ))}\n    </div>\n  )\n}\n}`.trim();\n\nconst states = `\n//components/myContext.js\nimport React from 'react';\n\nconst MyContext = React.createContext();\n\nexport default MyContext;\n\n\n//components/compA.js\nimport Comp2 from './compB';\n\nconst Comp = () => {\n  return(\n    <div>\n      <Comp2 />\n    </div>\n  )\n}\n\nexport default Comp;\n\n\n//components/compB.js\nimport MyContext from './myContext';\n\nconst Comp2 = () => {\n    return(\n    <MyContext.Consumer>\n      {(data)=>(\n        <li>{data.name}</li>\n      )}\n    </MyContext.Consumer>\n    )\n  }\n\nexport default Comp2;\n\n\n//App.js\nimport React, { useState } from 'react';\nimport MyContext from './components/myContext';\nimport CompA from './components/compA';\n\nconst App = () => {\n  const [ name ] = useState('Mukesh')\n  \n    return(\n      <div>\n        <MyContext.Provider\n          value={{name:name}}>\n          <CompA />\n        </MyContext.Provider>\n      </div>\n    )\n  }\n\nexport default App;\n`.trim();\n\n\nconst expensAction = `\n//forms/AddUserForm.js\nconst AddUserForm = props => {\n  const initialFormState = { id: null, name: \"\", username: \"\" };\n  const [user, setUser] = useState(initialFormState);\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setUser({ ...user, [name]: value });\n  };\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        if (!user.name || !user.username) return;\n        props.addUser(user);\n        setUser(initialFormState);\n      }}\n    >\n      <label>Name</label>\n      <input type=\"text\" name=\"name\" value={user.name} onChange={handleInputChange} />\n      <label>Username</label>\n      <input type=\"text\" name=\"username\" value={user.username} onChange={handleInputChange} />\n      <button>Add new user</button>\n    </form>\n  );\n};\n\n\n//forms/EditUserForm.js\nconst EditUserForm = props => {\n  const [user, setUser] = useState(props.currentUser);\n\n  useEffect(() => { setUser(props.currentUser) },\n    [props]\n  );\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setUser({ ...user, [name]: value });\n  };\n\n  return (\n    <form onSubmit={e => { e.preventDefault(); props.updateUser(user.id, user) }} >\n      <label>Name</label>\n      <input type=\"text\" name=\"name\" value={user.name} onChange={handleInputChange} />\n      <label>Username</label>\n      <input type=\"text\" name=\"username\" value={user.username} onChange={handleInputChange} />\n      <button>Update user</button>\n      <button onClick={() => props.setEditing(false)}>Cancel</button>\n    </form>\n  );\n};\n\n\n//tables/UserTable.js\nconst UserTable = props => (\n  <table>\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Username</th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      {props.users.length > 0 ? (\n        props.users.map(user => (\n          <tr key={user.id}>\n            <td>{user.name}</td>\n            <td>{user.username}</td>\n            <td>\n              <button onClick={() => props.editRow(user)}>Edit</button>\n              <button onClick={() => props.deleteUser(user.id)}>Delete</button>\n            </td>\n          </tr>\n        ))\n      ) : (\n        <tr>\n          <td colSpan={3}>No users</td>\n        </tr>\n      )}\n    </tbody>\n  </table>\n);\n\n\n//App.js\nimport UserTable from \"./tables/UserTable\";\nimport AddUserForm from \"./forms/AddUserForm\";\nimport EditUserForm from \"./forms/EditUserForm\";\n\nconst App = () => {\n  const usersData = [\n    { id: 1, name: \"AAA\", username: \"aiueo\" },\n    { id: 2, name: \"BBB\", username: \"kakikukeko\" },\n    { id: 3, name: \"CCC\", username: \"sasisuseso\" }\n  ];\n\n  const [users, setUsers] = useState(usersData);\n\n  const addUser = user => {\n    user.id = users.length + 1;\n    setUsers([...users, user]);\n  };\n\n  const deleteUser = id => {\n    setUsers(users.filter(user => user.id !== id));\n  };\n\n  const [editing, setEditing] = useState(false);\n  const initialFormState = { id: null, name: \"\", username: \"\" };\n  const [currentUser, setCurrentUser] = useState(initialFormState);\n\n  const editRow = user => {\n    setEditing(true);\n    setCurrentUser({ id: user.id, name: user.name, username: user.username });\n  };\n\n  const updateUser = (id, updateUser) => {\n    setEditing(false);\n    setUsers(users.map(user => (user.id === id ? updateUser : user)));\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>CRUD App with Hooks</h1>\n      <div className=\"flex-row\">\n        <div className=\"flex-large\">\n          {editing ? (\n            <div>\n              <h2>Eidt User</h2>\n              <EditUserForm\n                editing={editing}\n                setEditing={setEditing}\n                currentUser={currentUser}\n                updateUser={updateUser}\n              />\n            </div>\n          ) : (\n            <div>\n              <h2>Add User</h2>\n              <AddUserForm addUser={addUser} />\n            </div>\n          )}\n        </div>\n        <div className=\"flex-large\">\n          <h2>View users</h2>\n          <UserTable users={users} deleteUser={deleteUser} editRow={editRow} />\n        </div>\n      </div>\n    </div>\n  );\n};`.trim();\n\n\nconst curd = `\nclass App extends Component {\n  state = {\n    mockData: [],\n    text: \"\",\n    id: Math.random(1,100),\n    editItem: false\n  };\n  \n  handleChange = e => {\n    this.setState({text: e.target.value});\n  };\n  \n  handleAdd = e => {\n    e.preventDefault();\n    if (this.state.text.length === 0) return;\n\n    const newItem = {\n      id: this.state.id,\n      title: this.state.text\n    };\n    \n    const updatedItems = [...this.state.mockData].concat(newItem);\n\n    this.setState({\n      mockData: updatedItems,\n      text: \"\",\n      id: Math.random(1,100),\n      editItem: false\n    });\n  };\n  \n  clearList = () => {\n    this.setState({ mockData: [] });\n    };\n    \n  handleDelete = (id) => {\n      this.setState({ mockData: this.state.mockData.filter(item => item.id !== id) });\n    };\n    \n  handleEdit = id => {\n    const filteredItems = this.state.mockData.filter(item => item.id !== id);\n    const selectedItem = this.state.mockData.find(item => item.id === id);\n\n    this.setState({\n      mockData: filteredItems,\n      text: selectedItem.title,\n      editItem: true,\n      id: id\n    });\n  };\n  \n  render() {\n    return (\n      <div>\n         <form onSubmit={this.handleAdd}>\n          <div>\n            <input type=\"text\" value={this.state.text} onChange={this.handleChange} />\n          </div>\n          <button>{this.state.editItem ? \"edit item\" : \"add item\"}</button>\n        </form>\n            \n        <ul>\n        {this.state.mockData.map(item => {\n          return (\n            <div>\n              <h1>{item.title}</h1>\n            \n              <button onClick={() => this.handleEdit(item.id)}>edit</button>\n              <button onClick={() => this.handleDelete(item.id)}>delete</button>\n            </div>\n          );\n        })}\n\n        <button onClick={this.clearList}>clear list</button>\n        </ul>\n      </div>\n    );\n  }\n}`.trim();\n\n\nclass ContextMeth extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n            <h3>1. Input</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={inputs}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>2. Curd</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={curd2}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>3. ReactCurd JsonPlaceholder</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={expensAction}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>4. Curd</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={curd}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>5. Context API State</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={states}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(ContextMeth));\n"],"sourceRoot":""}