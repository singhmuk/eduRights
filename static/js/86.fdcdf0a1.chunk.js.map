{"version":3,"sources":["components/ReactJs/prismCode.js","components/Redux/sidebar.js","components/Redux/deep/counter.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","counters","dropdawn","toggle","CountersRedux","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/86.fdcdf0a1.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/introRedux' className={classes.line}>Intro</Link></MenuItem>\n        <MenuItem><Link to='/counter' className={classes.line}>Counter Select</Link></MenuItem>\n        <MenuItem><Link to='/reduxState' className={classes.line}>Redux State-Curd</Link></MenuItem>\n        <MenuItem><Link to='/reduxMethods' className={classes.line}>Redux Methods</Link></MenuItem>\n        <MenuItem><Link to='/react_redux' className={classes.line}>Filter</Link></MenuItem>\n        <MenuItem><Link to='/reduxCurd' className={classes.line}>Redux Curd</Link></MenuItem>\n        <MenuItem><Link to='/expenseTraMern' className={classes.line}>ReactCurdPlaceholder</Link></MenuItem>\n        <MenuItem><Link to='/contactKeeperApi' className={classes.line}>ReactReduxCurdPlaceholder</Link></MenuItem>\n        <MenuItem><Link to='/mernRedux' className={classes.line}>Mern Redux</Link></MenuItem>\n        <MenuItem><Link to='/signUp' className={classes.line}>SignUP</Link></MenuItem>\n        <MenuItem><Link to='/git' className={classes.line}>Git</Link></MenuItem>\n        <MenuItem><Link to='/gitConcepts' className={classes.line}>Git Concepts</Link></MenuItem>\n        <MenuItem><Link to='/skills' className={classes.line}>Skills</Link></MenuItem>\n        <MenuItem><Link to='/comskills' className={classes.line}>Comskills</Link></MenuItem>\n        <MenuItem><Link to='/techskills' className={classes.line}>Techskills</Link></MenuItem>\n        <MenuItem><Link to='/techinto' className={classes.line}>TechsInto</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst counters = `\n//App.js\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { increment, decrement, reset } from \"./actions/actions\";\n\nconst App = ({ count, onDecrement, onIncrement, onReset }) => (\n  <div>\n    {console.log(count)}\n    <p>Count: {count}</p>\n    <button onClick={onDecrement}>-</button>\n    <button onClick={onReset}>Reset</button>\n    <button onClick={onIncrement}>+</button>\n  </div>\n);\n\nconst mapStateToProps = (state) => ({\n  count: state.count,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIncrement: () => {\n      dispatch(increment());\n    },\n    onDecrement: () => {\n      dispatch(decrement());\n    },\n    onReset: () => {\n      dispatch(reset());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n//actions/types.js\nexport const INCREMENT = \"INCREMENT\";\nexport const DECREMENT = \"DECREMENT\";\nexport const RESET = \"RESET\";\n\n\n\n//actions/actions.js\nimport { INCREMENT, DECREMENT, RESET } from \"./types\";\n\nexport function increment() {\n  return {\n    type: INCREMENT,\n  };\n}\n\nexport function decrement() {\n  return {\n    type: DECREMENT,\n  };\n}\n\nexport function reset() {\n  return {\n    type: RESET,\n  };\n}\n\n\n\n//reducers/index.js\nimport { INCREMENT, DECREMENT, RESET } from \"../actions/types\";\n\nconst initialState = {\n  count: 0,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      return {\n        count: state.count + 1,\n      };\n    case DECREMENT:\n      return {\n        count: state.count - 1,\n      };\n    case RESET:\n      return {\n        count: (state.count = 0),\n      };\n    default:\n      return state;\n  }\n};\n\n\n\n//index.js\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n\n//store.js\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(\n  rootReducer, \n  compose(applyMiddleware(thunk))\n  );\n\nexport default store;\n`.trim();\n\nconst dropdawn = `\n//store.js\nimport { compose, createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducer from './reducers'\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  compose(applyMiddleware(sagaMiddleware))\n)\n\nexport default store;\n\n\n//components/addPlayer.js\nimport React, { Component, useState } from 'react';\n\n\nclass AddPlayer extends Component {\n  state = {\n    playerName: this.props.playerName,\n    selectPlayer: this.props.selectPlayer,\n    selectTeam: this.props.selectTeam\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onAddPlayer(this.state);\n    this.setState({\n      playerName: '',\n      selectPlayer: '',\n      selectTeam: ''\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          Select Team\n          <div>\n            <select className=\"selectFields\"\n              type=\"text\"\n              name=\"teamName\"\n              id=\"inputTodoPriority\"\n              value={this.state.teamName}\n              onChange={this.handleChange}\n            >\n              <option>Select</option>\n              <option>Team A</option>\n              <option>Team B</option>\n            </select>\n          </div>\n\n          <br />\n          Enter Player Name\n          <div>\n            <input className=\"input-text\"\n              name=\"playerName\"\n              type=\"text\"\n              value={this.state.playerName}\n              onChange={this.handleChange}\n              placeholder=\"Enter Name\"\n              />\n          </div>\n\n          <br />\n          <div>\n          Select Player Type:\n            <select className=\"selectFields\"\n              type=\"text\"\n              name=\"playerType\"\n              id=\"inputTodoResponsible\"\n              value={this.state.playerType}\n              onChange={this.handleChange}\n            >\n              <option>Select</option>\n              <option>B</option>\n              <option>Blw</option>\n            </select><br />\n          </div>\n\n          <div>\n            <button variant=\"contained\"  type=\"submit\"\n            >Submit</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\n\nexport default AddPlayer;\n\n\n\n//components/lists.js\n//Lists component is root module.\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport AddPlayer from './addPlayer'\n\n\nclass Lists extends Component {\n  state = {\n    playerName:this.props.playerName\n  };\n\n  handleAdd = (addPlayers) => {\n    this.setState({ playerName: [...this.state.playerName, addPlayers] });\n  }\n\n  render() {\n    return (\n      <div>\n        Add Player\n         <AddPlayer onAddPlayer={this.handleAdd} />\n          Team A\n          {this.state.playerName.map((player, index) =>\n            <div key={index}>\n              {\n                (player.teamName === 'Team A') ?\n                  <div>{player.playerName} ({player.playerType})</div>\n                : ''\n              }\n            </div>\n          )}\n\n        <div>\n          Team B\n              {this.state.playerName.map((player, index) => {\n                return (\n                    <div key={index}>\n                      {\n                          (player.teamName === 'Team B') ?\n                          <div>{player.playerName} ({player.playerType})</div>\n                          : ''\n                      }\n                    </div>\n                  )\n              })}\n            </div>\n        </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => ({\n  playerName: state.addTeamsObj\n})\n\n\nexport default connect(mapStateToProps, null)(Lists);\n\n\n\n//reducers/addTeams.js\n// import { v4 as uuidv4 } from 'uuid';\n\n\nconst initalState = [\n  {\n    id: 1,\n    playerName: \"Virat Kohali\",\n    playerType: \"B\",\n    teamName: \"Team A\",\n  },\n  {\n    id: 2,\n    playerName: \"Axar Patel\",\n    playerType: \"Blw\",\n    teamName: \"Team B\",\n  }\n];;\n\nconst addTeams = (state = initalState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case \"CREATE_PLAYER\":\n      return [...state, {\n        playerName: payload.playerName,\n        playerType: payload.playerType,\n        teamName: \"\",\n        playerList: [],\n      }];\n\n    default:\n      return state;\n  }\n};`.trim();\n\nconst toggle = `\n//App.js\nimport { toggleFun } from \"./actions/toggleAction\";\n\nconst App = (props) => {\n  return (\n    <div>\n      {props.data ? \"Show\" : \"Hide\"}\n      <button onClick={props.onToggle}>Toggle</button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data.toggle,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onToggle: () => {\n      dispatch(toggleFun());\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n//reducers/toggleReducers.js\nimport { TOGGLES } from \"../actions/types\";\n\nconst initialState = {\n  toggle: true,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  console.log(\"reducers\", state.toggle);\n  switch (type) {\n    case TOGGLES:\n      return {\n        ...state,\n        toggle: !state.toggle,\n      };\n\n    default:\n      return state;\n  }\n};\n\n\n\n//actions/types.js\nexport const TOGGLES = \"TOGGLES\";\n\n\n\n//actions/toggleAction.js\nimport { TOGGLES } from \"./types\";\n\nexport const toggleFun = () => {\n  return {\n    type: TOGGLES,\n    payload: null,\n  };\n};\n`.trim();\n\n\n\nclass CountersRedux extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Counter</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={counters}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Dropdawn</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={dropdawn}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>Toggle</b>\n              <div style={titles}>\n                <PrismCode\n                  code={toggle}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(CountersRedux));\n"],"sourceRoot":""}