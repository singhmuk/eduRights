{"version":3,"sources":["components/ReactJs/prismCode.js","components/ReactJs/sidebar.js","components/ReactJs/reactJs_hooks/hackeRank.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","operators","Review","arrays","Dictionaries","Recursions","Binary","tdArrays","Inheritance","Abstract","Scope","Linked","Interfaces","Generics","HackeRank","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/71.2b350774.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/introReact' className={classes.line}>Intro-Lazy-Children</Link></MenuItem>\n        <MenuItem><Link to='/reactInter' className={classes.line}>Intro</Link></MenuItem>\n        <MenuItem><Link to='/codingInter' className={classes.line}>CodesPro</Link></MenuItem>\n        <MenuItem><Link to='/mainCompo' className={classes.line}>Event-hoc-form<br />curd-slider</Link></MenuItem>\n        <MenuItem><Link to='/pureComp' className={classes.line}>PureComp-conComp</Link></MenuItem>\n        <MenuItem><Link to='/useStates' className={classes.line}>useMultiState</Link></MenuItem>\n        <MenuItem><Link to='/contextHooks' className={classes.line}>Context Hooks</Link></MenuItem>\n        <MenuItem><Link to='/customHooks' className={classes.line}>CustomHooks-memo</Link></MenuItem>\n        <MenuItem><Link to='/useReducersSta' className={classes.line}>UseReducers</Link></MenuItem>\n        <MenuItem><Link to='/contextMethods' className={classes.line}>Curd Hooks</Link></MenuItem>\n        <MenuItem><Link to='/jsonPlaceholder' className={classes.line}>JsonPlaceholder</Link></MenuItem>\n        <MenuItem><Link to='/async_await' className={classes.line}>Async-await-sideMenu<br />Mouse hover</Link></MenuItem>\n        <MenuItem><Link to='/ticGame' className={classes.line}>Share-maxMinDate<br />moveBtn-slideshow</Link></MenuItem>\n        <MenuItem><Link to='/linkGet' className={classes.line}>LinkGet</Link></MenuItem>\n        <MenuItem><Link to='/numberFormats' className={classes.line}>Random NumFor-biToDe<br /> Validations Step DateTimw</Link></MenuItem>\n        <MenuItem><Link to='/models' className={classes.line}>Models-chidData-csv<br />Icon-router</Link></MenuItem>\n        <MenuItem><Link to='/like' className={classes.line}>Like-checkbox-radio<br />select-scroll</Link></MenuItem>\n        <MenuItem><Link to='/textEditors' className={classes.line}>TextEditors-paginations<br />translator-sortCheck</Link></MenuItem>\n        <MenuItem><Link to='/sortItems' className={classes.line}>IncOnClick-pushBtn-fizzBuzz<br />show-addDocs-ratings</Link></MenuItem>\n        <MenuItem><Link to='/serverSideRend' className={classes.line}>Jwt-multiSel</Link></MenuItem>\n        <MenuItem><Link to='/dropdownSelect' className={classes.line}>SelectFtr-checkFtr-updtCrd</Link></MenuItem>\n        <MenuItem><Link to='/kanban' className={classes.line}>Kanban</Link></MenuItem>\n        <MenuItem><Link to='/hackeRank' className={classes.line}>HackeRank</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst operators = `\nfunction solve(meal_cost, tip_percent, tax_percent) {\n\n  let total_cost;\n  total_cost =  meal_cost + meal_cost * tip_percent/100 + meal_cost * tax_percent/100;\n  console.log(Math.round(total_cost));\n}\n\nfunction main() {\n  const meal_cost = parseFloat(10.20);\n\n  const tip_percent = parseInt(10, 10);\n\n  const tax_percent = parseInt(10, 10);\n\n  solve(meal_cost, tip_percent, tax_percent);\n}\nmain();`.trim();\n\nconst Review = `\nfunction processData(input) {\n  var myArray = input.split(\"\\n\");                                    //Splitting string between each newline into myArray values.\n                                                                      //input is: \"2\\nHacker\\nRank\". myArray = [[2], [\"Hacker\"], [\"Rank\"]], [[0], [1], [2]]\n  var evenChar = \"\";\n  var oddChar = \"\";\n\n  for (var i = 1; i= myArray; i++){                                   //Starting from 1 (Hacker) to length of array.\n      for (var j = 0; j -myArray[i]; j++) {\n          if (j%2 == 0) {\n              evenChar += myArray[i][j];                              //Therefore, add value to evenChar string.\n          } else {\n              oddChar += myArray[i][j];                               //If odd, add value to oddChar string.\n          }\n      }\n      console.log(evenChar + \" \" + oddChar);\n      evenChar = \"\";\n      oddChar = \"\";\n  }\n}\n\nprocessData('Hacker Rank')`.trim();\n\nconst arrays = `\nfunction main() {\n  const n = parseInt(readLine(), 10);\n\n  const arr = readLine().split(' ').map(arrTemp => parseInt(arrTemp, 10));\n\n  console.log(arr.reverse().join(' '));\n}\n\nmain();\n\n\n//2\nfunction main2() {\n  const n = parseInt(readLine(), 10);\n\n  const arr = readLine().split(' ').map(arrTemp => parseInt(arrTemp, 10));\n\n  const reverseArray = (array) => {\n      let temp = null;\n      const length = array.length;\n      \n      for (let i = 0; i < length / 2; i++){\n          temp = array[i];\n          array[i] = array[length - 1 - i];\n          array[length - 1 - i] = temp;\n      }\n\n      return array;\n  }\n  console.log(reverseArray(arr).join(' '));\n}\n\n\nmain2();`.trim();\n\nconst Dictionaries = `\nfunction main() {\n  var n = parseInt(10);\n\n  pbookname = [];\n  pbooknums = [];\n  query = [];\n  \n  for (i=0; i<n; i++) {\n       pbook = [];\n       pbook = 'readLine'.split(' ');\n       pbookname.push(pbook[0])\n       pbooknums.push(pbook[1]);  \n  }\n  \n  for (j=i; j<n*2; j++) {\n      if ('readLine' != \"\") {\n          query = 'readLine'; \n          pos = pbookname.indexOf(query);\n          if (pos < 0) {\n              console.log(\"Not found\");\n          } else {\n              console.log(query +\"=\"+ pbooknums[pos]);\n          }\n      } else {\n          break;\n      }\n  }\n  \n  /*\n  console.log(\"Names \" + pbookname);\n  console.log(\"Numbers \" + pbooknums);\n  console.log(\"Queries \" + query);\n  */\n}\nmain();`.trim();\n\nconst Recursions = `\nfunction factorial(n) {\n  return (!+n) ? 1 : n * factorial(n - 1);\n}\n\nfactorial(4);\n\n\n//2\nlet memoization = [0, 1];\n\nconst factorial2 = (n) => {\n  (typeof memoization[n] !== 'number') && (\n      memoization[n] = (n - 1) > 0 ? n * factorial(n - 1) : 1 \n  );\n\n  return memoization[n];\n}\n\n\nfactorial2(4);`.trim();\n\nconst Binary = `\nfunction main() {\n  let n = parseInt(10, 10);\n  let values = [];\n\n  while (+n != 0) {\n      values.push(n % 2);\n\n      n = Math.floor(n / 2);\n  }\n\n  let { result } = values.reduce((target, item, index) => {\n      item\n          ? target['accumulator']++\n          : (target['accumulator'] = 0);\n\n      target['accumulator'] > target['result'] && (target['result'] = target['accumulator']);\n\n      return target;\n  }, { accumulator: 0, result: 0 });\n\n  console.log(result);\n}\n\nmain();\n\n\n//2\nfunction main2() {\n  const n = parseInt(10, 10);\n  let result = 0;\n\n  const temp = n.toString(2).split('').reduce((target, num) => {\n      let value = Number(num) > 0 ? Number(target) + Number(num) : (\n          result = target > result ? target : result,\n          0\n      );\n\n      return value;\n\n  }, 0);\n\n  console.log(result - temp > 0 ? result : temp)\n}\n\nmain2();\n\n\n//3\nfunction main3() {\n  const n = parseInt(10, 10);\n  const array = n.toString(2).split('');\n  let max = 0;\n  let cur = 0;\n\n  for (let i = 0, itotal = array.length; i < itotal; i++) {\n      if (array[i] == 1) {\n          cur++;\n      } else if (array[i] == 0) {\n          if (cur > max) {\n              max = cur;\n          }\n          cur = 0;\n      }\n  }\n\n  if (cur > max) {\n      max = cur;\n  }\n  \n  console.log(max);\n}\n\nmain3();`.trim();\n\nconst tdArrays = `\nfunction main() {\n  let arr = Array(6);\n\n  for (let i = 0; i < 6; i++) {\n    arr[i] = 'readLine'\n      .split(\" \")\n      .map((arrTemp) => parseInt(arrTemp, 10));\n  }\n\n  let sumArr = [];\n  for (let i = 0; i < arr.length - 2; i++) {\n    for (let j = 0; j < arr[i].length - 2; j++) {\n      let sum = 0;\n      sum = arr[i][j] + arr[i][j + 1] + arr[i][j + 2] \n            + arr[i + 1][j + 1] \n            + arr[i + 2][j] + arr[i + 2][j + 1] + arr[i + 2][j + 2];\n      sumArr.push(sum);\n    }\n  }\n  console.log(Math.max(...sumArr));\n  return;\n}\n\nmain();\n\n\n//2\nfunction main2() {\n  let arr = [];\n  for(arr_i = 0; arr_i < 6; arr_i++){\n     arr[arr_i] = 'readLine'.split(' ');\n     arr[arr_i] = arr[arr_i].map(Number);\n  }\n\n  //totalSum initializes at -63 because that is lowest possible outcome for any hourglass.\n  //-9 -9 -9\n  //   -9\n  //-9 -9 -9 = -63    \n  let totalSum = -63;\n  for (let i=0; i < arr.length-2; i++) {\n      for (let j=0, curSum = 0; j < arr[i].length-2; j++) {\n          //                  //i=0; j=0     i=0; j=1    i=0; j=2    i=0; j=3\n          curSum = arr[i][j] +     //arr[0][0]    arr[0][1]   arr[0][2]   arr[0][3]\n                   arr[i][j+1] +   //arr[0][1]    arr[0][2]   arr[0][3]   arr[0][4]\n                   arr[i][j+2] +   //arr[0][2]    arr[0][3]   arr[0][4]   arr[0][5]\n                   arr[i+1][j+1] + //arr[1][1]    arr[1][2]   arr[1][3]   arr[1][4]\n                   arr[i+2][j] +   //arr[2][0]    arr[2][1]   arr[2][2]   arr[2][3]\n                   arr[i+2][j+1] + //arr[2][1]    arr[2][2]   arr[2][3]   arr[2][4]\n                   arr[i+2][j+2];  //arr[2][2]    arr[2][3]   arr[2][4]   arr[2][5]\n          if (curSum > totalSum) { //We're checking for MAX hourglass value, so if curSum is greater, set that one.\n              totalSum = curSum;\n          }\n      }\n  }\n  console.log(totalSum);\n}\n\nmain2();`.trim();\n\nconst Inheritance = `\nconsole.clear();\nclass Person{\n  constructor(firstName, lastName, id) {\n    this.firstName = firstName;\n\t\tthis.lastName = lastName;\n\t\tthis.id = id;\n  }\n\tprintPerson() {\n    console.log('Name: '$'{this.firstName} '$'{this.lastName}, ID: '$'{this.id}');\n  }\n}\n\nclass Student extends Person{\n  constructor(firstName, lastName, id, scores){\n    super(firstName, lastName, id);\n    this.grade = this.calcGrade(scores)\n  }\n  printPerson() {\n    super.printPerson();\n    console.log('Grade: '$'{this.grade}');\n  }\n  calcGrade(scores) {\n    let avg = scores.reduce((prev, curr, i, arr)=>{\n      return ( (prev + curr) /arr.length )\n    }, 0);\n    if(avg>=40 &&  avg<55) return 'D';\n    else if(avg>=55 &&  avg<70) return 'P';\n    else if(avg>=70 &&  avg<80) return 'A';\n    else if(avg>=80 &&  avg<90) return 'E';\n    else if(avg>=90 &&  avg<=100) return 'O';\n  }\n}\n\nlet ivan = new Student('Ivan', 'Ivanov', '222', [80, 90, 100]);\nivan.printPerson();`.trim();\n\nconst Abstract = `\n// class Book{\n//     constructor(title, author, price) {\n//       this.title = title;\n//           this.author = author;\n//           this.price = price;\n//     }\n//     display() {\n//       console.log('Name: '$'{this.title} '$'{this.author}, ID: '$'{this.price}');\n//     }\n//   }\n\nclass MyBook extends Book {\n    constructor(title, author, price) {\n        super(title, author);\n\n        this.price = price;\n    }\n\n    display() {\n        console.log('Title: '$'{this.title}\\nAuthor: '$'{this.author}\\nPrice: '$'{this.price}');\n    }\n}\n`.trim();\n\nconst Scope = `\nlet input = \"3\\n1 2 5\";\nconst difference = () => {\n  const result = input.split('\\n')[1].split(' ').reduce(\n    (target, el) => {\n      let { min, max } = target;\n\n      target[\"min\"] = el > min ? el : min;\n      target[\"max\"] = el < max ? el : max;\n\n      return target;\n    },\n    { min: -999, max: 999 }\n  );\n\n  console.log(Math.abs(result[\"max\"] - result[\"min\"]));\n};\n\ndifference();\n\n\n//2\nlet input = \"3\\n1 2 5\";\n\nfunction difference2(input) {\n  const split = input.split(\"\\n\");\n  const length = +split[0];\n  const array = split[1].split(\" \");\n  console.log(array, length);\n  let maximum = 0;\n  let result = 0;\n  \n  array.forEach(value1 => {\n    array.forEach(value2 =>{\n      result = Math.abs(value1-value2);\n      if(result > maximum) {\n        maximum = result;\n      }\n    })\n  });\n  console.log(maximum);\n}\n\nconsole.log(input);\n\ndifference2(input);`.trim();\n\nconst Linked = `\nfunction LinkedList() {\n  this.head = null;\n  this.tail = null;\n}\n\nfunction Node(value, next, prev) {\n  this.value = value;\n  this.next = next;\n  this.prev = prev;\n}\n\n\n\nLinkedList.prototype.addToHead = function(value) {\n  var newNode = new Node(value, this.head, null);\n  \n  if (this.head) this.head.prev = newNode;\n  else this.tail = newNode;\n\n  this.head = newNode;\n};\n\nLinkedList.prototype.addToTail = function(value) {\n  var newNode = new Node(value, null, this.tail);\n  \n  if (this.tail) this.tail.next = newNode;\n  else this.head = newNode;\n  \n  this.tail = newNode;\n};\n\nLinkedList.prototype.removeFromHead = function() {\n  if (!this.head) return null;                                                    // empty list, return null\n\n  var value = this.head.value;\n  this.head = this.head.next;                                                     // update head pointer to new head\n  \n  if (this.head) this.head.prev = null;\n  else this.tail = null;                                                          // linked list is empty\n\n  return value;\n};\n\nLinkedList.prototype.removeFromTail = function() {\n  if (!this.tail) return null;\n  \n  var value = this.tail.value;\n  \n  this.tail = this.tail.prev;\n  \n  if (this.tail) this.tail.next = null;\n  else this.head = null;\n  \n  return value;\n}\n\nLinkedList.prototype.search = function(searchValue) {\n  var currentNode = this.head;\n  \n  while (currentNode) {\n    if (currentNode.value === searchValue) return currentNode;\n    currentNode = currentNode.next;\n  }\n  return null;\n}\n\nLinkedList.prototype.indexOf = function(searchValue) {\n  var currentNode = this.head;\n  var currentIndex = 0;\n  var indexes = [];\n  \n  while (currentNode) {\n    if (currentNode.value === searchValue) indexes.push(currentIndex);\n    currentNode = currentNode.next;\n    currentIndex++;\n  }\n  return indexes;\n}\n\n\nvar ll = new LinkedList();\n\nll.addToHead(10);\nll.addToTail(15);\nll.addToTail(99);\nll.addToTail(105);\nll.addToTail(40);\nll.addToTail(20);\nll.removeFromTail();\n\nconsole.log('LOG: linked list object');\nconsole.log(ll);                                                              // should show head 10 and tail as node 40\nconsole.log('LOG: search for node with 99');\nconsole.log(ll.search(99));                                                   // should show node object with value 99\nconsole.log('LOG: find indexOf node with 99');\nconsole.log(ll.indexOf(99));                                                  // should log [2]\n`.trim();\n\nconst Interfaces = `\nclass AdvancedArithmetic {\n  divisor(n) {\n    return n || 0;\n  };\n}\n\nclass Calculator extends AdvancedArithmetic {\n  constructor(props) {\n    super(props);\n\n    this.divisor = this.divisorSum.bind(this);\n  }\n\n  divisorSum(n) {\n    return Array(n).fill(0).reduce((target, item, index) => {\n      !(n % (index + 1)) && (target += (index + 1)) ;\n\n      return target;\n    }, 0);\n  }\n}\n\nfunction Solution () {\n  const n = 6;\n\n  const myCalculator = new Calculator();\n\n  let sum = myCalculator.divisor(n);\n\n  console.log(\"I implemented: AdvancedArithmetic\\n\" + sum); \n}\n\nSolution();`.trim();\n\nconst Generics = ``.trim();\n\n\n\nclass HackeRank extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. Operators</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={operators}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>2. Let's Review</h3>\n              Ie: \"Hacker\" and  \"Rank\" becomes:<br />\n              \"Hce akr\" even values - odd values [H, a, c, k, e, r] equals [0, 1, 2, 3, 4, 5]<br />\n              \"Rn ak\" even values - odd values [R, a, n, k] equals [0, 1, 2, 3]<br /><br />\n              <div style={titles}>\n                <PrismCode\n                  code={Review}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>3. Arrays</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={arrays}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>4. Dictionaries and Maps</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Dictionaries}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>5. Recursion</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Recursions}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>6. Binary Numbers</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Binary}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>7. 2D Arrays</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={tdArrays}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>8. Inheritance</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Inheritance}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>9. Abstract Classes</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Abstract}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>10. Scope</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Scope}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>11. Linked List</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Linked}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>12. Interfaces</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Interfaces}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>13. Generics</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Generics}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(HackeRank));\n"],"sourceRoot":""}