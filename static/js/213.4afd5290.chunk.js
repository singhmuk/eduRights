(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[213],{140:function(e,n,t){"use strict";t.d(n,"a",(function(){return d}));var a=t(45),r=t(28),l=t(136),s=t(137),c=t(139),i=t(0),o=t.n(i),u=t(138),m=t.n(u),d=(t(59),function(e){function n(e){var t;return Object(a.a)(this,n),(t=Object(l.a)(this,Object(s.a)(n).call(this,e))).highlight=function(){t.ref&&t.ref.current&&m.a.highlightElement(t.ref.current)},t.ref=o.a.createRef(),t}return Object(c.a)(n,e),Object(r.a)(n,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,n=e.code,t=(e.plugins,e.language);return o.a.createElement("pre",{className:"code-prism"},o.a.createElement("code",{ref:this.ref,className:"language-".concat(t)},n.trim()))}}]),n}(o.a.Component))},141:function(e,n,t){},149:function(e,n,t){"use strict";t.d(n,"a",(function(){return u}));var a=t(0),r=t.n(a),l=t(26),s=t(297),c=t(295),i=t(114),o=Object(i.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function u(){var e=o();return r.a.createElement("div",{className:e.root},r.a.createElement(c.a,null,r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/introNodejs",className:e.line},"Intro")),r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/ejsNode",className:e.line},"Basics")),r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/buffers",className:e.line},"Buffer")),r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/childs",className:e.line},"Child Process-fork()-exec()")),r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/tut_1",className:e.line},"Callback")),r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/filSystems",className:e.line},"File System")),r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/evtNode",className:e.line},"EvtEmter-Capture data")),r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/codes",className:e.line},"Codes")),r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/url_shortener",className:e.line},"Url_Shortener")),r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/stripe_payment",className:e.line},"stripe_payment")),r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/sendEmail",className:e.line},"sendEmail")),r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/search_pagination",className:e.line},"search_pagination")),r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/push_notifications",className:e.line},"push_notifications")),r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/nodetext",className:e.line},"nodetext")),r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/file_upload",className:e.line},"file_upload")),r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/e_acco_veri",className:e.line},"email_acco_veri")),r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/2fa_speakearst",className:e.line},"2fa_speakearst")),r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/authentications",className:e.line},"SignUp")),r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/serverSide",className:e.line},"Server Side")),r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/tut_2",className:e.line},"Geocode-Upload")),r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/tut_6",className:e.line},"Chat")),r.a.createElement(s.a,null,r.a.createElement(l.b,{to:"/udemy",className:e.line},"Udemy"))),r.a.createElement("div",null))}},381:function(e,n,t){"use strict";t.r(n);var a=t(45),r=t(28),l=t(136),s=t(137),c=t(139),i=t(0),o=t.n(i),u=t(138),m=t.n(u),d=t(120),E=t(57),p=t(296),g=t(5),b=(t(141),t(149)),h=t(140),f={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},v="\nconst userSchema = new Schems({\n  name:{type:String, trim:true, required: true, max: 64},\n  email:{type:String, trim:true, required: true, unique: true, lowercase: true},\n  password:{type:String, required: true}\n}, {timestamps: true})\n\nmodule.exports = mongoose.model('User', userSchema);".trim(),j="\nconst User = require('../models/user');\nconst jwt = require('jsonwebtoken');\n\nconst mailgun = require('mailgun-js');\nconst DOMAIN = 'sandboxf26a5c38b52e4da68cd059e6c4d2daba.mailgun.org';\nconst mg = mailgun({apiKey: process.env.MAILGUN_APIKEY, domain: DOMAIN});\n\n//create user without email account activation\nexports.signup = (req, res) => {\nconst { name, email, password } = req.body;\n\nUser.findOne({email}).exec((err, user) => {\n    if(user){\n        return res.status(400).json({error:\"User with this email is already exist\"});\n    }\n\nconst token = jwt.sign({name, email, password}, process.env.JWT_ACC_ACTIVATE, { expiresIn: '20m'});\n\nconst data = {\n    from: 'noreply@hello.com',\n    to: email,\n    subject: 'Account Activation Link',\n    html: '\n    <h2>Please click on given link to activate you account</h2>\n    <p>'$;{process.env.CLIENT_URL}/authentication/activate/'$'{token}'\n};\nmg.messages().send(data, function(error, body) {\n    if(error){\n        return res.json({error: error.message})\n    }\n    return res.json({message: 'email has been sent, Kindly activate your account'})\n    console.log(body)\n        });\n    })\n}\n\n\nexports.activateAccount = (req, res) => {\n    const { token } = req.body;\n    if(token){\n        jwt.verify(token, process.env.JWT_ACC_ACTIVATE, function(err, decodedToken){\n            if(err){\n                return res.status(400).json({error: 'Incorrect or Expired link'})\n            }\n\n            const { name, email, password } = decodedToken;\n            User.findOne({email}).exec((err, user) => {\n                if(user){\n                    return res.status(400).json({error:\"User with this email is already exist\"});\n                }\n        \n                let newUser = new User({name, email, password});\n                newUser.save((err, success) => {\n                    if(err){\n                        return res.status(400).json({error: 'error activating account'})\n                    }\n                    res.json({message: \"SignUp Success\"})\n                })\n            })\n        })\n    }\n    else{\n        return res.json({error: 'Something goes wrong!'})\n    }\n}".trim(),N="\nconst { signup, activateAccount } = require('../controllers/auth');\n\nrouter.post('/signup', signup);\nrouter.post('/email-activate', activateAccount);\n\nmodule.exports = router;".trim(),y="\nrequire(\"./config/db\");\nconst authRoutes = require('./routes/auth');".trim(),_=function(e){function n(){return Object(a.a)(this,n),Object(l.a)(this,Object(s.a)(n).apply(this,arguments))}return Object(c.a)(n,e),Object(r.a)(n,[{key:"componentDidMount",value:function(){setTimeout((function(){return m.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return o.a.createElement(d.a,{container:!0},o.a.createElement(d.a,{item:!0,xs:2},o.a.createElement(E.a,{className:e.paper},o.a.createElement("h4",null,o.a.createElement(b.a,null)))),o.a.createElement(d.a,{item:!0,xs:10},o.a.createElement(E.a,{className:e.paper},o.a.createElement(p.a,null,o.a.createElement("h3",null,"Email_Account_Verification"),o.a.createElement("b",null,"models/user.js"),o.a.createElement("div",{style:f},o.a.createElement(h.a,{code:v,language:"js",plugins:["line-numbers"]})),o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement("b",null,"controllers/auth.js"),o.a.createElement("div",{style:f},o.a.createElement(h.a,{code:j,language:"js",plugins:["line-numbers"]})),o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement("b",null,"routes/auth.js"),o.a.createElement("div",{style:f},o.a.createElement(h.a,{code:N,language:"js",plugins:["line-numbers"]})),o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement("b",null,"server.js"),o.a.createElement("div",{style:f},o.a.createElement(h.a,{code:y,language:"js",plugins:["line-numbers"]}))))))}}]),n}(i.Component);n.default=Object(g.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(_)}}]);
//# sourceMappingURL=213.4afd5290.chunk.js.map