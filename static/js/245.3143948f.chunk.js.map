{"version":3,"sources":["components/ReactJs/prismCode.js","components/pythone/sidebar.js","components/pythone/deeppy/logicalspy.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","decBinar","decimals","factorials","firstNum","firstNums","multiply","reverseNum","reverseNums","reverseNump","armstongs","countVowel","fibnacci","palindrom","printNums","shuffle","star","double_sided_start","print_G","percentiles","int","Pound","duplicate","maximum","tuples","duplicates","dictionary","LogicalsPy","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"mPAIqBA,G,kBACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAYRC,UAAY,WACN,EAAKC,KAAO,EAAKA,IAAIC,SACvBC,IAAMC,iBAAiB,EAAKH,IAAIC,UAblC,EAAKD,IAAMI,IAAMC,YAFA,E,iFAMjBC,KAAKP,c,2CAILO,KAAKP,c,+BASG,IAAD,EAC6BO,KAAKR,MAAjCS,EADD,EACCA,KAAeC,GADhB,EACOC,QADP,EACgBD,UACvB,OACE,yBAAKE,UAAU,cACb,0BAAMV,IAAKM,KAAKN,IAAKU,UAAS,mBAAcF,IACzCD,EAAKI,a,GAzBuBP,IAAMQ,a,uDCJ7C,yFAMMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,MAAO,CACLC,YAAaJ,EAAMK,QAAQ,IAE7BC,KAAM,CACJC,eAAgB,YAIL,SAASC,IACtB,IAAMC,EAAUX,IAEhB,OACE,yBAAKH,UAAWc,EAAQR,MACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMS,GAAG,eAAef,UAAWc,EAAQH,MAA3C,iBACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,UAAUf,UAAWc,EAAQH,MAAtC,WACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,YAAYf,UAAWc,EAAQH,MAAxC,YACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,eAAef,UAAWc,EAAQH,MAA3C,cACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,QAAQf,UAAWc,EAAQH,MAApC,SACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,eAAef,UAAWc,EAAQH,MAA3C,gBACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,SAASf,UAAWc,EAAQH,MAArC,SACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,YAAYf,UAAWc,EAAQH,MAAxC,aACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,gBAAgBf,UAAWc,EAAQH,MAA5C,uBAEV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,WAAWf,UAAWc,EAAQH,MAAvC,WAEV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,cAAcf,UAAWc,EAAQH,MAA1C,WACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,eAAef,UAAWc,EAAQH,MAA3C,gBACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,WAAWf,UAAWc,EAAQH,MAAvC,YACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,SAASf,UAAWc,EAAQH,MAArC,UACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,WAAWf,UAAWc,EAAQH,MAAvC,YAEV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,cAAcf,UAAWc,EAAQH,MAA1C,aACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,WAAWf,UAAWc,EAAQH,MAAvC,YACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,OAAOf,UAAWc,EAAQH,MAAnC,cACV,6BAtBF,QAwBE,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,aAAaf,UAAWc,EAAQH,MAAzC,WACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,gBAAgBf,UAAWc,EAAQH,MAA5C,UACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,YAAYf,UAAWc,EAAQH,MAAxC,eAEV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,gBAAgBf,UAAWc,EAAQH,MAA5C,iBACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,cAAcf,UAAWc,EAAQH,MAA1C,eACV,kBAAC,IAAD,KAAU,kBAAC,IAAD,CAAMI,GAAG,eAAef,UAAWc,EAAQH,MAA3C,iBAEZ,iC,qLC9CAK,EAAS,CAAEC,gBAAiB,UAAWC,QAAS,MAAOC,SAAU,QAejEC,EAAW,+QAUfnB,OAEIoB,EAAW,+NAUfpB,OAEIqB,EAAa,yEAMjBrB,OAEIsB,EAAW,oGAOftB,OAEIuB,EAAY,sIAShBvB,OAEIwB,EAAW,gKAUfxB,OAEIyB,EAAa,wGAOjBzB,OAEI0B,EAAc,2GAOlB1B,OAEI2B,EAAc,qKAUlB3B,OAEI4B,EAAY,iOAchB5B,OAEI6B,EAAa,0NAYjB7B,OAEI8B,EAAW,4EAOR9B,OAEH+B,EAAY,2MAchB/B,OAEIgC,EAAY,ibAsBhBhC,OAEIiC,EAAU,wTAOwBjC,OAElCkC,EAAO,uEAIXlC,OAEImC,EAAqB,iUAiBzBnC,OAEIoC,EAAU,yjBAiBdpC,OAEIqC,EAAc,8FAMlBrC,OAEIsC,EAAM,0GAIVtC,OAEIuC,EAAQ,6FAGZvC,OAEIwC,EAAY,uJAMhBxC,OAEIyC,EAAU,gSAkBdzC,OAEI0C,EAAS,oSAWb1C,OAEI2C,EAAa,2HASjB3C,OAEI4C,EAAa,yPAejB5C,OAGI6C,E,4LAEFC,YAAW,kBAAMvD,IAAMwD,iBAAgB,K,+BAE/B,IACAlC,EAAYlB,KAAKR,MAAjB0B,QACR,OACE,kBAAC,IAAD,CAAMmC,WAAS,GACb,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,CAAOnD,UAAWc,EAAQN,OACxB,4BAAI,kBAAC,IAAD,SAGR,kBAAC,IAAD,CAAM0C,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CAAOnD,UAAWc,EAAQN,OACxB,kBAAC,IAAD,KACE,iDACA,yBAAK4C,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAMuB,EACNtB,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,iDACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAMwB,EACNvB,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,4CACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAMyB,EACNxB,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,kDACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAM0B,EACNzB,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,yDACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAM2B,EACN1B,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,+DAnDF,kEAqDE,6BAEA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAM4B,EACN3B,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,kDACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAM6B,EACN5B,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,wDA1EF,sJA6EE,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAM8B,EACN7B,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,sDACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAM+B,EACN9B,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,oDAhGF,8GAkGE,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAMgC,EACN/B,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,8DACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAMiC,EACNhC,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,2CACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAMkC,EACNjC,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,6CACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAMmC,EACNlC,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,gDACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAMoC,EACNnC,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,yDACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAMqC,EACNpC,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,wCACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAMsC,EACNrC,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,qDACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAMuC,EACNtC,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,2CACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAMwC,EACNvC,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,uGACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAMyC,EACNxC,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,2EACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAM0C,EACNzC,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,+DACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAM2C,EACN1C,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,kFACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAM4C,EACN3C,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,gEACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAM6C,EACN5C,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,mHACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAM8C,EACN7C,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,+EACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAM+C,EACN9C,SAAS,KACTC,QAAS,CAAC,mBAGd,6BAEA,4EACA,yBAAKqD,MAAOpC,GACV,kBAAC,IAAD,CACEnB,KAAMgD,EACN/C,SAAS,KACTC,QAAS,CAAC,2B,GArRHG,aAgSTmD,uBAxmBD,SAAAhD,GAAK,MAAK,CACvBG,MAAO,CACL8C,OAAQjD,EAAMK,QAAQ,GACtBQ,QAASb,EAAMK,QAAQ,IAEzB6C,SAAU,CACRD,OAAQjD,EAAMK,QAAQ,IAExB8C,UAAW,CACTC,UAAW,aA+lBCJ,CAAmBP","file":"static/js/245.3143948f.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/introPython' className={classes.line}>intro Python</Link></MenuItem>\n        <MenuItem><Link to='/tuples' className={classes.line}>Tuples</Link></MenuItem>\n        <MenuItem><Link to='/stringPy' className={classes.line}>Strings</Link></MenuItem>\n        <MenuItem><Link to='/iteratorsPy' className={classes.line}>Iterators</Link></MenuItem>\n        <MenuItem><Link to='/json' className={classes.line}>Json</Link></MenuItem>\n        <MenuItem><Link to='/mathematics' className={classes.line}>Mathematics</Link></MenuItem>\n        <MenuItem><Link to='/oops_' className={classes.line}>Oops</Link></MenuItem>\n        <MenuItem><Link to='/abstract' className={classes.line}>Abstract</Link></MenuItem>\n        <MenuItem><Link to='/exceptionsPy' className={classes.line}>ExceptionsHandling</Link></MenuItem>\n\n        <MenuItem><Link to='/pyIntro' className={classes.line}>Pickle</Link></MenuItem>\n\n        <MenuItem><Link to='/threadings' className={classes.line}>Thread</Link></MenuItem>\n        <MenuItem><Link to='/collections' className={classes.line}>Collections</Link></MenuItem>\n        <MenuItem><Link to='/logging' className={classes.line}>Logging</Link></MenuItem>\n        <MenuItem><Link to='/regex' className={classes.line}>Regex</Link></MenuItem>\n        <MenuItem><Link to='/tkinter' className={classes.line}>TKinter</Link></MenuItem>\n\n        <MenuItem><Link to='/logicalspy' className={classes.line}>Logicals</Link></MenuItem>\n        <MenuItem><Link to='/pyLogic' className={classes.line}>PyLogic</Link></MenuItem>\n        <MenuItem><Link to='/csv' className={classes.line}>CsvPython</Link></MenuItem>\n        <br />\n        Flask\n        <MenuItem><Link to='/conroutes' className={classes.line}>routes</Link></MenuItem>\n        <MenuItem><Link to='/httpsMethods' className={classes.line}>Https</Link></MenuItem>\n        <MenuItem><Link to='/flasksIn' className={classes.line}>Interviews</Link></MenuItem>\n\n        <MenuItem><Link to='/flask_signUp' className={classes.line}>Flask_signUp</Link></MenuItem>\n        <MenuItem><Link to='/get_search' className={classes.line}>Get_Search</Link></MenuItem>\n        <MenuItem><Link to='/load_search' className={classes.line}>Load_Search</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst decBinar = `\nbinary_num,base = 0,1\ndecimal_num = int(input(\"Enter a Decimal number:\")) #10\n\nwhile (decimal_num > 0):\n    remainder = decimal_num % 2\n    binary_num = binary_num + remainder * base\n    decimal_num = decimal_num // 2\n    base = base * 10\nprint(binary_num)\n`.trim();\n\nconst decimals = `\ndecimal_val,base = 0,1\nbinary_val = 1010\n\nwhile (binary_val > 0):\n    rem = binary_val % 10\n    decimal_val = decimal_val + rem * base\n    binary_val = binary_val // 10 \n    base = base * 2\nprint(decimal_val)\n`.trim();\n\nconst factorials = `\nn = 4\nfact = 1\nfor i in range(1,n+1):\n   fact *= i\nprint(fact)\n`.trim();\n\nconst firstNum = `\ndef printFun():\n  num = 10\n  for i in range(1, num):\n    print(i, end=\",\")\n  \nprintFun()\n`.trim();\n\nconst firstNums = `\ndef printFun():\n  num = 10\n  result = 0\n  for i in range(1, num):\n    result += i\n  print(result, end=\",\")\n  \nprintFun()\n`.trim();\n\nconst multiply = `\ndef multiply():\n    num1 = 3\n    num2 = 4\n    product = 0\n    for i in range(0, num2):\n        product += num1\n    print(product)\n    \nmultiply()\n`.trim();\n\nconst reverseNum = `\ndef printFun():\n  num = 10\n  for i in range(num, 0, -1):\n    print(i, end=\",\")\n  \nprintFun()\n`.trim();\n\nconst reverseNums = `\ndef firstDigit():\n    n = 123\n    while (n > 10):\n        n = n // 10\n    print(n)\nfirstDigit()\n`.trim();\n\nconst reverseNump = `\ndef firstEODigit():\n    n=10\n    for i in range(1,n):\n      if(i%2==0):\n        print('even',i)\n      else:\n        print('Odd',i)\n    \nfirstEODigit()\n`.trim();\n\nconst armstongs = `\nnum = 407\nsum = 0\ntemp = num\n\nwhile temp > 0:\n   digit = temp % 10\n   sum += digit ** 3\n   temp //= 10\n\nif num == sum:\n   print(num,\"is an Armstrong number\")\nelse:\n   print(num,\"is not an Armstrong number\")\n`.trim();\n\nconst countVowel = `\nvowels = 'aeiou'\nstr = 'Hello, have you tried our tutorial section yet?'\n\nstr = str.casefold()\ncount = {}.fromkeys(vowels,0)\n\nfor char in str:\n   if char in count:\n       count[char] += 1\n\nprint(count)\n`.trim();\n\nconst fibnacci = `\na, b = 0, 1\n\nwhile b < 80:\n    c=a+b\n    print(c)\n    a=b\n    b=c`.trim();\n\nconst palindrom = `\ndef palindrom():\n  str='madam'\n  str2=''\n  \n  for i in str:\n    str2 = i + str2\n  \n  if(str==str2):\n    print('Palindeom',str2)\n  else:\n    print('Not Palindrom',str2)\n    \npalindrom()\n`.trim();\n\nconst printNums = `\nfor num in range(0, 10 + 1):\n     for i in range(2, num):\n         if (num % i) == 0:\n             break\n     else:\n         print(num)\n\n//2\ndef pyraminds():\n    num = 100\n    for i in range(1, num):\n        count = 0\n        for j in range(2, i):\n            if (i % j == 0):\n                count += 1\n            else:\n                count = count\n        if(count<1):\n            print(i)\npyraminds()\n\n`.trim();\n\nconst shuffle = `\nimport itertools, random\n\ndeck = list(itertools.product(range(1,14),['Spade','Heart','Diamond','Club']))        # make a deck of cards\nrandom.shuffle(deck)                                                                  # shuffle the cards\n\nfor i in range(5):\n   print(deck[i][0], \"of\", deck[i][1])`.trim();\n\nconst star = `\nn=3\nfor i in range (n, 0, -1):\n   print((n-i) * ' ' + i * '*')\n`.trim();\n\nconst double_sided_start = `\ndef pattern():\n n = 10\n for i in range(1,n+1):\n     k =i + 1 if(i % 2 != 0) else i\n\n     for g in range(k,n):\n         if g>=k:\n             print(end=\"  \")\n\n     for j in range(0,k):\n         if j == k - 1:\n             print(\" * \")\n         else:\n             print(\" * \", end = \" \")\n   \npattern()\n`.trim();\n\nconst print_G = `\n   def Pattern(line):\n       pat=\"\"\n       for i in range(0,line):\n           for j in range(0,line):\n               if ((j == 1 and i != 0 and i != line-1) or ((i == 0 or\n                   i == line-1) and j > 1 and j < line-2) or (i == ((line-1)/2)\n                   and j > line-5 and j < line-1) or (j == line-2 and\n                   i != 0 and i != line-1 and i >=((line-1)/2))):\n                   pat=pat+\"*\"\n               else:\n                   pat=pat+\" \"\n           pat=pat+\"nL\"\n       return pat\n   \nline = 7\nprint(Pattern(line)) \n`.trim();\n\nconst percentiles = `\nimport numpy as np\n\na = np.array([1,2,3,4,5,6,7])\np = np.percentile(a, 50)\nprint(p)\n`.trim()\n\nconst int = `birth_year = input('Birth Year: ')\nprint(type(birth_year))\nage = 2019 - int(birth_year)\nprint(age)\n`.trim()\n\nconst Pound = `weight_lbs = input('Weight(lbs):')\nweight_kg = int(weight_lbs) * 0.45\nprint(weight_kg)\n`.trim()\n\nconst duplicate = `numbers = [5,4,3,6,7,3,6]\nuniques = []\nfor number in numbers:\n    if number not in uniques:\n        uniques.append(number)\n    print(uniques)\n`.trim()\n\nconst maximum = `numbers = [10,3,6,2]\nmax = numbers[0]\nfor number in numbers:\n    if number > max:\n        max = number\nprint(max)\n\n\n//sum of three max number\ndef maxSum():\n    num=[2,3,5,6,0,8]\n    sum=0\n\n    num.sort()\n    sum = num[-1] + num[-2] + num[-3]\n    print(sum)\nmaxSum()\n\n`.trim()\n\nconst tuples = `\nprint(\"Entr element separated by comma for frst tuple\")\nt1=tuple([eval(e) for e in input().split(',')])\n\nprint(\"Entr element separated by comma for second tuple\")\nt2=tuple([eval(e) for e in input().split(',')])\n\nif t1==t2:\n    print(\"Tuples\")\nelse:\n    print(\"Not tuples\")\n`.trim();\n\nconst duplicates = `\ns = 'Enter a string'\ni = 0\ns1 = \"\"\nfor x in s:\n    if s.index(x) == i:\n        s1 += x\n    i += 1\nprint(s1)\n`.trim();\n\nconst dictionary = `\nprint(\"Enter three city names\")\na,b,c=input(), input(), input()\nif a<b<c:\n    print(a,b,c)\nelif a<c<b:\n    print(a,c,b)\nelif b<a<c:\n    print(b,a,c)\nelif b<c<a:\n    print(b,c,a)\nelif c<a<b:\n    print(c,a,b)\nelse:\n    print(c,b,a)\n`.trim();\n\n\nclass LogicalsPy extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. Decimal-Binary</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={decBinar}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>2. Binary-Decimal</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={decimals}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>3. Factorial</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={factorials}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>4. First N Numbers</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={firstNum}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>5. Sum of natural numbers</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={firstNums}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>6. Multiply N numbers without *</h3>\n              Insteaded multiply num1 and num2, just add num1 for num2 times.\n              <br />\n\n              <div style={titles}>\n                <PrismCode\n                  code={multiply}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>7. Reverse numbers</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={reverseNum}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>8. First digit of number</h3>\n              Given number is continuously divided by 10, till it becomes lesser than 10 and greater than 0.\n              and the final answer is first digit of given number.\n              <div style={titles}>\n                <PrismCode\n                  code={reverseNums}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>9. Odd or Even Number.</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={reverseNump}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>10. Armstrong number</h3>\n              The number whose sum of each digit powered with the total number of digits is the same as the given number.\n              <div style={titles}>\n                <PrismCode\n                  code={armstongs}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>11. Count number of each vowel</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={countVowel}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>12. Fibonci</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={fibnacci}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>13. Palindome</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={palindrom}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>14. Prime number</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={printNums}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>15. Shuffle deck of cards</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={shuffle}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>16. Star</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={star}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>17. Double sided star</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={double_sided_start}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>18. Print_G</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={print_G}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>19. What is the easiest way to calculate percentiles when using Python?</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={percentiles}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>20. Data conversion: int(), float(), bool()</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={int}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>21. Pound convert into Kilogram</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Pound}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>22. Write a programe to remove duplicate in a list</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={duplicate}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>23. Find maximum number in array</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={maximum}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>24. Compare two tuples whether they contain the same elements in same order or nat.</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={tuples}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>25. Remove duplicate character from the string.</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={duplicates}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>26. Arrange three words in dictionary order.</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={dictionary}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(LogicalsPy));\n"],"sourceRoot":""}