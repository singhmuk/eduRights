{"version":3,"sources":["components/ReactJs/prismCode.js","components/ReactJs/sidebar.js","components/ReactJs/reactJs_hooks/like.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","unlike","checkbox","radio","select","scroll","profiles","Like","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/74.1745a5bd.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/introReact' className={classes.line}>Intro-Lazy-Children</Link></MenuItem>\n        <MenuItem><Link to='/reactInter' className={classes.line}>Intro</Link></MenuItem>\n        <MenuItem><Link to='/codingInter' className={classes.line}>CodesPro</Link></MenuItem>\n        <MenuItem><Link to='/mainCompo' className={classes.line}>Event-hoc-form<br />curd-slider</Link></MenuItem>\n        <MenuItem><Link to='/pureComp' className={classes.line}>PureComp-conComp</Link></MenuItem>\n        <MenuItem><Link to='/useStates' className={classes.line}>useMultiState</Link></MenuItem>\n        <MenuItem><Link to='/contextHooks' className={classes.line}>Context Hooks</Link></MenuItem>\n        <MenuItem><Link to='/customHooks' className={classes.line}>CustomHooks-memo</Link></MenuItem>\n        <MenuItem><Link to='/useReducersSta' className={classes.line}>UseReducers</Link></MenuItem>\n        <MenuItem><Link to='/contextMethods' className={classes.line}>Curd Hooks</Link></MenuItem>\n        <MenuItem><Link to='/jsonPlaceholder' className={classes.line}>JsonPlaceholder</Link></MenuItem>\n        <MenuItem><Link to='/async_await' className={classes.line}>Async-await-sideMenu<br />Mouse hover</Link></MenuItem>\n        <MenuItem><Link to='/ticGame' className={classes.line}>Share-maxMinDate<br />moveBtn-slideshow</Link></MenuItem>\n        <MenuItem><Link to='/linkGet' className={classes.line}>LinkGet</Link></MenuItem>\n        <MenuItem><Link to='/numberFormats' className={classes.line}>Random NumFor-biToDe<br /> Validations Step DateTimw</Link></MenuItem>\n        <MenuItem><Link to='/models' className={classes.line}>Models-chidData-csv<br />Icon-router</Link></MenuItem>\n        <MenuItem><Link to='/like' className={classes.line}>Like-checkbox-radio<br />select-scroll</Link></MenuItem>\n        <MenuItem><Link to='/textEditors' className={classes.line}>TextEditors-paginations<br />translator-sortCheck</Link></MenuItem>\n        <MenuItem><Link to='/sortItems' className={classes.line}>IncOnClick-pushBtn-fizzBuzz<br />show-addDocs-ratings</Link></MenuItem>\n        <MenuItem><Link to='/serverSideRend' className={classes.line}>Jwt-multiSel</Link></MenuItem>\n        <MenuItem><Link to='/dropdownSelect' className={classes.line}>SelectFtr-checkFtr-updtCrd</Link></MenuItem>\n        <MenuItem><Link to='/kanban' className={classes.line}>Kanban</Link></MenuItem>\n        <MenuItem><Link to='/hackeRank' className={classes.line}>HackeRank</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst unlike = `\nconst App = () => {\n  const [count, setCount] = useState(0);\n  const [color, setColor] = useState('green');\n  const [size, setSize] = useState(1);\n  \n  const handleSetCount = () => {\n    (count === 4) ? setCount(0) : setCount(count + 1); \n    (count === 4) ? setSize(1) : setSize(size + .05); \n  };\n  \n  const handleSetColor = () => {\n    if(count === 1) setColor('red');\n    if(count === 2) setColor('blue');\n    if(count === 3) setColor('pink');\n    if(count === 4) setColor('yellow');\n  };\n  \n  const heartStyle = {\n    color: color,\n    transform: 'scale('$'{size})'\n  };\n  \n  return (\n    <>\n      <button onClick={() => { handleSetCount(); handleSetColor() } }>\n        <i>Like</i>\n      </button>\n      <p style={heartStyle}>You have liked this {count} times</p>\n    </>\n  );\n}`.trim()\n\nconst checkbox = `\nconst App = () => {\n  const [isChecked, setIsChecked] = useState(false)\n\n  const handleClick = () => {\n    setIsChecked(isChecked => !isChecked);\n  }\n\n  return (\n    <div>\n      <input\n        type=\"checkbox\"\n        checked={isChecked}\n        onChange={handleClick} />\n    </div>\n  );\n}`.trim()\n\nconst radio = `\nconst App = () => {\n  const [size, setSize] = useState(\"\")\n\n  const handleChange = (e) => {\n    setSize(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    alert('You chose the '$'{size} pizza.');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <p className=\"title\">Select a pizza size:</p>\n      <label>Small</label>\n      <input type=\"radio\" value=\"small\" checked={size === \"small\"} onChange={handleChange} />\n      <label>Medium</label>\n      <input type=\"radio\" value=\"medium\" checked={size === \"medium\"} onChange={handleChange} />\n      <label>Large</label>\n      <input type=\"radio\" value=\"large\" checked={size === \"large\"} onChange={handleChange} />\n\n      <button>Make your choice</button>\n    </form>\n  );\n}`.trim()\n\nconst select = `\nconst options = [\"Select an Option\", \"First\", \"Second\", \"Third\"]\n\nconst App = () => {\n  const [value, setValue] = useState('Select an Option')\n\n  const onChange = (e) => {\n    setValue(e.target.value)\n  }\n  return (\n    <div>\n      <select value={value} onChange={onChange}>\n        {options.map(option => {\n          return <option value={option}>{option}</option>\n        })}\n      </select>\n    </div>\n  )\n}`.trim();\n\n\nconst scroll = `\nconst items = [...Array(100)].map((i) => 'Item '$'{i}');\n\nconst App = () => (\n  <div className=\"container\">\n    <div className=\"left-col\">\n      Left col\n    </div>\n    \n    <div className=\"center-col\">\n      <ul>\n        {items.map((item, i) => (<li key={'item_'$'{i}'}>{ item }</li>))}\n      </ul>\n    </div>\n    \n    <div className=\"left-col\">\n      Right col\n    </div>\n  </div>\n);\n\n\n//App.css\n.container {\n  display: flex;\n  flex-direction: row;\n  height: 100vh;\n}\n\n.left-col {\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgb(106, 91, 235);\n}\n\n.center-col {\n  flex: 1;\n  background: #aaa;\n  overflow-y: scroll;\n}`.trim();\n\nconst profiles = `\nclass App extends Component {\n  state = { selectedFile: null };\n  \n  onFileChange = (e) => {\n    this.setState({ selectedFile: e.target.files[0] });\n  };\n  \n  onFileUpload = () => {\n    // Create an object of formData\n    const formData = new FormData();\n  \n    formData.append(\n      \"myFile\",\n      this.state.selectedFile,\n    );\n  \n    // Request made to the backend api\n    axios.post(\"api/uploadfile\", formData);\n  };\n  \n  fileData = () => {\n    if (this.state.selectedFile) {\n      return (\n        <div>\n          <h2>File Details:</h2>\n          <p>File Name: {this.state.selectedFile.name}</p>\n          <p>File Type: {this.state.selectedFile.type}</p>\n\n          <p>\n            Last Modified:{\" \"}\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\n          </p>\n        </div>\n      );\n    } \n  };\n  \n  render() {\n    return (\n      <div>\n          <div>\n              <input type=\"file\" onChange={this.onFileChange} />\n              <button onClick={this.onFileUpload}>\n                Upload!\n              </button>\n          </div>\n        {this.fileData()}\n      </div>\n    );\n  }\n}`.trim();\n\n\nconst code = `\nconst moods = [\n  { name: \"Happy\", \"emoji\": \"😀\" }, \n  { name: \"Angry\", \"emoji\": \"😠\" },\n  { name: \"Really Angry\", \"emoji\": \"😡\" },\n  { name: \"Sad\", \"emoji\": \"🙁\" },\n  { name: \"Really Sad\", \"emoji\": \"☹️\" },\n  { name: \"Poop\", \"emoji\": \"💩\" }\n];\n\nclass App extends React.Component {\n  state = {\n    mood: { \n      name: \"Emoji\", \n      emoji: null \n    }\n  }\n\nhandleButtonClick = () => {\n    const mood = moods[Math.floor(Math.random() * moods.length)];\n    this.setState({ mood });\n}\n\nrender() {\n    return (\n        <div>\n          <div>{ this.state.mood.emoji }</div>\n          <div>{ this.state.mood.name }</div>\n          \n            <button onClick={this.handleButtonClick}>\n              Click\n            </button>\n        </div>\n    )\n  }\n}`.trim();\n\n\n\nclass Like extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <b>1. Like</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={unlike}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              2. checkbox.js\n              <div style={titles}>\n                <PrismCode\n                  code={checkbox}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              3. radio.js\n              <div style={titles}>\n                <PrismCode\n                  code={radio}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>4. Select</h3>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={select}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>5. Scroll</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={scroll}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>6. Upload Profile</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={profiles}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>7. EMJ</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={code}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Like));\n"],"sourceRoot":""}