(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[36],{140:function(e,n,t){"use strict";t.d(n,"a",(function(){return d}));var a=t(45),r=t(28),l=t(136),i=t(137),c=t(139),o=t(0),m=t.n(o),u=t(138),s=t.n(u),d=(t(59),function(e){function n(e){var t;return Object(a.a)(this,n),(t=Object(l.a)(this,Object(i.a)(n).call(this,e))).highlight=function(){t.ref&&t.ref.current&&s.a.highlightElement(t.ref.current)},t.ref=m.a.createRef(),t}return Object(c.a)(n,e),Object(r.a)(n,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,n=e.code,t=(e.plugins,e.language);return m.a.createElement("pre",{className:"code-prism"},m.a.createElement("code",{ref:this.ref,className:"language-".concat(t)},n.trim()))}}]),n}(m.a.Component))},141:function(e,n,t){},152:function(e,n,t){"use strict";t.d(n,"a",(function(){return u}));var a=t(0),r=t.n(a),l=t(26),i=t(297),c=t(295),o=t(114),m=Object(o.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function u(){var e=m();return r.a.createElement("div",{className:e.root},r.a.createElement(c.a,null,r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/introAlgo",className:e.line},"Deadlock")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/Stack",className:e.line},"Stack")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/Queue",className:e.line},"Queue")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/linkedList",className:e.line},"LinkedList")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/heap",className:e.line},"Heap")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/trees",className:e.line},"Tree")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/graph",className:e.line},"Graph")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/sort",className:e.line},"QuickSort")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/searchAlgo",className:e.line},"Search")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/topTech",className:e.line},"TopTech")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/stringAlgo",className:e.line},"String")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/arrayAlgo",className:e.line},"Array")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/nestingArrAlgo",className:e.line},"Nesting Array")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/numbersAlgo",className:e.line},"Numbers")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/gameAlgo",className:e.line},"Game")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/arrayStrAlgo",className:e.line},"ArrayStr")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/arrayNumAlgo",className:e.line},"ArrayNum")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/dslogic8",className:e.line},"Logic8"))),r.a.createElement("div",null))}},157:function(e,n,t){e.exports=t.p+"static/media/stcks.7efa3b78.png"},441:function(e,n,t){"use strict";t.r(n);var a=t(45),r=t(28),l=t(136),i=t(137),c=t(139),o=t(0),m=t.n(o),u=t(138),s=t.n(u),d=t(120),g=t(57),h=t(296),p=t(5),b=(t(141),t(152)),E=t(140),f=(t(157),{backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"}),x="\nfunction rotate (matrix = []){\n  const n = matrix.length\n\n  for (let i = 0; i < Math.floor(n / 2); i++) {\n    const temp = matrix[i]\n    matrix[i] = matrix[n - 1 - i]\n    matrix[n - 1 - i] = temp\n  }\n  \n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      const temp = matrix[i][j]\n      matrix[i][j] = matrix[j][i]\n      matrix[j][i] = temp\n    }\n  }\n  return matrix\n}\n\nconsole.log(rotate([[1,2,3],[4,5,6],[7,8,9]]))\n".trim(),y='\nfunction groupAnagrams(strs) {\n  const sortStr = str => str.split(\'\').sort((a, b) => a.localeCompare(b)).join(\'\')\n\n  const sortedMap = strs.map(sortStr).reduce((map, current, index) => {\n      if (map[current]) {\n        map[current].push(strs[index])\n      } \n      else {\n        map[current] = [strs[index]]\n      }\n      return map\n    },\n    {},\n  )\n\n  return Object.keys(sortedMap).map(key => sortedMap[key])\n}\n\nconsole.log(groupAnagrams(["eat","tea","tan","ate","nat","bat"]))\n'.trim(),j="\nfunction shorPath(grid) {\n  let n = grid.length - 1;\n  let q = [0]\n  \n  if (grid[0][0] || grid[n][n]) return -1\n  \n  grid[0][0] = 1\n  while (q.length) {\n      let curr = q.shift();\n      let i = curr & (1 << 7) - 1;\n      let j = curr >> 7;\n      \n      if (i === n && j === n) return grid[n][n]\n      for (let a = Math.max(i-1,0); a <= Math.min(i+1,n); a++){\n          for (let b = Math.max(j-1,0); b <= Math.min(j+1,n); b++){\n              if (grid[a][b] === 0){\n                  grid[a][b] = grid[i][j] + 1, q.push(a + (b << 7))\n                  }\n                }\n              }\n            }\n            return -1\n          };\n  \n  console.log(shorPath([[0,0,0],[1,1,0],[1,1,0]]));".trim(),v='\nfunction spiralOrder(matrix) {\n  let result = []\n  if(!matrix.length) return result;\n  \n  let rowMin = 0\n  let rowMax = matrix.length -1\n  let columnMin = 0\n  let columnMax = matrix[0].length - 1\n  \n  let i = 0\n  let j = 0\n  let direction = "right"\n\n  while(result.length < matrix.length * matrix[0].length) {\n    result.push(matrix[i][j])\n      if(direction === "right") {\n          if(j === columnMax) {\n              rowMin += 1\n              i = rowMin\n              direction = "down"\n          } else {\n              j++\n          }\n      } else if(direction === "down") {\n          if(i === rowMax) {\n              direction = "left"\n              columnMax -= 1\n              j = columnMax\n          } else {\n              i++\n          }\n      } else if(direction === "left") {\n\n          if(j === columnMin) {\n              direction = "up"\n              rowMax -= 1\n               i = rowMax\n          } else {\n              j--\n          }\n      } else {\n          if(i === rowMin) {\n              direction = "right"\n              columnMin += 1\n               j = columnMin\n          } else {\n              i--\n          }\n      }\n  }\n\n  return result \n};\n\n\nconsole.log(spiralOrder([\n  [ 1, 2, 3 ],\n  [ 4, 5, 6 ],\n  [ 7, 8, 9 ]\n ]))\n'.trim(),w="\nfunction uniquePaths(m, n){\n  const memo = {}\n\n  function aux(rowIndex, columnIndex){\n    if (memo[rowIndex] !== undefined && memo[rowIndex][columnIndex] !== undefined) {\n      return memo[rowIndex][columnIndex]\n    }\n\n    if (rowIndex >= m || columnIndex >= n) return 0\n    if (rowIndex === m - 1 && columnIndex === n - 1) return 1\n\n    memo[rowIndex] = memo[rowIndex] || {}\n    memo[rowIndex][columnIndex] = aux(rowIndex + 1, columnIndex) + aux(rowIndex, columnIndex + 1)\n    return memo[rowIndex][columnIndex]\n  }\n  \n  return aux(0, 0)\n}\n\nconsole.log(uniquePaths(7,3))\n".trim(),I="\nfunction addBinary(a, b) {\n  const reverse = x => x.split('').reverse()\n  \n  const { shorter, longer } = a.length > b.length\n                              ? { shorter: reverse(b), longer: reverse(a) }\n                              : { shorter: reverse(a), longer: reverse(b) }\n\n  let reminder = 0\n  const digits = longer.map((num1, index) => {\n    let res = parseInt(num1, 10) + reminder + (parseInt(shorter[index], 10) ? parseInt(shorter[index], 10) : 0)\n    if (res >= 2) {\n      res -= 2\n      reminder = 1\n    } else {\n      reminder = 0\n    }\n    return res\n  })\n  \n  if (reminder === 1) {\n    digits.push(reminder)\n  }\n  return digits.reverse().join('')\n}\n\nconsole.log(addBinary(\"1010\", \"1011\"))\n".trim(),N=function(e){function n(){return Object(a.a)(this,n),Object(l.a)(this,Object(i.a)(n).apply(this,arguments))}return Object(c.a)(n,e),Object(r.a)(n,[{key:"componentDidMount",value:function(){setTimeout((function(){return s.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return m.a.createElement(d.a,{container:!0},m.a.createElement(d.a,{item:!0,xs:2},m.a.createElement(g.a,{className:e.paper},m.a.createElement("h4",null,m.a.createElement(b.a,null)))),m.a.createElement(d.a,{item:!0,xs:10},m.a.createElement(g.a,{className:e.paper},m.a.createElement(h.a,null,m.a.createElement("h3",null,"1. Rotate Image."),"You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).",m.a.createElement("br",null),"You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.",m.a.createElement("br",null),m.a.createElement("br",null),m.a.createElement("b",null,"Input: "),"matrix = [[1,2,3],[4,5,6],[7,8,9]]",m.a.createElement("br",null),m.a.createElement("b",null,"Output: "),"[[7,4,1],[8,5,2],[9,6,3]]",m.a.createElement("div",{style:f},m.a.createElement(E.a,{code:x,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"2. Group Anagrams."),"Given an array of strings strs, group the anagrams together. You can return the answer in any order.",m.a.createElement("br",null),"An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.",m.a.createElement("br",null)," ",m.a.createElement("br",null),m.a.createElement("b",null,"Input: "),'strs = ["eat","tea","tan","ate","nat","bat"]',m.a.createElement("br",null),m.a.createElement("b",null,"Output: "),'[["bat"],["nat","tan"],["ate","eat","tea"]]',m.a.createElement("div",{style:f},m.a.createElement(E.a,{code:y,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"3. Shortest Path in Binary Matrix"),m.a.createElement("ul",null,m.a.createElement("li",null,"In an N by N square grid, each cell is either empty (0) or blocked (1)."),m.a.createElement("li",null,"A clear path from top-left to bottom-right has length k if and only if it is composed of cells C_1, C_2, ..., C_k such that:"),"1.Adjacent cells C_i and C_i+1 are connected 8-directionally (ie., they are different and share an edge or corner)",m.a.createElement("br",null),"2.C_1 is at location (0, 0) (ie. has value grid[0][0])",m.a.createElement("br",null),"3.C_k is at location (N-1, N-1) (ie. has value grid[N-1][N-1])",m.a.createElement("br",null),"4.If C_i is located at (r, c), then grid[r][c] is empty (ie. grid[r][c] == 0).",m.a.createElement("li",null,"Return the length of the shortest such clear path from top-left to bottom-right. If such a path does not exist, return -1.")),m.a.createElement("b",null,"Input: "),"[[0,1],[1,0]], [[0,0,0],[1,1,0],[1,1,0]]",m.a.createElement("br",null),m.a.createElement("b",null,"Output: "),"2, 4",m.a.createElement("div",{style:f},m.a.createElement(E.a,{code:j,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"4. Spiral Matrix."),m.a.createElement("b",null,"Input: "),"[ [ 1, 2, 3 ],",m.a.createElement("br",null),"[ 4, 5, 6 ],",m.a.createElement("br",null),"[ 7, 8, 9 ] ]",m.a.createElement("br",null),m.a.createElement("br",null),m.a.createElement("b",null,"Output: "),"[1,2,3,6,9,8,7,4,5]",m.a.createElement("div",{style:f},m.a.createElement(E.a,{code:v,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"5. Unique Paths."),"A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).",m.a.createElement("br",null),"The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).",m.a.createElement("br",null),"How many possible unique paths are there? ",m.a.createElement("br",null)," ",m.a.createElement("br",null),m.a.createElement("b",null,"Input: "),"m = 7, n = 3",m.a.createElement("br",null),m.a.createElement("b",null,"Output: "),"28",m.a.createElement("div",{style:f},m.a.createElement(E.a,{code:w,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"6. Add Binary"),"Given two binary strings, return their sum (also a binary string).",m.a.createElement("br",null),"The input strings are both non-empty and contains only characters 1 or 0.",m.a.createElement("br",null),m.a.createElement("b",null,"Input: "),'a = "1010", b = "1011"',m.a.createElement("br",null),m.a.createElement("b",null,"Output: "),'"10101"',m.a.createElement("div",{style:f},m.a.createElement(E.a,{code:I,language:"js",plugins:["line-numbers"]}))))))}}]),n}(o.Component);n.default=Object(p.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(N)}}]);
//# sourceMappingURL=36.2193a2f0.chunk.js.map