(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[92],{140:function(n,e,t){"use strict";t.d(e,"a",(function(){return p}));var a=t(45),r=t(28),s=t(136),i=t(137),l=t(139),o=t(0),c=t.n(o),d=t(138),u=t.n(d),p=(t(59),function(n){function e(n){var t;return Object(a.a)(this,e),(t=Object(s.a)(this,Object(i.a)(e).call(this,n))).highlight=function(){t.ref&&t.ref.current&&u.a.highlightElement(t.ref.current)},t.ref=c.a.createRef(),t}return Object(l.a)(e,n),Object(r.a)(e,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var n=this.props,e=n.code,t=(n.plugins,n.language);return c.a.createElement("pre",{className:"code-prism"},c.a.createElement("code",{ref:this.ref,className:"language-".concat(t)},e.trim()))}}]),e}(c.a.Component))},141:function(n,e,t){},153:function(n,e,t){"use strict";t.d(e,"a",(function(){return d}));var a=t(0),r=t.n(a),s=t(26),i=t(297),l=t(295),o=t(114),c=Object(o.a)((function(n){return{root:{display:"flex"},paper:{marginRight:n.spacing(2)},line:{textDecoration:"none"}}}));function d(){var n=c();return r.a.createElement("div",{className:n.root},r.a.createElement(l.a,null,r.a.createElement(i.a,null,r.a.createElement(s.b,{to:"/introRedux",className:n.line},"Intro")),r.a.createElement(i.a,null,r.a.createElement(s.b,{to:"/counter",className:n.line},"Counter Select")),r.a.createElement(i.a,null,r.a.createElement(s.b,{to:"/reduxState",className:n.line},"Redux State-Curd")),r.a.createElement(i.a,null,r.a.createElement(s.b,{to:"/reduxMethods",className:n.line},"Redux Methods")),r.a.createElement(i.a,null,r.a.createElement(s.b,{to:"/react_redux",className:n.line},"Filter")),r.a.createElement(i.a,null,r.a.createElement(s.b,{to:"/reduxCurd",className:n.line},"Redux Curd")),r.a.createElement(i.a,null,r.a.createElement(s.b,{to:"/expenseTraMern",className:n.line},"ReactCurdPlaceholder")),r.a.createElement(i.a,null,r.a.createElement(s.b,{to:"/contactKeeperApi",className:n.line},"ReactReduxCurdPlaceholder")),r.a.createElement(i.a,null,r.a.createElement(s.b,{to:"/mernRedux",className:n.line},"Mern Redux")),r.a.createElement(i.a,null,r.a.createElement(s.b,{to:"/signUp",className:n.line},"SignUP")),r.a.createElement(i.a,null,r.a.createElement(s.b,{to:"/git",className:n.line},"Git")),r.a.createElement(i.a,null,r.a.createElement(s.b,{to:"/gitConcepts",className:n.line},"Git Concepts")),r.a.createElement(i.a,null,r.a.createElement(s.b,{to:"/skills",className:n.line},"Skills")),r.a.createElement(i.a,null,r.a.createElement(s.b,{to:"/comskills",className:n.line},"Comskills")),r.a.createElement(i.a,null,r.a.createElement(s.b,{to:"/techskills",className:n.line},"Techskills")),r.a.createElement(i.a,null,r.a.createElement(s.b,{to:"/techinto",className:n.line},"TechsInto"))),r.a.createElement("div",null))}},333:function(n,e,t){"use strict";t.r(e);var a=t(45),r=t(28),s=t(136),i=t(137),l=t(139),o=t(0),c=t.n(o),d=t(138),u=t.n(d),p=t(120),m=t(57),h=t(296),E=t(5),b=(t(141),t(153)),g=t(140),v={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},x='\nimport { v4 as uuidv4 } from "uuid";\n\nconst initialState = [\n  { id: 1, aim: "Success" },\n  { id: 2, aim: "Advanced" },\n  { id: 3, aim: "Properly" },\n];\n\nconst App = () => {\n  const [list, setList] = useState(initialState);\n  const [aim, setName] = useState("");\n\n  const handleChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleAdd = () => {\n    const newItem = list.concat({ aim, id: uuidv4() });\n    setList(newItem);\n    console.log(newItem);\n    setName("");\n  };\n\n  return (\n    <div>\n      <input type="text" value={aim} onChange={handleChange} />\n      <button type="submit" onClick={handleAdd}>\n        Add\n      </button>\n      {list.map((val) => (\n        <div>{val.aim}</div>\n      ))}\n    </div>\n  );\n};\n'.trim(),f='\n//App.js\nimport { connect } from "react-redux";\nimport { addFun } from "./actions/dataActions";\n\nconst App = (props) => {\n  const [name, setName] = useState("");\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setName(e.target.value);\n  };\n\n  const handleAdd = () => {\n    const newItem = name;\n    props.addFun(newItem);\n    setName("");\n  };\n\n  return (\n    <div>\n      <input type="text" value={name} onChange={handleChange} />\n      <button type="submit" onClick={handleAdd}>\n        Add\n      </button>\n      {props.data.map((val) => (\n        <div>{val.name}</div>\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n});\n\nconst mapDispatchToProps = {\n  addFun,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n//reducers/data.js\nconst initialState = [\n  { id: 1, name: "Mukesh" },\n  { id: 2, name: "Rakesh" },\n  { id: 3, name: "Niketh" },\n];\n\nexport default (state = initialState, action) => {\n  console.log("props.list", state);\n  const { type, payload } = action;\n  switch (type) {\n    case ADD:\n      return [...state, { name: payload }];\n\n    default:\n      return state;\n  }\n};\n\n\n\n//actions/dataActions.js\nexport const addFun = (payload) => {\n  return {\n    type: ADD,\n    payload: payload,\n  };\n};\n'.trim(),y='\nconst initialState = [\n  { id: 1, name: "Success" },\n  { id: 2, name: "Advanced" },\n  { id: 3, name: "Properly" },\n];\n\nconst App = () => {\n  const [list, setList] = useState(initialState);\n\n  const handleRemoveItem = (id) => {\n    const deleteItems = list.filter((item) => item.id !== id);\n    setList(deleteItems);\n  };\n\n  return (\n    <div>\n      {list.map((val) => (\n        <div>\n          {val.name}\n          <button onClick={() => handleRemoveItem(val.id)}>X</button>\n        </div>\n      ))}\n    </div>\n  );\n};'.trim(),A='\n//App.js\nimport { deletFun } from "./actions/dataActions";\n\nconst App = (props) => {\n  const handleRemoveItem = (id) => {\n    props.deletFun(id);\n  };\n\n  return (\n    <div>\n      {props.data.map((val) => (\n        <div>\n          {val.name}\n          <button onClick={() => handleRemoveItem(val.id)}>X</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.dataVal,\n});\n\nconst mapDispatchToProps = {\n  deletFun,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n//reducers/dataReducers.js\nconst initialState = [\n  { id: 1, name: "Mukesh" },\n  { id: 2, name: "Rakesh" },\n  { id: 3, name: "Niketh" },\n];\n\nexport default (state = initialState, action) => {\n  console.log("props.list", state);\n  const { type, payload } = action;\n  switch (type) {\n    case DELETE_DATA:\n      state = state.filter((x) => x.id !== payload);\n      return state;\n    default:\n      return state;\n  }\n};\n\n\n\n//actions/dataActions.js\nexport const deletFun = (id) => {\n  return {\n    type: DELETE_DATA,\n    payload: id,\n  };\n};\n'.trim(),S='\n//App.js\nimport Forms from "./components/form";\nimport { connect } from "react-redux";\nimport * as actions from "./actions/transactionActions";\nimport { bindActionCreators } from "redux";\n\nconst App = (props) => {\n  const handleEdit = (index) => {\n    props.updateTransactionIndex(index);\n  };\n\n  return (\n    <div>\n      <Forms />\n      <table>\n        <tbody>\n          {props.list.map((item, index) => {\n            return (\n              <tr key={index}>\n                <td>{item.bAccountNo}</td>\n                <td>{item.amount}</td>\n                <td>\n                  <button onClick={() => handleEdit(index)}>Edit</button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    list: state.list,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      updateTransactionIndex: actions.updateIndex,\n    },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n//components/form.js\nimport { connect } from "react-redux";\nimport * as actions from "../actions/transactionActions";\nimport { bindActionCreators } from "redux";\n\nclass Forms extends Component {\n  state = {};\n\n  returnStateObject() {\n    if (this.props.currentIndex == -1)\n      return {\n        bAccountNo: "",\n        bName: "",\n      };\n    else return this.props.list[this.props.currentIndex];\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.currentIndex != this.props.currentIndex ||\n      prevProps.list.length != this.props.list.length\n    ) {\n      this.setState({ ...this.returnStateObject() });\n    }\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.props.currentIndex == -1) this.props.insertTransaction(this.state);\n    else this.props.updateTransaction(this.state);\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} autoComplete="off">\n        <input\n          name="bAccountNo"\n          onChange={this.handleInputChange}\n          value={this.state.bAccountNo}\n        />\n        <br />\n\n        <input\n          name="amount"\n          onChange={this.handleInputChange}\n          value={this.state.amount}\n        />\n        <br />\n        <button type="submit">Submit</button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    list: state.list,\n    currentIndex: state.currentIndex,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      insertTransaction: actions.insert,\n      updateTransaction: actions.update,\n    },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Forms);\n'.trim(),N='\n//reducers/transactionReducer.js\nexport const transactionReducer = (state, action) => {\n  var list = JSON.parse(localStorage.getItem("transactions"));\n  switch (action.type) {\n    case "INSERT":\n      list.push(action.payload);\n      localStorage.setItem("transactions", JSON.stringify(list));\n      return { list, currentIndex: -1 };\n    case "UPDATE":\n      list[state.currentIndex] = action.payload;\n      localStorage.setItem("transactions", JSON.stringify(list));\n      return { list, currentIndex: -1 };\n\n    case "UPDATE-INDEX":\n      return { list, currentIndex: action.payload };\n\n    case "DELETE":\n      list.splice(action.payload, 1);\n      localStorage.setItem("transactions", JSON.stringify(list));\n      return { list, currentIndex: -1 };\n    default:\n      return state;\n  }\n};\n\nexport default transactionReducer;\n\n\n\n\n//actions/transactionActions.js\nexport const insert = data => {\n  return {\n      type: \'INSERT\',\n      payload: data\n  }\n}\n\nexport const update = data => {\n  return {\n      type: \'UPDATE\',\n      payload: data\n  }\n}\n\nexport const Delete = id => {\n  return {\n      type: \'DELETE\',\n      payload: id\n  }\n}\n\nexport const updateIndex = index => {\n  return {\n      type: \'UPDATE-INDEX\',\n      payload: index\n  }\n}\n'.trim(),I=function(n){function e(){return Object(a.a)(this,e),Object(s.a)(this,Object(i.a)(e).apply(this,arguments))}return Object(l.a)(e,n),Object(r.a)(e,[{key:"componentDidMount",value:function(){setTimeout((function(){return u.a.highlightAll()}),0)}},{key:"render",value:function(){var n=this.props.classes;return c.a.createElement(p.a,{container:!0},c.a.createElement(p.a,{item:!0,xs:2},c.a.createElement(m.a,{className:n.paper},c.a.createElement("h4",null,c.a.createElement(b.a,null)))),c.a.createElement(p.a,{item:!0,xs:10},c.a.createElement(m.a,{className:n.paper},c.a.createElement(h.a,null,c.a.createElement("h2",null,"Add(React)"),c.a.createElement("div",{style:v},c.a.createElement(g.a,{code:x,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"Add(Redux)"),c.a.createElement("div",{style:v},c.a.createElement(g.a,{code:f,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("br",null),c.a.createElement("h3",null,"Delete(React)"),c.a.createElement("div",{style:v},c.a.createElement(g.a,{code:y,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"Delete(Redux)"),c.a.createElement("div",{style:v},c.a.createElement(g.a,{code:A,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"Edit(Redux)"),c.a.createElement("div",{style:v},c.a.createElement(g.a,{code:S,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"actions"),c.a.createElement("div",{style:v},c.a.createElement(g.a,{code:N,language:"js",plugins:["line-numbers"]}))))))}}]),e}(o.Component);e.default=Object(E.a)((function(n){return{paper:{margin:n.spacing(1),padding:n.spacing(1)},smMargin:{margin:n.spacing(1)},actionDiv:{textAlign:"center"}}}))(I)}}]);
//# sourceMappingURL=92.022df5da.chunk.js.map