{"version":3,"sources":["components/ReactJs/prismCode.js","components/ReactJs/sidebar.js","components/ReactJs/reactJs_hooks/sortItems.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","countProgress","contTimmer","pause","fizzBuzz","ratings","SortItems","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/81.3a51a9fa.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/introReact' className={classes.line}>Intro-Lazy-Children</Link></MenuItem>\n        <MenuItem><Link to='/reactInter' className={classes.line}>Intro</Link></MenuItem>\n        <MenuItem><Link to='/codingInter' className={classes.line}>CodesPro</Link></MenuItem>\n        <MenuItem><Link to='/mainCompo' className={classes.line}>Event-hoc-form<br />curd-slider</Link></MenuItem>\n        <MenuItem><Link to='/pureComp' className={classes.line}>PureComp-conComp</Link></MenuItem>\n        <MenuItem><Link to='/useStates' className={classes.line}>useMultiState</Link></MenuItem>\n        <MenuItem><Link to='/contextHooks' className={classes.line}>Context Hooks</Link></MenuItem>\n        <MenuItem><Link to='/customHooks' className={classes.line}>CustomHooks-memo</Link></MenuItem>\n        <MenuItem><Link to='/useReducersSta' className={classes.line}>UseReducers</Link></MenuItem>\n        <MenuItem><Link to='/contextMethods' className={classes.line}>Curd Hooks</Link></MenuItem>\n        <MenuItem><Link to='/jsonPlaceholder' className={classes.line}>JsonPlaceholder</Link></MenuItem>\n        <MenuItem><Link to='/async_await' className={classes.line}>Async-await-sideMenu<br />Mouse hover</Link></MenuItem>\n        <MenuItem><Link to='/ticGame' className={classes.line}>Share-maxMinDate<br />moveBtn-slideshow</Link></MenuItem>\n        <MenuItem><Link to='/linkGet' className={classes.line}>LinkGet</Link></MenuItem>\n        <MenuItem><Link to='/numberFormats' className={classes.line}>Random NumFor-biToDe<br /> Validations Step DateTimw</Link></MenuItem>\n        <MenuItem><Link to='/models' className={classes.line}>Models-chidData-csv<br />Icon-router</Link></MenuItem>\n        <MenuItem><Link to='/like' className={classes.line}>Like-checkbox-radio<br />select-scroll</Link></MenuItem>\n        <MenuItem><Link to='/textEditors' className={classes.line}>TextEditors-paginations<br />translator-sortCheck</Link></MenuItem>\n        <MenuItem><Link to='/sortItems' className={classes.line}>IncOnClick-pushBtn-fizzBuzz<br />show-addDocs-ratings</Link></MenuItem>\n        <MenuItem><Link to='/serverSideRend' className={classes.line}>Jwt-multiSel</Link></MenuItem>\n        <MenuItem><Link to='/dropdownSelect' className={classes.line}>SelectFtr-checkFtr-updtCrd</Link></MenuItem>\n        <MenuItem><Link to='/kanban' className={classes.line}>Kanban</Link></MenuItem>\n        <MenuItem><Link to='/hackeRank' className={classes.line}>HackeRank</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","import React, { Component } from 'react';\nimport PrismCode from '../prismCode';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../styles.css'\nimport Sidebar from '../sidebar';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst countProgress = `\nclass App extends Component {\n  state = {\n      progress: 0,\n      score: 0\n    };  \n    \n    \n  handleClick = () => {\n      this.setState(() => {\n        if (this.state.progress + 10 === 100) {\n          return { progress: 0, score: this.state.score + 1 };\n        }\n        return { progress: this.state.progress + 10 };\n      });\n    }\n\n  render() {\n    const style = { width: this.state.progress + '%' };\n    \n    return (\n      <div onClick={this.handleClick}>\n        {'Score: ' + this.state.score} <br />\n        {this.state.progress + '%'}\n        <div className=\"bar\" style={style} />\n      </div>\n    );\n  }\n}\n\n\n//App.css\n.bar {\n  width: 0;\n  height: 20px;\n  transition: width 0.3s;\n  background: #21d147;\n  cursor: pointer;\n}`.trim();\n\nconst contTimmer = `\nclass App extends Component {\n  state = {\n    isActive: false,\n    secondsElapsed: 1800000 / 1000 //time in seconds\n  };\n\n  getHours() {\n    return (\"0\" + Math.floor(this.state.secondsElapsed / 3600)).slice(-2);\n  }\n\n  getMinutes() {\n    return (\"0\" + Math.floor((this.state.secondsElapsed % 3600) / 60)).slice(-2);\n  }\n\n  getSeconds() {\n    return (\"0\" + (this.state.secondsElapsed % 60)).slice(-2);\n  }\n\n  startTime = () => {\n    this.setState({ isActive: true });\n    \n    this.countdown = setInterval(() => {\n      this.setState({ secondsElapsed: this.state.secondsElapsed - 1 }) \n    }, 1000);\n  };\n\n  resetTime = () => {\n    clearInterval(this.countdown);\n    this.setState({\n        secondsElapsed: 1800000 / 1000,\n        isActive: false\n    });\n  };\n\n  pauseTime = () => {\n    clearInterval(this.countdown);\n    this.setState({ isActive: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <span>{this.getHours()} : {this.getMinutes()} : {this.getSeconds()}</span>\n        </div>\n        <div>\n          <button onClick={this.state.isActive ? this.pauseTime : this.startTime}>\n            Start/Pause\n          </button>\n          <button onClick={this.resetTime}>Reset</button>\n        </div>\n      </div>\n    );\n  }\n}`.trim();\n\nconst pause = `\nconst App=()=>{\n  const [count, setCount]=useState(0);\n  const [isFalse,setIsFalse]=useState(false);\n\n  const handleCount=()=>{\n   \n       if(isFalse){\n           setCount(count+1)\n       }\n       else{\n           setCount(count-1)\n       }\n  }\n  \n  const handleBtn=()=>{\n   setIsFalse(!isFalse);\n  }\n\n  return(\n   <div>\n       {count}<br/>\n       <button onClick={handleCount}>Count</button>\n       <button onClick={handleBtn}>Handle</button>\n\n   </div>\n  )\n}\n\nexport default App;\n`.trim();\n\nconst fizzBuzz = `\nclass App extends Component {\n  state = {\n    fizzBuzz: '',\n    counter: 1\n  };\n  \n  isFizzBuzz = () => {\n    const counter = this.state.counter;\n    let fizzBuzz = this.state.fizzBuzz;\n    \n    if (counter % 3 === 0) { fizzBuzz += 'Fizz, ' }\n    if (counter % 5 === 0) { fizzBuzz += 'Buzz, ' };\n    if (counter % 5 && counter % 3) { fizzBuzz += ''$'{counter}, ' };\n    \n    this.setState({ fizzBuzz: fizzBuzz });\n  };\n  increment = () => {\n    this.setState((prevState) => ({ counter: ++prevState.counter }));\n    this.isFizzBuzz();\n  };\n  decrement = () => {\n    this.setState((prevState) => ({ counter: --prevState.counter }));\n    this.isFizzBuzz();\n  };\n  render() {\n    return (\n      <div>\n        <button onClick={this.increment}>+</button>{ }\n        <button onClick={this.decrement}>-</button><br /><br />\n        {this.state.fizzBuzz}\n      </div>\n    );\n  }\n}`.trim();\n\nconst ratings = `\nconst Star = ({ starId, marked }) => {\n  return (\n    <span\n      star-id={starId}\n      style={{ color: \"green\", cursor: \"pointer\" }}\n    >\n      {marked ? \"★\" : \"☆\"}  // \"/u2605\" : \"/u2606\"\n    </span>\n  );\n};\n\nconst App = () => {\n  const [selection, setSelection] = React.useState(0);\n\n  const [rating, setRating] = React.useState(0);\n\n  const hoverOver = event => {\n    let starId = 0;\n    if (event && event.target && event.target.getAttribute(\"star-id\")) {\n      starId = event.target.getAttribute(\"star-id\");\n    }\n    setSelection(starId);\n  };\n\n  return (\n    <div\n      onMouseOver={hoverOver}\n      onMouseOut={() => hoverOver(null)}\n      onClick={event => setRating(event.target.getAttribute(\"star-id\"))}\n    >\n      {Array.from({ length: 5 }, (v, i) => (\n        <Star starId={i + 1} marked={selection ? selection > i : rating > i} />\n      ))}\n    </div>\n  );\n};`.trim();\n\n\n\nclass SortItems extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <b>1.onClick increase 10% progress bar</b>\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={countProgress}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>2. A click to start the countdown timer and a second one to Pause the timer in the same button</b>\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={contTimmer}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>3. Click on pause button to decrese count again Click on pause to start increse count</b>\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={pause}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>4. FizzBuzz :</b> If counter = 3, then print 'Fizz', counter = 5, 'Buzz' else print counter values.\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={fizzBuzz}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <b>7. Start Rating</b>\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={ratings}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(SortItems));"],"sourceRoot":""}