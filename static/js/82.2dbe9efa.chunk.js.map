{"version":3,"sources":["components/ReactJs/prismCode.js","components/ReactJs/sidebar.js","components/ReactJs/reactJs_hooks/textEditors.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","codes","translations","indexs","sortItems","TextEditors","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/82.2dbe9efa.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/introReact' className={classes.line}>Intro-Lazy-Children</Link></MenuItem>\n        <MenuItem><Link to='/reactInter' className={classes.line}>Intro</Link></MenuItem>\n        <MenuItem><Link to='/codingInter' className={classes.line}>CodesPro</Link></MenuItem>\n        <MenuItem><Link to='/mainCompo' className={classes.line}>Event-hoc-form<br />curd-slider</Link></MenuItem>\n        <MenuItem><Link to='/pureComp' className={classes.line}>PureComp-conComp</Link></MenuItem>\n        <MenuItem><Link to='/useStates' className={classes.line}>useMultiState</Link></MenuItem>\n        <MenuItem><Link to='/contextHooks' className={classes.line}>Context Hooks</Link></MenuItem>\n        <MenuItem><Link to='/customHooks' className={classes.line}>CustomHooks-memo</Link></MenuItem>\n        <MenuItem><Link to='/useReducersSta' className={classes.line}>UseReducers</Link></MenuItem>\n        <MenuItem><Link to='/contextMethods' className={classes.line}>Curd Hooks</Link></MenuItem>\n        <MenuItem><Link to='/jsonPlaceholder' className={classes.line}>JsonPlaceholder</Link></MenuItem>\n        <MenuItem><Link to='/async_await' className={classes.line}>Async-await-sideMenu<br />Mouse hover</Link></MenuItem>\n        <MenuItem><Link to='/ticGame' className={classes.line}>Share-maxMinDate<br />moveBtn-slideshow</Link></MenuItem>\n        <MenuItem><Link to='/linkGet' className={classes.line}>LinkGet</Link></MenuItem>\n        <MenuItem><Link to='/numberFormats' className={classes.line}>Random NumFor-biToDe<br /> Validations Step DateTimw</Link></MenuItem>\n        <MenuItem><Link to='/models' className={classes.line}>Models-chidData-csv<br />Icon-router</Link></MenuItem>\n        <MenuItem><Link to='/like' className={classes.line}>Like-checkbox-radio<br />select-scroll</Link></MenuItem>\n        <MenuItem><Link to='/textEditors' className={classes.line}>TextEditors-paginations<br />translator-sortCheck</Link></MenuItem>\n        <MenuItem><Link to='/sortItems' className={classes.line}>IncOnClick-pushBtn-fizzBuzz<br />show-addDocs-ratings</Link></MenuItem>\n        <MenuItem><Link to='/serverSideRend' className={classes.line}>Jwt-multiSel</Link></MenuItem>\n        <MenuItem><Link to='/dropdownSelect' className={classes.line}>SelectFtr-checkFtr-updtCrd</Link></MenuItem>\n        <MenuItem><Link to='/kanban' className={classes.line}>Kanban</Link></MenuItem>\n        <MenuItem><Link to='/hackeRank' className={classes.line}>HackeRank</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","import React, { Component } from 'react';\nimport PrismCode from '../prismCode';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../styles.css'\nimport Sidebar from '../sidebar';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst code = `\nclass App extends Component {\n  state = {\n      input: '',\n      output: []\n    };\n\n  handleChange = (e) => { this.setState({ input: e.target.value }) }\n\n  appendInput = () => {\n    let output = this.state.output.concat(this.state.input);\n    this.setState({output})\n  }\n  \n  removeInput = () => {\n    let output = this.state.output.filter(items=>items.id !== items.id);\n    this.setState({output});\n  }\n\n  render() {\n    return ( \n      <>\n        <div>\n          <input type=\"text\" onChange={this.handleChange} value={this.state.input}/>\n          \n          <button onClick={this.appendInput} disabled={!this.state.input}>Append</button>\n          <button onClick={this.removeInput} disabled={this.state.output.length === 0}>Undo</button>\n        </div>\n        <div>   \n          {this.state.output.map((values) =>  (\n                 <text>{values} </text>\n             ))\n          }\n        </div>\n      </>\n    );\n  }\n}`.trim();\n\nconst codes = `\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\n      setPosts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []);\n\n  // Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return (\n    <div className='container mt-5'>\n      <h1 className='text-primary mb-3'>My Blog</h1>\n      <Posts posts={currentPosts} loading={loading} />\n      <Pagination\n        postsPerPage={postsPerPage}\n        totalPosts={posts.length}\n        paginate={paginate}\n      />\n    </div>\n  );\n};\n\nexport default App;\n\n\n//Posts.js\nconst Posts = ({ posts, loading }) => {\n  if (loading) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <ul className='list-group mb-4'>\n      {posts.map(post => (\n        <li key={post.id} className='list-group-item'>\n          {post.title}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\n\n//Pagination.js\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className='pagination'>\n        {pageNumbers.map(number => (\n          <li key={number} className='page-item'>\n            <a onClick={() => paginate(number)} href='!#' className='page-link'>\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n`.trim();\n\n\nconst translations = `\nclass App extends Component {\n  state = {\n      input: '',\n      output: ''\n    };\n\n  handleChange = (e) => {\n    let userInput = e.target.value;\n    this.setState({ input: userInput });\n    \n    for (let names of this.props.translations.keys()) {\n      if(userInput === names) {\n        this.setState({ output: this.props.translations.get(userInput) });     \n      }\n    }\n    this.state.output = '';\n  }\n\n  render() {\n    return (\n      <>\n        <div>\n          <span>input:</span>\n          <input type=\"text\" onChange={this.handleChange} value={this.state.input}/>\n              \n          <span>output:</span>\n          <input type=\"text\" readOnly value={this.state.output}/>\n        </div>\n      </>\n    );\n  }\n}`.trim();\n\n\nconst indexs = `\nconst TRANSLATIONS = new Map([\n  ['ball', 'pelota'],\n  ['house', 'casa'],\n  ['dog', 'perro'],\n  ['dogs', 'perros'],\n  ['milk', 'leche'],\n  ['orange', 'naranja'],\n]);\n\nReactDOM.render(<App translations={TRANSLATIONS} />, document.getElementById('root'));`.trim();\n\n\nconst sortItems = `\nclass Filter extends Component {\n  handleChange = (e) => {\n      return (e) => {\n          e.preventDefault();\n          const { sorter } = this.props;\n          sorter(e.target.value);\n      };\n  }\n\n  render() {\n      const { sortedBy } = this.props;\n      const nameChecked = (sortedBy === \"name\");\n      return (\n          <div>\n              <input type=\"checkbox\" checked={nameChecked} onClick={this.handleChange('name')} value=\"name\" />\n              <label>Name</label>\n              <input type=\"checkbox\" checked={!nameChecked} onClick={this.handleChange('age')} value=\"age\" />\n              <label>Email</label>\n          </div>\n      );\n  }\n}\n\nclass RecordTable extends Component {\n      state={\n        people:[]\n      }\n\n      handleFetch = () => {\n        axios.get('https://jsonplaceholder.typicode.com/users')\n              .then(res => {\n                const people = res.data;\n                this.setState({ people })\n              })\n          }\n      \n      componentDidMount(){\n        this.handleFetch();\n      }\n      \n  render() {\n    console.log(this.state.people)\n      const { sortedBy } = this.props;\n      if (sortedBy === \"name\") {\n          this.state.people.sort(function (a, b) {\n              let personA = a.name.toLowerCase();\n              let personB = b.name.toLowerCase();\n              return (personA < personB) ? -1 : (personA > personB) ? 1 : 0;\n          });\n      } else {\n          this.state.people.sort(function (a, b) {\n              return new Date(b.dob) - new Date(a.dob);\n          });\n          this.state.people.reverse();\n      }\n\n  return (\n          <table>\n              <tr>\n                  <th>Name</th>\n                  <th>Email</th>\n              </tr>\n              \n              {this.state.people.map(person => (\n                  <div key={person.id}>\n                    <tr>\n                      <td>{person.name}</td> ---\n                      <td>{person.email}</td>\n                    </tr>\n                  </div>\n              ))}\n          </table>\n      );\n  }\n}\n\n\nclass App extends Component {\n  state = {\n      sortedBy: \"name\",\n  }\n\n  sort = (filter) => {\n    if (filter === \"name\") {\n      this.setState({ sortedBy: \"name\" });\n    } else {\n      this.setState({ sortedBy: \"age\" });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <center><h1>Birthday Records</h1></center>\n        <Filter sorter={this.sort} sortedBy={this.state.sortedBy}></Filter>\n        <RecordTable sortedBy={this.state.sortedBy}></RecordTable>\n      </div>\n    );\n  }\n}\n\n\nexport default App;`.trim();\n\nclass TextEditors extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. Text Editor</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={code}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>2. Pagination </h3>\n              <div style={titles}>\n                <PrismCode\n                  code={codes}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>3. Translator.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={translations}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>index.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={indexs}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>4. Sort items on check box</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={sortItems}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(TextEditors));"],"sourceRoot":""}