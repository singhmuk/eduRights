(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[153],{140:function(e,n,a){"use strict";a.d(n,"a",(function(){return p}));var t=a(45),o=a(28),r=a(136),l=a(137),s=a(139),c=a(0),i=a.n(c),m=a(138),u=a.n(m),p=(a(59),function(e){function n(e){var a;return Object(t.a)(this,n),(a=Object(r.a)(this,Object(l.a)(n).call(this,e))).highlight=function(){a.ref&&a.ref.current&&u.a.highlightElement(a.ref.current)},a.ref=i.a.createRef(),a}return Object(s.a)(n,e),Object(o.a)(n,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,n=e.code,a=(e.plugins,e.language);return i.a.createElement("pre",{className:"code-prism"},i.a.createElement("code",{ref:this.ref,className:"language-".concat(a)},n.trim()))}}]),n}(i.a.Component))},141:function(e,n,a){},154:function(e,n,a){"use strict";a.d(n,"a",(function(){return m}));var t=a(0),o=a.n(t),r=a(26),l=a(297),s=a(295),c=a(114),i=Object(c.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function m(){var e=i();return o.a.createElement("div",{className:e.root},o.a.createElement(s.a,null,o.a.createElement(l.a,null,o.a.createElement(r.b,{to:"/introJs",className:e.line},"IntroJs-Proxies")),o.a.createElement(l.a,null,o.a.createElement(r.b,{to:"/prototypes",className:e.line},"Prototypes-Defa. Param")),o.a.createElement(l.a,null,o.a.createElement(r.b,{to:"/JsObjects",className:e.line},"JsObject")),o.a.createElement(l.a,null,o.a.createElement(r.b,{to:"/array",className:e.line},"String")),o.a.createElement(l.a,null,o.a.createElement(r.b,{to:"/this",className:e.line},"This-call(), apply(), bind()")),o.a.createElement(l.a,null,o.a.createElement(r.b,{to:"/clousers",className:e.line},"Clousers")),o.a.createElement(l.a,null,o.a.createElement(r.b,{to:"/oops",className:e.line},"Oops-GetSet")),o.a.createElement(l.a,null,o.a.createElement(r.b,{to:"/regular",className:e.line},"Regular")),o.a.createElement(l.a,null,o.a.createElement(r.b,{to:"/keyedCollections",className:e.line},"Keyed Collections")),o.a.createElement(l.a,null,o.a.createElement(r.b,{to:"/arrayApi",className:e.line},"Indexed colle-Arr Obj")),o.a.createElement(l.a,null,o.a.createElement(r.b,{to:"/logic",className:e.line},"Logic")),o.a.createElement(l.a,null,o.a.createElement(r.b,{to:"/findOutput",className:e.line},"findOutput")),o.a.createElement(l.a,null,o.a.createElement(r.b,{to:"/mcqjs",className:e.line},"McqJs")),o.a.createElement(l.a,null,o.a.createElement(r.b,{to:"/hackerRank",className:e.line},"HackerRank1")),o.a.createElement(l.a,null,o.a.createElement(r.b,{to:"/hackerRank6",className:e.line},"HackerRank2"))),o.a.createElement("div",null))}},348:function(e,n,a){"use strict";a.r(n);var t=a(45),o=a(28),r=a(136),l=a(137),s=a(139),c=a(0),i=a.n(c),m=a(138),u=a.n(m),p=a(120),d=a(57),h=a(296),g=a(5),b=(a(141),a(154)),y=a(140),v={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},f="\nconst mockData = [];\nconst mainId = [];\nconst subParameters = [];\nconst city = [];\nconst matchingData = [];\nconst name = 'Clementina DuBuque';\nvar tempObj = [];\nvar sum = 0;\nvar avg = 0;\nvar arrayMet = [];\n\nfetch(\"https://jsonplaceholder.typicode.com/users\")\n.then(res => res.json()) \n.then(mockData => {\n  mockData.map(val => {\n    for(var i = 0; i < mockData.length; i++){\n      // console.log('api data in the loop',mockData[i])\n      if(mainId === mockData[i]._id){\n          // console.log('only match id',mockData[i]._id)\n          mockData.map(val => {\n            if(city.indexOf(val.name)===-1){\n                // console.log('only unique user city',val.address)\n                val.address.map(valCity => {\n                    subParameters.push(valCity.city)\n                    // console.log('Push city name in subParameters',subParameters)\n                    \n                    let newObj={\"id\":val._id, \"name\":val.name,'value':[]}\n                    newObj = newObj.value.push(valCity.city)\n                    // console.log('Push city name in new created object',newObj)\n                    \n                    var index=subParameters.indexOf(valCity._id)\n                    // console.log('index value',index,\":\",valCity._id)\n                    \n                    // subParameters[index].value = subParameters[index].concat(valCity._id)\n                    // console.log('index value',subParameters[index].value)\n                    \n                    if((valCity._id === mainId || valCity._id === mockData._id)){\n                        // console.log('matching hard coded value: ',valCity._id,\"=\",mockData._ids,\":\",mainId);\n                        matchingData=matchingData.concat(valCity._id);\n                        // console.log('matching values: ',matchingData)\n                    }\n                })\n            }\n            \n            else{\n              var index=subParameters.indexOf(val.phone)\n              subParameters[index].value = subParameters[index].value.concat(val.id)\n              // console.log('else values: ',subParameters)\n              }\n          })\n      }\n    }\n})\n\naddData();\npickRecord();\nSumAverage();\nextractKey();\narrayMethod();\n});\n\n\n//Add data in empty array from api values\nconst addData = () => {\nfetch(\"https://jsonplaceholder.typicode.com/users\")\n.then(res => res.json()) \n.then(mockData => {\nmockData.map(add => {\n    mockData.push(add.name)\n    \n    if(add.name === name){\n        // console.log('fields',mockData)\n        for(let i=0; i<=mockData.length; i++){\n            // console.log('Matched name',add.name)\n        }\n    }\n})\n})\n// console.log('after map',mockData);\n}\n\n\n//Pick a record from list\nconst pickRecord = () => {\nfetch(\"https://jsonplaceholder.typicode.com/users\")\n.then(res => res.json()) \n.then(mockData => {\n   mockData.map(pickRec => {\n    if(pickRec._id === mainId){\n        mockData.push(pickRec.email);\n        // console.log('map function',mockData)\n    }\n    \n// apiId = mockData.push(pickRec);\n// console.log('method',name,\";\",pickRec.name)\nif(pickRec.name === name){\n    for(let i=0; i<=mockData[i].length; i++){\n       let obj = [];\n       obj.push(mockData.name)\n        console.log('matching values',obj)\n        }\n    }\n   })\n})\n}\n\n\n//Add sum/avg of number from a list\nconst SumAverage = () => {\nfetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(res => res.json()) \n    .then(mockData => {\n   \n   mockData.map(fields => {\n    tempObj.push(fields._id) \n   })\n   for(let i =0; i<=tempObj.length;i++){\n    sum +=tempObj[i];\n    avg = sum/tempObj.length\n    // console.log('sum',sum)\n    }\n})\n\n//Flattening an array of arrays\nconst nested = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nlet flat = nested.reduce((acc, it) => [...acc, ...it], []);\nlet sumOfArray = flat.reduce((a, b) => a+b)\n// console.log('flat',flat)\n// console.log('Sum ',sumOfArray)\n}\n\n\n//Extract key/value pair from an object\nconst extractKey = () => {\nvar data = \n       [\n        {label:1, quater :'Q1', y:34},\n        {label:2, quater:'Q1', y:20},\n        {label:3, quater:'Q1', y:30},\n \n        {label:1, quater:'Q2', y:77},\n        {label:2, quater:'Q2', y:52},\n        {label:3, quater:'Q2', y:3},\n \n        {label:1, quater:'Q3', y:65},\n        {label:2, quater:'Q3', y:12},\n        {label:3, quater:'Q3', y:9},\n \n        {label:1, quater:'Q4', y:77},\n        {label:2, quater:'Q4', y:34},\n        {label:3, quater:'Q4', y:5}\n       ];\n       \nvar quartersum = {}\ndata.map(function(entry) {\n quartersum[entry.label] = (quartersum[entry.label]||0) + entry.y\n})\n\ndata.map(function(entry) {\n entry.percent = entry.y / quartersum[entry.label] * 100;\n//  console.log(JSON.stringify(entry))\n})\n\n//    console.log('data',quartersum);\n//    console.log('extract object keys',Object.keys(quartersum));\n//    console.log('extract object values',Object.values(quartersum));\n\n  for(let [key, value] of Object.entries(quartersum)){\n    //   console.log('extract object property',key, value);\n  }\n  var percentage = parseInt((sum * 100/quartersum.length));\n  console.log('percentage',percentage);\n}\n\n\nconst arrayMethod = () => {\nfetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(res => res.json()) \n    .then(arrayMeth => {\n   \n   arrayMeth.map(data => {\n    arrayMet.push(data._id)\n    // console.log('method',arrayMet)\n   })\n   \n   let scores = arrayMet.find(element => element > 4);\n   let filterScores = arrayMet.filter(element => element > 4);\n   let joinArr = filterScores.join(\"*\");\n   let spliceArr = filterScores.splice(0,2)\n   let concatArr = filterScores.concat(scores,joinArr,\"100\");\n   \n    //console.log('method',filterScores)\n   \n\n   //The slice() method slices out a piece of an array into a new array.\n   let sliceArr = filterScores.slice(0,2);\n   let toStringArr = arrayMet.toString()\n   let position = filterScores.indexOf(8)\n   \n   \n   //The includes() method determines whether an array contains a specified element.\n   let includeArr = filterScores.includes(10)\n   console.log('find',includeArr)\n})\n}".trim(),j="\nconst mockData = [];\n  const mockData2 = [\"Glenna Reicher\", \"Kurtis Weissnat\", \"Ervin Howell\",\"Leanne Graham\"];\n  const commonElements = [];\n  var str = '';\n  var str2 = '';\n  var dict = {};\n  var obj = {};\n  var objKey = [];\n  var arr = [];\n  var personEmail = [];\n\nfetch(\"https://jsonplaceholder.typicode.com/users\")\n.then(res => res.json()) \n.then(person => {\n    person.map(val => {\n      mockData.push(val.name)\n    })\n    // console.log('push respose into mockdata',mockData)\n    var common = mockData.filter(item=>{\n      return mockData2.includes(item)\n  })\n  for(var i=0; i<=common.length; i++){\n    commonElements.push(common[i])\n    }\n    console.log(\"commonElements\",commonElements);\n    \n     commChar();\n     arrToObj();\n     objTOArr();\n     allSum();\n     displayDot();\n     matchName();\n  })\n  \n  \n  //Common element in strings\nconst commChar = () => {\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(res => res.json()) \n      .then(person => {\n     person.map(val => {\n      str=val.name;\n      str2=val.username;\n       })\n       \n       for(var i=0; i < str.length; i++) {\n        dict[str.charAt(i)] = 1;\n      }\n      // console.log('str',dict);\n      \n      var commonChars =[];\n    for(var i=0; i < str2.length; i++) {\n      if( dict[str2.charAt(i)] == 1) {\n        commonChars.push(str2.charAt(i)); // this is optional we can simply print\n      }\n      // console.log('str2',commonChars);  \n\n    }\n    \n    dict = commonChars.join(\"\"); \n    // console.log('commonChars',dict);\n     })\n}\n\n\n//convert an Array to Object\nconst arrToObj = () => {\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(res => res.json()) \n      .then(person => {\n          person.map(val => {\n     \n    //  console.log('arr',person)\n    //  console.log('obj',...person)\n  })\n})\n}\n\n\n//convert an Object to Array\nconst objTOArr = () => {\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(res => res.json()) \n      .then(person => {\n     \n     person.map(val => {\n      obj=val\n     })\n    //  console.log('obj',obj)\n     \n     //Convert the keys to Array using - Object.keys()\n     objKey = Object.keys(obj)\n    //  console.log('objKey',objKey)\n\n     //Converts the Values to Array using - Object.values()\n     const objVal = Object.values(obj)\n    //  console.log('objVal',objVal)\n\n     //Converts both keys and values using - Object.entries()\n     const objAll = Object.entries(obj)\n    //  console.log('objAll',objAll)\n  })\n}\n\n\n//Sum of all elements of a given array\nconst allSum = () => {\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(res => res.json()) \n      .then(person => {\n     \n     person.map(val=>{\n      arr.push(val._id);\n  })\n  var sum = arr.reduce((a, i) => {\n    return a + i;\n  });\nconsole.log('sum',sum)\n  })\n}\n\n\n//Dispay dot value  \nconst displayDot = () => {\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n  .then(res => res.json()) \n  .then(person => {\n     \n     person.map(val=>{\n      personEmail.push(val.email);\n    })\n    // console.log('personEmail',personEmail)\n  })\n}\n\n\n//Last match name\nconst matchName = () => {\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n  .then(res => res.json()) \n  .then(person => {\n     \n     const mockData = [];\n     const names = [];\n     const apiId = '5';\n     person.map(val=>{\n      mockData.push(val.id);\n      \n      if(val._id == apiId){\n        names.push(val.name)\n        for(let i=0; i<=names.length; i++){\n          }\n          console.log('inside loop',names)\n       }\n    })\n    \n    console.log('unique id',mockData)\n  })\n}".trim(),k="\nconst person = {\n  firstName: 'Max',\n  age: 31,\n  hobbies: ['Sport', 'Coocking'],\n  greet(){\n    console.log('Hi, I am', this.firstName);\n  }\n};\n\nconsole.log(person[0]); //undefined\nconsole.log(person['firstName']);\n\nperson.lastName = 'Schwarz'\nconsole.log(person);\ndelete person.age;\n\nperson.greet();".trim(),E=function(e){function n(){return Object(t.a)(this,n),Object(r.a)(this,Object(l.a)(n).apply(this,arguments))}return Object(s.a)(n,e),Object(o.a)(n,[{key:"componentDidMount",value:function(){setTimeout((function(){return u.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return i.a.createElement(p.a,{container:!0},i.a.createElement(p.a,{item:!0,xs:2},i.a.createElement(d.a,{className:e.paper},i.a.createElement("h4",null,i.a.createElement(b.a,null)))),i.a.createElement(p.a,{item:!0,xs:10},i.a.createElement(d.a,{className:e.paper},i.a.createElement(h.a,null,i.a.createElement("h3",null,"Array method"),i.a.createElement("div",{style:v},i.a.createElement(y.a,{code:f,language:"js",plugins:["line-numbers"]})),i.a.createElement("br",null),i.a.createElement("h3",null,"Arrays to Object"),i.a.createElement("div",{style:v},i.a.createElement(y.a,{code:j,language:"js",plugins:["line-numbers"]})),i.a.createElement("br",null),i.a.createElement("h3",null,"2.Array in Object"),i.a.createElement("div",{style:v},i.a.createElement(y.a,{code:k,language:"js",plugins:["line-numbers"]}))))))}}]),n}(c.Component);n.default=Object(g.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(E)}}]);
//# sourceMappingURL=153.a323d966.chunk.js.map