{"version":3,"sources":["components/ReactJs/prismCode.js","components/mern/sidebar.js","components/mern/projects/react_share.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","reactShareSimplified","app","server","clientApp","ReactShare","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/177.a7b47947.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/setUpFiles' className={classes.line}>SetUp</Link></MenuItem>\n        <MenuItem><Link to='/javaScript' className={classes.line}>JavaScript</Link></MenuItem>\n        <MenuItem><Link to='/reactCurdMern' className={classes.line}>Mern React</Link></MenuItem>\n        <MenuItem><Link to='/4_reactCurdHooks' className={classes.line}>Mern React Hooks</Link></MenuItem>\n        <MenuItem><Link to='/pagination' className={classes.line}>Sea Sort Pagi Auth_Token</Link></MenuItem>\n        <MenuItem><Link to='/propsModel' className={classes.line}>SS pagination-Captcha</Link></MenuItem>\n        <MenuItem><Link to='/imageGallery' className={classes.line}>ImageGallery</Link></MenuItem>\n        <MenuItem><Link to='/stripes' className={classes.line}>Stripes-Signin with gfb</Link></MenuItem>\n        <MenuItem><Link to='/paginationsMern' className={classes.line}>Paginations-push_notifis</Link></MenuItem>\n        <MenuItem><Link to='/googleMap' className={classes.line}>GoogleMap</Link></MenuItem>\n        <MenuItem><Link to='/videoChat' className={classes.line}>VideoChat</Link></MenuItem>\n        <MenuItem><Link to='/qrSccaners' className={classes.line}>QrCode-reCapcha</Link></MenuItem>\n        <MenuItem><Link to='/react_share' className={classes.line}>Share-Stripe</Link></MenuItem>\n        <MenuItem><Link to='/socialSignUp' className={classes.line}>SocialSignUp</Link></MenuItem>\n        <MenuItem><Link to='/mernSocial' className={classes.line}>MernSocial</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst reactShareSimplified = `\nimport {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n  EmailShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  GooglePlusIcon,\n  EmailIcon,\n  WhatsappIcon\n} from \"react-share\";\n\n\nclass ReactShareSimplified extends Component {\n  render() {\n    const { url, title, facebook, googlePlus, twitter, whatsapp, email, addClass, Previewemail } = this.props;\n    let { facebookClass, twitterClass, googlePlusClass, whatsappClass, emailClass } = this.props || \"shareIcon\";\n\n    let iconSize = 32;\n    if (this.props.iconSize !== undefined) { iconSize = this.props.iconSize }\n\n    return (\n      <span className={addClass}>\n        {facebook && (<FacebookShareButton url={url} quote={title} className={facebookClass}>\n          <FacebookIcon size={iconSize} round />\n        </FacebookShareButton>)}\n\n        {googlePlus && (<GooglePlusShareButton url={url} quote={title}  className={googlePlusClass}>\n          <GooglePlusIcon size={iconSize} round />\n        </GooglePlusShareButton>)}\n\n        {twitter && (<TwitterShareButton url={url} quote={title} style={{ outline: 'none' }} className={twitterClass}>\n          <TwitterIcon size={iconSize} round />\n        </TwitterShareButton>)}\n\n        {whatsapp && (<WhatsappShareButton url={url} quote={title} style={{ outline: 'none' }} className={whatsappClass}>\n          <WhatsappIcon size={iconSize} round />\n        </WhatsappShareButton>)}\n\n        {email && (<EmailShareButton url={url} quote={title} style={{ outline: 'none' }} className={emailClass}>\n          <EmailIcon size={iconSize} round />\n        </EmailShareButton>)}\n        {Previewemail && (<EmailShareButton url={url} quote={title} style={{ outline: 'none' }} className={emailClass}>\n          <EmailIcon size={iconSize} round />\n        </EmailShareButton>)}\n      </span>\n    );\n  }\n}`.trim();\n\nconst app = `\n//App.js\nimport ReactShareSimplified from './dist/ReactShareSimplified'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    const url = \"https://www.github.com\";\n    const title = \"React share simplified\";\n    return (\n      <div className=\"App\">\n        <div className=\"align-inline\" style={{marginTop:'10px'}}>\n          <span className=\"share-title\">Share: </span>\n          <ReactShareSimplified\n            url={url}\n            title={title}\n            facebook={true}\n            facebookClass=\"iconStyle\"\n            googlePlus={true}\n            googlePlusClass=\"iconStyle\"\n            twitter={true}\n            twitterClass=\"iconStyle\"\n            email={true}\n            emailClass=\"iconStyle\"\n            whatsapp={true}\n            whatsappClass=\"iconStyle\"\n            iconSize={32}\n            addClass=\"align-inline\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n//App.css\n.share-title {\n  justify-content: center;\n  align-self: center;\n  font-size: 17px;\n  font-family: \"Nunito\";\n  font-weight: 500;\n  margin-right: 5px;\n}\n.align-inline {\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n}\n.iconStyle {\n    margin: 0 5px 5px;\n    cursor: pointer;\n}\n`.trim();\n\nconst server = `\nconst cors = require('cors');\nconst express = require('express');\n\n//Secret key\nconst stripe = require('stripe')('sk_test_51He1P4Jz7nbfLVoYjEiuLJJXUkw3yFMOLRXLm8Ons2fnzuwfo\n               FLzCyncHIubREzUs60yiDPNvSxZltanq41RyLEi00vKugjwhC');\nconst uuid = require('uuid');\n\nconst app = express();\n\napp.use(express.json())\napp.use(cors())\n\napp.get('/', (req, res) => {\n    res.send('It is working')\n})\n\napp.post('/payment', (req, res) => {\n    const { product, token } = req.body;\n    console.log('Products', product);\n    console.log('Price', product.price);\n    const idempontencyKey = uuid()\n\n    return stripe.customers.create({\n        email: token.email,\n        source: token.id\n    }).then(customer => {\n        stripe.charges.create({\n            amount: product.price * 100,\n            currency: 'usd',\n            customer: customer.id,\n            receipt_email: token.email,\n            description: 'Purchase of product.name',\n            shipping: {\n                name: token.card.name,\n                address: {\n                    country: token.card.address_country\n                }\n            }\n        }, { idempontencyKey })\n    })\n        .then(result => res.status(200).json(result))\n        .catch(err => console.log(err))\n})\n\n\napp.listen(5000, () => console.log('Started on port 5000'))`.trim();\n\nconst clientApp = `\nimport React, { useState } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\n\nfunction App() {\n\n  const [product, setProduct] = useState({\n    name: \"Reactjs\",\n    price: 10,\n    productBy: 'Facebook'\n  })\n\n  const makePayment = token => {\n    const body = {\n      token,\n      product\n    }\n    const header = {\n      \"Content-Type\": \"application/json\"\n    }\n\n    return fetch('http://localhost:5000/payment', {\n    method: 'POST',\n      header,\n      body: JSON.stringify(body)\n    }).then(res => {\n        console.log('Response', res)\n        const { status } = res;\n        console.log('Status', status)\n      })\n  .catch(err => console.log(err))\n  }\n\nreturn (\n  <div className=\"App\">\n    Stripe\n    <StripeCheckout\n      //Publishable key\n      // stripeKey={process.env.REACT_APP_KEY}\n      stripeKey=\"pk_test_51He1P4Jz7nbfLVoYDBP7q8kVxEZLjLd34krGafVPawZ4PIkziUVjrOyzePVtXM3rkRoo04sV\n                 fvFjBuRZehSWy8Xu00kIVA41KE\"\n      token={makePayment}\n      amount={product.price * 100}\n      name=\"Reactjs\"\n      shippingAddress\n      billingAddress\n    />\n  </div>\n);\n}\n`.trim();\n\n\nclass ReactShare extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>React Share</h3>\n              <b>dist/ReactShareSimplified.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={reactShareSimplified}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>App.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={app}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Stripe</h3>\n              <b>server.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={server}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Client</h3>\n              <b>App.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={clientApp}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(ReactShare));\n"],"sourceRoot":""}