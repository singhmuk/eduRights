(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[31],{140:function(e,n,t){"use strict";t.d(n,"a",(function(){return g}));var a=t(45),r=t(28),l=t(136),u=t(137),i=t(139),s=t(0),c=t.n(s),o=t(138),m=t.n(o),g=(t(59),function(e){function n(e){var t;return Object(a.a)(this,n),(t=Object(l.a)(this,Object(u.a)(n).call(this,e))).highlight=function(){t.ref&&t.ref.current&&m.a.highlightElement(t.ref.current)},t.ref=c.a.createRef(),t}return Object(i.a)(n,e),Object(r.a)(n,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,n=e.code,t=(e.plugins,e.language);return c.a.createElement("pre",{className:"code-prism"},c.a.createElement("code",{ref:this.ref,className:"language-".concat(t)},n.trim()))}}]),n}(c.a.Component))},141:function(e,n,t){},152:function(e,n,t){"use strict";t.d(n,"a",(function(){return o}));var a=t(0),r=t.n(a),l=t(26),u=t(297),i=t(295),s=t(114),c=Object(s.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function o(){var e=c();return r.a.createElement("div",{className:e.root},r.a.createElement(i.a,null,r.a.createElement(u.a,null,r.a.createElement(l.b,{to:"/introAlgo",className:e.line},"Deadlock")),r.a.createElement(u.a,null,r.a.createElement(l.b,{to:"/Stack",className:e.line},"Stack")),r.a.createElement(u.a,null,r.a.createElement(l.b,{to:"/Queue",className:e.line},"Queue")),r.a.createElement(u.a,null,r.a.createElement(l.b,{to:"/linkedList",className:e.line},"LinkedList")),r.a.createElement(u.a,null,r.a.createElement(l.b,{to:"/heap",className:e.line},"Heap")),r.a.createElement(u.a,null,r.a.createElement(l.b,{to:"/trees",className:e.line},"Tree")),r.a.createElement(u.a,null,r.a.createElement(l.b,{to:"/graph",className:e.line},"Graph")),r.a.createElement(u.a,null,r.a.createElement(l.b,{to:"/sort",className:e.line},"QuickSort")),r.a.createElement(u.a,null,r.a.createElement(l.b,{to:"/searchAlgo",className:e.line},"Search")),r.a.createElement(u.a,null,r.a.createElement(l.b,{to:"/topTech",className:e.line},"TopTech")),r.a.createElement(u.a,null,r.a.createElement(l.b,{to:"/stringAlgo",className:e.line},"String")),r.a.createElement(u.a,null,r.a.createElement(l.b,{to:"/arrayAlgo",className:e.line},"Array")),r.a.createElement(u.a,null,r.a.createElement(l.b,{to:"/nestingArrAlgo",className:e.line},"Nesting Array")),r.a.createElement(u.a,null,r.a.createElement(l.b,{to:"/numbersAlgo",className:e.line},"Numbers")),r.a.createElement(u.a,null,r.a.createElement(l.b,{to:"/gameAlgo",className:e.line},"Game")),r.a.createElement(u.a,null,r.a.createElement(l.b,{to:"/arrayStrAlgo",className:e.line},"ArrayStr")),r.a.createElement(u.a,null,r.a.createElement(l.b,{to:"/arrayNumAlgo",className:e.line},"ArrayNum")),r.a.createElement(u.a,null,r.a.createElement(l.b,{to:"/dslogic8",className:e.line},"Logic8"))),r.a.createElement("div",null))}},157:function(e,n,t){e.exports=t.p+"static/media/stcks.7efa3b78.png"},440:function(e,n,t){"use strict";t.r(n);var a=t(45),r=t(28),l=t(136),u=t(137),i=t(139),s=t(0),c=t.n(s),o=t(138),m=t.n(o),g=t(120),E=t(57),h=t(296),p=t(5),f=(t(141),t(152)),b=t(140),d=(t(157),{backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"}),y='\n    var strArray = "StackOverflow".split("");\n    console.log(strArray.join(""));\n'.trim(),j="\nlet i, j, arr=[0,9,8,7,6];\nvar max=0;\n\nfor(i=0; i<arr.length; i++){\n  for(j=i; j<arr.length; j++){\n    if(arr[i]>arr[j]){\n      var temp=arr[i];\n      arr[i]=arr[j];\n      arr[j]=temp;\n    }\n  }\n}\n\nconsole.log(arr);\n\n\n//Greatest Product Of 3\nmax = arr[arr.length-1] * arr[arr.length-2] * arr[arr.length-3]\nconsole.log(max);\n".trim(),v="\nfunction removeDup(){\n  const arr = [1,2,3,4,3,0,9,0,1];\n  const result=[];\n  \n  for(let i=0; i<arr.length;i++){\n      let count=0;\n     // for(let j=0;j<result.length;j++){\n        for(let j=0;j<arr.length;j++){                                     //Remove Duplicates\n       // if(arr[i]==result[j]) count +=1;                                 //Unique Character\n          if(arr[i]==arr[j]) count +=1;\n      }\n      if(count==1){                                                      //RD\n   // if(count==0){                                                      //UC\n          result.push(arr[i]);\n      }  \n  }\n  \n  console.log(result)\n}\n\nremoveDup();\n".trim(),x='\nfunction compare(){\n  const arr=[1,2,3,4,5,6];\n  const arr2=[5,6,7,8,9,0];\n  const result=[];\n  \n  for(let i=0; i<arr.length; i++){\n    if(arr2.indexOf(arr[i]) !== -1){\n      result.push(arr[i]);\n    }\n  }\n  console.log(result)\n}\n\ncompare();\n\n\n//Unique name\nfunction getUnique(){\n  var names = ["John", "Peter", "Clark", "Harry", "John", "Alice"];\n  var newName = [];\n  \n  for(i=0; i < names.length; i++){\n      if(newName.indexOf(names[i]) === -1) {\n          newName.push(names[i]);\n      }\n  }\n  console.log(newName);\n}\n\ngetUnique();\n'.trim(),N="\nconst median = () => {\n  const arr = [1,12,15,26,38];\n  const arr2 = [4,3,1];\n  let arrMedian=[];\n\n  const result = [...arr, ...arr2].sort((a, b) => a - b);\n  const half = result.length / 2 | 0;\n  \n  if (result.length % 2){\n      arrMedian=result[half];\n  }\n  else{\n      arrMedian=((result[half] + result[half-1])/2);\n  }\n  return console.log(arrMedian);\n}\n\nmedian()\n".trim(),O="\nfunction plusOne(){\n  const arr=[1,2,3];\n  let result=[], result2=[];\n\n  for(let i=0; i<arr.length; i++){\n    result.push(arr[i]);\n    result2 = arr[arr.length-1]+1\n  }\n\n  result.pop();\n  result.push(result2);\n  console.log(result)\n}\n\nplusOne();\n".trim(),A="\nfunction arrCounter(arr){\n  var counter = 0;\n  var maxCount = 0;\n\n    function inner(n){\n      if(!Array.isArray(n)){\n        maxCount = Math.max(maxCount, counter);\n     counter = 0;\n     return\n   }\n   \n   n.forEach(num => {\n   counter ++;\n   inner(num);\n   })\n }\n \n inner(arr);\n console.log(maxCount)\n return maxCount;\n}\n\narrCounter([[3]])\narrCounter([[[[[[[9]]]]]]])\narrCounter([])\n".trim(),C="\nfunction arrCounts(){\n  const arr = [1,2,3,4,5];\n  var result = 0;\n\n  while(arr[result]!==undefined){\n    result++;\n  }\n  console.log(result);\n}\n\narrCounts();  \n".trim(),S="\nfunction pattern123() {\n  const arr=[1,2,3,4];\n  const number = 132;\n  const result=[];\n\n  const target = number.toString();\n  [target]\n\n  for(let i=0; i<arr.length; i++){\n    if(target.indexOf(arr[i]) !== -1){\n      result.push(arr[i]);\n    }\n  }\n  console.log(result)\n}\n\npattern123();\n".trim(),k="\nfunction numIdenticalPairs(nums) {\n  let count = 0\n  \n  for (let i=0; i<nums.length; i++) {\n    for (let j=(i+1); j<nums.length; j++) {\n      if (nums[i] === nums[j]) {\n        count += 1\n      }\n    }\n  }\n  return count\n}\n\nconsole.log(numIdenticalPairs([1,2,3,1,1,3]))\n".trim(),w='\nfunction removeEle(){\n  const arr=[1,2,3,5,4];\n  let ele=3;\n  let removeEle=[];\n  \n  while(ele>0){ \n      removeEle +=arr.pop(ele)\n      ele--;\n  }\n\n  console.log(removeEle)\n  console.log("Remain elements", arr)\n}\n\nremoveEle();\n'.trim(),M="\nfunction shuffle() {\n  const arr = [7,8,9,10];\n  const n=3;\n\n  for (let i=arr.length-1; i>0; i--) {\n    let j = Math.floor(Math.random() *(i+n));\n    let temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n  console.log(arr);\n}\n\nshuffle()\n".trim(),D="\nfunction positionEle(){\n  const arr = [5,7,7,8,8,10], target = 8;\n  let result=[];\n  let i;\n\n  for(i=0; i<arr.length; i++){\n    if(arr[i]==target){\n      result.push(arr.indexOf(target));\n    }\n  }\n  console.log(result);\n}\n\npositionEle();\n".trim(),T="\nfunction combinationSum(){\n  const arr=[1,2,3,6,4,5];\n  const target = 7;\n  let result=[];\n\n  for(let i=0; i<arr.length; i++){\n    for(let j=i; j<arr.length; j++){\n      if(arr[i]+arr[j]==target){\n        result.push(arr[i],arr[j])\n      }\n    }\n  }  \n  console.log(result);\n}\n\ncombinationSum();\n".trim(),R="\nfunction missNum() {\n  let i, arr=[0,1,2,4,5], exactsum=0, result=0;\n  exactsum = arr.reduce((a, b) => a + b);\n\n  for (i=0; i<=arr.length; i++) {\n    result += i\n  }\n  \n  result -= exactsum;\n  console.log('Missing Number', result)\n}\n\nmissNum();\n ".trim(),P="\nconst arr = [1,2,4,8];\nconst missing = [];\nvar count = 1;\n\nfor (let i=0; i<arr.length; i++) {\n  if (arr[i] !== count) {\n    missing.push(count);\n    i--;\n  }\n  count++;\n}\n\nconsole.log(missing);\n\n\n//2\nfunction findMissingRanges(nums, lower, upper) {\n  const result = [];\n  const count = (lo, hi) => hi - lo - 1;\n\n  function set(lo, hi){\n    if (count(lo, hi) === 1) {\n      result.push('$'{lo + 1}')\n    } \n    else if (count(lo, hi) > 1) {\n      result.push('$'{lo + 1}->'$'{hi - 1}')\n    }\n  }\n  \n  for (let i = 0; i <= nums.length; i++) {\n    set(\n      i === 0 ? lower - 1 : nums[i - 1],\n      i === nums.length ? upper + 1 : nums[i],\n    )\n  }\n  return result\n}\n\nconsole.log(findMissingRanges([1,2,3,-2,4]))\n".trim(),I="\nfunction permute(nums = []){\n  const result = [];\n\n  function aux(list = [], current = []){\n    if (list.length === 0) {\n      result.push(current)\n    }\n\n    list.forEach((number, index) => {\n      aux(list.filter((v, index2) => index2 !== index), [...current, number])\n    })\n  }\n  \n  aux(nums)\n  return result\n}\n\nconsole.log(permute([1,2,3]))\n".trim(),G="\nfunction containsDuplicate(nums){\n  const map = {}\n  \n  for (num of nums) {\n    if (map[num]) {\n      return true\n    }\n    map[num] = 1\n  }\n  return false\n}\n\nconsole.log(containsDuplicate([1,2,3,1]))\n".trim(),F="\nfunction summaryRanges(nums) {\n  let start = null\n  const result = []\n\n  for (let i=0; i<nums.length; i++) {\n    if (start === null) {\n      start = nums[i]\n    }\n    if (nums[i] === nums[i + 1] - 1) continue;\n\n    if (nums[i] === start) {\n      result.push(nums[i].toString())\n      start = null\n    } \n    else {\n      result.push('$'{start}->'$'{nums[i]}')\n      start = null\n    }\n  }\n  \n  return result\n}\n\nconsole.log(summaryRanges([1,2,3,4,6,7,9]))\n".trim(),U="\nfunction arrProducts(){\n  const arr = [1,2,3,4];\n  const result = [];\n  let product, i, j;\n\n  for(i=0; i<arr.length; i++){\n    product = 1;\n    for(j=0; j<arr.length; j++){\n       if(i !==j) product *= arr[j];\n    }\n    result.push(product);\n  }\n  console.log(result);\n}\n\narrProducts();\n".trim(),q="\nfunction countSmaller(nums) {\n  const result = nums.map(() => 0);\n\n  for (let i=0; i<nums.length; i++) {\n    for (let j=(i+ 1); j<nums.length; j++) {\n      if (nums[j]<nums[i]) {\n        result[i] += 1\n      }\n    }\n  }\n  \n  return result\n}\n\nconsole.log(countSmaller([5,2,6,1]))\n".trim(),L=function(e){function n(){return Object(a.a)(this,n),Object(l.a)(this,Object(u.a)(n).apply(this,arguments))}return Object(i.a)(n,e),Object(r.a)(n,[{key:"componentDidMount",value:function(){setTimeout((function(){return m.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return c.a.createElement(g.a,{container:!0},c.a.createElement(g.a,{item:!0,xs:2},c.a.createElement(E.a,{className:e.paper},c.a.createElement("h4",null,c.a.createElement(f.a,null)))),c.a.createElement(g.a,{item:!0,xs:10},c.a.createElement(E.a,{className:e.paper},c.a.createElement(h.a,null,c.a.createElement("h3",null,"1. Convert a string to an array"),c.a.createElement("div",{style:d},c.a.createElement(b.a,{code:y,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"2. Sort"),c.a.createElement("div",{style:d},c.a.createElement(b.a,{code:j,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"3. Remove Duplicates"),c.a.createElement("div",{style:d},c.a.createElement(b.a,{code:v,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"4. Contains Duplicate."),"Given an array of integers, find if the array contains any duplicates.",c.a.createElement("br",null),"Your function should return true if any value appears at least twice in the array, and it should return false if every element is distinct.",c.a.createElement("div",{style:d},c.a.createElement(b.a,{code:G,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"5. Compare Array"),c.a.createElement("div",{style:d},c.a.createElement(b.a,{code:x,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"6. Counting Elements."),c.a.createElement("div",{style:d},c.a.createElement(b.a,{code:C,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"7. 132 Pattern."),c.a.createElement("b",null,"Input: "),"nums = [1,2,3,4]",c.a.createElement("br",null),c.a.createElement("b",null,"Output: "),"false",c.a.createElement("br",null),c.a.createElement("b",null,"Explanation: "),"There is no 132 pattern in the sequence.",c.a.createElement("div",{style:d},c.a.createElement(b.a,{code:S,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"8. Combination Sum"),c.a.createElement("b",null,"Input: "),"candidates = [2,3,6,7], target = 7,",c.a.createElement("br",null),c.a.createElement("b",null,"A solution set is: "),"[ [7],",c.a.createElement("br",null),"[2,2,3]",c.a.createElement("br",null),"]",c.a.createElement("div",{style:d},c.a.createElement(b.a,{code:T,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"9. Remove Element"),c.a.createElement("div",{style:d},c.a.createElement(b.a,{code:w,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"10. Shuffle the Array."),c.a.createElement("div",{style:d},c.a.createElement(b.a,{code:M,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"11. Median of Two Sorted Arrays."),"Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.",c.a.createElement("br",null),c.a.createElement("b",null,"Follow up: "),"The overall run time complexity should be O(log (m+n)).",c.a.createElement("br",null),c.a.createElement("b",null,"Example 1:"),c.a.createElement("br",null),c.a.createElement("b",null,"Input: "),"nums1 = [1,3], nums2 = [2]",c.a.createElement("br",null),c.a.createElement("b",null,"Output: "),"2.00000",c.a.createElement("br",null),c.a.createElement("b",null,"Explanation: "),"merged array = [1,2,3] and median is 2.",c.a.createElement("br",null),c.a.createElement("br",null),c.a.createElement("b",null,"Example 2: "),c.a.createElement("br",null),c.a.createElement("b",null,"Input: "),"nums1 = [1,2], nums2 = [3,4]",c.a.createElement("br",null),c.a.createElement("b",null,"Output: "),"2.50000",c.a.createElement("br",null),c.a.createElement("b",null,"Explanation: "),"merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.",c.a.createElement("div",{style:d},c.a.createElement(b.a,{code:N,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"12. Plus One."),c.a.createElement("b",null,"Input: "),"digits = [1,2,3]",c.a.createElement("br",null),c.a.createElement("b",null,"Output: "),"[1,2,4]",c.a.createElement("div",{style:d},c.a.createElement(b.a,{code:O,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"13. Missing Number"),c.a.createElement("div",{style:d},c.a.createElement(b.a,{code:R,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"14. Missing Ranges."),c.a.createElement("div",{style:d},c.a.createElement(b.a,{code:P,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"15. Find First and Last Position of Element in Sorted Array"),"Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.",c.a.createElement("br",null),"Your algorithm's runtime complexity must be in the order of O(log n).",c.a.createElement("br",null),"If the target is not found in the array, return [-1, -1].",c.a.createElement("br",null),c.a.createElement("b",null,"Example 1:"),c.a.createElement("b",null,"Input: "),"nums = [5,7,7,8,8,10], target = 8",c.a.createElement("br",null),c.a.createElement("b",null,"Output: "),"[3,4]",c.a.createElement("br",null),c.a.createElement("br",null),c.a.createElement("div",{style:d},c.a.createElement(b.a,{code:D,language:"js",plugins:["line-numbers"]})),c.a.createElement("h3",null,"16. Permutations."),"Given a collection of distinct integers, return all possible permutations.",c.a.createElement("div",{style:d},c.a.createElement(b.a,{code:I,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"17. Number of Good Pairs."),c.a.createElement("b",null,"Input: "),"nums = [1,2,3,1,1,3] ",c.a.createElement("br",null),c.a.createElement("b",null,"Output: "),"4 ",c.a.createElement("br",null),c.a.createElement("b",null,"Explanation: "),"There are 4 good pairs (0,3), (0,4), (3,4), (2,5) 0-indexed.",c.a.createElement("div",{style:d},c.a.createElement(b.a,{code:k,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"18. Product of Array Except Self."),c.a.createElement("div",{style:d},c.a.createElement(b.a,{code:U,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"19. Count of Smaller Numbers After Self."),"You are given an integer array nums and you have to return a new counts array. The counts array has the property where counts[i] is the number of smaller elements to the right of nums[i].",c.a.createElement("br",null),c.a.createElement("b",null,"Input: "),"nums = [5,2,6,1]",c.a.createElement("br",null),c.a.createElement("b",null,"Output: "),"[2,1,1,0]",c.a.createElement("br",null),c.a.createElement("b",null,"Explanation: "),c.a.createElement("ul",null,c.a.createElement("li",null,"To the right of 5 there are 2 smaller elements (2 and 1)."),c.a.createElement("li",null,"To the right of 2 there is only 1 smaller element (1)."),c.a.createElement("li",null,"To the right of 6 there is 1 smaller element (1)."),c.a.createElement("li",null,"To the right of 1 there is 0 smaller element.")),c.a.createElement("div",{style:d},c.a.createElement(b.a,{code:q,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"20. Array Counter"),c.a.createElement("div",{style:d},c.a.createElement(b.a,{code:A,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"21. Summary Ranges."),"Given a sorted integer array without duplicates, return the summary of its ranges.",c.a.createElement("div",{style:d},c.a.createElement(b.a,{code:F,language:"js",plugins:["line-numbers"]}))))))}}]),n}(s.Component);n.default=Object(p.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(L)}}]);
//# sourceMappingURL=31.62e13899.chunk.js.map