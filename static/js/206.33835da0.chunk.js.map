{"version":3,"sources":["components/ReactJs/prismCode.js","components/mongoDB/sidebar.js","components/mongoDB/deepMongodb/searchErrorHandling.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","SearchSchema","routesSearch","inventory","specify","embedded","indexing","SearchErrorHandling","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/206.33835da0.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/infoMD' className={classes.line}>IntroMD</Link></MenuItem>\n        <MenuItem><Link to='/intro' className={classes.line}>Queries</Link></MenuItem>\n        <MenuItem><Link to='/mongodbMethods' className={classes.line}>mongodbMethods</Link></MenuItem>\n        <MenuItem><Link to='/mongoCurd' className={classes.line}>MongoCurd-Ref</Link></MenuItem>\n        <MenuItem><Link to='/mongoQueries' className={classes.line}>Mongo Queries</Link></MenuItem>\n        <MenuItem><Link to='/searchErrorHandling' className={classes.line}>searchErrorHandling</Link></MenuItem>\n        <MenuItem><Link to='/bulkRight' className={classes.line}>BulkWright</Link></MenuItem>\n        <MenuItem><Link to='/mysql' className={classes.line}>Mysql</Link></MenuItem>\n        <MenuItem><Link to='/mysqlCurd' className={classes.line}>MysqlCurd</Link></MenuItem>\n        <MenuItem><Link to='/joinOp' className={classes.line}>JoinOp</Link></MenuItem>\n        <MenuItem><Link to='/sortOp' className={classes.line}>Sort</Link></MenuItem>\n        <MenuItem><Link to='/curdOp' className={classes.line}>CurdOp</Link></MenuItem>\n        <MenuItem><Link to='/gridFs' className={classes.line}>gridFs</Link></MenuItem>\n        <MenuItem><Link to='/postgressql' className={classes.line}>PostgreSql</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst SearchSchema = `\nconst SearchSchema = new Schema({\n  name: { type: String, required: true },\n  date: { type: Date, default: Date.now }\n});\n\nmodule.exports = Item = mongoose.model('item', SearchSchema);`.trim();\n\nconst routesSearch = `\nconst Item = require('../models/search');\n\nrouter.get('/search', (req, res) => {\n  Item.find()\n    .sort({ date: -1 })\n    .then(items => res.json(items));\n});\n\nrouter.get(\"/search/:name\", (req, res) => {\n  var regex = new RegExp(req.params.name, 'i');\n  Item.find({ name: regex }).then((result) => {\n    res.status(200).json(result)\n  })\n})`.trim();\n\nconst inventory = `\nconst cursor = db.collection('inventory').find({});\nSELECT * FROM inventory\n\nconst cursor = db.collection('inventory').find({ status: 'D' });\nSELECT * FROM inventory WHERE status = \"D\"\n\nwhere status equals either \"A\" or \"D\":\nconst cursor = db.collection('inventory').find({\n  status: { $in: ['A', 'D'] }\n});\n\nSELECT * FROM inventory WHERE status in (\"A\", \"D\")\n`.trim();\n\nconst specify = `\nconst cursor = db.collection('inventory').find({\n  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]\n});\n\nSELECT * FROM inventory WHERE status = \"A\" OR qty < 30\n\n\n//And\nconst cursor = db.collection('inventory').find({\n  status: 'A',\n  qty: { $lt: 30 }\n});\n\nSELECT * FROM inventory WHERE status = \"A\" AND qty < 30\n\n\n//Specify AND as well as OR Conditions\nconst cursor = db.collection('inventory').find({\n  status: 'D',\n  $or: [{ qty: { $lt: 30 } }, { title: 'Niketh' }]\n});\n  \nSELECT * FROM inventory WHERE status = \"A\" AND ( qty < 30 OR item LIKE \"p%\")\n`.trim();\n\nconst embedded = `\nconst cursor = db.collection('inventory').find({\n  size: { h: 14, w: 21, uom: 'cm' }\n});\n\n\nconst cursor = db.collection('inventory').find({\n  'size.h': { $lt: 15 }\n});\n`.trim();\n\nconst indexing = `\ndb.products.createIndex(\n  { item: 1, quantity: -1 } ,\n  { name: \"query for inventory\" }\n)\n`.trim();\n\n\nclass SearchErrorHandling extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Search error Handling</h3>\n              <b>model/search.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={SearchSchema}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>routes/search.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={routesSearch}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>Relate mySql with mongoDB</b>\n              <div style={titles}>\n                <PrismCode\n                  code={inventory}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>Specify OR Conditions</b><br/>\n              Using the $or operator, you can specify a compound query that joins each clause with a logical OR conjunction so \n              that the query selects the documents in the collection that match at least one condition.\n              <div style={titles}>\n                <PrismCode\n                  code={specify}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>Match an Embedded/Nested Document</b>\n              <div style={titles}>\n                <PrismCode\n                  code={embedded}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>indexing</b>\n              <div style={titles}>\n                <PrismCode\n                  code={indexing}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(SearchErrorHandling));\n"],"sourceRoot":""}