(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[157],{140:function(e,n,t){"use strict";t.d(n,"a",(function(){return d}));var a=t(45),l=t(28),r=t(136),i=t(137),c=t(139),s=t(0),o=t.n(s),u=t(138),m=t.n(u),d=(t(59),function(e){function n(e){var t;return Object(a.a)(this,n),(t=Object(r.a)(this,Object(i.a)(n).call(this,e))).highlight=function(){t.ref&&t.ref.current&&m.a.highlightElement(t.ref.current)},t.ref=o.a.createRef(),t}return Object(c.a)(n,e),Object(l.a)(n,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,n=e.code,t=(e.plugins,e.language);return o.a.createElement("pre",{className:"code-prism"},o.a.createElement("code",{ref:this.ref,className:"language-".concat(t)},n.trim()))}}]),n}(o.a.Component))},141:function(e,n,t){},154:function(e,n,t){"use strict";t.d(n,"a",(function(){return u}));var a=t(0),l=t.n(a),r=t(26),i=t(297),c=t(295),s=t(114),o=Object(s.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function u(){var e=o();return l.a.createElement("div",{className:e.root},l.a.createElement(c.a,null,l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/introJs",className:e.line},"IntroJs-Proxies")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/prototypes",className:e.line},"Prototypes-Defa. Param")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/JsObjects",className:e.line},"JsObject")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/array",className:e.line},"String")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/this",className:e.line},"This-call(), apply(), bind()")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/clousers",className:e.line},"Clousers")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/oops",className:e.line},"Oops-GetSet")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/regular",className:e.line},"Regular")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/keyedCollections",className:e.line},"Keyed Collections")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/arrayApi",className:e.line},"Indexed colle-Arr Obj")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/logic",className:e.line},"Logic")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/findOutput",className:e.line},"findOutput")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/mcqjs",className:e.line},"McqJs")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/hackerRank",className:e.line},"HackerRank1")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/hackerRank6",className:e.line},"HackerRank2"))),l.a.createElement("div",null))}},359:function(e,n,t){"use strict";t.r(n);var a=t(45),l=t(28),r=t(136),i=t(137),c=t(139),s=t(0),o=t.n(s),u=t(138),m=t.n(u),d=t(120),b=t(57),p=t(296),E=t(5),g=(t(141),t(154)),h=t(140),f={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},v='\n//index.html\n<html>\n<head>\n  <script src="index.js"><\/script>\n</head>\n<body>\n  <body>\n    <button id="btn" type="button">0</button>\n    <script src="js/button.js" type="text/javascript"><\/script>\n</body>\n</body>\n\n\n//index.js\ndocument.addEventListener(\'DOMContentLoaded\', () => {\n  const button = document.getElementById(\'btn\');\n  \n  button.addEventListener(\'click\', (e) => {\n        const count = Number(e.currentTarget.innerText) + 1;\n      \n        e.currentTarget.innerText = count;\n   });\n});\n'.trim(),y="\n//index.html\n<div id=\"res\"></div>\n    <div id=\"btns\">\n      <button id=\"btn0\">0</button> <button id=\"btn1\">1</button>\n      <button id=\"btnClr\">C</button> <button id=\"btnEql\">=</button>\n      <button id=\"btnSum\">+</button> <button id=\"btnSub\">-</button>\n      <button id=\"btnMul\">*</button> <button id=\"btnDiv\">/</button>\n    </div> \n    \n    \n    \n//index.js\nwindow.onload = () => {\n  let inputs = [];\n  let operator = '';\n\n  const displayRes = () => {\n    const res = document.getElementById('res');\n\n    let val1 = inputs[0];\n    let val2 = inputs[1] === undefined ? '' : inputs[1];\n\n    res.innerText = '$'{val1}'$'{operator}'$'{val2};\n  };\n\n  const setOperator = op => {\n    if (inputs[1] === undefined) {\n      operator = op;\n    }\n\n    displayRes();\n  };\n\n  const setValues = num => {\n    if (inputs.length === 0) {\n      inputs[0] = num;\n    } else if (inputs.length === 1 && operator.length === 0) {\n      inputs[0] += num;\n    } else if (inputs.length === 1 && operator.length > 0) {\n      inputs[1] = num;\n    } else if (inputs.length === 2 && operator.length > 0) {\n      inputs[1] += num;\n    }\n\n    displayRes();\n  };\n\n  const btn0 = document.getElementById('btn0');\n  btn0.addEventListener('click', () => {\n    setValues('0');\n  });\n\n  const btn1 = document.getElementById('btn1');\n  btn1.addEventListener('click', () => {\n    setValues('1');\n  });\n\n  const btnSum = document.getElementById('btnSum');\n  btnSum.addEventListener('click', () => {\n    setOperator('+');\n  });\n\n  const btnSub = document.getElementById('btnSub');\n  btnSub.addEventListener('click', () => {\n    setOperator('-');\n  });\n\n  const btnMul = document.getElementById('btnMul');\n  btnMul.addEventListener('click', () => {\n    setOperator('*');\n  });\n\n  const btnDiv = document.getElementById('btnDiv');\n  btnDiv.addEventListener('click', () => {\n    setOperator('/');\n  });\n\n  const btnClr = document.getElementById('btnClr');\n  btnClr.addEventListener('click', () => {\n    inputs = [''];\n    operator = '';\n    displayRes();\n  });\n\n  const btnEql = document.getElementById('btnEql');\n  btnEql.addEventListener('click', () => {\n    if (inputs.length === 2 && operator.length > 0) {\n      let a = parseInt(inputs[0], 2);\n      let b = parseInt(inputs[1], 2);\n\n      switch (operator) {\n        case '+':\n          inputs = [(a + b).toString(2)];\n          break;\n        case '-':\n          inputs = [(a - b).toString(2)];\n          break;\n        case '*':\n          inputs = [parseInt(a * b, 0).toString(2)];\n          break;\n        case '/':\n          inputs = [parseInt(a / b, 0).toString(2)];\n          break;\n      }\n\n      operator = '';\n\n      displayRes();\n    }\n  });\n};\n".trim(),k=function(e){function n(){return Object(a.a)(this,n),Object(r.a)(this,Object(i.a)(n).apply(this,arguments))}return Object(c.a)(n,e),Object(l.a)(n,[{key:"componentDidMount",value:function(){setTimeout((function(){return m.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return o.a.createElement(d.a,{container:!0},o.a.createElement(d.a,{item:!0,xs:2},o.a.createElement(b.a,{className:e.paper},o.a.createElement("h4",null,o.a.createElement(g.a,null)))),o.a.createElement(d.a,{item:!0,xs:10},o.a.createElement(b.a,{className:e.paper},o.a.createElement(p.a,null,o.a.createElement("p",null,"Create a Button and Buttons Container"),o.a.createElement("p",null,"Create an html button with an id of btn btn must have the styling of: width 96px, height 48px, font-size 24px The default innerHTML of button is set to 0 Create the interaction where when the button is clicked its internal value displayed is incremented."),o.a.createElement("div",{style:f},o.a.createElement(h.a,{code:v,language:"js",plugins:["line-numbers"]})),o.a.createElement("br",null),o.a.createElement("p",null,"Binary Calculator"),"Implement a simple calculator that performs the following operations on binary numbers: addition, subtraction, multiplication, and division. Note that division operation must be integer division only; for example, 1001 / 100 = 10, 1110 / 101 = 10, and 101 / 1 = 101.",o.a.createElement("br",null),o.a.createElement("div",{style:f},o.a.createElement(h.a,{code:y,language:"js",plugins:["line-numbers"]})),o.a.createElement("br",null),o.a.createElement("br",null)))))}}]),n}(s.Component);n.default=Object(E.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(k)}}]);
//# sourceMappingURL=157.2ec6d3a8.chunk.js.map