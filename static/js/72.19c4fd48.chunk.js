(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[72],{140:function(e,n,t){"use strict";t.d(n,"a",(function(){return m}));var a=t(45),o=t(28),s=t(136),l=t(137),i=t(139),r=t(0),d=t.n(r),c=t(138),u=t.n(c),m=(t(59),function(e){function n(e){var t;return Object(a.a)(this,n),(t=Object(s.a)(this,Object(l.a)(n).call(this,e))).highlight=function(){t.ref&&t.ref.current&&u.a.highlightElement(t.ref.current)},t.ref=d.a.createRef(),t}return Object(i.a)(n,e),Object(o.a)(n,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,n=e.code,t=(e.plugins,e.language);return d.a.createElement("pre",{className:"code-prism"},d.a.createElement("code",{ref:this.ref,className:"language-".concat(t)},n.trim()))}}]),n}(d.a.Component))},141:function(e,n,t){},148:function(e,n,t){"use strict";t.d(n,"a",(function(){return c}));var a=t(0),o=t.n(a),s=t(26),l=t(297),i=t(295),r=t(114),d=Object(r.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function c(){var e=d();return o.a.createElement("div",{className:e.root},o.a.createElement(i.a,null,o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/introReact",className:e.line},"Intro-Lazy-Children")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/reactInter",className:e.line},"Intro")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/codingInter",className:e.line},"CodesPro")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/mainCompo",className:e.line},"Event-hoc-form",o.a.createElement("br",null),"curd-slider")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/pureComp",className:e.line},"PureComp-conComp")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/useStates",className:e.line},"useMultiState")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/contextHooks",className:e.line},"Context Hooks")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/customHooks",className:e.line},"CustomHooks-memo")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/useReducersSta",className:e.line},"UseReducers")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/contextMethods",className:e.line},"Curd Hooks")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/jsonPlaceholder",className:e.line},"JsonPlaceholder")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/async_await",className:e.line},"Async-await-sideMenu",o.a.createElement("br",null),"Mouse hover")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/ticGame",className:e.line},"Share-maxMinDate",o.a.createElement("br",null),"moveBtn-slideshow")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/linkGet",className:e.line},"LinkGet")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/numberFormats",className:e.line},"Random NumFor-biToDe",o.a.createElement("br",null)," Validations Step DateTimw")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/models",className:e.line},"Models-chidData-csv",o.a.createElement("br",null),"Icon-router")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/like",className:e.line},"Like-checkbox-radio",o.a.createElement("br",null),"select-scroll")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/textEditors",className:e.line},"TextEditors-paginations",o.a.createElement("br",null),"translator-sortCheck")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/sortItems",className:e.line},"IncOnClick-pushBtn-fizzBuzz",o.a.createElement("br",null),"show-addDocs-ratings")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/serverSideRend",className:e.line},"Jwt-multiSel")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/dropdownSelect",className:e.line},"SelectFtr-checkFtr-updtCrd")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/kanban",className:e.line},"Kanban")),o.a.createElement(l.a,null,o.a.createElement(s.b,{to:"/hackeRank",className:e.line},"HackeRank"))),o.a.createElement("div",null))}},313:function(e,n,t){"use strict";t.r(n);var a=t(45),o=t(28),s=t(136),l=t(137),i=t(139),r=t(0),d=t.n(r),c=t(138),u=t.n(c),m=t(120),p=t(57),h=t(296),E=t(5),b=(t(141),t(148)),g=t(140),f={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},v='\nimport React, { useState, useEffect } from "react";\n\nimport { User } from "./components/User";\nimport { AddUser } from "./components/AddUser";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    await fetch("https://jsonplaceholder.typicode.com/users")\n      .then((res) => res.json())\n      .then((data) => setUsers(data))\n      .catch((error) => console.log(error));\n  };\n\n  const onAdd = async (name, email) => {\n    await fetch("https://jsonplaceholder.typicode.com/users", {\n      method: "POST",\n      body: JSON.stringify({\n        name: name,\n        email: email,\n      }),\n      headers: {\n        "Content-type": "application/json; charset=UTF-8",\n      },\n    })\n      .then((res) => {\n        if (res.status !== 201) {\n          return;\n        } else {\n          return res.json();\n        }\n      })\n      .then((data) => {\n        setUsers((users) => [...users, data]);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const onEdit = async (id, name, email) => {\n    await fetch(\'https://jsonplaceholder.typicode.com/users/\'$\'{id}\', {\n      method: "PUT",\n      body: JSON.stringify({\n        name: name,\n        email: email,\n      }),\n      headers: {\n        "Content-type": "application/json; charset=UTF-8",\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200) {\n          return;\n        } else {\n          return res.json();\n        }\n      })\n      .then((data) => {\n        const updatedUsers = users.map((user) => {\n          if (user.id === id) {\n            user.name = name;\n            user.email = email;\n          }\n\n          return user;\n        });\n\n        setUsers((users) => updatedUsers);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const onDelete = async (id) => {\n    await fetch(\'https://jsonplaceholder.typicode.com/users/\'$\'{id}\', {\n      method: "DELETE",\n    })\n      .then((res) => {\n        if (res.status !== 200) {\n          return;\n        } else {\n          setUsers(\n            users.filter((user) => {\n              return user.id !== id;\n            })\n          );\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <div className="App">\n      <h1>Users</h1>\n      <AddUser onAdd={onAdd} />\n      {users.map((user) => (\n        <User\n          id={user.id}\n          key={user.id}\n          name={user.name}\n          email={user.email}\n          onEdit={onEdit}\n          onDelete={onDelete}\n        />\n      ))}\n    </div>\n  );\n}'.trim(),S='\n//components/AddUser.js\nexport const AddUser = ({ onAdd }) => {\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    onAdd(e.target.name.value, e.target.email.value);\n    e.target.name.value = "";\n    e.target.email.value = "";\n  };\n\n  return (\n    <form onSubmit={handleOnSubmit}>\n      <h3>Add User</h3>\n      <input placeholder="Name" name="name" />\n      <input placeholder="Email" name="email" />\n      <button onSubmit={handleOnSubmit}>Add</button>\n      <hr />\n    </form>\n  );\n};\n\n\n//components/User.js\nexport const User = ({ name, email, id, onEdit, onDelete }) => {\n  const [isEdit, setIsEdit] = useState(false);\n\n  const handleEdit = () => {\n    setIsEdit(!isEdit);\n  };\n\n  const handleDelete = () => {\n    onDelete(id);\n  };\n\n  const handleOnEditSubmit = (e) => {\n    e.preventDefault();\n    onEdit(id, e.target.name.value, e.target.email.value);\n    setIsEdit(!isEdit);\n  };\n\n  return (\n    <div>\n      {isEdit ? (\n        <form onSubmit={handleOnEditSubmit}>\n          <input placeholder="Name" name="name" defaultValue={name} />\n          <input placeholder="Email" name="email" defaultValue={email} />\n          <button onSubmit={handleOnEditSubmit}>Save</button>\n        </form>\n      ) : (\n        <div className="user">\n          <span className="user-name">{name}</span>\n          <span className="user-email">{email}</span>\n          <div>\n            <button onClick={handleEdit}>Edit</button>\n            <button onClick={handleDelete}>Delete</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n'.trim(),T='\n//editLists.js\nconst EditLists = (props) => {\n  const [document, setDocument] = useState(props.currentLists);\n  useEffect(() => {\n    setDocument(props.currentLists);\n  }, [props]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    setDocument({ ...document, [name]: value });\n  };\n\n  return (\n    <form\n      onSubmit={(event) => {\n        event.preventDefault();\n        if (!document.docTitle || !document.description || !document.publisher)\n          return;\n\n        props.updateLists(document.id, document);\n      }}\n    >\n      <input\n        type="text"\n        name="docTitle"\n        placeholder="Enter Title"\n        value={document.docTitle}\n        onChange={handleInputChange}\n      />\n      <input\n        type="text"\n        name="description"\n        placeholder="Enter Description"\n        value={document.description}\n        onChange={handleInputChange}\n      />\n      <input\n        type="text"\n        name="publisher"\n        placeholder="Enter Publisher"\n        value={document.publisher}\n        onChange={handleInputChange}\n      />\n      <button>Edit Document</button>\n      <button onClick={() => props.setEditing(false)}>Cancel</button>\n    </form>\n  );\n};\n\n\n\n//App.js\nimport EditLists from "./editLists";\n\nconst initialState = [\n  {\n    id: 1,\n    docTitle: "document1",\n    description: "desc1",\n    publisher: "publisher1",\n  },\n];\n\nconst App = () => {\n  const initialFormState = {\n    id: null,\n    docTitle: "",\n    description: "",\n    publisher: "",\n  };\n\n  const [lists, setLists] = useState(initialState);\n  const [editing, setEditing] = useState(false);\n  const [currentLists, setCurrentLists] = useState(initialFormState);\n\n  const [data, setData] = useState(initialFormState);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setData({ ...data, [name]: value });\n  };\n\n  const handleAdd = (data) => {\n    data.id = lists.length + 1;\n    setLists([...lists, data]);\n  };\n\n  const handleEdit = (data) => {\n    setEditing(true);\n    setCurrentLists({\n      id: data.id,\n      docTitle: data.docTitle,\n      description: data.description,\n      publisher: data.publisher,\n    });\n  };\n  const updateLists = (id, updatedDocument) => {\n    setEditing(false);\n    setLists(lists.map((item) => (item.id === id ? updatedDocument : item)));\n  };\n\n  return (\n    <>\n      <div className="row">\n        {editing ? (\n          <EditLists\n            editing={editing}\n            setEditing={setEditing}\n            currentLists={currentLists}\n            updateLists={updateLists}\n          />\n        ) : (\n          <form\n            onSubmit={(event) => {\n              event.preventDefault();\n\n              handleAdd(data);\n              setData(initialFormState);\n            }}\n          >\n            <input\n              type="text"\n              name="docTitle"\n              placeholder="Enter Title"\n              value={data.docTitle}\n              onChange={handleInputChange}\n            />\n            <input\n              type="text"\n              name="description"\n              placeholder="Enter Description"\n              value={data.description}\n              onChange={handleInputChange}\n            />\n            <input\n              type="text"\n              name="publisher"\n              placeholder="Enter Publisher"\n              value={data.name}\n              onChange={handleInputChange}\n            />\n            <button>Add Document</button>\n          </form>\n        )}\n      </div>\n      <table>\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Description</th>\n            <th>Publisher</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {lists.length > 0\n            ? lists.map((item) => (\n                <tr key={item.id}>\n                  <td>{item.docTitle}</td>\n                  <td>{item.description}</td>\n                  <td>{item.publisher}</td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        handleEdit(item);\n                      }}\n                    >\n                      Edit\n                    </button>\n                  </td>\n                </tr>\n              ))\n            : null}\n        </tbody>\n      </table>\n    </>\n  );\n};\n'.trim(),C='\nimport React, { useState, useEffect } from "react";\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [todo, setTodo] = useState("");\n  const [todoEditing, setTodoEditing] = useState(null);\n  const [editingText, setEditingText] = useState("");\n\n  useEffect(() => {\n    const json = localStorage.getItem("todos");\n    const loadedTodos = JSON.parse(json);\n    if (loadedTodos) {\n      setTodos(loadedTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    const json = JSON.stringify(todos);\n    localStorage.setItem("todos", json);\n  }, [todos]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const newTodo = {\n      id: new Date().getTime(),\n      text: todo,\n      completed: false,\n    };\n    setTodos([...todos].concat(newTodo));\n    setTodo("");\n  }\n\n  function deleteTodo(id) {\n    let updatedTodos = [...todos].filter((todo) => todo.id !== id);\n    setTodos(updatedTodos);\n  }\n\n  function toggleComplete(id) {\n    let updatedTodos = [...todos].map((todo) => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  }\n\n  function submitEdits(id) {\n    const updatedTodos = [...todos].map((todo) => {\n      if (todo.id === id) {\n        todo.text = editingText;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n    setTodoEditing(null);\n  }\n\n  return (\n    <div id="todo-list">\n      <h1>Todo List</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type="text"\n          onChange={(e) => setTodo(e.target.value)}\n          value={todo}\n        />\n        <button type="submit">Add Todo</button>\n      </form>\n      {todos.map((todo) => (\n        <div key={todo.id} className="todo">\n          <div className="todo-text">\n            <input\n              type="checkbox"\n              id="completed"\n              checked={todo.completed}\n              onChange={() => toggleComplete(todo.id)}\n            />\n            {todo.id === todoEditing ? (\n              <input\n                type="text"\n                onChange={(e) => setEditingText(e.target.value)}\n              />\n            ) : (\n              <div>{todo.text}</div>\n            )}\n          </div>\n          <div className="todo-actions">\n            {todo.id === todoEditing ? (\n              <button onClick={() => submitEdits(todo.id)}>Submit Edits</button>\n            ) : (\n              <button onClick={() => setTodoEditing(todo.id)}>Edit</button>\n            )}\n\n            <button onClick={() => deleteTodo(todo.id)}>Delete</button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n'.trim(),y=function(e){function n(){return Object(a.a)(this,n),Object(s.a)(this,Object(l.a)(n).apply(this,arguments))}return Object(i.a)(n,e),Object(o.a)(n,[{key:"componentDidMount",value:function(){setTimeout((function(){return u.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return d.a.createElement(m.a,{container:!0},d.a.createElement(m.a,{item:!0,xs:2},d.a.createElement(p.a,{className:e.paper},d.a.createElement("h4",null,d.a.createElement(b.a,null)))),d.a.createElement(m.a,{item:!0,xs:10},d.a.createElement(p.a,{className:e.paper},d.a.createElement(h.a,null,d.a.createElement("h3",null,"JsonPlaceholder(Curd)"),d.a.createElement("b",null,"App.js"),d.a.createElement("br",null),d.a.createElement("div",{style:f},d.a.createElement(g.a,{code:v,language:"js",plugins:["line-numbers"]})),d.a.createElement("br",null),d.a.createElement("br",null),d.a.createElement("b",null,"components/"),d.a.createElement("div",{style:f},d.a.createElement(g.a,{code:S,language:"js",plugins:["line-numbers"]})),d.a.createElement("br",null),d.a.createElement("h3",null,"Edit"),d.a.createElement("div",{style:f},d.a.createElement(g.a,{code:T,language:"js",plugins:["line-numbers"]})),d.a.createElement("br",null),d.a.createElement("h3",null,"Local Storage"),d.a.createElement("div",{style:f},d.a.createElement(g.a,{code:C,language:"js",plugins:["line-numbers"]}))))))}}]),n}(r.Component);n.default=Object(E.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(y)}}]);
//# sourceMappingURL=72.19c4fd48.chunk.js.map