(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[169],{140:function(e,n,a){"use strict";a.d(n,"a",(function(){return d}));var t=a(45),l=a(28),r=a(136),s=a(137),o=a(139),i=a(0),c=a.n(i),m=a(138),u=a.n(m),d=(a(59),function(e){function n(e){var a;return Object(t.a)(this,n),(a=Object(r.a)(this,Object(s.a)(n).call(this,e))).highlight=function(){a.ref&&a.ref.current&&u.a.highlightElement(a.ref.current)},a.ref=c.a.createRef(),a}return Object(o.a)(n,e),Object(l.a)(n,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,n=e.code,a=(e.plugins,e.language);return c.a.createElement("pre",{className:"code-prism"},c.a.createElement("code",{ref:this.ref,className:"language-".concat(a)},n.trim()))}}]),n}(c.a.Component))},141:function(e,n,a){},151:function(e,n,a){"use strict";a.d(n,"a",(function(){return m}));var t=a(0),l=a.n(t),r=a(26),s=a(297),o=a(295),i=a(114),c=Object(i.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function m(){var e=c();return l.a.createElement("div",{className:e.root},l.a.createElement(o.a,null,l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/setUpFiles",className:e.line},"SetUp")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/javaScript",className:e.line},"JavaScript")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/reactCurdMern",className:e.line},"Mern React")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/4_reactCurdHooks",className:e.line},"Mern React Hooks")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/pagination",className:e.line},"Sea Sort Pagi Auth_Token")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/propsModel",className:e.line},"SS pagination-Captcha")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/imageGallery",className:e.line},"ImageGallery")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/stripes",className:e.line},"Stripes-Signin with gfb")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/paginationsMern",className:e.line},"Paginations-push_notifis")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/googleMap",className:e.line},"GoogleMap")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/videoChat",className:e.line},"VideoChat")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/qrSccaners",className:e.line},"QrCode-reCapcha")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/react_share",className:e.line},"Share-Stripe")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/socialSignUp",className:e.line},"SocialSignUp")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:"/mernSocial",className:e.line},"MernSocial"))),l.a.createElement("div",null))}},537:function(e,n,a){"use strict";a.r(n);var t=a(45),l=a(28),r=a(136),s=a(137),o=a(139),i=a(0),c=a.n(i),m=a(138),u=a.n(m),d=a(120),p=a(57),b=a(296),g=a(5),f=(a(141),a(151)),E=a(140),h={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},y='\nconst gallerySchema = new Schema({\n  name: { type: String, required: true },\n  description: { type: String, required: false },\n  images: { type: [String], required: false, }\n});\n\nmodule.exports = mongoose.model("galleries", gallerySchema);\n'.trim(),v='\nconst multer = require("multer");\n\nconst storage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, "./server/uploads");\n  },\n  filename: (req, file, cb) => {\n    cb(null, \'\'$\'{Date.now()}_\'$\'{file.originalname}\');\n  },\n});\n\nconst fileFilter = (req, file, cb) => {\n  if (\n    file.mimetype === "image/jpeg" ||\n    file.mimetype === "image/png" ||\n    file.mimetype === "image/jpg"\n  ) {\n    cb(null, true);\n  } else {\n    cb({ message: "Unsupported file format" }, false);\n  }\n};\n\nconst upload = multer({\n  storage: storage,\n  limits: { fileSize: 1024 * 1024 },\n  fileFilter: fileFilter,\n});\n\nmodule.exports = upload;\n'.trim(),A='\nconst Gallery = require("../models/Gallery");\nconst upload = require("../middlewares/multer");\nconst fs = require("fs");\n\nrouter.get("/", (req, res) => {\n  Gallery.find().exec((err, galleries) => {\n    if (err)\n      return res.json({\n        status: false,\n        message: "Server errors",\n        result: err,\n      });\n    return res.json({\n      status: false,\n      message: "Data found",\n      result: galleries,\n    });\n  });\n});\n\nrouter.post("/add", (req, res) => {\n  const gallery = new Gallery(req.body);\n  gallery.save((err, newGallery) => {\n    if (err)\n      return res.json({\n        status: false,\n        message: "Server errors",\n        result: err,\n      });\n    return res.json({\n      status: true,\n      message: "Gallery added",\n      result: newGallery,\n    });\n  });\n});\n\nrouter.put("/upload/:galleryId", upload.array("image", 3), async (req, res) => {\n  const inputfiles = req.files;\n  const images = [];\n  inputfiles.map((file) => {\n    images.push(file.filename);\n  });\n  const galleryId = req.params.galleryId;\n\n  Gallery.findOneAndUpdate(\n    { _id: galleryId },\n    { $push: { images: images } },\n    { new: true },\n    function (err, data) {\n      if (err) {\n        res.status(500).json({\n          status: false,\n          message: "Upload error",\n          result: err,\n        });\n      } else {\n        res.status(200).json({\n          status: true,\n          message: "Upload successfully!",\n          result: data,\n        });\n      }\n    }\n  );\n});\n\nrouter.get("/detail/:galleryId", (req, res) => {\n  const galleryId = req.params.galleryId;\n  Gallery.findOne({ _id: galleryId }, function (err, gallery) {\n    if (err) {\n      res.status(500).json({\n        status: false,\n        message: "Get gallery error",\n        result: err,\n      });\n    } else {\n      res.status(200).json({\n        status: true,\n        message: "Get gallery successfully!",\n        result: gallery,\n      });\n    }\n  });\n});\n\nrouter.put("/removeImage/:galleryId", async (req, res) => {\n  const fileName = req.body.fileName;\n  console.log("~~~fileName: ", fileName);\n\n  const galleryId = req.params.galleryId;\n\n  Gallery.findOneAndUpdate(\n    { _id: galleryId },\n    { $pull: { images: fileName } },\n    { new: true },\n    function (err, data) {\n      if (err) {\n        res.status(500).json({\n          status: false,\n          message: "Remove image error",\n          result: err,\n        });\n      } else {\n        const path = "server/uploads/" + fileName;\n        fs.unlinkSync(path);\n        res.status(200).json({\n          status: true,\n          message: "Remove image successfully!",\n          result: data,\n        });\n      }\n    }\n  );\n});\n\nmodule.exports = router;\n'.trim(),I='\nvar path = require("path");\nconst bodyParser = require("body-parser");\n\napp.use(cors());\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(express.static(path.join(__dirname, "uploads")));\n\nvar URIstring = "mongodb://localhost:27017/uploads";\n\napp.use("/galleries", require("./routes/gallery"));\n\nmongoose.connect(URIstring, {\n  useFindAndModify: false,\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n});\n\napp.use("./uploads", express.static("uploads"));\n\nconst PORT = process.env.PORT || 5000;\nmodule.exports = app.listen(PORT, () => {\n  console.log("Server listening in port:" + PORT);\n});\n'.trim(),N='\nexport const FETCH_ALBUMS = "FETCH_ALBUMS";\nexport const FETCH_ALBUM_DETAIL = "FETCH_ALBUM_DETAIL";\nexport const ADD_ALBUM = "ADD_ALBUM";\nexport const UPLOAD_IMAGE = "UPLOAD_IMAGE";\nexport const REMOVE_IMAGE = "REMOVE_IMAGE";\n'.trim(),D="\nimport axios from \"axios\";\nimport {\n  FETCH_ALBUMS,\n  FETCH_ALBUM_DETAIL,\n  ADD_ALBUM,\n  UPLOAD_IMAGE,\n  REMOVE_IMAGE,\n} from \"./types\";\n\nexport const fetchAlbums = () => {\n  const req = axios.get(\"/galleries\").then((res) => res.data);\n  return {\n    type: FETCH_ALBUMS,\n    payload: req,\n  };\n};\n\nexport const fetchAlbumDetail = (id) => {\n  const req = axios.get('/galleries/detail/'$'{id}').then((res) => res.data);\n  return {\n    type: FETCH_ALBUM_DETAIL,\n    payload: req,\n  };\n};\n\nexport const addAlbum = (data) => {\n  const req = axios.post(\"/galleries/add\", data).then((res) => res.data);\n  return {\n    type: ADD_ALBUM,\n    payload: req,\n  };\n};\n\nexport const uploadImages = (id, data, config) => {\n  const req = axios.put('/galleries/upload/'$'{id}', data, config)\n    .then((res) => res.data);\n  return {\n    type: UPLOAD_IMAGE,\n    payload: req,\n  };\n};\n\nexport const removeImage = (id, imageName) => {\n  const req = axios.put('/galleries/removeImage/'$'{id}', { fileName: imageName })\n    .then((res) => res.data);\n  return {\n    type: REMOVE_IMAGE,\n    payload: req,\n  };\n};\n".trim(),x='\nimport * as ACTION_TYPES from "../actions/types";\n\nconst initialState = {\n  albumList: [],\n  albumDetail: {},\n  addedAlbum: {},\n};\nconst albumReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.FETCH_ALBUMS:\n      return {\n        albumList: [...action.payload.result],\n      };\n    case ACTION_TYPES.FETCH_ALBUM_DETAIL:\n      return {\n        albumDetail: action.payload.result,\n      };\n    case ACTION_TYPES.ADD_ALBUM:\n      return {\n        ...state,\n        addedAlbum: action.payload,\n      };\n    case ACTION_TYPES.UPLOAD_IMAGE:\n      return {\n        albumDetail: action.payload.result,\n      };\n    case ACTION_TYPES.REMOVE_IMAGE:\n      return {\n        albumDetail: action.payload.result,\n      };\n    default:\n      return state;\n  }\n};\nexport default albumReducer;\n'.trim(),S='\nimport React, { useState, useEffect } from "react";\nimport { Fragment } from "react";\nimport { useDispatch, useSelector } from "react-redux";\nimport { toast } from "react-toastify";\nimport { addAlbum } from "../actions/album";\n\nfunction AddAlbum(props) {\n  const dispatch = useDispatch();\n  const [values, setvalues] = useState({});\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setvalues({\n      ...values,\n      [name]: value,\n    });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addAlbum(values)).then((res) => {\n      if (res.payload.status) {\n        // toast.success(res.payload.message);\n        console.log("~~~~data: ", res.payload.result._id);\n\n        props.history.push(\'/upload/\'$\'{res.payload.result._id}\');\n      }\n    });\n  };\n  return (\n    <Fragment>\n      <nav aria-label="breadcrumb">\n        <ol class="breadcrumb">\n          <li class="breadcrumb-item">\n            <a href="/">Albums</a>\n          </li>\n          <li class="breadcrumb-item active" aria-current="page">\n            Add\n          </li>\n        </ol>\n      </nav>\n      <div className="card shadow-sm">\n        <div className="card title p-2 bg-light">\n          <h5>Add Album</h5>\n        </div>\n        <div className="card-body">\n          <div className="mb-3">\n            <label className="form-label">Album Name</label>\n            <input\n              type="text"\n              name="name"\n              className="form-control"\n              placeholder="Enter album name"\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className="mb-3">\n            <label className="form-label">Description</label>\n            <textarea\n              className="form-control"\n              name="description"\n              rows="3"\n              onChange={handleInputChange}\n            ></textarea>\n          </div>\n          <div className="form-group">\n            <button\n              type="button"\n              onClick={handleSubmit}\n              className="btn btn-success"\n            >\n              <i class="fas fa-plus"></i> Save and next\n            </button>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default AddAlbum;\n'.trim(),j='\nimport React, { useState, useEffect } from "react";\nimport { useDispatch, useSelector } from "react-redux";\nimport { toast } from "react-toastify";\nimport { fetchAlbums } from "../actions/album";\n\nfunction AlbumList() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAlbums());\n  }, []);\n  const albumList = useSelector((state) => state.album.albumList);\n  return (\n    <div className="card shadow-sm">\n      <div className="card-header">\n        <h5>Album List</h5>\n      </div>\n      <div className="card-title p-4">\n        <a className="btn btn-success" href="/add">\n          Add Album\n        </a>\n      </div>\n      <div className="card-body p-4">\n        <table class="table border">\n          <thead class="table-dark">\n            <tr>\n              <td>No</td>\n              <td>Album Name</td>\n              <td>Description</td>\n              <td>Image Count</td>\n              <td>Actions</td>\n            </tr>\n          </thead>\n          <tbody>\n            {albumList.map((album, index) => (\n              <tr>\n                <th scope="row">{index + 1}</th>\n                <td>{album.name}</td>\n                <td>{album.description}</td>\n                <td>{album.images.length}</td>\n                <td>\n                  <a class="btn btn-info" href={\'/upload/\'$\'{album._id}\'}>\n                    <i class="fas fa-image"></i>\n                  </a>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default AlbumList;\n'.trim(),_='\nimport React, { useState, useEffect } from "react";\nimport Dropzone from "react-dropzone";\nimport { useDispatch, useSelector } from "react-redux";\nimport { toast } from "react-toastify";\nimport { uploadImages, fetchAlbumDetail, removeImage } from "../actions/album";\n\nfunction UploadImage(props) {\n  const dispatch = useDispatch();\n  const albumId = props.match.params.id;\n  //   const [albumInfo, setAlbumInfo] = useState({});\n  const albumDetail = useSelector((state) => state.album.albumDetail);\n\n  useEffect(() => {\n    dispatch(fetchAlbumDetail(albumId));\n  }, []);\n\n  const onDrop = (files) => {\n    let formData = new FormData();\n    const config = {\n      header: { "content-type": "multipart/form-data" },\n    };\n    files.map((file, index) => {\n      formData.append("image", file);\n    });\n\n    dispatch(uploadImages(albumId, formData, config)).then((res) => {\n      if (res.payload.status) {\n        toast.success(res.payload.message);\n      }\n    });\n  };\n\n  const handleDelete = (albumId, imageName) => {\n    dispatch(removeImage(albumId, imageName)).then((res) => {\n      if (res.payload.status) {\n        toast.success(res.payload.message);\n      }\n    });\n  };\n  return (\n    <div>\n      <nav aria-label="breadcrumb">\n        <ol class="breadcrumb">\n          <li class="breadcrumb-item">\n            <a href="/">Albums</a>\n          </li>\n          <li class="breadcrumb-item active" aria-current="page">\n            Upload\n          </li>\n        </ol>\n      </nav>\n      <div className="card shadow-sm">\n        <div className="card-header">\n          <h5>Upload Image for Album {albumDetail.name}</h5>\n        </div>\n        <div className="card-body">\n          <Dropzone onDrop={onDrop}>\n            {({ getRootProps, getInputProps }) => (\n              <div\n                className="m-1"\n                style={{\n                  width: "350px",\n                  height: "240px",\n                  border: "1px solid lightgray",\n                  display: "flex",\n                  alignItems: "center",\n                  justifyContent: "center",\n                }}\n                {...getRootProps()}\n              >\n                <input {...getInputProps()} />\n                <p>Drag and drop files here or click to upload</p>\n              </div>\n            )}\n          </Dropzone>\n          <div className="row m-1">\n            {albumDetail.images &&\n              albumDetail.images.map((image, index) => (\n                <div className="card col-md-3 mb-2">\n                  <div className="card-header bg-white">\n                    <span>{image}</span>\n                    <button\n                      type="button"\n                      className="btn btn-danger float-end"\n                      onClick={() => handleDelete(albumId, image)}\n                    >\n                      <i class="fas fa-backspace"></i>\n                    </button>\n                  </div>\n                  <div className="card-body p-1">\n                    <img\n                      style={{ width: "100%", maxHeight: "180px" }}\n                      class="img-thumbnail"\n                      src={\'http://localhost:5000/\'$\'{image}\'}\n                    />\n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UploadImage;\n'.trim(),M='\nimport React from "react";\nimport AlbumList from "./components/AlbumList";\nimport { BrowserRouter, Route } from "react-router-dom";\nimport AddAlbum from "./components/AddAlbum";\nimport { ToastContainer } from "react-toastify";\nimport "react-toastify/dist/ReactToastify.css";\nimport UploadImage from "./components/UploadImage";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <ToastContainer />\n      <div className="container">\n        <Route path="/" exact component={AlbumList} />\n        <Route path="/add" exact component={AddAlbum} />\n        <Route path="/upload/:id" exact component={UploadImage} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n'.trim(),U=function(e){function n(){return Object(t.a)(this,n),Object(r.a)(this,Object(s.a)(n).apply(this,arguments))}return Object(o.a)(n,e),Object(l.a)(n,[{key:"componentDidMount",value:function(){setTimeout((function(){return u.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return c.a.createElement(d.a,{container:!0},c.a.createElement(d.a,{item:!0,xs:2},c.a.createElement(p.a,{className:e.paper},c.a.createElement("h4",null,c.a.createElement(f.a,null)))),c.a.createElement(d.a,{item:!0,xs:10},c.a.createElement(p.a,{className:e.paper},c.a.createElement(b.a,null,c.a.createElement("h3",null,"1.Image Gallery"),c.a.createElement("b",null,"models/Gallery.js"),c.a.createElement("br",null),c.a.createElement("div",{style:h},c.a.createElement(E.a,{code:y,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("br",null),c.a.createElement("b",null,"middlewares/multer.js"),c.a.createElement("br",null),c.a.createElement("div",{style:h},c.a.createElement(E.a,{code:v,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("br",null),c.a.createElement("b",null,"routes/gallery.js"),c.a.createElement("br",null),c.a.createElement("div",{style:h},c.a.createElement(E.a,{code:A,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("br",null),c.a.createElement("b",null,"server"),c.a.createElement("br",null),'Create a folder "uploads" with server.js file.',c.a.createElement("div",{style:h},c.a.createElement(E.a,{code:I,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("h3",null,"Client"),c.a.createElement("b",null,"actions/types.js"),c.a.createElement("div",{style:h},c.a.createElement(E.a,{code:N,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("br",null),c.a.createElement("b",null,"actions/album.js"),c.a.createElement("br",null),c.a.createElement("div",{style:h},c.a.createElement(E.a,{code:D,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("br",null),c.a.createElement("b",null,"reducers/albumReducer.js"),c.a.createElement("br",null),c.a.createElement("div",{style:h},c.a.createElement(E.a,{code:x,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("br",null),c.a.createElement("b",null,"components/AddAlbum.js"),c.a.createElement("br",null),c.a.createElement("div",{style:h},c.a.createElement(E.a,{code:S,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("br",null),c.a.createElement("b",null,"components/AlbumList.js"),c.a.createElement("br",null),c.a.createElement("div",{style:h},c.a.createElement(E.a,{code:j,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("br",null),c.a.createElement("b",null,"components/UploadImage.js"),c.a.createElement("br",null),c.a.createElement("div",{style:h},c.a.createElement(E.a,{code:_,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("br",null),c.a.createElement("b",null,"components/App.js"),c.a.createElement("br",null),c.a.createElement("div",{style:h},c.a.createElement(E.a,{code:M,language:"js",plugins:["line-numbers"]}))))))}}]),n}(i.Component);n.default=Object(g.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(U)}}]);
//# sourceMappingURL=169.a0ca2a02.chunk.js.map