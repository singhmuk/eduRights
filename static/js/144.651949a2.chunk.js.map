{"version":3,"sources":["components/ReactJs/prismCode.js","components/express/sidebar.js","components/express/deepExpress/backbonejs.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","modelOps","modelInheritance","modelVals","modelCols","custmEvent","dataChange","eventHandler","modelView","addLists","passingData","templates","templatesCon","routers","Backbonejs","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/144.651949a2.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/introExpress' className={classes.line}>IntroExpress</Link></MenuItem>\n        <MenuItem><Link to='/resDocs' className={classes.line}>Responds</Link></MenuItem>\n        <MenuItem><Link to='/routerDocs' className={classes.line}>Router</Link></MenuItem>\n\n        {/* ---------- */}\n        <MenuItem><Link to='/middleware' className={classes.line}>Middleware</Link></MenuItem>\n        <b>Loopback</b>\n        <MenuItem><Link to='/loopbackcli' className={classes.line}>Loopbackcli</Link></MenuItem>\n        <MenuItem><Link to='/jqueries' className={classes.line}>jqueries</Link></MenuItem>\n        <MenuItem><Link to='/backbonejs' className={classes.line}>Backbone</Link></MenuItem>\n        <MenuItem><Link to='/underscorejs' className={classes.line}>Underscore</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst modelOps = `\n//html\n<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\" type=\"text/javascript\"></script>\n<script src=\"http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.3.3/underscore-min.js\" type=\"text/javascript\"></script>\n<script src=\"http://cdnjs.cloudflare.com/ajax/libs/backbone.js/0.9.2/backbone-min.js\" type=\"text/javascript\"></script>\n<script src=\"http://cdnjs.cloudflare.com/ajax/libs/backbone-localstorage.js/1.0/backbone.localStorage-min.js\" \ntype=\"text/javascript\"></script>  \n\n\n//\nvar modelOp = Backbone.Model.extend({\n  initialize: function () {\n    console.log('Model created')\n  }\n});\n\nvar obj = new modelOp();\n\n\n//2\nvar modelOp = Backbone.Model.extend();\n\nvar obj = new modelOp({\n  name: 'Tushar Garg',\n  teach: 'Backbone js',\n  platform: 'YouTube'\n});\n\n\n//3\nvar modelOp = Backbone.Model.extend();\nvar obj = new modelOp();\n\n// obj.set(\"name\", \"Tushar\");                                                           //set use to store/set data\n\nobj.set({                                                                               //set json data\n  name: 'Tushar Garg',\n  teach: 'Backbone Js'\n});\n\n/*\nobj.get(\"teach\")\nobj.toJSON()\nobj.unset('teach')\nobj.has('teach')\nobj.clear()\n*/\n\n\n//4\nvar modelOp = Backbone.Model.extend({\n  defaults: {\n    platform: 'youtube'\n  }\n});\n\nvar obj = new modelOp();\n\nobj.set({\n  name: 'Tushar Garg',\n  teach: 'Backbone Js'\n});\n`.trim();\n\nconst modelInheritance = `\nvar modelInheri = Backbone.Model.extend({\n  show: function () {\n    console.log(\"colors Tv\");\n  }\n});\n\n\nvar modelInheritance = modelInheri.extend({\n  show: function () {\n    modelInheri.prototype.show.apply();                                                     //extends super class function\n    console.log('Sony Tv');\n  }\n});\n\nvar obj = new modelInheritance();\n\n//obj.show()\n`.trim();\n\nconst modelVals = `\nvar modelOp = Backbone.Model.extend({\n  validate: function (attrs) {\n    if (attrs.age < 1) {\n      return \"age should not be negative\";\n    }\n  }\n});\n\nvar obj = new modelOp({\n  name: 'Tushar Garg',\n  age: -1\n});\n\n\n//obj.isValid()\nobj.validate\n`.trim();\n\nconst modelCols = `\nvar Team = Backbone.Model.extend();                                                             //create model\n\nvar player1 = new Team({\n  Name: 'Dhoni',\n  PlayedFrom: 'India',\n  Performance: 'Excellent',\n  runs: 98\n});\n\nvar player2 = new Team({\n  Name: 'Virat Kholi',\n  PlayedFrom: 'India',\n  Performance: 'Good',\n  runs: 75\n});\n\nvar players = Backbone.Collection.extend();                                                    //create collection\nvar p = new players([\n  player1,\n  player2\n]);\n\n\n/*\np\np.add({'name':'Kishan','PlayedFrom':'Mumbai'})\np.unshift({'name':'Kishan','PlayedFrom':'Mumbai'})\np.add(new Team({'name':'Kishan','PlayedFrom':'Mumbai'}),{at:2})                               // at specific index\np.pop()\np.remove('c1')\n*/\n\n\n//2\nvar Team = Backbone.Model.extend();                                                           //create model\n\nvar player1 = new Team({\n  Name: 'Dhoni',\n  PlayedFrom: 'India',\n  Performance: 'Excellent',\n  runs: 98\n});\n\nvar player2 = new Team({\n  Name: 'Virat Kholi',\n  PlayedFrom: 'India',\n  Performance: 'Good',\n  runs: 75\n});\n\nvar players = Backbone.Collection.extend();                                                 //create collection\nvar p = new players([\n  player1,\n  player2\n]);\n\nvar res = p.where(function (player) {\n  return player.get('runs') > 74;\n});\n\nvar res1 = p.filter(function (player) {\n  return player.get('runs') > 74;\n});\n\n\n/*\np\np.add({'name':'Kishan','PlayedFrom':'Mumbai'})\np.unshift({'name':'Kishan','PlayedFrom':'Mumbai'})\np.add(new Team({'name':'Kishan','PlayedFrom':'Mumbai'}),{at:2})                            // at specific index\np.pop()\np.remove('c1')\np.where({'Name':'Dhoni'})\nres1\n\np.each(function(player){\n    console.log(player);\n});\n*/\n\n\n//3\nvar students = Backbone.Model.extend({\n  initialize: function () {\n    this.bind('change:name', function (model) {                                           //run console only if name change\n      console.log(\"Model Changed\");\n    })\n    // console.log(\"Working\");\n  }\n});\n\nvar student = new students({\n  name: 'Tushar Garg',\n  RollNo: 1\n});\n\n\n//student.set('name','tutorials')\n`.trim();\n\nconst custmEvent = `\nvar Objects = {\n  test: function () {\n    this.trigger(\"alerts\", \"an event\")\n    this.trigger(\"title\", \"an title\")\n  }\n};\n\n_.extend(Objects, Backbone.Events);\nObjects.on(\"alerts title\", function (msg) {\n  alert('Alert msg', msg)\n  console.log('Title')\n})\n\nObjects.trigger(\"alert\", \"an event\")\n\n\n//2\nvar Objects = {\n  test: function () {\n    this.trigger(\"alerts\", \"an event\")\n    this.trigger(\"title\", \"an title\")\n  }\n};\n\n_.extend(Objects, Backbone.Events);\nObjects.on(\"all\", function (msg) {\n  alert('Alert msg', msg)\n  console.log('Title')\n})\n`.trim();\n\nconst dataChange = `\nvar students = Backbone.Model.extend({\n  initialize: function () {\n    this.bind('change:name', function (model) {                                           //run console only if name change\n      console.log(\"Model Changed\");\n    })\n    // console.log(\"Working\");\n  }\n});\n\nvar obj = new students({\n  name: 'Tushar Garg',\n  RollNo: 1\n});\n\n\n//obj.set('name','tutorials')\n`.trim();\n\nconst eventHandler = `\n//html\n<div id=\"demo\"></div>\n\n\n//js\nvar firstModel = Backbone.Model.extend();\n\nvar fm = new firstModel({\n  Title: 'Jugnu',\n  artist: 'Baadshah'\n});\n\n\nvar Song = Backbone.View.extend({\n  events: {\n    'click': 'Onclick',\n    'click .btnStop': 'OnClickStop'\n  },\n  Onclick: function () {\n    console.log(\"Song Played\");\n  },\n  OnClickStop: function (e) {\n    e.stopPropagation();\n    console.log(\"Song Stopped\");\n\n  },\n  render: function () {\n    this.$el.html(this.model.get('Title') + \"<button>Play</button> <button class='btnStop'>Stop</button>\");\n  }\n});\n\nvar song = new Song({\n  el: '#demo',\n  model: fm\n});\nsong.render();\n`.trim();\n\nconst modelView = `\n//html\n<div id=\"demo\"></div>\n  <div id=\"testing\"></div>\n  <script src=\"main_4.js\"></script>\n  \n  \n//js\nvar firstView = Backbone.View.extend({\n  render: function () {\n    console.log(\"Hello\");\n  }\n});\n\nvar obj = new firstView();\nobj.render(); \n\n\n//2\nvar firstView = Backbone.View.extend({\n  initialize: function () {\n    this.render();\n  },\n  render: function () {\n    console.log(\"Hello\");\n  }\n});\n\nvar obj = new firstView();\n\n\n//3\nvar firstView = Backbone.View.extend({\n  initialize: function () {\n    this.render();\n  },\n  render: function () {\n    this.$el.html(\"Backbone Js View Demo\");\n  }\n});\n\nvar obj = new firstView({ el: '#demo' });\n\n\n//4\nvar firstView = Backbone.View.extend({\n  el: '#testing',\n  tagName: 'h1',\n  initialize: function () {\n    this.render();\n  },\n  render: function () {\n    // console.log(\"Hello\");\n    this.$el.html(\"Backbone Js View Demo\");\n    console.log(this.el);                                                       //contain div element its DOM element\n    console.log(this.$el);                                                      //jQuery object\n  }\n});\n\nvar obj = new firstView({ el: '#demo' });\n`.trim();\n\nconst addLists = `\n//html\n<input type=\"text\" placeholder=\"Enter friend's name\" id=\"input\" />\n<button id=\"add-input\">Add Friend</button>\n<ul id=\"friends-list\"></ul>\n  \n//2\n<div id=\"container\">Loading...</div>\n<div id=\"container\"></div>\n\n\n//js\n$(function () {\n  FriendList = Backbone.Collection.extend({\n    initialize: function () {\n    }\n  });\n\n  FriendView = Backbone.View.extend({\n    tagName: 'li',\n    events: {\n      'click #add-input': 'getFriend',\n    },\n\n    initialize: function () {\n      var thisView = this;\n      this.friendslist = new FriendList;\n      _.bindAll(this, 'render');\n      this.friendslist.bind(\"add\", function (model) {\n        alert(\"hey\");\n        thisView.render(model);\n      })\n    },\n\n    getFriend: function () {\n      var friend_name = $('#input').val();\n      this.friendslist.add({ name: friend_name });\n    },\n\n    render: function (model) {\n      $(\"#friends-list\").append(\"<li>\" + model.get(\"name\") + \"</li>\");\n      console.log('rendered')\n    },\n  });\n\n  var view = new FriendView({ el: 'body' });\n});\n\n\n//2\nvar Song = Backbone.Model.extend();\n\nvar SongView = Backbone.View.extend({\n  render: function () {\n    this.$el.html(this.model.get(\"title\") + \"<button>Listen</button>\")\n    return this;\n  }\n});\n\nvar song = new Song({ title: \"Blue in Green\" });\nvar songView = new SongView({ el: \"#container\", model: song })\nsongView.render()\n`.trim();\n\nconst passingData = `\nvar Player = Backbone.Model.extend();\n\nvar player1 = new Player({\n  Name: 'Dhoni',\n  playedFrom: 'India'\n});\n\nvar PlayerView = Backbone.View.extend({\n  render: function () {\n    this.$el.html('Passing data');\n  }\n});\n\nvar obj = new PlayerView({ el: '#demo' });\nobj.render();\n\n\n//2\nvar Player = Backbone.Model.extend();\n\nvar player = new Player({\n  Name: 'Dhoni',\n  playedFrom: 'India'\n});\n\nvar PlayerView = Backbone.View.extend({\n  render: function () {\n    this.$el.html('Passing data');\n    this.$el.html(this.model.get('Name'));\n    // this.$el.html(this.model.get('playedFrom'));\n  }\n});\n\n\nvar pv = new PlayerView({\n  el: '#demo',\n  model: player\n});\npv.render();\n`.trim();\n\nconst templates = `\n//html\n<div id=\"demo\"></div>\n<script id=\"demoTemplate\" type=\"text/html\">This is the external template example</script>\n\n\n//js\nvar view = Backbone.View.extend({\n  template: _.template(\"This is Inline Templates Example\"),\n\n  initialize: function () {\n    this.render();\n  },\n  render: function () {\n    this.$el.html(this.template());\n  }\n});\n\nvar v = new view({ el: '#demo' });\n\n\n//2\nvar view = Backbone.View.extend({\n\n  template: _.template($('#demoTemplate').html()),\n  initialize: function () {\n    this.render();\n  },\n  render: function () {\n    this.$el.html(this.template());\n  }\n});\n\nvar v = new view({ el: '#demo' });\n`.trim();\n\nconst templatesCon = `\n//html\n<div id=\"container\"></div>\n<script id=\"songTemplate\" type=\"text/html\">\n   <%= title %>\n   <button>Listen</button>\n   \n   <% if(plays >1000){%>\n    <span class=\"popular\">Popular</span>\n <%}%>\n</script>\n<script src=\"main.js\"></script>\n  \n \n//js\nvar Song = Backbone.Model.extend();\n\nvar SongView = Backbone.View.extend({\n  render: function () {\n    var template = _.template($(\"#songTemplate\").html())\n    var html = template(this.model.toJSON())\n    this.$el.html(html)\n    return this;\n  }\n});\n\nvar song = new Song({ title: \"Blue in Green\", plays: 1001 });\nvar songView = new SongView({ el: \"#container\", model: song })\nsongView.render()\n`.trim();\n\nconst routers = `\n//html\n<div id=\"demo\"></div>\n<vav id=\"orderNav\">\n <ul>\n   <li data-url=\"firstOrder\">First Order</li>\n   <li data-url=\"secondOrder\">Second Order</li>\n   <li data-url=\"thirdOrder\">Third Order</li>\n </ul>\n</vav>\n<script src=\"main.js\"></script>\n\n\n//2\n<div id=\"demo\"></div>\n<ul>\n <li><a href=\"#/first/10\">First</a></li>\n <li><a href=\"#/second\">Second</a></li>\n <li><a href=\"#/third/10/anythings\">Third</a></li>\n</ul>\n\n\n//js\nvar routeExample = Backbone.Router.extend({\n  routes: {\n    'view1': 'firstView',\n    'view2': 'secondView',\n    '': 'thirdView'\n  },\n  firstView: function () {\n    console.log(\"This is our first View\");\n  },\n  secondView: function () {\n    console.log(\"This is our second View\");\n  },\n  thirdView: function () {\n    console.log(\"This is our thired View\");\n  }\n});\n\nvar router = new routeExample();\nBackbone.history.start();\n\n//file:///D:/Qc/backbone/docs/router/index.html#/view1\n  \n\n//3\nvar first = Backbone.View.extend({\n  initialize: function () {\n    this.render();\n  },\n  render: function () {\n    console.log(\"This is our first View\");\n  }\n});\n\n\nvar second = Backbone.View.extend({\n  initialize: function () {\n    this.render();\n  },\n  render: function () {\n    console.log(\"This is our second View\");\n  }\n});\n\n\nvar third = Backbone.View.extend({\n  initialize: function () {\n    this.render();\n  },\n  render: function () {\n    console.log(\"This is our third View\");\n  }\n});\n\n\nvar routeExample = Backbone.Router.extend({\n  routes: {\n    'view1': 'firstView',\n    'view2': 'secondView',\n    '': 'thirdView'\n  },\n  firstView: function () {\n    var fv = new first();\n  },\n  secondView: function () {\n    var sv = new second();\n  },\n  thirdView: function () {\n    var tv = new third();\n  }\n});\n\nvar router = new routeExample();\nBackbone.history.start();\n\n\n//4\nvar pizza = Backbone.View.extend({\n  render: function () {\n    this.$el.html(\"You ordered Pizza\");\n  }\n});\nvar momos = Backbone.View.extend({\n  render: function () {\n    this.$el.html(\"You ordered momos\");\n  }\n});\nvar burger = Backbone.View.extend({\n  render: function () {\n    this.$el.html(\"You ordered burger\");\n  }\n});\n\n\nvar routerDemo = Backbone.Router.extend({\n  routes: {\n    'firstOrder': 'pizzaOrder',\n    'secondOrder': 'momosOrder',\n    'thirdOrder': 'burgerOrder',\n    '*other': 'default'\n  },\n  pizzaOrder: function () {\n    var view = new pizza({\n      el: '#demo'\n    });\n\n    view.render();\n  },\n  momosOrder: function () {\n    var view = new momos({\n      el: '#demo'\n    });\n\n    view.render();\n  },\n  burgerOrder: function () {\n    var view = new burger({\n      el: '#demo'\n    });\n\n    view.render();\n  },\n  default: function () {\n    console.log(\"You ordered Nothing\");\n  },\n\n});\n\nvar router = new routerDemo();\nBackbone.history.start();\n\n//for ui routing\nvar foodCourt = Backbone.View.extend({\n  events: {\n    'click': 'onClick'\n  },\n  onClick: function (e) {\n    var $li = $(e.target);\n    router.navigate($li.attr(\"data-url\"), { trigger: true });\n  }\n});\n\nvar v = new foodCourt({\n  el: '#orderNav'\n});\n`.trim();\n\n\nclass Backbonejs extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Model</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={modelOps}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Model Inheritance</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={modelInheritance}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Model Validations</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={modelVals}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Collection</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={modelCols}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Custom Event</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={custmEvent}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Data Change on custm Event</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={dataChange}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Event Handler</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={eventHandler}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>View</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={modelView}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Add List</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={addLists}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>View Passing Data</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={passingData}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Template</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={templates}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Template Conditions</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={templatesCon}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Router</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={routers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Backbonejs));\n"],"sourceRoot":""}