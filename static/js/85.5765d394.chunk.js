(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[85],{140:function(t,n,e){"use strict";e.d(n,"a",(function(){return p}));var a=e(45),c=e(28),o=e(136),s=e(137),l=e(139),r=e(0),i=e.n(r),m=e(138),u=e.n(m),p=(e(59),function(t){function n(t){var e;return Object(a.a)(this,n),(e=Object(o.a)(this,Object(s.a)(n).call(this,t))).highlight=function(){e.ref&&e.ref.current&&u.a.highlightElement(e.ref.current)},e.ref=i.a.createRef(),e}return Object(l.a)(n,t),Object(c.a)(n,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var t=this.props,n=t.code,e=(t.plugins,t.language);return i.a.createElement("pre",{className:"code-prism"},i.a.createElement("code",{ref:this.ref,className:"language-".concat(e)},n.trim()))}}]),n}(i.a.Component))},141:function(t,n,e){},153:function(t,n,e){"use strict";e.d(n,"a",(function(){return m}));var a=e(0),c=e.n(a),o=e(26),s=e(297),l=e(295),r=e(114),i=Object(r.a)((function(t){return{root:{display:"flex"},paper:{marginRight:t.spacing(2)},line:{textDecoration:"none"}}}));function m(){var t=i();return c.a.createElement("div",{className:t.root},c.a.createElement(l.a,null,c.a.createElement(s.a,null,c.a.createElement(o.b,{to:"/introRedux",className:t.line},"Intro")),c.a.createElement(s.a,null,c.a.createElement(o.b,{to:"/counter",className:t.line},"Counter Select")),c.a.createElement(s.a,null,c.a.createElement(o.b,{to:"/reduxState",className:t.line},"Redux State-Curd")),c.a.createElement(s.a,null,c.a.createElement(o.b,{to:"/reduxMethods",className:t.line},"Redux Methods")),c.a.createElement(s.a,null,c.a.createElement(o.b,{to:"/react_redux",className:t.line},"Filter")),c.a.createElement(s.a,null,c.a.createElement(o.b,{to:"/reduxCurd",className:t.line},"Redux Curd")),c.a.createElement(s.a,null,c.a.createElement(o.b,{to:"/expenseTraMern",className:t.line},"ReactCurdPlaceholder")),c.a.createElement(s.a,null,c.a.createElement(o.b,{to:"/contactKeeperApi",className:t.line},"ReactReduxCurdPlaceholder")),c.a.createElement(s.a,null,c.a.createElement(o.b,{to:"/mernRedux",className:t.line},"Mern Redux")),c.a.createElement(s.a,null,c.a.createElement(o.b,{to:"/signUp",className:t.line},"SignUP")),c.a.createElement(s.a,null,c.a.createElement(o.b,{to:"/git",className:t.line},"Git")),c.a.createElement(s.a,null,c.a.createElement(o.b,{to:"/gitConcepts",className:t.line},"Git Concepts")),c.a.createElement(s.a,null,c.a.createElement(o.b,{to:"/skills",className:t.line},"Skills")),c.a.createElement(s.a,null,c.a.createElement(o.b,{to:"/comskills",className:t.line},"Comskills")),c.a.createElement(s.a,null,c.a.createElement(o.b,{to:"/techskills",className:t.line},"Techskills")),c.a.createElement(s.a,null,c.a.createElement(o.b,{to:"/techinto",className:t.line},"TechsInto"))),c.a.createElement("div",null))}},336:function(t,n,e){"use strict";e.r(n);var a=e(45),c=e(28),o=e(136),s=e(137),l=e(139),r=e(0),i=e.n(r),m=e(138),u=e.n(m),p=e(120),d=e(57),E=e(296),C=e(5),T=(e(141),e(153)),h=e(140),A={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},f="\n//components/getPosts.js\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/postData';\n\nconst Posts  = (props) => {\n  useEffect(() => {\n    props.fetchPosts();\n  })\n  \n  const getItems = () => {\n    return props.data.map(post => (\n      <div key={post.id}>\n        <h3>{post.title}</h3>\n        <p>{post.body}</p>\n      </div>\n    ))\n  }\n\n    return (\n      <div>{getItems()}</div>\n    );\n  }\n\nconst mapStateToProps = state => ({\n  data: state.object.items\n});\n\nexport default connect(mapStateToProps, { fetchPosts })(Posts);".trim(),g="\n//actions/types.js\nexport const GET_DATA = 'GET_DATA';\n\n\n//actions/postActions.js\nimport { GET_DATA } from './types';\n\nexport const fetchPosts = () => dispatch => {\n  fetch('https://jsonplaceholder.typicode.com/posts')\n    .then(res => res.json())\n    .then(posts =>\n      dispatch({\n        type: GET_DATA,\n        payload: posts\n      })\n    );\n};\n\n\n//reducers/mapList.js\nimport { GET_DATA } from '../actions/types';\n\nconst initialState = {\n  items: [],\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_DATA:\n      return {\n        ...state,\n        items: action.payload\n      };\n    \n    default:\n      return state;\n  }\n}\n".trim(),N='\n//AddContact.js\nimport React, { useState } from "react";\nimport { useDispatch } from "react-redux";\nimport { addContact } from "../actions/contactAction";\nimport shortid from "shortid";\nimport { useHistory } from "react-router-dom";\n\nconst AddContact = () => {\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const [name, setName] = useState("");\n  const [email, setEmail] = useState("");\n  const [phone, setPhone] = useState("");\n\n  const createContact = (e) => {\n    e.preventDefault();\n    const new_contact = {\n      id: shortid.generate(),\n      name: name,\n      phone: phone,\n      email: email,\n    };\n    dispatch(addContact(new_contact));\n    history.push("/");\n  };\n\n  return (\n    <form onSubmit={(e) => createContact(e)}>\n      <input type="text" value={name} onChange={(e) => setName(e.target.value)} />\n      <input type="text" value={phone} onChange={(e) => setPhone(e.target.value)} />\n      <input type="text" value={email} onChange={(e) => setEmail(e.target.value)} />\n      <button type="submit"> Create Contact </button>\n    </form>\n  );\n};\n\n\n\n//Contact.js\nimport { Link } from "react-router-dom";\nimport { deleteContact } from "../actions/contactAction";\nimport { useDispatch } from "react-redux";\nconst Contact = ({ contact, selectAll }) => {\n\n  const dispatch = useDispatch();\n  const { name, phone, email, id } = contact;\n  return (\n    <tr>\n      <input type="checkbox" checked={selectAll} />\n      <td>{name}</td>\n      <td>{phone}</td>\n      <td>{email}</td>\n      <td>\n        <Link to={\'/contacts/edit/\'$\'{id}\'}>E</Link>\n        <span onClick={() => dispatch(deleteContact(id))}>X</span>\n      </td>\n    </tr>\n  );\n};\n\n\n\n//Contacts.js\nimport React, { useState, useEffect } from "react";\nimport { useDispatch, useSelector } from "react-redux";\nimport {\n  clearAllContact,\n  selectAllContact,\n  deleteAllContact,\n} from "../actions/contactAction";\nimport Contact from "./Contact";\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const [selectAll, setSelectAll] = useState(false);\n  const contacts = useSelector((state) => state.contact.contacts);\n  const selectedContact = useSelector(\n    (state) => state.contact.selectedContacts\n  );\n\n  console.log(contacts);\n\n  useEffect(() => {\n    if (selectAll) {\n      dispatch(selectAllContact(contacts.map((contact) => contact.id)));\n    } else {\n      dispatch(clearAllContact());\n    }\n  }, [selectAll]);\n  return (\n    <div>\n      {selectedContact.length > 0 ? (\n        <button\n          onClick={() => deleteAllContact()}\n        >\n          delete all\n        </button>\n      ) : null}\n      <table>\n        <tr>\n          <th>\n            <input type="checkbox" id="selectAll" value={selectAll}\n              onClick={() => setSelectAll(!selectAll)} />\n          </th>\n          <th>Name</th>\n          <th>Phone</th>\n          <th>Email</th>\n          <th>Actions</th>\n        </tr>\n        <tbody>\n          {contacts.map((contact) => (\n            <Contact\n              contact={contact}\n              key={contact.id}\n              selectAll={setSelectAll}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\n\n\n//EditContact.js\nimport React, { useState, useEffect } from "react";\nimport { useDispatch, useSelector } from "react-redux";\nimport { getContact, updateContact } from "../actions/contactAction";\nimport { useHistory, useParams } from "react-router-dom";\n\n\nconst EditContact = () => {\n  let { id } = useParams();\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const contact = useSelector((state) => state.contact.contact);\n  const [name, setName] = useState("");\n  const [email, setEmail] = useState("");\n  const [phone, setPhone] = useState("");\n\n  useEffect(() => {\n    if (contact != null) {\n      setName(contact.name);\n      setPhone(contact.phone);\n      setEmail(contact.email);\n    }\n    dispatch(getContact(id));\n  }, [contact]);\n\n  const onUpdateContact = (e) => {\n    e.preventDefault();\n\n    const update_contact = Object.assign(contact, {\n      name: name,\n      phone: phone,\n      email: email,\n    });\n    dispatch(updateContact(update_contact));\n    history.push("/");\n  };\n  return (\n    <div>\n      <h3>Add Contacts</h3>\n      <div>\n        <form onSubmit={(e) => onUpdateContact(e)}>\n          <input type="text" value={name} onChange={(e) => setName(e.target.value)} />\n          <input type="text" value={phone} onChange={(e) => setPhone(e.target.value)} />\n          <input type="text" value={email} onChange={(e) => setEmail(e.target.value)} />\n          <button type="submit">Update</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\n\n\n//App.js\nimport { BrowserRouter as Router, Route, Switch, Link } from "react-router-dom";\nimport Contacts from "./components/Contacts";\nimport AddContact from "./components/AddContact";\nimport EditContact from "./components/EditContact";\n\nconst App = () => {\n  return (\n\n    <Router>\n      <div>\n        <Link to="/contacts/add"> Add Records</Link>\n        <Switch>\n          <Route exact path="/" component={Contacts} />\n          <Route exact path="/contacts/add" component={AddContact} />\n          <Route exact path="/contacts/edit/:id" component={EditContact} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};'.trim(),b='\n//contactReducer.js\nimport Contact from "../components/Contact";\nimport {\n  GET_CONTACT,\n  CREATE_CONTACT,\n  UPDATE_CONTACT,\n  DELETE_CONTACT,\n  SELECT_CONTACT,\n  CLEAR_CONTACT,\n  DELETE_SELECTED_CONTACT,\n} from "../actions/types";\n\nconst initialState = {\n  contacts: [\n    {\n      id: 1,\n      name: "Leanne Graham",\n      email: "Sincere@april.biz",\n      phone: "1-770-736-8031 x56442",\n    },\n    {\n      id: 2,\n      name: "Ervin Howell",\n      email: "Shanna@melissa.tv",\n      phone: "010-692-6593 x09125",\n    }\n  ],\n  contact: null,\n  selectedContacts: [],\n};\nconst contactReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_CONTACT:\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n      };\n    case GET_CONTACT:\n      let arr = state.contacts.filter(\n        (contact) => contact.id == action.payload\n      );\n      arr = arr.values();\n      for (let val of arr) {\n        arr = val;\n      }\n      return {\n        ...state,\n        contact: arr,\n      };\n\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          Contact.id == action.payload.id ? action.payload : contact\n        ),\n      };\n\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id != action.payload\n        ),\n      };\n\n    case SELECT_CONTACT:\n      return {\n        ...state,\n        selectedContacts: action.payload,\n      };\n\n    case DELETE_SELECTED_CONTACT:\n      return {\n        ...state,\n        contacts: [],\n      };\n    case CLEAR_CONTACT:\n      return {\n        ...state,\n        selectedContacts: [],\n      };\n\n    default:\n      return state;\n  }\n};\nexport default contactReducer;\n'.trim(),y='\n//types.js\nexport const CREATE_CONTACT = "CREATE_CONTACT";\nexport const GET_CONTACT = "GET_CONTACT";\nexport const UPDATE_CONTACT = "UPDATE_CONTACT";\nexport const DELETE_CONTACT = "DELETE_CONTACT";\nexport const SELECT_CONTACT = "SELECT_CONTACT";\nexport const CLEAR_CONTACT = "CLEAR_CONTACT";\nexport const DELETE_SELECTED_CONTACT = "DELETE_SELECTED_CONTACT";\n\n\n\n//contactAction.js\nimport {\n  CREATE_CONTACT,\n  GET_CONTACT,\n  UPDATE_CONTACT,\n  DELETE_CONTACT,\n  SELECT_CONTACT,\n  CLEAR_CONTACT,\n  DELETE_SELECTED_CONTACT,\n} from "./types";\n\nexport const addContact = (contact) => ({\n  type: CREATE_CONTACT,\n  payload: contact,\n});\n\nexport const getContact = (id) => ({\n  type: GET_CONTACT,\n  payload: id,\n});\n\nexport const updateContact = (contact) => ({\n  type: UPDATE_CONTACT,\n  payload: contact,\n});\n\nexport const deleteContact = (id) => ({\n  type: DELETE_CONTACT,\n  payload: id,\n});\n\nexport const selectAllContact = (id) => ({\n  type: SELECT_CONTACT,\n  payload: id,\n});\n\nexport const clearAllContact = () => ({\n  type: CLEAR_CONTACT,\n});\n\n//delete selected contacts\nexport const deleteAllContact = () => ({\n  type: DELETE_SELECTED_CONTACT,\n});\n'.trim(),_=function(t){function n(){return Object(a.a)(this,n),Object(o.a)(this,Object(s.a)(n).apply(this,arguments))}return Object(l.a)(n,t),Object(c.a)(n,[{key:"componentDidMount",value:function(){setTimeout((function(){return u.a.highlightAll()}),0)}},{key:"render",value:function(){var t=this.props.classes;return i.a.createElement(p.a,{container:!0},i.a.createElement(p.a,{item:!0,xs:2},i.a.createElement(d.a,{className:t.paper},i.a.createElement("h4",null,i.a.createElement(T.a,null)))),i.a.createElement(p.a,{item:!0,xs:10},i.a.createElement(d.a,{className:t.paper},i.a.createElement(E.a,null,i.a.createElement("h3",null,"1. Jsonplaceholder"),i.a.createElement("b",null,"App.js"),i.a.createElement("div",{style:A},i.a.createElement(h.a,{code:f,language:"js",plugins:["line-numbers"]})),i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement("b",null,"Reducers"),i.a.createElement("div",{style:A},i.a.createElement(h.a,{code:g,language:"js",plugins:["line-numbers"]})),i.a.createElement("br",null),i.a.createElement("h3",null,"2.Curd(components)"),i.a.createElement("div",{style:A},i.a.createElement(h.a,{code:N,language:"js",plugins:["line-numbers"]})),i.a.createElement("br",null),i.a.createElement("b",null,"reducers"),i.a.createElement("div",{style:A},i.a.createElement(h.a,{code:b,language:"js",plugins:["line-numbers"]})),i.a.createElement("br",null),i.a.createElement("b",null,"actions"),i.a.createElement("div",{style:A},i.a.createElement(h.a,{code:y,language:"js",plugins:["line-numbers"]}))))))}}]),n}(r.Component);n.default=Object(C.a)((function(t){return{paper:{margin:t.spacing(1),padding:t.spacing(1)},smMargin:{margin:t.spacing(1)},actionDiv:{textAlign:"center"}}}))(_)}}]);
//# sourceMappingURL=85.5765d394.chunk.js.map