{"version":3,"sources":["components/ReactJs/prismCode.js","components/angularjs/sidebar.js","assets/AI/Slide1.PNG","assets/AI/fashion_neural_net.png","components/angularjs/deepAngularjs/neural.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","module","exports","titles","backgroundColor","padding","fontSize","redesign","height","width","childsFile","training","sequential","NeyralNetwork","setTimeout","highlightAll","container","item","xs","src","NeuralKeras","alt","style","Fashion","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/21.169a35b4.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/introAngular' className={classes.line}>AI</Link></MenuItem>\n        <MenuItem><Link to='/tensorflow' className={classes.line}>Tensorflow</Link></MenuItem>\n        <MenuItem><Link to='/tensors' className={classes.line}>Tensorboards</Link></MenuItem>\n        <MenuItem><Link to='/angCompiler' className={classes.line}>Compiler</Link></MenuItem>\n        <MenuItem><Link to='/neural' className={classes.line}>NeuralKeras</Link></MenuItem>\n        <MenuItem><Link to='/activationFunctions' className={classes.line}>activationFuncs</Link></MenuItem>\n        <MenuItem><Link to='/loss' className={classes.line}>Loss</Link></MenuItem>\n        <MenuItem><Link to='/gradientNeural' className={classes.line}>GradientNeural</Link></MenuItem>\n        <MenuItem><Link to='/stochastic' className={classes.line}>Stochastic</Link></MenuItem>\n        <MenuItem><Link to='/benchmarking' className={classes.line}>Benchmarking</Link></MenuItem>\n        <MenuItem><Link to='/customer' className={classes.line}>Customer</Link></MenuItem>\n        <MenuItem><Link to='/regularizationDeep' className={classes.line}>Regularization Deep</Link></MenuItem>\n        <MenuItem><Link to='/imbalanced' className={classes.line}>Imbalanced</Link></MenuItem>\n        <MenuItem><Link to='/imbalanced2' className={classes.line}>Imbalanced2</Link></MenuItem>\n        <MenuItem><Link to='/convolutionals' className={classes.line}>Convolutionals</Link></MenuItem>\n        <MenuItem><Link to='/data_augmentation' className={classes.line}>data Augmentation</Link></MenuItem>\n        <MenuItem><Link to='/transfer' className={classes.line}>Transfer</Link></MenuItem>\n        <MenuItem><Link to='/word_embedding' className={classes.line}>Embedding</Link></MenuItem>\n        <MenuItem><Link to='/datatypests' className={classes.line}>Datatypes</Link></MenuItem>\n        <MenuItem><Link to='/typeScript_2' className={classes.line}>TS Function</Link></MenuItem>\n        <MenuItem><Link to='/typeScript_4' className={classes.line}>Type Assertion</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","module.exports = __webpack_public_path__ + \"static/media/Slide1.80192e6c.PNG\";","module.exports = __webpack_public_path__ + \"static/media/fashion_neural_net.0808db62.png\";","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\nimport NeuralKeras from '../../../assets/AI/Slide1.PNG'\nimport Fashion from '../../../assets/AI/fashion_neural_net.png'\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst redesign = {\n  height: 200,\n  width: 500\n}\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst childsFile = `\nimport keras\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nkeras.backend.backend()                                                         #Using TensorFlow backend.\n\nfm = keras.datasets.fashion_mnist\n(X_train, y_train), (X_test, y_test) = fm.load_data()\nX_train[0]\n\nplt.matshow(X_train[0])\n`.trim();\n\nconst training = `\nX_train = X_train/255\nX_test = X_test/255\n`.trim();\n\nconst sequential = `\nfrom keras.models import Sequential\nfrom keras.layers import Flatten, Dense, Activation\n\nmodel = Sequential()\nmodel.add(Flatten(input_shape=[28, 28]))\nmodel.add(Dense(100, activation=\"relu\"))\nmodel.add(Dense(10, activation=\"softmax\"))\n\nmodel.summary()\n\nmodel.compile(loss=\"sparse_categorical_crossentropy\",  optimizer=\"adam\", metrics=[\"accuracy\"])\n              \nmodel.fit(X_train, y_train)\nmodel.evaluate(X_test, y_test)\nplt.matshow(X_test[0])\nyp = model.predict(X_test)\nnp.argmax(yp[0])\n\nclass_labels = [\"T-shirt/top\",\"Trouser\",\"Pullover\",\"Dress\",\"Coat\",\"Sandal\",\"Shirt\",\"Sneaker\",\"Bag\",\"Ankle boot\"]\n\nclass_labels[np.argmax(yp[0])]\n`.trim();\n\n// const pipes = ``.trim();\n\n\nclass NeyralNetwork extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Build our first neural network in Keras for image classification problem</h3>\n              <b>We will use keras fashion MNIST dataset. This consist of 60000 28X28 pixel images and 10000 test images, these images are classified in one of the 10 categories shown below</b>\n              <br />\n              <img src={NeuralKeras} alt=\"Theata\" className=\"responsive2\" style={redesign} />\n              <br />\n              <br />\n              Each image is 28 x 28 pixel in dimension.\n              <br />\n              <br />\n\n              <div style={titles}>\n                <PrismCode\n                  code={childsFile}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Normalize training data before training the neural net</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={training}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Now build the Sequential Model and add layers into it</h3>\n              <img src={Fashion} alt=\"Theata\" className=\"responsive2\" style={redesign} />\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={sequential}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              {/* <br />\n\n              <h3></h3>\n              <div style={titles}>\n                <PrismCode\n                  code={childsFile}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div> */}\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\n\nexport default (withStyles(styles)(NeyralNetwork));\n"],"sourceRoot":""}