(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[227],{140:function(e,n,t){"use strict";t.d(n,"a",(function(){return d}));var a=t(45),r=t(28),s=t(136),o=t(137),l=t(139),c=t(0),i=t.n(c),m=t(138),u=t.n(m),d=(t(59),function(e){function n(e){var t;return Object(a.a)(this,n),(t=Object(s.a)(this,Object(o.a)(n).call(this,e))).highlight=function(){t.ref&&t.ref.current&&u.a.highlightElement(t.ref.current)},t.ref=i.a.createRef(),t}return Object(l.a)(n,e),Object(r.a)(n,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,n=e.code,t=(e.plugins,e.language);return i.a.createElement("pre",{className:"code-prism"},i.a.createElement("code",{ref:this.ref,className:"language-".concat(t)},n.trim()))}}]),n}(i.a.Component))},141:function(e,n,t){},149:function(e,n,t){"use strict";t.d(n,"a",(function(){return m}));var a=t(0),r=t.n(a),s=t(26),o=t(297),l=t(295),c=t(114),i=Object(c.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function m(){var e=i();return r.a.createElement("div",{className:e.root},r.a.createElement(l.a,null,r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/introNodejs",className:e.line},"Intro")),r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/ejsNode",className:e.line},"Basics")),r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/buffers",className:e.line},"Buffer")),r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/childs",className:e.line},"Child Process-fork()-exec()")),r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/tut_1",className:e.line},"Callback")),r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/filSystems",className:e.line},"File System")),r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/evtNode",className:e.line},"EvtEmter-Capture data")),r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/codes",className:e.line},"Codes")),r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/url_shortener",className:e.line},"Url_Shortener")),r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/stripe_payment",className:e.line},"stripe_payment")),r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/sendEmail",className:e.line},"sendEmail")),r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/search_pagination",className:e.line},"search_pagination")),r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/push_notifications",className:e.line},"push_notifications")),r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/nodetext",className:e.line},"nodetext")),r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/file_upload",className:e.line},"file_upload")),r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/e_acco_veri",className:e.line},"email_acco_veri")),r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/2fa_speakearst",className:e.line},"2fa_speakearst")),r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/authentications",className:e.line},"SignUp")),r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/serverSide",className:e.line},"Server Side")),r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/tut_2",className:e.line},"Geocode-Upload")),r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/tut_6",className:e.line},"Chat")),r.a.createElement(o.a,null,r.a.createElement(s.b,{to:"/udemy",className:e.line},"Udemy"))),r.a.createElement("div",null))}},366:function(e,n,t){"use strict";t.r(n);var a=t(45),r=t(28),s=t(136),o=t(137),l=t(139),c=t(0),i=t.n(c),m=t(138),u=t.n(m),d=t(120),g=t(57),p=t(296),E=t(5),b=(t(141),t(149)),f=t(140),h={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},k="\nconst generateMessage = (username, text) => {\n  return {\n      username,\n      text,\n      createdAt: new Date().getTime()\n  }\n}\n\nconst generateLocationMessage = (username, url) => {\n  return {\n      username,\n      url,\n      createdAt: new Date().getTime()\n  }\n}\n\nmodule.exports = {\n  generateMessage,\n  generateLocationMessage\n}".trim(),v="\nconst users = []\n\nconst addUser = ({ id, username, room }) => {\n    // Clean the data\n    username = username.trim().toLowerCase()\n    room = room.trim().toLowerCase()\n\n    // Validate the data\n    if (!username || !room) {\n        return {\n            error: 'Username and room are required!'\n        }\n    }\n\n    // Check for existing user\n    const existingUser = users.find((user) => {\n        return user.room === room && user.username === username\n    })\n\n    // Validate username\n    if (existingUser) {\n        return {\n            error: 'Username is in use!'\n        }\n    }\n\n    // Store user\n    const user = { id, username, room }\n    users.push(user)\n    return { user }\n}\n\nconst removeUser = (id) => {\n    const index = users.findIndex((user) => user.id === id)\n\n    if (index !== -1) {\n        return users.splice(index, 1)[0]\n    }\n}\n\nconst getUser = (id) => {\n    return users.find((user) => user.id === id)\n}\n\nconst getUsersInRoom = (room) => {\n    room = room.trim().toLowerCase()\n    return users.filter((user) => user.room === room)\n}\n\nmodule.exports = {\n    addUser,\n    removeUser,\n    getUser,\n    getUsersInRoom\n}".trim(),N="\nconst path = require('path')\nconst http = require('http')\nconst express = require('express')\nconst socketio = require('socket.io')\nconst Filter = require('bad-words')\nconst { generateMessage, generateLocationMessage } = require('./utils/messages')\nconst { addUser, removeUser, getUser, getUsersInRoom } = require('./utils/users')\n\nconst app = express()\nconst server = http.createServer(app)\nconst io = socketio(server)\n\nconst port = process.env.PORT || 3000\nconst publicDirectoryPath = path.join(__dirname, '../public')\n\napp.use(express.static(publicDirectoryPath))\n\nio.on('connection', (socket) => {\n    console.log('New WebSocket connection')\n\n    socket.on('join', (options, callback) => {\n        const { error, user } = addUser({ id: socket.id, ...options })\n\n        if (error) {\n            return callback(error)\n        }\n\n        socket.join(user.room)\n\n        socket.emit('message', generateMessage('Admin', 'Welcome!'))\n        socket.broadcast.to(user.room).emit('message', generateMessage('Admin', '$'{user.username} has joined!'))\n        io.to(user.room).emit('roomData', {\n            room: user.room,\n            users: getUsersInRoom(user.room)\n        })\n\n        callback()\n    })\n\n    socket.on('sendMessage', (message, callback) => {\n        const user = getUser(socket.id)\n        const filter = new Filter()\n\n        if (filter.isProfane(message)) {\n            return callback('Profanity is not allowed!')\n        }\n\n        io.to(user.room).emit('message', generateMessage(user.username, message))\n        callback()\n    })\n\n    socket.on('sendLocation', (coords, callback) => {\n        const user = getUser(socket.id)\n        io.to(user.room).emit('locationMessage', generateLocationMessage(user.username, \n                            'https://google.com/maps?q='$'{coords.latitude},'$'{coords.longitude}'))\n        callback()\n    })\n\n    socket.on('disconnect', () => {\n        const user = removeUser(socket.id)\n\n        if (user) {\n            io.to(user.room).emit('message', generateMessage('Admin', '$'{user.username} has left!'))\n            io.to(user.room).emit('roomData', {\n                room: user.room,\n                users: getUsersInRoom(user.room)\n            })\n        }\n    })\n})\n\nserver.listen(port, () => {\n    console.log(Server is up on port '$'{port}!)\n})".trim(),U=function(e){function n(){return Object(a.a)(this,n),Object(s.a)(this,Object(o.a)(n).apply(this,arguments))}return Object(l.a)(n,e),Object(r.a)(n,[{key:"componentDidMount",value:function(){setTimeout((function(){return u.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return i.a.createElement(d.a,{container:!0},i.a.createElement(d.a,{item:!0,xs:2},i.a.createElement(g.a,{className:e.paper},i.a.createElement("h4",null,i.a.createElement(b.a,null)))),i.a.createElement(d.a,{item:!0,xs:10},i.a.createElement(g.a,{className:e.paper},i.a.createElement(p.a,null,i.a.createElement("br",null),i.a.createElement("h3",null,"Chat"),"message.js",i.a.createElement("div",{style:h},i.a.createElement(f.a,{code:k,language:"js",plugins:["line-numbers"]})),i.a.createElement("br",null),"users.js",i.a.createElement("div",{style:h},i.a.createElement(f.a,{code:v,language:"js",plugins:["line-numbers"]})),i.a.createElement("br",null),"server.js",i.a.createElement("div",{style:h},i.a.createElement(f.a,{code:N,language:"js",plugins:["line-numbers"]}))))))}}]),n}(c.Component);n.default=Object(E.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(U)}}]);
//# sourceMappingURL=227.c56838a2.chunk.js.map