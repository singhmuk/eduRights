{"version":3,"sources":["components/ReactJs/prismCode.js","components/mern/sidebar.js","components/mern/projects/propsModel.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","Previews","ViewDetails","captcha","PropsModel","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/174.694f0084.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/setUpFiles' className={classes.line}>SetUp</Link></MenuItem>\n        <MenuItem><Link to='/javaScript' className={classes.line}>JavaScript</Link></MenuItem>\n        <MenuItem><Link to='/reactCurdMern' className={classes.line}>Mern React</Link></MenuItem>\n        <MenuItem><Link to='/4_reactCurdHooks' className={classes.line}>Mern React Hooks</Link></MenuItem>\n        <MenuItem><Link to='/pagination' className={classes.line}>Sea Sort Pagi Auth_Token</Link></MenuItem>\n        <MenuItem><Link to='/propsModel' className={classes.line}>SS pagination-Captcha</Link></MenuItem>\n        <MenuItem><Link to='/imageGallery' className={classes.line}>ImageGallery</Link></MenuItem>\n        <MenuItem><Link to='/stripes' className={classes.line}>Stripes-Signin with gfb</Link></MenuItem>\n        <MenuItem><Link to='/paginationsMern' className={classes.line}>Paginations-push_notifis</Link></MenuItem>\n        <MenuItem><Link to='/googleMap' className={classes.line}>GoogleMap</Link></MenuItem>\n        <MenuItem><Link to='/videoChat' className={classes.line}>VideoChat</Link></MenuItem>\n        <MenuItem><Link to='/qrSccaners' className={classes.line}>QrCode-reCapcha</Link></MenuItem>\n        <MenuItem><Link to='/react_share' className={classes.line}>Share-Stripe</Link></MenuItem>\n        <MenuItem><Link to='/socialSignUp' className={classes.line}>SocialSignUp</Link></MenuItem>\n        <MenuItem><Link to='/mernSocial' className={classes.line}>MernSocial</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst Previews = `\nconst postSchema = new Schema({\n  text: String,\n  title: String,\n});\n\nconst Post = mongoose.model(\"Post\", postSchema);\nmodule.exports = Post\n\n\n//Controllers\nconst Post = require('./model.js');\n\nrouter.post('/',async (req,res) =>{\n  const posts = new Post({\n    text: req.body.text,\n    title: req.body.title\n  })\n      await posts.save()\n      res.status(201).send(posts)\n})\n\n\n//Routes\nrouter.get(\"/posts\", async (req, res) => {\n  const sort = {}\n  \n  const PAGE_SIZE = 3;                                                           //data per page\n  const page = parseInt(req.query.page || \"0\");\n  const total = await Post.countDocuments({});\n  const posts = await Post.find({})\n\n    .limit(PAGE_SIZE)                                                            //data limit get from mongodb\n    .skip(PAGE_SIZE * page);\n    res.json({\n      totalPages: Math.ceil(total / PAGE_SIZE),\n      posts,\n    });\n  \n \n  if(req.query.sortBy){                                             //localhost:5000/posts?sortBy=createdAt:true\n    const str = req.query.sortBy.split(':')\n    sort[str[0]] = str[1] === 'desc' ? -1:1\n    console.log('sort',str)\n}\n});\n\n\nrouter.get(\"/search/:text\", (req, res) => {\n  var regex = new RegExp(req.params.text,'i');\n  Post.find({name:regex}).then(result => {\n    res.status(200).json(result)\n  })\n})\n\nmodule.exports = router;\n\n\n\n//server.js\nconst morgan = require(\"morgan\");\nconst cookieParser = require(\"cookie-parser\");\n\nconst app = express();\napp.use(cookieParser());\napp.use(\n  cors({\n    origin: \"http://localhost:3000\",\n    credentials: true\n  })\n);\n\nif (!process.env.NODE_ENV === \"test\") {\n  app.use(morgan(\"dev\"));\n}\n\napp.use(express.json());\n\napp.use(\"/users\", require(\"./routes/users\"));\n\nconst port = process.env.PORT || 5000\napp.listen(port, () => console.log('Server Listening on'));\n`.trim();\n\nconst ViewDetails = `\nfunction App() {\n  const [pageNumber, setPageNumber] = useState(0);\n  const [numberOfPages, setNumberOfPages] = useState(0);\n  const [posts, setPosts] = useState([]);\n\n  const pages = new Array(numberOfPages).fill(null).map((v, i) => i);\n\n  useEffect(() => {\n    fetch(http://localhost:5000/posts?page='$'{pageNumber})\n      .then((res) => res.json())\n      .then(({ totalPages, posts }) => {\n        setPosts(posts);\n        console.log('eeeee',posts)\n        setNumberOfPages(totalPages);\n      });\n  }, [pageNumber]);\n\n  const gotoPrevious = () => {\n    setPageNumber(Math.max(0, pageNumber - 1));\n  };\n\n  const gotoNext = () => {\n    setPageNumber(Math.min(numberOfPages - 1, pageNumber + 1));\n  };\n\n  return (\n    <div className=\"App\">\n      <h3>Page of {pageNumber + 1}</h3>\n\n      {posts.map((post) => (\n        <div key={post._id} className=\"post\">\n          <h4>{post.title}</h4>\n          <p>{post.text}</p>\n        </div>\n      ))}\n\n      <button onClick={gotoPrevious}>Previous</button>\n      {pages.map((pageIndex) => (\n        <button key={pageIndex} onClick={() => setPageNumber(pageIndex)}>\n          {pageIndex + 1}\n        </button>\n      ))}\n      <button onClick={gotoNext}>Next</button>\n    </div>\n  );\n}\n\nexport default App;\n`.trim();\n\nconst captcha = `\nconst bodyParser = require('body-parser');\nconst fetch = require('node-fetch');\nconst { stringify } = require('querystring');\nconst app = express();\n\napp.use(express.json());\n\napp.get('/', (_, res) => res.sendFile(__dirname + '/index.html'));\n\napp.post('/subscribe', async (req, res) => {\n  if (!req.body.captcha)\n    return res.json({ success: false, msg: 'Please select captcha' });\n\n  const secretKey = '6LdpvDEUAAAAAHszsgB_nnal29BIKDsxwAqEbZzU';                                     // Secret key\n\n  // Verify URL\n  const query = stringify({\n    secret: secretKey,\n    response: req.body.captcha,\n    remoteip: req.connection.remoteAddress\n  });\n  const verifyURL = https://google.com/recaptcha/api/siteverify?'$'{query};\n\n  const body = await fetch(verifyURL).then(res => res.json());\n\n  if (body.success !== undefined && !body.success)\n    return res.json({ success: false, msg: 'Failed captcha verification' });\n\n  return res.json({ success: true, msg: 'Captcha passed' });\n});\n\napp.listen(3000, () => console.log('Server started on port 3000'));\n`.trim();\n\n\nclass PropsModel extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1.Server Side Pagination</h3>\n              <b>Server</b>\n              <div style={titles}>\n                <PrismCode\n                  code={Previews}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Client</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={ViewDetails}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>2. Captcha</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={captcha}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(PropsModel));\n"],"sourceRoot":""}