(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[168],{140:function(e,n,t){"use strict";t.d(n,"a",(function(){return u}));var a=t(45),l=t(28),o=t(136),r=t(137),s=t(139),i=t(0),c=t.n(i),m=t(138),p=t.n(m),u=(t(59),function(e){function n(e){var t;return Object(a.a)(this,n),(t=Object(o.a)(this,Object(r.a)(n).call(this,e))).highlight=function(){t.ref&&t.ref.current&&p.a.highlightElement(t.ref.current)},t.ref=c.a.createRef(),t}return Object(s.a)(n,e),Object(l.a)(n,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,n=e.code,t=(e.plugins,e.language);return c.a.createElement("pre",{className:"code-prism"},c.a.createElement("code",{ref:this.ref,className:"language-".concat(t)},n.trim()))}}]),n}(c.a.Component))},141:function(e,n,t){},151:function(e,n,t){"use strict";t.d(n,"a",(function(){return m}));var a=t(0),l=t.n(a),o=t(26),r=t(297),s=t(295),i=t(114),c=Object(i.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function m(){var e=c();return l.a.createElement("div",{className:e.root},l.a.createElement(s.a,null,l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/setUpFiles",className:e.line},"SetUp")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/javaScript",className:e.line},"JavaScript")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/reactCurdMern",className:e.line},"Mern React")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/4_reactCurdHooks",className:e.line},"Mern React Hooks")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/pagination",className:e.line},"Sea Sort Pagi Auth_Token")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/propsModel",className:e.line},"SS pagination-Captcha")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/imageGallery",className:e.line},"ImageGallery")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/stripes",className:e.line},"Stripes-Signin with gfb")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/paginationsMern",className:e.line},"Paginations-push_notifis")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/googleMap",className:e.line},"GoogleMap")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/videoChat",className:e.line},"VideoChat")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/qrSccaners",className:e.line},"QrCode-reCapcha")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/react_share",className:e.line},"Share-Stripe")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/socialSignUp",className:e.line},"SocialSignUp")),l.a.createElement(r.a,null,l.a.createElement(o.b,{to:"/mernSocial",className:e.line},"MernSocial"))),l.a.createElement("div",null))}},541:function(e,n,t){"use strict";t.r(n);var a=t(45),l=t(28),o=t(136),r=t(137),s=t(139),i=t(0),c=t.n(i),m=t(138),p=t.n(m),u=t(120),d=t(57),g=t(296),f=t(5),b=(t(141),t(151)),y=t(140),h={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},E='\n//.env\nREACT_APP_GOOGLE_MAPS_API_KEY = AIzaSyACmVis1yWx1wCi2AX9V0lu3JT_PGXT1qI\n\n\n//App.js\nimport React from "react";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from "@react-google-maps/api";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from "use-places-autocomplete";\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from "@reach/combobox";\nimport { formatRelative } from "date-fns";\n\nimport "@reach/combobox/styles.css";\nimport mapStyles from "./mapStyles";\n\nconst libraries = ["places"];\nconst mapContainerStyle = {\n  height: "100vh",\n  width: "100vw",\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n};\nconst center = {\n  lat: 43.6532,\n  lng: -79.3832,\n};\n\nexport default function App() {\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: \'AIzaSyACmVis1yWx1wCi2AX9V0lu3JT_PGXT1qI\',\n    libraries,\n  });\n  const [markers, setMarkers] = React.useState([]);\n  const [selected, setSelected] = React.useState(null);\n\n  const onMapClick = React.useCallback((e) => {\n    setMarkers((current) => [\n      ...current,\n      {\n        lat: e.latLng.lat(),\n        lng: e.latLng.lng(),\n        time: new Date(),\n      },\n    ]);\n  }, []);\n\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  const panTo = React.useCallback(({ lat, lng }) => {\n    mapRef.current.panTo({ lat, lng });\n    mapRef.current.setZoom(14);\n  }, []);\n\n  if (loadError) return "Error";\n  if (!isLoaded) return "Loading...";\n\n  return (\n    <div>\n      <h1>\n        Bears{" "}\n        <span role="img" aria-label="tent">\n          \u26fa\ufe0f\n        </span>\n      </h1>\n\n      <Locate panTo={panTo} />\n      <Search panTo={panTo} />\n\n      <GoogleMap\n        id="map"\n        mapContainerStyle={mapContainerStyle}\n        zoom={4}\n        center={center}\n        options={options}\n        onClick={onMapClick}\n        onLoad={onMapLoad}\n      >\n        {markers.map((marker) => (\n          <Marker\n            key={\'$\'{ marker.lat }-\'$\'{ marker.lng } }\n            position={{ lat: marker.lat, lng: marker.lng }}\n            onClick={() => {\n              setSelected(marker);\n            }}\n            icon={{\n              url: \'/ bear.svg\',\n              origin: new window.google.maps.Point(0, 0),\n              anchor: new window.google.maps.Point(15, 15),\n              scaledSize: new window.google.maps.Size(30, 30),\n            }}\n          />\n        ))}\n\n        {selected ? (\n          <InfoWindow\n            position={{ lat: selected.lat, lng: selected.lng }}\n            onCloseClick={() => {\n              setSelected(null);\n            }}\n          >\n            <div>\n              <h2>\n                <span role="img" aria-label="bear">\n                  \ud83d\udc3b\n                </span>{" "}\n                Alert\n              </h2>\n              <p>Spotted {formatRelative(selected.time, new Date())}</p>\n            </div>\n          </InfoWindow>\n        ) : null}\n      </GoogleMap>\n    </div>\n  );\n}\n\nfunction Locate({ panTo }) {\n  return (\n    <button\n      className="locate"\n      onClick={() => {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            panTo({\n              lat: position.coords.latitude,\n              lng: position.coords.longitude,\n            });\n          },\n          () => null\n        );\n      }}\n    >\n      <img src="/compass.svg" alt="compass" />\n    </button>\n  );\n}\n\nfunction Search({ panTo }) {\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: { lat: () => 43.6532, lng: () => -79.3832 },\n      radius: 100 * 1000,\n    },\n  });\n\n  // https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\n\n  const handleInput = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSelect = async (address) => {\n    setValue(address, false);\n    clearSuggestions();\n\n    try {\n      const results = await getGeocode({ address });\n      const { lat, lng } = await getLatLng(results[0]);\n      panTo({ lat, lng });\n      console.log("lng", lng);\n    } catch (error) {\n      console.log("\ud83d\ude31 Error: ", error);\n    }\n  };\n\n  return (\n    <div className="search">\n      <Combobox onSelect={handleSelect}>\n        <ComboboxInput\n          value={value}\n          onChange={handleInput}\n          disabled={!ready}\n          placeholder="Search your location"\n        />\n        <ComboboxPopover>\n          <ComboboxList>\n            {status === "OK" &&\n              data.map(({ id, description }) => (\n                <ComboboxOption key={id} value={description} />\n              ))}\n          </ComboboxList>\n        </ComboboxPopover>\n      </Combobox>\n    </div>\n  );\n}\n\n'.trim(),T="\nh1 {\n  position: absolute;\n  top: 1rem;\n  left: 1rem;\n  color: #281414;\n  z-index: 10;\n  margin: 0;\n  padding: 0;\n}\n\n.search {\n  position: absolute;\n  top: 1rem;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 100%;\n  max-width: 400px;\n  z-index: 10;\n}\n\n.search input {\n  padding: 0.5rem;\n  font-size: 1.5rem;\n  width: 100%;\n}\n\n.locate {\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  background: none;\n  border: none;\n  z-index: 10;\n}\n.locate img {\n  width: 30px;\n  cursor: pointer;\n}\n".trim(),v='\nexport default [\n  {\n    featureType: "all",\n    elementType: "geometry.fill",\n    stylers: [\n      {\n        weight: "2.00",\n      },\n    ],\n  },\n  {\n    featureType: "all",\n    elementType: "geometry.stroke",\n    stylers: [\n      {\n        color: "#9c9c9c",\n      },\n    ],\n  },\n  {\n    featureType: "all",\n    elementType: "labels.text",\n    stylers: [\n      {\n        visibility: "on",\n      },\n    ],\n  },\n  {\n    featureType: "landscape",\n    elementType: "all",\n    stylers: [\n      {\n        color: "#f2f2f2",\n      },\n    ],\n  },\n  {\n    featureType: "landscape",\n    elementType: "geometry.fill",\n    stylers: [\n      {\n        color: "#ffffff",\n      },\n    ],\n  },\n  {\n    featureType: "landscape.man_made",\n    elementType: "geometry.fill",\n    stylers: [\n      {\n        color: "#ffffff",\n      },\n    ],\n  },\n  {\n    featureType: "poi",\n    elementType: "all",\n    stylers: [\n      {\n        visibility: "off",\n      },\n    ],\n  },\n  {\n    featureType: "road",\n    elementType: "all",\n    stylers: [\n      {\n        saturation: -100,\n      },\n      {\n        lightness: 45,\n      },\n    ],\n  },\n  {\n    featureType: "road",\n    elementType: "geometry.fill",\n    stylers: [\n      {\n        color: "#eeeeee",\n      },\n    ],\n  },\n  {\n    featureType: "road",\n    elementType: "labels.text.fill",\n    stylers: [\n      {\n        color: "#7b7b7b",\n      },\n    ],\n  },\n  {\n    featureType: "road",\n    elementType: "labels.text.stroke",\n    stylers: [\n      {\n        color: "#ffffff",\n      },\n    ],\n  },\n  {\n    featureType: "road.highway",\n    elementType: "all",\n    stylers: [\n      {\n        visibility: "simplified",\n      },\n    ],\n  },\n  {\n    featureType: "road.arterial",\n    elementType: "labels.icon",\n    stylers: [\n      {\n        visibility: "off",\n      },\n    ],\n  },\n  {\n    featureType: "transit",\n    elementType: "all",\n    stylers: [\n      {\n        visibility: "off",\n      },\n    ],\n  },\n  {\n    featureType: "water",\n    elementType: "all",\n    stylers: [\n      {\n        color: "#46bcec",\n      },\n      {\n        visibility: "on",\n      },\n    ],\n  },\n  {\n    featureType: "water",\n    elementType: "geometry.fill",\n    stylers: [\n      {\n        color: "#c8d7d4",\n      },\n    ],\n  },\n  {\n    featureType: "water",\n    elementType: "labels.text.fill",\n    stylers: [\n      {\n        color: "#070707",\n      },\n    ],\n  },\n  {\n    featureType: "water",\n    elementType: "labels.text.stroke",\n    stylers: [\n      {\n        color: "#ffffff",\n      },\n    ],\n  },\n];\n'.trim(),S=function(e){function n(){return Object(a.a)(this,n),Object(o.a)(this,Object(r.a)(n).apply(this,arguments))}return Object(s.a)(n,e),Object(l.a)(n,[{key:"componentDidMount",value:function(){setTimeout((function(){return p.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return c.a.createElement(u.a,{container:!0},c.a.createElement(u.a,{item:!0,xs:2},c.a.createElement(d.a,{className:e.paper},c.a.createElement("h4",null,c.a.createElement(b.a,null)))),c.a.createElement(u.a,{item:!0,xs:10},c.a.createElement(d.a,{className:e.paper},c.a.createElement(g.a,null,c.a.createElement("h3",null,"React Google Map"),c.a.createElement("div",{style:h},c.a.createElement(y.a,{code:E,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("br",null),c.a.createElement("b",null,"index.css"),c.a.createElement("br",null),c.a.createElement("div",{style:h},c.a.createElement(y.a,{code:T,language:"js",plugins:["line-numbers"]})),c.a.createElement("br",null),c.a.createElement("br",null),c.a.createElement("b",null,"mapStyles.js"),c.a.createElement("br",null),c.a.createElement("div",{style:h},c.a.createElement(y.a,{code:v,language:"js",plugins:["line-numbers"]}))))))}}]),n}(i.Component);n.default=Object(f.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(S)}}]);
//# sourceMappingURL=168.0b584a9c.chunk.js.map