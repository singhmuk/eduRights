{"version":3,"sources":["components/ReactJs/prismCode.js","components/algorithams/sidebar.js","assets/stcks.png","components/algorithams/deepAlgorithams/dslogic8.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","module","exports","titles","backgroundColor","padding","fontSize","isValid","generateParenthesis","largestPerimeter","generate","computeArea","graph","DSLogic8","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/34.7c80c1e0.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/introAlgo' className={classes.line}>Deadlock</Link></MenuItem>\n        <MenuItem><Link to='/Stack' className={classes.line}>Stack</Link></MenuItem>\n        <MenuItem><Link to='/Queue' className={classes.line}>Queue</Link></MenuItem>\n        <MenuItem><Link to='/linkedList' className={classes.line}>LinkedList</Link></MenuItem>\n        <MenuItem><Link to='/heap' className={classes.line}>Heap</Link></MenuItem>\n        <MenuItem><Link to='/trees' className={classes.line}>Tree</Link></MenuItem>\n        <MenuItem><Link to='/graph' className={classes.line}>Graph</Link></MenuItem>\n        <MenuItem><Link to='/sort' className={classes.line}>QuickSort</Link></MenuItem>\n        <MenuItem><Link to='/searchAlgo' className={classes.line}>Search</Link></MenuItem>\n        <MenuItem><Link to='/topTech' className={classes.line}>TopTech</Link></MenuItem>\n        <MenuItem><Link to='/stringAlgo' className={classes.line}>String</Link></MenuItem>\n        <MenuItem><Link to='/arrayAlgo' className={classes.line}>Array</Link></MenuItem>\n        <MenuItem><Link to='/nestingArrAlgo' className={classes.line}>Nesting Array</Link></MenuItem>\n        <MenuItem><Link to='/numbersAlgo' className={classes.line}>Numbers</Link></MenuItem>\n        <MenuItem><Link to='/gameAlgo' className={classes.line}>Game</Link></MenuItem>\n        <MenuItem><Link to='/arrayStrAlgo' className={classes.line}>ArrayStr</Link></MenuItem>\n        <MenuItem><Link to='/arrayNumAlgo' className={classes.line}>ArrayNum</Link></MenuItem>\n        <MenuItem><Link to='/dslogic8' className={classes.line}>Logic8</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","module.exports = __webpack_public_path__ + \"static/media/stcks.7efa3b78.png\";","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\nimport Stcksval from '../../../assets/stcks.png';\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst redesign = {\n  height: 200,\n  width: 500\n}\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst isValid = `\nfunction isValid(s){\n  const stack = [];\n  const pair = {\n    '[': ']',\n    '{': '}',\n    '(': ')',\n  };\n  const isPaired = (a, b) => pair[a] === b;\n\n  for (c of s) {\n    if (isPaired(stack[stack.length - 1], c)) {\n      stack.pop();\n    } else {\n      stack.push(c);\n    }\n  }\n  return stack.length === 0;\n}\n\nconsole.log(isValid(\"()\"))\n`.trim();\n\nconst generateParenthesis = `\nfunction generateParenthesis(n) {\n  const result = [];\n\n  function aux(current, left, right){\n    if (left === n && right === n) {\n      result.push(current)\n      return\n    }\n    if (left < right || left > n || right > n) return;\n\n    aux('$'{current}(', left + 1, right)\n    aux('$'current})', left, right + 1)\n  }\n  aux('', 0, 0)\n  return result;\n}\n\nconsole.log(generateParenthesis(3))\n`.trim();\n\nconst largestPerimeter = `\nfunction largestPerimeter(A = []) {\n  A.sort((a, b) => b - a);\n  for (let i = 0; i < A.length - 2; i++) {\n    if (A[i] < A[i + 1] + A[i + 2]) {\n      return A[i] + A[i + 1] + A[i + 2];\n    }\n  }\n  return 0;\n}\n\nconsole.log(largestPerimeter([2,1,2]))\n`.trim();\n\nconst generate = `\nfunction generate(numRows){\n  const result = [];\n\n  for (let i = 0; i < numRows; i++) {\n    const current = [];\n    for (let j = 0; j <= i; j++) {\n      if (result[i - 1] && result[i - 1][j] && result[i - 1][j - 1]) {\n        current.push(result[i - 1][j] + result[i - 1][j - 1]);\n      } else {\n        current.push(1);\n      }\n    }\n    result.push(current);\n  }\n  return result;\n}\n\nconsole.log(generate(5))\n`.trim();\n\nconst computeArea = `\nfunction computeArea(A, B, C, D, E, F, G, H){\n  const area = (pointA, pointB) => (pointB[0] - pointA[0]) * (pointB[1] - pointA[1]);\n  const totalArea = area([A, B], [C, D]) + area([E, F], [G, H]);\n\n  if (E >= C || G <= A || F >= D || H <= B) return totalArea;\n\n  const pointA = [Math.max(A, E), Math.max(B, F)];\n  const pointB = [Math.min(C, G), Math.min(D, H)];\n  const overlapping = (pointB[0] - pointA[0]) * (pointB[1] - pointA[1]);\n\n  return totalArea - overlapping;\n}\n\nconsole.log(computeArea(-3, 0, 3, 4, 0, -1, 9, 2))\n`.trim();\n\nconst graph = ``.trim();\n\n\nclass DSLogic8 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n            <h3>1. Valid Parentheses</h3>\n              Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.\n              <br/>\n              An input string is valid if:<br/>\n              <ul>\n                <li>Open brackets must be closed by the same type of brackets.</li>\n                <li>Open brackets must be closed in the correct order.</li>\n              </ul>\n              <br/>\n\n              <b>Example 1: </b>\n\n              <b>Input: </b>s = \"()\"<br/>\n              <b>Output: </b>true<br/><br/>\n              <b>Example 2: </b>\n\n              <b>Input: </b>s = \"()[]{}\"<br/>\n              <b>Output: </b>true<br/><br/>\n              <b>Example 3: </b>\n\n              <b>Input: </b>s = \"(]\"<br/>\n              <b>Output: </b>false\n              <div style={titles}>\n                <PrismCode\n                  code={isValid}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br/>\n\n              <h3>2. Generate Parentheses.</h3>\n              Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.\n              <br/>\n              <b>Ex. </b> given n = 3, a solution set is: <br/>\n\n              [<br/>\n                \"((()))\", <br/>\n                \"(()())\", <br/>\n                \"(())()\", <br/>\n                \"()(())\", <br/>\n                \"()()()\" <br/>\n              ]\n              <div style={titles}>\n                <PrismCode\n                  code={generateParenthesis}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br/>\n\n              <h3>3. Largest Perimeter Triangle.</h3>\n              Given an array A of positive lengths, return the largest perimeter of a triangle with non-zero area, formed from 3 of these lengths.\n              <br/>\n              If it is impossible to form any triangle of non-zero area, return 0.\n              <div style={titles}>\n                <PrismCode\n                  code={largestPerimeter}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br/>\n\n              <h3>4. Pascal's Triangle</h3>\n              Given a non-negative integer numRows, generate the first numRows of Pascal's triangle.\n              <br/>\n              In Pascal's triangle, each number is the sum of the two numbers directly above it.\n              <div style={titles}>\n                <PrismCode\n                  code={generate}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br/>\n\n              <h3>5. Rectangle Area.</h3>\n              Find the total area covered by two rectilinear rectangles in a 2D plane.\n              <br/>\n              Each rectangle is defined by its bottom left corner and top right corner.\n              <div style={titles}>\n                <PrismCode\n                  code={computeArea}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br/>\n\n              <h3></h3>\n\n              <div style={titles}>\n                <PrismCode\n                  code={graph}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(DSLogic8));\n"],"sourceRoot":""}