{"version":3,"sources":["components/ReactJs/prismCode.js","components/ReactJs/sidebar.js","components/ReactJs/reactJs_hooks/linkGet.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","linkData","compos","onlyGet","LinkGet","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/75.3b4ea62b.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/introReact' className={classes.line}>Intro-Lazy-Children</Link></MenuItem>\n        <MenuItem><Link to='/reactInter' className={classes.line}>Intro</Link></MenuItem>\n        <MenuItem><Link to='/codingInter' className={classes.line}>CodesPro</Link></MenuItem>\n        <MenuItem><Link to='/mainCompo' className={classes.line}>Event-hoc-form<br />curd-slider</Link></MenuItem>\n        <MenuItem><Link to='/pureComp' className={classes.line}>PureComp-conComp</Link></MenuItem>\n        <MenuItem><Link to='/useStates' className={classes.line}>useMultiState</Link></MenuItem>\n        <MenuItem><Link to='/contextHooks' className={classes.line}>Context Hooks</Link></MenuItem>\n        <MenuItem><Link to='/customHooks' className={classes.line}>CustomHooks-memo</Link></MenuItem>\n        <MenuItem><Link to='/useReducersSta' className={classes.line}>UseReducers</Link></MenuItem>\n        <MenuItem><Link to='/contextMethods' className={classes.line}>Curd Hooks</Link></MenuItem>\n        <MenuItem><Link to='/jsonPlaceholder' className={classes.line}>JsonPlaceholder</Link></MenuItem>\n        <MenuItem><Link to='/async_await' className={classes.line}>Async-await-sideMenu<br />Mouse hover</Link></MenuItem>\n        <MenuItem><Link to='/ticGame' className={classes.line}>Share-maxMinDate<br />moveBtn-slideshow</Link></MenuItem>\n        <MenuItem><Link to='/linkGet' className={classes.line}>LinkGet</Link></MenuItem>\n        <MenuItem><Link to='/numberFormats' className={classes.line}>Random NumFor-biToDe<br /> Validations Step DateTimw</Link></MenuItem>\n        <MenuItem><Link to='/models' className={classes.line}>Models-chidData-csv<br />Icon-router</Link></MenuItem>\n        <MenuItem><Link to='/like' className={classes.line}>Like-checkbox-radio<br />select-scroll</Link></MenuItem>\n        <MenuItem><Link to='/textEditors' className={classes.line}>TextEditors-paginations<br />translator-sortCheck</Link></MenuItem>\n        <MenuItem><Link to='/sortItems' className={classes.line}>IncOnClick-pushBtn-fizzBuzz<br />show-addDocs-ratings</Link></MenuItem>\n        <MenuItem><Link to='/serverSideRend' className={classes.line}>Jwt-multiSel</Link></MenuItem>\n        <MenuItem><Link to='/dropdownSelect' className={classes.line}>SelectFtr-checkFtr-updtCrd</Link></MenuItem>\n        <MenuItem><Link to='/kanban' className={classes.line}>Kanban</Link></MenuItem>\n        <MenuItem><Link to='/hackeRank' className={classes.line}>HackeRank</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst linkData = `\n//models/item.js\nconst mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\n\nconst ItemSchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  date: {\n    type: Date,\n    default: Date.now\n  }\n});\nmodule.exports = Item = mongoose.model('item', ItemSchema);\n\n\n\n//routes/item.js\nconst express = require('express');\nconst router = express.Router();\nconst Item = require('../models/Item');\n\nrouter.get('/', (req, res) => {\n  Item.find()\n    .sort({ date: -1 })\n    .then(items => res.json(items));\n});\n\nrouter.get('/:id', (req, res) => {\n  Item.findById(req.params.id)\n    .sort({ date: -1 })\n    .then(items => res.json(items));\n});\n\nrouter.post('/', (req, res) => {\n  const newItem = new Item({\n    name: req.body.name\n  });\n\n  newItem.save().then(item => res.json(item));\n});\n\nrouter.patch('/:id', (req, res) => {\n  Item.findByIdAndUpdate(req.params.id, {\n    name: req.body.name,\n  }, { new: true }).then(data => { res.send(data) })\n})\n\nrouter.delete('/:id', (req, res) => {\n  Item.findById(req.params.id)\n    .then(item => item.remove().then(() => res.json({ success: true })))\n    .catch(err => res.status(404).json({ success: false }));\n});\n\nmodule.exports = router;\n`.trim();\n\nconst compos = `\n//App.js\nimport { BrowserRouter as Router, Route, NavLink, Switch } from 'react-router-dom';\nimport ShoppingList from './components/ShoppingList';\nimport AppNavbar from './components/AppNavbar';\nimport ItemModal from './components/ItemModal';\nimport EditList from './components/Edit';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\" component={ShoppingList} />\n          <Route exact path=\"/ItemModal/new\" component={ItemModal} />\n          <Route exact path=\"/AppNavbar/:_id\" component={AppNavbar} />\n          <Route exact path=\"/EditList/:_id/edit\" component={EditList} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\n\n//componenrs/ShoppingList.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n\nconst ShoppingList = () => {\n  const [items, setItems] = useState([])\n\n  useEffect(() => {\n    axios.get(\"/item\")\n      .then(res => {\n        setItems(res.data);\n      })\n  }, []);\n\n  return (\n    <div>\n      <Link to=\"/ItemModal/new\">Add Items</Link>\n      {items.map((item) => {\n        return (\n          <div key={item._id}>\n            <h4><Link to={'/ AppNavbar / '$'{ item._id }'}>{item.name}</Link></h4>\n            <small>_id: {item._id}</small>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\n\n//componenrs/ItemModal.js\nimport React, { useState } from \"react\";\nimport { post } from 'axios';\n\n\nconst ItemModal = (props) => {\n  const initialState = { name: '' }\n  const [items, setItems] = useState(initialState)\n\n  const handleChange = (e) => {\n    setItems({ ...items, [e.target.name]: e.target.value })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    post('/item', items);\n    props.history.push('/ ');\n  }\n\n  const handleCancel = () => {\n    props.history.push(\"/\");\n  }\n\n  return (\n    <div>\n      <h1>Add Items</h1>\n      <form onSubmit={handleSubmit}>\n        <label>Name</label>\n        <input type=\"text\" name=\"name\" value={items.name} onChange={handleChange} />\n\n        <input type=\"submit\" value=\"Submit\" />\n        <button type=\"button\" onClick={handleCancel} >Cancel</button>\n      </form>\n    </div>\n  );\n}\n\n\n\n//componenrs/AppNavbar.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst AppNavbar = (props) => {\n  const [item, setItems] = useState({});\n\n  useEffect(() => {\n    axios('/ item / '$'{ props.match.params._id }')\n      .then(res => res.data)\n      .then(receivedData => setItems(receivedData));\n  }, [props]);\n\n  const handleDelete = () => {\n    axios.delete('/ item / '$'{ props.match.params._id } ');\n    props.history.push(\"/\");\n  }\n\n  return (\n    <div>\n      <h2>{item.name}</h2>\n      <small>_id: {item._id}</small>\n      <p>{item.content}</p>\n\n      <Link to={'/ EditList / '$'{ item._id } /edit'}>Edit</Link >\n      <button onClick={handleDelete}>Delete</button>\n      <Link to=\"/\" >Close</Link>\n    </div >\n  );\n};\n\n\n\n//componenrs/Edit.js\nimport axios from 'axios';\nimport { patch } from 'axios';\n\n\nconst EditList = (props) => {\n  const initialState = { name: '' }\n  const [items, setItems] = useState(initialState)\n\n  useEffect(() => {\n    axios('/ item / '$'{ props.match.params._id }')\n      .then(res => res.data)\n      .then(receivedData => setItems(receivedData));\n  }, [props]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    patch('/ item / '$'{ items._id } ', items);\n    props.history.push('/ ');\n  }\n\n  const handleChange = (e) => {\n    setItems({ ...items, [e.target.name]: e.target.value })\n  }\n\n  const handleCancel = () => {\n    props.history.push('/ ');\n  }\n\n  return (\n    <div>\n      <h1>Edit {items.name}</h1>\n      <form onSubmit={handleSubmit}>\n        <label>Name</label>\n        <input type=\"text\" name=\"name\" value={items.name} onChange={handleChange} />\n\n        <button type=\"submit\">Update</button>\n        <button type=\"button\" onClick={handleCancel}>Cancel</button>\n      </form>\n    </div>\n  );\n}\n`.trim();\n\nconst onlyGet = `\n//App.js\nimport ShoppingList from './components/ShoppingList';\nimport AppNavbar from './components/AppNavbar';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\" component={ShoppingList} />\n          <Route exact path=\"/AppNavbar/:_id\" component={AppNavbar} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\n\n//components/ShoppingList.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n\nconst ShoppingList = () => {\n  const [items, setItems] = useState([])\n\n  useEffect(() => {\n    axios.get(\"/item\")\n      .then(res => {\n        setItems(res.data);\n      })\n  }, []);\n\n  return (\n    <div>\n      {items.map((item) => {\n        return (\n          <div key={item._id}>\n            <h4><Link to={'/ AppNavbar / '$'{ item._id }'}>{item.name}</Link></h4>\n            <small>_id: {item._id}</small>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\n\n\n//components/AppNavbar.js\nimport axios from 'axios';\n\nconst AppNavbar = (props) => {\n  const [item, setItems] = useState({});\n\n  useEffect(() => {\n    axios('/ item / '$'{ props.match.params._id }')\n      .then(res => res.data)\n      .then(receivedData => setItems(receivedData));\n  }, [props]);\n\n  return (\n    <div>\n      <h2>{item.name}</h2>\n      <small>_id: {item._id}</small>\n      <p>{item.content}</p>\n    </div>\n  );\n};\n`.trim();\n\n\n\nclass LinkGet extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. Pass data as props in link(API)</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={linkData}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>UI</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={compos}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n\n              <br />\n              <h3>2. Pass data only</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={onlyGet}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(LinkGet));"],"sourceRoot":""}