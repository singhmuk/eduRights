(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[93],{140:function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var a=n(45),s=n(28),r=n(136),i=n(137),o=n(139),c=n(0),l=n.n(c),u=n(138),p=n.n(u),d=(n(59),function(t){function e(t){var n;return Object(a.a)(this,e),(n=Object(r.a)(this,Object(i.a)(e).call(this,t))).highlight=function(){n.ref&&n.ref.current&&p.a.highlightElement(n.ref.current)},n.ref=l.a.createRef(),n}return Object(o.a)(e,t),Object(s.a)(e,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var t=this.props,e=t.code,n=(t.plugins,t.language);return l.a.createElement("pre",{className:"code-prism"},l.a.createElement("code",{ref:this.ref,className:"language-".concat(n)},e.trim()))}}]),e}(l.a.Component))},141:function(t,e,n){},153:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var a=n(0),s=n.n(a),r=n(26),i=n(297),o=n(295),c=n(114),l=Object(c.a)((function(t){return{root:{display:"flex"},paper:{marginRight:t.spacing(2)},line:{textDecoration:"none"}}}));function u(){var t=l();return s.a.createElement("div",{className:t.root},s.a.createElement(o.a,null,s.a.createElement(i.a,null,s.a.createElement(r.b,{to:"/introRedux",className:t.line},"Intro")),s.a.createElement(i.a,null,s.a.createElement(r.b,{to:"/counter",className:t.line},"Counter Select")),s.a.createElement(i.a,null,s.a.createElement(r.b,{to:"/reduxState",className:t.line},"Redux State-Curd")),s.a.createElement(i.a,null,s.a.createElement(r.b,{to:"/reduxMethods",className:t.line},"Redux Methods")),s.a.createElement(i.a,null,s.a.createElement(r.b,{to:"/react_redux",className:t.line},"Filter")),s.a.createElement(i.a,null,s.a.createElement(r.b,{to:"/reduxCurd",className:t.line},"Redux Curd")),s.a.createElement(i.a,null,s.a.createElement(r.b,{to:"/expenseTraMern",className:t.line},"ReactCurdPlaceholder")),s.a.createElement(i.a,null,s.a.createElement(r.b,{to:"/contactKeeperApi",className:t.line},"ReactReduxCurdPlaceholder")),s.a.createElement(i.a,null,s.a.createElement(r.b,{to:"/mernRedux",className:t.line},"Mern Redux")),s.a.createElement(i.a,null,s.a.createElement(r.b,{to:"/signUp",className:t.line},"SignUP")),s.a.createElement(i.a,null,s.a.createElement(r.b,{to:"/git",className:t.line},"Git")),s.a.createElement(i.a,null,s.a.createElement(r.b,{to:"/gitConcepts",className:t.line},"Git Concepts")),s.a.createElement(i.a,null,s.a.createElement(r.b,{to:"/skills",className:t.line},"Skills")),s.a.createElement(i.a,null,s.a.createElement(r.b,{to:"/comskills",className:t.line},"Comskills")),s.a.createElement(i.a,null,s.a.createElement(r.b,{to:"/techskills",className:t.line},"Techskills")),s.a.createElement(i.a,null,s.a.createElement(r.b,{to:"/techinto",className:t.line},"TechsInto"))),s.a.createElement("div",null))}},331:function(t,e,n){"use strict";n.r(e);var a=n(45),s=n(28),r=n(136),i=n(137),o=n(139),c=n(0),l=n.n(c),u=n(138),p=n.n(u),d=n(120),m=n(57),h=n(296),E=n(5),f=(n(141),n(153)),g=n(140),b={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},P='\nimport { useSelector, useDispatch } from "react-redux";\nimport { INCREMENT, DECREMENT } from "./actions/types"\n\nconst App = () => {\n  const counter = useSelector(state => state.count.counter);  //State\n  const dispatch = useDispatch();                             //Method\n  return (\n    <div>\n      <h1>{counter}</h1>\n      <button onClick={() => dispatch({ type: INCREMENT })}>Incr</button>\n      <button onClick={() => dispatch({ type: DECREMENT })}>Decr</button>\n    </div>\n  );\n};\n'.trim(),T='\n//reducers/reducers.js\nimport { INCREMENT, DECREMENT } from "../actions/types"\n\nconst initialState = {\n  counter: 0\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      return { counter: ++state.counter };\n    case DECREMENT:\n      return { counter: --state.counter };\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n\n\n//actions/types.js\nexport const INCREMENT = "INCREMENT";\nexport const DECREMENT = "DECREMENT";\n'.trim(),x='\n//components/index.js\nimport * as actions from "../actions";\nimport { connect } from "react-redux";\n\nclass Input extends Component {\n  state = {\n      title: "",\n      content: ""\n    };\n\n  handleChange = e => {\n    const state = this.state;\n    state[e.target.name] = e.target.value;\n    this.setState({ state });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.addPost(this.state.title, this.state.content);\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input type="text" name="title" onChange={this.handleChange} value={this.state.title}\n            required />\n          \n          <input type="text" name="content" onChange={this.handleChange} value={this.state.content}\n            required\n          />\n          <button>Add</button>\n        </form>\n      </div>\n    );\n  }\n}\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  addPost: (title, content) => {\n    dispatch(actions.addPost(title, content));\n  }\n})\n\nexport default connect(null, mapDispatchToProps)(Input);\n\n\n//components/Item\nimport { connect } from "react-redux";\nimport * as actions from "../actions";\n\nclass Item extends Component {\n  state = {\n      isEdit: false,\n      title: this.props.title,\n      content: this.props.content\n    };\n\n  handleChangeTitle = e => {\n    this.setState({ title: e.target.value });\n  };\n\n  handleChangeContent = e => {\n    this.setState({ content: e.target.value });\n  };\n\n  removePost = () => {\n    this.props.removePost(this.props.id);\n  };\n\n  updatePost = () => {\n    this.setState({ isEdit: true });\n  };\n\n  donePost = () => {\n    this.props.updatePost(this.props.id, this.state.title, this.state.content);\n    this.setState({ isEdit: false });\n  };\n\n  renderTitleInput = () => {\n    return (\n      <input type="text" onChange={this.handleChangeTitle} defaultValue={this.props.title} />\n    );\n  };\n\n  renderContentInput = () => {\n    return (\n      <input type="text" onChange={this.handleChangeContent} defaultValue={this.props.content} />\n    );\n  };\n\n  renderUpdateButton = () => {\n    return (\n      <button onClick={this.updatePost}>EDIT</button>\n    );\n  };\n\n  renderDoneButton = () => {\n    return (\n      <button onClick={this.donePost}>DONE</button>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.isEdit ? this.renderTitleInput() : this.props.title + \': \'}\n        {this.state.isEdit ? this.renderContentInput() : this.props.content}\n        <br />\n        {this.state.isEdit\n          ? this.renderDoneButton()\n          : this.renderUpdateButton()}\n        <button onClick={this.removePost}>REMOVE</button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  removePost: id => {\n    dispatch(actions.removePost(id));\n  },\n  updatePost: (id, title, content) => {\n    dispatch(actions.updatePost(id, title, content));\n  }\n})\n\nexport default connect(null, mapDispatchToProps)(Item);\n\n\n//components/List.js\nimport Item from "./item.jsx";\n\nclass List extends Component {\n  render() {\n    return (\n        <div>\n          {this.props.posts.map((post, index) => (\n            <Item {...post} key={index} id={post.id} />\n          ))}\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  posts: state.post\n})\n\nexport default connect(mapStateToProps, null)(List);\n\n\n\n//reducers/post.js\nimport { ADD_POST, REMOVE_POST, UPDATE_POST } from "../actions/index.js";\n\nconst initialState = [];\n\nexport default function Post(state = initialState, action) {\n  switch (action.type) {\n    case ADD_POST:\n      return [\n        ...state,\n        {\n          id: action.id,\n          title: action.title,\n          content: action.content\n        }\n      ];\n      \n    case REMOVE_POST:\n      return state.filter(({ id }) => id !== action.id);\n      \n    case UPDATE_POST:\n      return state.map(\n        post => (post.id === action.id ? { ...post, ...action } : post)\n      );\n      \n    default:\n      return state;\n  }\n}\n\n\n//actions/types.js\nexport const ADD_POST = "ADD_POST";\nexport const REMOVE_POST = "REMOVE_POST";\nexport const UPDATE_POST = "UPDATE_POST";\n\n\n//actions/index.js\nimport { ADD_POST, REMOVE_POST, UPDATE_POST } from \'./types\'\n\nlet nextId = 0;\nexport function addPost(title, content) {\n  return {\n    type: ADD_POST,\n    id: nextId++,\n    title,\n    content\n  };\n}\n\nexport function removePost(id) {\n  return {\n    type: REMOVE_POST,\n    id\n  };\n}\n\nexport function updatePost(id, title, content) {\n  return {\n    type: UPDATE_POST,\n    id,\n    title,\n    content\n  };\n}'.trim(),C=function(t){function e(){return Object(a.a)(this,e),Object(r.a)(this,Object(i.a)(e).apply(this,arguments))}return Object(o.a)(e,t),Object(s.a)(e,[{key:"componentDidMount",value:function(){setTimeout((function(){return p.a.highlightAll()}),0)}},{key:"render",value:function(){var t=this.props.classes;return l.a.createElement(d.a,{container:!0},l.a.createElement(d.a,{item:!0,xs:2},l.a.createElement(m.a,{className:t.paper},l.a.createElement("h4",null,l.a.createElement(f.a,null)))),l.a.createElement(d.a,{item:!0,xs:10},l.a.createElement(m.a,{className:t.paper},l.a.createElement(h.a,null,l.a.createElement("h3",null,"1. useSelector and useDispatch"),l.a.createElement("div",{style:b},l.a.createElement(g.a,{code:P,language:"js",plugins:["line-numbers"]})),l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement("b",null,"reducers"),l.a.createElement("br",null),l.a.createElement("div",{style:b},l.a.createElement(g.a,{code:T,language:"js",plugins:["line-numbers"]})),l.a.createElement("br",null),l.a.createElement("h3",null,"2.Curd"),l.a.createElement("div",{style:b},l.a.createElement(g.a,{code:x,language:"js",plugins:["line-numbers"]}))))))}}]),e}(c.Component);e.default=Object(E.a)((function(t){return{paper:{margin:t.spacing(1),padding:t.spacing(1)},smMargin:{margin:t.spacing(1)},actionDiv:{textAlign:"center"}}}))(C)}}]);
//# sourceMappingURL=93.6d08b09b.chunk.js.map