{"version":3,"sources":["components/ReactJs/prismCode.js","components/mern/sidebar.js","components/mern/projects/3_reactCurdMern.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","components","MernReactCurd","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/166.18a6dacf.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/setUpFiles' className={classes.line}>SetUp</Link></MenuItem>\n        <MenuItem><Link to='/javaScript' className={classes.line}>JavaScript</Link></MenuItem>\n        <MenuItem><Link to='/reactCurdMern' className={classes.line}>Mern React</Link></MenuItem>\n        <MenuItem><Link to='/4_reactCurdHooks' className={classes.line}>Mern React Hooks</Link></MenuItem>\n        <MenuItem><Link to='/pagination' className={classes.line}>Sea Sort Pagi Auth_Token</Link></MenuItem>\n        <MenuItem><Link to='/propsModel' className={classes.line}>SS pagination-Captcha</Link></MenuItem>\n        <MenuItem><Link to='/imageGallery' className={classes.line}>ImageGallery</Link></MenuItem>\n        <MenuItem><Link to='/stripes' className={classes.line}>Stripes-Signin with gfb</Link></MenuItem>\n        <MenuItem><Link to='/paginationsMern' className={classes.line}>Paginations-push_notifis</Link></MenuItem>\n        <MenuItem><Link to='/googleMap' className={classes.line}>GoogleMap</Link></MenuItem>\n        <MenuItem><Link to='/videoChat' className={classes.line}>VideoChat</Link></MenuItem>\n        <MenuItem><Link to='/qrSccaners' className={classes.line}>QrCode-reCapcha</Link></MenuItem>\n        <MenuItem><Link to='/react_share' className={classes.line}>Share-Stripe</Link></MenuItem>\n        <MenuItem><Link to='/socialSignUp' className={classes.line}>SocialSignUp</Link></MenuItem>\n        <MenuItem><Link to='/mernSocial' className={classes.line}>MernSocial</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst components = `\n//components/AppNavbar.js\nclass AppNavbar extends Component {\n  editItem = () => {\n    this.props.editItem(this.props.children);\n  }\n\n  deleteItem = () => {\n    this.props.deleteCat(this.props.children);\n  }\n\n  render() {\n    const { children: cat } = this.props;\n    return (\n        <div>\n            <p>{cat.name}</p>\n            <button onClick={this.editItem}>Edit</button>\n            <button onClick={this.deleteItem}>Delete</button>\n        </div>\n    );\n  }\n}\n\n\n//components/itemEdit.js\nimport { Modal } from 'reactstrap';\n\nclass ItemsEdit extends Component {\n  state= {\n      modal: false,\n      item: {}\n    };\n\n  componentWillMount() {\n    this.setState({\n      modal: this.props.modal,\n      item: this.props.catEdit\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      modal: nextProps.modal,\n    });\n  }\n\n  toggle = () => {\n    this.props.toggleModal(!this.state.modal);\n  }\n\n  save = () => {\n    this.props.toggleModal(!this.state.modal);\n\n    const { item } = this.state;\n    this.props.editItem(item);\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    const { item } = this.state;\n    const newItem = {...item};\n    newItem[name] = value;\n\n    this.setState({\n        [name]: value,\n        item: newItem\n      });\n  }\n\n  render() {\n    const { item } = this.state;\n    const closeBtn = <button onClick={this.toggle}>&times;</button>;\n    return (\n      <div>\n        <button onClick={this.toggle}>{this.props.buttonLabel}</button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <h3 toggle={this.toggle} close={closeBtn}>Edit Item</h3>\n            <form>\n                <label for=\"name\">Name</label>\n                <input type=\"text\" name=\"name\" id=\"name\" value={item.name} onChange={this.handleChange} />\n            </form>\n            <button onClick={this.save}>Save</button>{' '}\n            <button onClick={this.toggle}>Cancel</button>\n        </Modal>\n      </div>\n    );\n  }\n}\n\n\n//components/ItemModal.js\nimport { Modal } from 'reactstrap';\n\nclass ItemModal extends React.Component {\n  state = {\n      modal: false,\n      name: ''    \n    };\n\n  componentWillMount() {\n    this.setState({\n      modal: this.props.modal\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      modal: nextProps.modal\n    });\n  }\n\n  toggle = () => {\n    this.props.toggleModal(!this.state.modal);\n  }\n  onSubmit = e => {\n    e.preventDefault();\n    const newItem = {\n      name: this.state.name\n    };\n    \n    // Add item via addItem action\n    this.props.addItem(newItem);\n    \n    // Close modal\n    this.toggle();\n  };\n  \n  \n  onChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n      }\n\n  render() {\n    const closeBtn = <button onClick={this.toggle}>&times;</button>;\n    return (\n      <div>\n        <button onClick={this.toggle}>{this.props.buttonLabel}</button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <h2 toggle={this.toggle} close={closeBtn}>New Item</h2>\n                <form onSubmit={this.onSubmit}>\n                <input type='text' name='name' id='item'  onChange={this.onChange} />\n                <button color='dark' block>Add Item</button>\n                \n                <button>Save</button>{' '}\n                <button>Cancel</button>\n            </form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\n\n//components/shoppingList.js\nimport { Container, Row, Button } from 'reactstrap';\n\nimport AppNavbar from './AppNavbar';\nimport ItemModal from './ItemModal';\nimport ItemsEdit from './itemEdit';\n\nclass ShoppingList extends Component {\n  state = {\n        items: [],\n      \tcatEdit: {},\n      \tcreateModal: false,\n      \teditModal: false\n      }\n\n  componentDidMount() {\n      document.title = 'Items | Simple MERN Stack';\n\n      axios.get('/item')\n           .then(res => this.setState({\n            items: res.data})\n            )\n            .catch(() => \n            console.log('error')\n         ); \n      }\n\n  handleCreateModal = () => {\n    this.setState({\n      createModal: true\n    });\n  }\n\n  handleShowModal = (item) => {\n    this.setState({\n      catEdit: {...item},\n      editModal: true\n    });\n\t}\n\n  handleCreateModal = (value) => {\n\t\tthis.setState({\n\t\t\tcreateModal: value\n\t\t});\n\t}\n\n  handleEditModal = (value) => {\n    this.setState({\n      editModal: value\n    });\n  }\n\n  handleCreateItem = (item) => {\n    const { name, color, image } = item;\n    axios.post('/item', {\n      name, color, image\n    })\n    .then(() => {\n      const { items } = this.state;\n      this.setState({\n      items: [...items, {...item}]\n    });\n  })\n  .catch(() => \n  console.log('error')\n  );\n  }\n\n  handleEditCat = (item) => {\n      const { _id, name, color, image } = item;\n      axios.put(/item/'$'{_id}, {\n      name, color, image\n    })      \n    .then(() => {\n    const { items } = this.state;\n    const index = this.findIndex(items, item);\n      this.setState({\n      items: [...items.slice(0, index), {...item}, ...items.slice(index + 1)]\n    });\n  })\n  .catch(() => \n  console.log('error')\n  );\n  }\n\n  handleDeleteItem = (item) => {\n          axios.delete(/item/'$'{item._id})\n          .then(() => {\n            const { items } = this.state;\n            const index = this.findIndex(items, item);\n              this.setState({\n              items: [...items.slice(0, index), ...items.slice(index + 1)]\n        });\n      })\n      .catch(() => \n      console.log('error')\n    );\n  }\n\n\n  findIndex(items, item) {\n    let result = -1;\n    items.forEach((item, index) => {\n      if (item._id === item._id) {\n      result = index;\n      }\n   });\n  return result;\n  }\n\n      render() {\n        const { items, catEdit, createModal, editModal } = this.state;\n          return (\n            <Container>\n              <Button onClick={this.handleCreateModal}> New item </Button>\n                  <Row>\n                    { items.map((item, index) => \n                      <AppNavbar \n                        key={index} \n                        editItem={this.handleShowModal}\n                        deleteCat={this.handleDeleteItem}\n                      >\n                        {item}\n                      </AppNavbar>\n                    )}\n                  </Row>\n                  { createModal ? \n                  <ItemModal\n                    modal={createModal} \n                    toggleModal={this.handleCreateModal}\n                    addItem={this.handleCreateItem}\n                  /> : null }\n                {\n                  editModal ? \n                  <ItemsEdit\n                    modal={editModal}\n                    catEdit={catEdit}\n                    toggleModal={this.handleEditModal}\n                    editItem={this.handleEditCat}\n                  />  : null }\n                </Container>\n            );\n        }\n    }\n    \n    \n    \n //App.js\n import ShoppingList from './components/shoppingList';\n\nclass App extends Component {\n    render() {\n      return (\n        <Router>\n          <Route exact path=\"/\" component={ShoppingList} />\n        </Router>\n      );\n    }\n  }\n\nexport default App;`.trim();\n\n\nclass MernReactCurd extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Components</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={components}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(MernReactCurd));\n"],"sourceRoot":""}