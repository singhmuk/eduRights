{"version":3,"sources":["components/ReactJs/prismCode.js","components/mern/sidebar.js","components/mern/projects/pagination.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","Search","HeaderAuth","SortApi","SortStatic","Post","Paginations","MainComp","Pagination","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/172.86d119dc.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/setUpFiles' className={classes.line}>SetUp</Link></MenuItem>\n        <MenuItem><Link to='/javaScript' className={classes.line}>JavaScript</Link></MenuItem>\n        <MenuItem><Link to='/reactCurdMern' className={classes.line}>Mern React</Link></MenuItem>\n        <MenuItem><Link to='/4_reactCurdHooks' className={classes.line}>Mern React Hooks</Link></MenuItem>\n        <MenuItem><Link to='/pagination' className={classes.line}>Sea Sort Pagi Auth_Token</Link></MenuItem>\n        <MenuItem><Link to='/propsModel' className={classes.line}>SS pagination-Captcha</Link></MenuItem>\n        <MenuItem><Link to='/imageGallery' className={classes.line}>ImageGallery</Link></MenuItem>\n        <MenuItem><Link to='/stripes' className={classes.line}>Stripes-Signin with gfb</Link></MenuItem>\n        <MenuItem><Link to='/paginationsMern' className={classes.line}>Paginations-push_notifis</Link></MenuItem>\n        <MenuItem><Link to='/googleMap' className={classes.line}>GoogleMap</Link></MenuItem>\n        <MenuItem><Link to='/videoChat' className={classes.line}>VideoChat</Link></MenuItem>\n        <MenuItem><Link to='/qrSccaners' className={classes.line}>QrCode-reCapcha</Link></MenuItem>\n        <MenuItem><Link to='/react_share' className={classes.line}>Share-Stripe</Link></MenuItem>\n        <MenuItem><Link to='/socialSignUp' className={classes.line}>SocialSignUp</Link></MenuItem>\n        <MenuItem><Link to='/mernSocial' className={classes.line}>MernSocial</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst Search = `class SearchApi extends Component {\n  state = {\n    items: []\n  }\n\nsearch=(key)=>{\n  let url=\"http://localhost:5000/items?q=\";\n  axios.get(url + key)\n       .then(res => {\n         const items = res.data;\n         this.setState({ items })\n       })\n}\ncomponentDidMount(){\n  this.search()\n}\n\nrender(){\n  return(\n    <div>\n      <input type = \"text\" onChange = {(e) => this.search(e.target.value)} />\n      {this.state.items ? \n      <div>\n        {this.state.items.map((data, id) => (\n          <li key={id}>{data._id} - {data.name}</li>\n        ))}\n      </div>  \n      : ''\n        }\n    </div>\n    )\n  }\n}`.trim()\n\nconst HeaderAuth = `\nclass ApiAuthentication extends Component {\n  state = {\n    items: []\n  }\n\nsearch=(key)=>{\n  let url=\"http://localhost:5000/items?q=\";\n  const auth = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2I0NGI1ZjNiZTY2YTQ1MTdmM\n                jk2ODciLCJyb2xlSWQiOiI1YjA2NjMzNTVmYTMwZDY4Y2VkNmRkODgiLCJlbWFpbCI6InZpa2FzaEB5b3BtYWls\"\n\n  axios.get(url, {\n    \"headers\": { \"Authorization\":\"bearer \"+ auth ,\n      \"Access-Control-Allow-Headers\": \"*\",\n      \"content-type\": \"application/json\",\n      \"Accept\": \"*\"\n      }\n    })\n       .then(res => {\n         const items = res.data;\n         this.setState({ items })\n       })\n       .catch(error => {\n        throw(error);\n      });\n}\ncomponentDidMount(){\n  this.search()\n}\n\nrender(){\n  return(\n    <div>\n      <input type = \"text\" onChange = {(e) => this.search(e.target.value)} />\n      {this.state.items ? \n      <div>\n        {this.state.items.map((data, id) => (\n          <li key={id}>{data._id} - {data.name}</li>\n        ))}\n      </div>  \n      : ''\n        }\n    </div>\n    )\n  }\n}`.trim()\n\nconst SortApi = `\nconst Row = ({id, title, priority, type, complete}) => (\n  <div className=\"row\">\n    <div>{id}</div>\n    <div>{title}</div>\n    <div>{priority}</div>\n    <div>{type}</div>    \n    <div>{complete}</div>    \n  </div>\n);\n\n\n\nclass SortCompo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n    \n    this.compareBy.bind(this);\n    this.sortBy.bind(this);\n  }\n  \n  search=(key)=>{\n    let url=\"http://localhost:5000/items\";\n    axios.get(url)\n         .then(res => {\n           const items = res.data;\n           this.setState({ items })\n         })\n  }\n  componentDidMount(){\n    this.search()\n  }\n  \n  compareBy(key) {\n    return function (a, b) {\n      if (a[key] < b[key]) return -1;\n      if (a[key] > b[key]) return 1;\n      return 0;\n    };\n  }\n \n  sortBy(key) {\n    let arrayCopy = [...this.state.items];\n    arrayCopy.sort(this.compareBy(key));\n    this.setState({data: arrayCopy});\n  }\n    \n  render() {\n    const rows =  this.state.items.map((data, id) => (\n      <li key={id}>{data._id} - {data.name}</li>\n    ))\n\n    return (\n      <div className=\"table\">\n        <div className=\"header\">\n          <div onClick={() => this.sortBy('id')} >ID</div>\n          <div onClick={() => this.sortBy('title')}>Title</div>\n          <div onClick={() => this.sortBy('priority')}>Priority</div>\n          <div onClick={() => this.sortBy('type')}>Issue Type</div>\n          <div onClick={() => this.sortBy('complete')}>% Complete</div>\n        </div>\n        <div className=\"body\">\n          {rows}\n        </div>\n      </div>\n    );\n  }\n}\n`.trim()\n\nconst SortStatic = `const Row = ({id, title, priority, type, complete}) => (\n  <div className=\"row\">\n    <div>{id}</div>\n    <div>{title}</div>\n    <div>{priority}</div>\n    <div>{type}</div>    \n    <div>{complete}</div>    \n  </div>\n);\n\n\nclass SortDemo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [\n        {id: 403, title: 'Task 403', priority: 'High', type: 'Improvement', complete: 100}, \n        {id: 532, title: 'Task 532', priority: 'Medium', type: 'Improvement', complete: 30}, \n        {id: 240, title: 'Task 240', priority: 'High', type: 'Story', complete: 66},\n      ],\n    };\n    \n    this.compareBy.bind(this);\n    this.sortBy.bind(this);\n  }\n  \n  compareBy(key) {\n    return function (a, b) {\n      if (a[key] < b[key]) return -1;\n      if (a[key] > b[key]) return 1;\n      return 0;\n    };\n  }\n \n  sortBy(key) {\n    let arrayCopy = [...this.state.data];\n    arrayCopy.sort(this.compareBy(key));\n    this.setState({data: arrayCopy});\n  }\n    \n  render() {\n    const rows = this.state.data.map( (rowData) => <Row {...rowData} />);\n\n    return (\n      <div className=\"table\">\n        <div className=\"header\">\n          <div onClick={() => this.sortBy('id')} >ID</div>\n          <div onClick={() => this.sortBy('title')}>Title</div>\n          <div onClick={() => this.sortBy('priority')}>Priority</div>\n          <div onClick={() => this.sortBy('type')}>Issue Type</div>\n          <div onClick={() => this.sortBy('complete')}>% Complete</div>\n        </div>\n        <div className=\"body\">\n          {rows}\n        </div>\n      </div>\n    );\n  }\n}`.trim()\n\nconst Post = `const Posts = ({ posts, loading }) => {\n  if (loading) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <ul className='list-group mb-4'>\n      {posts.map(post => (\n        <li key={post._id} className='list-group-item'>\n          {post._id} - {post.name}\n        </li>\n      ))}\n    </ul>\n  );\n};`.trim()\n\nconst Paginations = `const Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className='pagination'>\n        {pageNumbers.map(number => (\n          <li key={number} className='page-item'>\n            <a onClick={() => paginate(number)} href='!#' className='page-link'>\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;`.trim()\n\nconst MainComp = `\nconst MainComp = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get('http://localhost:5000/items');\n      setPosts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []);\n\n  // Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return (\n    <div className='container mt-5'>\n      <h1 className='text-primary mb-3'>My Blog</h1>\n      <Posts posts={currentPosts} loading={loading} />\n      <Pagination\n        postsPerPage={postsPerPage}\n        totalPosts={posts.length}\n        paginate={paginate}\n      />\n    </div>\n  );\n};\n`.trim()\n\n\nclass Pagination extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <b>Search API</b>\n              <br />\n              Search.js\n              <div style={titles}>\n                <PrismCode\n                  code={Search}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>Token Authorization</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={HeaderAuth}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>Sort Api</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={SortApi}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>Sort Static</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={SortStatic}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>Pagination</b>\n              <br />\n              post.js<br />\n              <div style={titles}>\n                <PrismCode\n                  code={Post}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              Pagination.js<br />\n              <div style={titles}>\n                <PrismCode\n                  code={Paginations}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              MainComp.js<br />\n              <div style={titles}>\n                <PrismCode\n                  code={MainComp}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Pagination));\n"],"sourceRoot":""}