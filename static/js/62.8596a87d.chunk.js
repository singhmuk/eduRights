(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[62],{140:function(e,a,n){"use strict";n.d(a,"a",(function(){return p}));var t=n(45),r=n(28),l=n(136),i=n(137),c=n(139),s=n(0),m=n.n(s),o=n(138),u=n.n(o),p=(n(59),function(e){function a(e){var n;return Object(t.a)(this,a),(n=Object(l.a)(this,Object(i.a)(a).call(this,e))).highlight=function(){n.ref&&n.ref.current&&u.a.highlightElement(n.ref.current)},n.ref=m.a.createRef(),n}return Object(c.a)(a,e),Object(r.a)(a,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,a=e.code,n=(e.plugins,e.language);return m.a.createElement("pre",{className:"code-prism"},m.a.createElement("code",{ref:this.ref,className:"language-".concat(n)},a.trim()))}}]),a}(m.a.Component))},141:function(e,a,n){},146:function(e,a,n){"use strict";n.d(a,"a",(function(){return o}));var t=n(0),r=n.n(t),l=n(26),i=n(297),c=n(295),s=n(114),m=Object(s.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function o(){var e=m();return r.a.createElement("div",{className:e.root},r.a.createElement(c.a,null,r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/infoMl",className:e.line},"InfoMl")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/gredient_decents",className:e.line},"Gredient Decents")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/training",className:e.line},"Traning")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/regularizations",className:e.line},"Regularizations")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/featuresEng",className:e.line},"FeaturesEng")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/adaboost",className:e.line},"Adaboots")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/greedSearch",className:e.line},"Greed Search")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/perceptron",className:e.line},"Perceptron")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/pcaPy",className:e.line},"PCA")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/leanearRegression",className:e.line},"Leanear Regression")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/logisticReg",className:e.line},"Logistic Regression")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/lda",className:e.line},"Lda")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/knn",className:e.line},"Knn")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/k_meanClustring",className:e.line},"K_Mean")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/naiveBar",className:e.line},"Naive Bayes")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/randomForest",className:e.line},"Random Forest")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/decisiontree",className:e.line},"Decision Tree")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/svmPy",className:e.line},"SVM")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/numpyPy",className:e.line},"Numpy")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/pandas",className:e.line},"Pandas")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/bagging",className:e.line},"Matplotlib")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/logisticRegrations",className:e.line},"Scikit Learn")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/regrations",className:e.line},"SciPy")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/libraries",className:e.line},"OpenCV")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/capture",className:e.line},"Capture")),r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/joinImages",className:e.line},"JoinImages")),r.a.createElement("br",null),"Deep Learning",r.a.createElement(i.a,null,r.a.createElement(l.b,{to:"/superwise",className:e.line},"Superwise"))),r.a.createElement("div",null))}},231:function(e,a,n){e.exports=n.p+"static/media/array_vs_list.2cd57325.png"},511:function(e,a,n){"use strict";n.r(a);var t=n(45),r=n(28),l=n(136),i=n(137),c=n(139),s=n(0),m=n.n(s),o=n(138),u=n.n(o),p=n(120),E=n(57),d=n(296),y=n(5),b=(n(141),n(146)),h=n(140),g=n(231),f=n.n(g),x={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},v={height:200,width:500},N="\narr = np.array(42)                                                                      #0-D arrays, or Scalars.\narr = np.array([1, 2, 3, 4, 5])                                                         #1-D Arrays\narr = np.array([[1, 2, 3], [4, 5, 6]])                                                  #2-D Arrays\narr = np.array([[[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [4, 5, 6]]])                        #3-D arrays\narr2 = np.array([[[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [4, 5, 6]]], dtype=np.float64)\narr3 = np.array([[[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [4, 5, 6]]], dtype=complex)\narrStr = np.array([1, 2, 3, 4], dtype='S')                                              #Creating Arrays With a Data String.\narrFloat = np.array([1.1, 2.1, 3.1])\n".trim(),w="\narr = np.array([1, 2, 3, 6, 7, 8, 9, 0])\narrs = np.array([[[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [4, 5, 6]]])\narr2 = np.array([[[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [4, 5, 6]]], dtype=np.float64)\narr3 = np.array([[[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [4, 5, 6]]], dtype=complex)\narr4 = np.array([[1,2],[3,4],[5,6]])\narrStr = np.array([1, 2, 3, 4], dtype='S')                             #array with data type string\narrFloat = np.array([1.1, 2.1, 3.1])\n\n\nx = arr[0]\nx = arr[0, 1]\nx = arr[1:5:2]                                                          #[start:end:step]\nx = arr.dtype\nx = arrFloat.astype(int)                                                #Change data type from float to integer\nx = arrFloat.astype(bool)                                               #float to boolean\n\n\nx = arr.ndim\nx = arr.itemsize                                                        # itemsize is 4 bytes\nx = arr.size                                                            # total bunber of elements\nx = arr.shape                                                           \nx = arr4.reshape(2,3)                                                   # information of dimension\nx = arr4.ravel()\nx = arr4.min() \nx = arr4.max() \nx = arr4.sum()  \nx = arr.sum(axis=0)\n\nnewarr = np.concatenate((arr, arr2), axis=1)                            #join array\nnewarr = np.stack((arr, arr2), axis=1)                                  #join array using stack\nnewarr = np.hstack((arr, arr2))                                         #join array along rows\nnewarr = np.vstack((arr, arr2))                                         #join array along colom\n\nnewarr = np.array_split(arr, 3, axis=0)                                #Splitting breaks one array into multiple.\nx = np.where(arr == 7)                                                 #Find the indexes where the value is 7.\nx = np.searchsorted(arr, 7)\nx = np.sort(arr)\n\nx = np.sqrt(arr)  \nx = np.std(arr)                                                         #standard deviation\nx = arr + arr2  \nx = arr.dot(arr4) \n".trim(),k="\nx = np.zeros((3,4))\nx = np.ones((3,4))\nx = np.arange(1, 5, 2)                                                  # 2 steps\nx = np.linspace(1, 5, 50)                                               # start, stop, num\n\nprint(x)\n".trim(),j="import numpy as np\nar = np.array([1, 3, 2, 4, 5, 6])\nprint(ar.argsort()[-3:][::-1])\n".trim(),D="\n#Copy\narr = np.array([1, 2, 3])\narrCopy = arr.copy()\narr[0] = 42\n\nprint(arr)\nprint(arrCopy)\n\n\n#View\narr = np.array([1, 2, 3])\narrView = arr.view()\narr[0] = 42\n\nprint(arr)\nprint(arrView)\n".trim(),S="\narr = np.array([[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]])\n\nfor x in arr:\n  print(x)\n".trim(),P=function(e){function a(){return Object(t.a)(this,a),Object(l.a)(this,Object(i.a)(a).apply(this,arguments))}return Object(c.a)(a,e),Object(r.a)(a,[{key:"componentDidMount",value:function(){setTimeout((function(){return u.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return m.a.createElement(p.a,{container:!0},m.a.createElement(p.a,{item:!0,xs:2},m.a.createElement(E.a,{className:e.paper},m.a.createElement("h4",null,m.a.createElement(b.a,null)))),m.a.createElement(p.a,{item:!0,xs:10},m.a.createElement(E.a,{className:e.paper},m.a.createElement(d.a,null,m.a.createElement("h3",null,"Different forms of data"),m.a.createElement("ul",null,m.a.createElement("li",null,"Tabular/ spreadsheet-like data in which each column may be a different type (string, numeric, date, etc). "),m.a.createElement("li",null,"Multiple tables of data interrelated by key columns (primary/ foreign keys for a SQL user).")),m.a.createElement("b",null,"A large percentage of datasets can be transformed into a structured form that is more suitable for analysis and modeling."),m.a.createElement("br",null),m.a.createElement("h3",null,"NumPy"),"Benifits of numpy over python list.",m.a.createElement("ul",null,m.a.createElement("li",null,"Fast."),m.a.createElement("li",null,"Less Memory."),m.a.createElement("li",null,"NumPy create a N-dimensional array in python."),m.a.createElement("li",null,"Used for working with arrays."),m.a.createElement("li",null,"It also has functions for working in domain of linear algebra, fourier transform, and matrices."),m.a.createElement("li",null,"NumPy aims to provide an array object that is up to 50x faster than traditional Python lists."),m.a.createElement("li",null,"NumPy Data Types is Objects"),m.a.createElement("li",null,"It internally stores data in a contiguous block of memory, independent of other built-in Python objects.")),m.a.createElement("br",null),m.a.createElement("img",{src:f.a,alt:"gradient",className:"responsive",style:v}),m.a.createElement("br",null),m.a.createElement("h3",null,"Data Types"),m.a.createElement("ul",null,m.a.createElement("li",null,m.a.createElement("b",null,"i: "),"integer"),m.a.createElement("li",null,m.a.createElement("b",null,"b: "),"boolean"),m.a.createElement("li",null,m.a.createElement("b",null,"u: "),"unsigned integer"),m.a.createElement("li",null,m.a.createElement("b",null,"f: "),"float"),m.a.createElement("li",null,m.a.createElement("b",null,"c: "),"complex float"),m.a.createElement("li",null,m.a.createElement("b",null,"m: "),"timedelta"),m.a.createElement("li",null,m.a.createElement("b",null,"M: "),"datetime"),m.a.createElement("li",null,m.a.createElement("b",null,"O: "),"object"),m.a.createElement("li",null,m.a.createElement("b",null,"S: "),"string"),m.a.createElement("li",null,m.a.createElement("b",null,"U: "),"unicode string"),m.a.createElement("li",null,m.a.createElement("b",null,"V: "),"fixed chunk of memory for other type ( void )")),m.a.createElement("br",null),m.a.createElement("h3",null,"Create a NumPy ndarray Object"),m.a.createElement("ul",null,m.a.createElement("li",null,"The array object in NumPy is called ndarray."),m.a.createElement("li",null,"An array can have any number of dimensions."),m.a.createElement("li",null,"When the array is created, you can define the number of dimensions by using the ndmin argument."),m.a.createElement("b",null,"arr = np.array([1, 2, 3, 4], ndmin=5)")),m.a.createElement("br",null),m.a.createElement("div",{style:x},m.a.createElement(h.a,{code:N,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"zeros"),m.a.createElement("div",{style:x},m.a.createElement(h.a,{code:k,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("br",null),m.a.createElement("b",null,"Write a code to get the indices of N maximum values from a NumPy array."),m.a.createElement("div",{style:x},m.a.createElement(h.a,{code:j,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"The Difference Between Copy and View"),"Copy is a new array, and the view is just a view of the original array.",m.a.createElement("div",{style:x},m.a.createElement(h.a,{code:D,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"Iterating"),m.a.createElement("div",{style:x},m.a.createElement(h.a,{code:S,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("br",null),m.a.createElement("b",null,"Functions:"),m.a.createElement("ul",null,m.a.createElement("li",null,m.a.createElement("b",null,"ndim: "),"Return how many dimensions the array have."),m.a.createElement("li",null,m.a.createElement("b",null,"ravel(): "),"Used to change a 2-dimensional array or a multi-dimensional array into a contiguous flattened array (1D array with all the input-array elements and with the same type as it. ravel() return new array."),m.a.createElement("li",null,m.a.createElement("b",null,"arr.reshape(4, 3): "),"Reshape From 1-D to 2-D."),m.a.createElement("li",null,m.a.createElement("b",null,"arr[0]: "),"Array indexing to access an array element."),m.a.createElement("li",null,m.a.createElement("b",null,"dtype: "),"Returns the data type of the array."),m.a.createElement("li",null,m.a.createElement("b",null,"arr.shape: "),"Returns a tuple with each index having the number of corresponding elements."),m.a.createElement("li",null,m.a.createElement("b",null,"Stack: "),"Stacking is same as concatenation, the only difference is that stacking is done along a new axis."),m.a.createElement("li",null,m.a.createElement("b",null,"np.hstack((arr1, arr2)): "),"To stack along rows."),m.a.createElement("li",null,m.a.createElement("b",null,"np.vstack((arr1, arr2)): "),"To stack along columns."),m.a.createElement("li",null,m.a.createElement("b",null,"np.dstack((arr1, arr2)): "),"To stack along height, which is the same as depth."),m.a.createElement("li",null,m.a.createElement("b",null,"np.where(arr == 4): "),"Search an array for a certain value, and return the indexes that get a match."),m.a.createElement("li",null,m.a.createElement("b",null,"np.searchsorted(arr, 7, side='right'): "),"Performs a binary search in the array, and returns the index where the specified value would be inserted to maintain the search order."),m.a.createElement("li",null,m.a.createElement("b",null,"np.linspace(1, 5, 50): "),"Is Linear list space. Returns evenly separated values over a specified period. The system implicitly calculates the step size.")),m.a.createElement("br",null),m.a.createElement("div",{style:x},m.a.createElement(h.a,{code:w,language:"js",plugins:["line-numbers"]}))))))}}]),a}(s.Component);a.default=Object(y.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(P)}}]);
//# sourceMappingURL=62.8596a87d.chunk.js.map