(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[203],{140:function(e,l,n){"use strict";n.d(l,"a",(function(){return o}));var t=n(45),a=n(28),r=n(136),E=n(137),c=n(139),i=n(0),s=n.n(i),m=n(138),u=n.n(m),o=(n(59),function(e){function l(e){var n;return Object(t.a)(this,l),(n=Object(r.a)(this,Object(E.a)(l).call(this,e))).highlight=function(){n.ref&&n.ref.current&&u.a.highlightElement(n.ref.current)},n.ref=s.a.createRef(),n}return Object(c.a)(l,e),Object(a.a)(l,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,l=e.code,n=(e.plugins,e.language);return s.a.createElement("pre",{className:"code-prism"},s.a.createElement("code",{ref:this.ref,className:"language-".concat(n)},l.trim()))}}]),l}(s.a.Component))},141:function(e,l,n){},155:function(e,l,n){"use strict";n.d(l,"a",(function(){return m}));var t=n(0),a=n.n(t),r=n(26),E=n(297),c=n(295),i=n(114),s=Object(i.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function m(){var e=s();return a.a.createElement("div",{className:e.root},a.a.createElement(c.a,null,a.a.createElement(E.a,null,a.a.createElement(r.b,{to:"/infoMD",className:e.line},"IntroMD")),a.a.createElement(E.a,null,a.a.createElement(r.b,{to:"/intro",className:e.line},"Queries")),a.a.createElement(E.a,null,a.a.createElement(r.b,{to:"/mongodbMethods",className:e.line},"mongodbMethods")),a.a.createElement(E.a,null,a.a.createElement(r.b,{to:"/mongoCurd",className:e.line},"MongoCurd-Ref")),a.a.createElement(E.a,null,a.a.createElement(r.b,{to:"/mongoQueries",className:e.line},"Mongo Queries")),a.a.createElement(E.a,null,a.a.createElement(r.b,{to:"/searchErrorHandling",className:e.line},"searchErrorHandling")),a.a.createElement(E.a,null,a.a.createElement(r.b,{to:"/bulkRight",className:e.line},"BulkWright")),a.a.createElement(E.a,null,a.a.createElement(r.b,{to:"/mysql",className:e.line},"Mysql")),a.a.createElement(E.a,null,a.a.createElement(r.b,{to:"/mysqlCurd",className:e.line},"MysqlCurd")),a.a.createElement(E.a,null,a.a.createElement(r.b,{to:"/joinOp",className:e.line},"JoinOp")),a.a.createElement(E.a,null,a.a.createElement(r.b,{to:"/sortOp",className:e.line},"Sort")),a.a.createElement(E.a,null,a.a.createElement(r.b,{to:"/curdOp",className:e.line},"CurdOp")),a.a.createElement(E.a,null,a.a.createElement(r.b,{to:"/gridFs",className:e.line},"gridFs")),a.a.createElement(E.a,null,a.a.createElement(r.b,{to:"/postgressql",className:e.line},"PostgreSql"))),a.a.createElement("div",null))}},395:function(e,l,n){"use strict";n.r(l);var t=n(45),a=n(28),r=n(136),E=n(137),c=n(139),i=n(0),s=n.n(i),m=n(138),u=n.n(m),o=n(120),d=n(57),h=n(296),T=n(5),b=(n(141),n(155)),A=n(140),N={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},L="\nshow databases;\nshow tables;\n\nDROP DATABASE Persons;\nDROP TABLE Persons;\nDROP TABLE IF EXISTS Persons;\n\nCREATE DATABASE Persons;\nuse Persons;\n\nCREATE TABLE Users (\n    ID int NOT NULL AUTO_INCREMENT,\n    FirstName varchar(255) NOT NULL,\n    LastName varchar(255),\n    Address varchar(255),\n    City varchar(255) DEFAULT 'Sandnes',\n    OrderDate datetime default CURRENT_TIMESTAMP,\n    Age int,\n    CHECK (Age>=18),\n    UNIQUE (ID),\n    PRIMARY KEY (ID)\n);\n\nselect * from Users;\nINSERT INTO Users (FirstName, LastName, Address, City, OrderDate, Age) \nVALUES ('Ritesh', 'Singh', 'Skagen21', 'Stavanger', '2008-11-11', 20);\n\n//insert multiple\nINSERT INTO City ('id', 'name', 'Percentage') VALUES (1, 'Archer', 6),\n(2, 'Lana', 5),\n(3, 'Cheryl', 4),\n(4, 'Mallory', 3),\n(5, 'Krieger', 2),\n(6, 'Barry', 1);\n\n\nUpdate Users set FirstName='Rakesh' where ID=1;\nDELETE FROM Users where ID=1;\n\nCREATE TABLE newUsers AS SELECT FirstName, Address FROM Users;\n".trim(),R="\nCREATE TABLE TestTable AS\nSELECT customername, contactname FROM customers(existing_table_name);\n".trim(),C="\nCREATE TABLE Persons (\n    ID int NOT NULL,\n    LastName varchar(255) NOT NULL,\n    FirstName varchar(255) NOT NULL,\n    Age int\n);\n".trim(),g="\nCREATE TABLE Persons (\n  ID int NOT NULL,\n  LastName varchar(255) NOT NULL,\n  FirstName varchar(255),\n  Age int,\n  UNIQUE (ID)\n);\n\nTo define a UNIQUE constraint on multiple columns.\nCREATE TABLE Persons (\n    ID int NOT NULL,\n    LastName varchar(255) NOT NULL,\n    Age int,\nCONSTRAINT UC_Person UNIQUE (ID,LastName));\n".trim(),O="\nCREATE TABLE Persons (\n  ID int NOT NULL,\n  LastName varchar(255) NOT NULL,\n  FirstName varchar(255),\n  Age int,\n  PRIMARY KEY (ID)\n);\n\n\nTo allow naming of a PRIMARY KEY constraint, and for defining a PRIMARY KEY constraint on multiple columns.\nCREATE TABLE Persons (\n    ID int NOT NULL,\n    LastName varchar(255) NOT NULL,\n    FirstName varchar(255),\n    Age int,\n    CONSTRAINT PK_Person PRIMARY KEY (ID,LastName)\n);\n".trim(),I="\nCREATE TABLE Orders (\n  OrderID int NOT NULL,\n  OrderNumber int NOT NULL,\n  PersonID int,\n  PRIMARY KEY (OrderID),\n  FOREIGN KEY (PersonID) REFERENCES Persons(PersonID)\n);\n\n\nTo allow naming of a FOREIGN KEY constraint, and for defining a FOREIGN KEY constraint on multiple columns.\nCREATE TABLE Orders (\n  OrderID int NOT NULL,\n  OrderNumber int NOT NULL,\n  PersonID int,\n  PRIMARY KEY (OrderID),\n  CONSTRAINT FK_PersonOrder FOREIGN KEY (PersonID)\n  REFERENCES Persons(PersonID)\n);\n".trim(),f="\nCREATE TABLE Persons (\n  ID int NOT NULL,\n  LastName varchar(255) NOT NULL,\n  FirstName varchar(255),\n  Age int,\n  CHECK (Age>=18)\n);\n\n\nTo allow naming of a CHECK constraint, and for defining a CHECK constraint on multiple columns.\nCREATE TABLE Persons (\n  ID int NOT NULL,\n  LastName varchar(255) NOT NULL,\n  FirstName varchar(255),\n  Age int,\n  City varchar(255),\n  CONSTRAINT CHK_Person CHECK (Age>=18 AND City='Sandnes')\n);\n".trim(),S="\nCREATE TABLE Persons (\n  ID int NOT NULL,\n  LastName varchar(255) NOT NULL,\n  FirstName varchar(255),\n  Age int,\n  City varchar(255) DEFAULT 'Sandnes'\n);\n\n\nThe DEFAULT constraint can also be used to insert system values, by using functions like CURRENT_DATE():\nCREATE TABLE Orders (\n  ID int NOT NULL,\n  OrderNumber int NOT NULL,\n  OrderDate date DEFAULT CURRENT_DATE()\n);\n".trim(),y="\nCREATE TABLE Persons (\n  Personid int NOT NULL AUTO_INCREMENT,\n  LastName varchar(255) NOT NULL,\n  FirstName varchar(255),\n  Age int,\n  PRIMARY KEY (Personid)\n);\n\n\nWhen we insert a new record into the \"Persons\" table, we do NOT have to specify a value for the \"Personid\" column \n(a unique value will be added automatically):\nINSERT INTO Persons (FirstName,LastName) VALUES ('Lars','Monsen');\n".trim(),P="\nCREATE VIEW [Brazil Customers] AS\nSELECT CustomerName, ContactName\nFROM Customers\nWHERE Country = 'Brazil';\n\nWe can query the view above as follows:\nSELECT * FROM [Brazil Customers];\n\n\nThe following SQL creates a view that selects every product in the \"Products\" table with a price higher than the \naverage price:\nCREATE VIEW [Products Above Average Price] AS\nSELECT ProductName, Price FROM Products\nWHERE Price > (SELECT AVG(Price) FROM Products);\n\nWe can query the view above as follows:\nSELECT * FROM [Products Above Average Price];\n".trim(),D="\nCREATE OR REPLACE VIEW [Brazil Customers] AS\nSELECT CustomerName, ContactName, City\nFROM Customers WHERE Country = 'Brazil';\n".trim(),U="\nSELECT *, CASE WHEN Age<30 THEN 'Age is less than 30' WHEN Age > 30\n      THEN 'Age is greater than 30'\n      WHEN Age=10 THEN 'Age is equal to 10'\n      ELSE 'somewrong'\n      END AS result FROM Users;\n".trim(),p='\nSelect id, name, Percentage, if(Percentage >= 33, "Pass", "Fail") as Result from Student;\n\n//CASE\nSelect id, name, Percentage, \nCASE \n    When Percentage >=80 and Percentage <= 100 Then "Merit"\n    When Percentage >=60 and Percentage < 80 Then "1st Devision"\n    When Percentage >=45 and Percentage < 60 Then "2nd Devision"\n    When Percentage >=33 and Percentage < 45 Then "3rd Devision"\n    When Percentage < 33 Then "Fail"\n    Else "Not Correct %"\nEnd as  Grade from Student;\n\n\n//Multiple Updates\nUpdate Student Set Percentage = (CASE id \n    When 3 then 39 \n    When 4 then 70 \nEnd)\n'.trim(),v=function(e){function l(){return Object(t.a)(this,l),Object(r.a)(this,Object(E.a)(l).apply(this,arguments))}return Object(c.a)(l,e),Object(a.a)(l,[{key:"componentDidMount",value:function(){setTimeout((function(){return u.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return s.a.createElement(o.a,{container:!0},s.a.createElement(o.a,{item:!0,xs:2},s.a.createElement(d.a,{className:e.paper},s.a.createElement("h4",null,s.a.createElement(b.a,null)))),s.a.createElement(o.a,{item:!0,xs:10},s.a.createElement(d.a,{className:e.paper},s.a.createElement(h.a,null,s.a.createElement("b",null,"Database"),s.a.createElement("div",{style:N},s.a.createElement(A.a,{code:L,language:"js",plugins:["line-numbers"]})),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("ul",null,s.a.createElement("li",null,s.a.createElement("b",null,"Set limit during select: "),"SELECT * FROM Users LIMIT 2;"),s.a.createElement("li",null,s.a.createElement("b",null,"Sort table data in descending order: "),"SELECT * FROM Users ORDER BY id DESC;"),s.a.createElement("li",null,s.a.createElement("b",null,": "),"SELECT * FROM Users ORDER BY id ASC;"),s.a.createElement("li",null,s.a.createElement("b",null,"Display last row data: "),"SELECT * FROM Users ORDER BY id DESC LIMIT 1;"),s.a.createElement("li",null,s.a.createElement("b",null,"Add column data: "),"SELECT Sum(Age) FROM Admin;"),s.a.createElement("li",null,s.a.createElement("b",null,"How to count column data: "),"SELECT COUNT(Age) FROM Admin;"),s.a.createElement("li",null,s.a.createElement("b",null,"Count duplication data sorting: "),"SELECT COUNT(DISTINCT FirstName) FROM Users;"),s.a.createElement("li",null,s.a.createElement("b",null,"IN: "),"SELECT * FROM Admin WHERE Age IN (20,30);"),s.a.createElement("li",null,s.a.createElement("b",null,"LIKE: "),"SELECT * FROM Users WHERE FirstName LIKE 'm%';"),s.a.createElement("li",null,s.a.createElement("b",null,": "),"SELECT LastName, MIN(Age) from Admin;"),s.a.createElement("li",null,s.a.createElement("b",null,": "),"SELECT LastName, MAX(Age) from Admin;"),s.a.createElement("li",null,s.a.createElement("b",null,"Combined each other: "),"SELECT CONCAT('FirstName','City','OrderDate') AS permanent_address FROM Users;")),s.a.createElement("br",null),s.a.createElement("h3",null,"Create Table Using Another Table"),s.a.createElement("ul",null,s.a.createElement("li",null,"The TRUNCATE TABLE delete the data inside a table, but not the table itself."),s.a.createElement("ul",null,s.a.createElement("li",null,"TRUNCATE TABLE table_name;")),s.a.createElement("br",null),s.a.createElement("li",null,"Delete a row."),s.a.createElement("ul",null,s.a.createElement("li",null,"delete from test where age=10;"))),s.a.createElement("br",null),s.a.createElement("div",{style:N},s.a.createElement(A.a,{code:R,language:"js",plugins:["line-numbers"]})),s.a.createElement("br",null),s.a.createElement("h3",null,"ALTER TABLE Statement"),"The ALTER TABLE statement is used to add, delete, or modify columns in an existing table. Also used to add and drop various constraints on an existing table.",s.a.createElement("br",null),s.a.createElement("ul",null,s.a.createElement("li",null,"To add a column in a table."),s.a.createElement("ul",null,s.a.createElement("li",null,"ALTER TABLE Customers ADD Email varchar(255);")),s.a.createElement("br",null),s.a.createElement("li",null,"To delete a column in a table."),s.a.createElement("ul",null,s.a.createElement("li",null,"ALTER TABLE Customers DROP COLUMN Email;")),s.a.createElement("br",null),s.a.createElement("li",null,"To change the data type of a column in a table."),s.a.createElement("ul",null,s.a.createElement("li",null,"Alter table person modify column current year;"))),s.a.createElement("br",null),s.a.createElement("h3",null,"MySQL Constraints"),s.a.createElement("p",null,"SQL constraints are used to specify rules for data in a table."),s.a.createElement("ul",null,s.a.createElement("li",null,"Constraints can be specified when the table is created with the CREATE TABLE statement, or after the table is created with the ALTER TABLE statement."),s.a.createElement("li",null,"Constraints are used to limit the type of data that can go into a table. This ensures the accuracy and reliability of the data in the table. If there is any violation between the constraint and the data action, the action is aborted."),s.a.createElement("li",null,"Constraints can be column level or table level. Column level constraints apply to a column, and table level constraints apply to the whole table.")),s.a.createElement("br",null),s.a.createElement("br",null),"The following constraints are commonly used in SQL:",s.a.createElement("ul",null,s.a.createElement("li",null,s.a.createElement("b",null,"NOT NULL: "),"Ensures that a column cannot have a NULL value"),s.a.createElement("li",null,s.a.createElement("b",null,"UNIQUE: "),"Ensures that all values in a column are different"),s.a.createElement("li",null,s.a.createElement("b",null,"PRIMARY KEY: "),"A combination of a NOT NULL and UNIQUE. Uniquely identifies each row in a table"),s.a.createElement("li",null,s.a.createElement("b",null,"FOREIGN KEY: "),"Prevents actions that would destroy links between tables"),s.a.createElement("li",null,s.a.createElement("b",null,"CHECK: "),"Ensures that the values in a column satisfies a specific condition"),s.a.createElement("li",null,s.a.createElement("b",null,"DEFAULT: "),"Sets a default value for a column if no value is specified"),s.a.createElement("li",null,s.a.createElement("b",null,"CREATE INDEX: "),"Used to create and retrieve data from the database very quickly."),s.a.createElement("br",null),s.a.createElement("li",null,s.a.createElement("b",null,"NOT NULL: "),"By default, a column can hold NULL values."),s.a.createElement("ul",null,s.a.createElement("li",null,"ALTER TABLE person add column country varchar(32) not null;"))),s.a.createElement("br",null),s.a.createElement("b",null,"NOT NULL on CREATE TABLE"),s.a.createElement("div",{style:N},s.a.createElement(A.a,{code:C,language:"js",plugins:["line-numbers"]})),s.a.createElement("br",null),s.a.createElement("h3",null,"UNIQUE "),s.a.createElement("ul",null,s.a.createElement("li",null,"Both the UNIQUE and PRIMARY KEY constraints provide a guarantee for uniqueness for a column or set of columns."),s.a.createElement("li",null,"A PRIMARY KEY constraint automatically has a UNIQUE constraint."),s.a.createElement("li",null,"Can have many UNIQUE constraints per table, but only one PRIMARY KEY constraint per table.")),s.a.createElement("br",null),s.a.createElement("ul",null,s.a.createElement("li",null,'To create a UNIQUE constraint on the "ID" column when the table is already created.'),s.a.createElement("ul",null,s.a.createElement("li",null,"ALTER TABLE Persons ADD UNIQUE (ID);")),s.a.createElement("br",null),s.a.createElement("li",null,"To name a UNIQUE constraint, and to define a UNIQUE constraint on multiple columns."),s.a.createElement("ul",null,s.a.createElement("li",null,"ALTER TABLE Persons ADD CONSTRAINT UC_Person UNIQUE (ID,LastName);")),s.a.createElement("br",null),s.a.createElement("li",null,"DROP a UNIQUE Constraint"),s.a.createElement("ul",null,s.a.createElement("li",null,"ALTER TABLE Persons DROP INDEX UC_Person;"))),s.a.createElement("br",null),s.a.createElement("b",null,'The following SQL creates a UNIQUE constraint on the "ID" column when the "Persons" table is created:'),s.a.createElement("div",{style:N},s.a.createElement(A.a,{code:g,language:"js",plugins:["line-numbers"]})),s.a.createElement("br",null),s.a.createElement("h3",null,"PRIMARY KEY Constraint"),s.a.createElement("ul",null,s.a.createElement("li",null,"The PRIMARY KEY constraint uniquely identifies each record in a table."),s.a.createElement("li",null,"Primary keys must contain UNIQUE values, and cannot contain NULL values."),s.a.createElement("li",null,"A table can have only ONE primary key, this primary key can consist of single/ multiple columns (fields).")),s.a.createElement("br",null),s.a.createElement("ul",null,s.a.createElement("li",null,'To create a PRIMARY KEY constraint on the "ID" column when the table is already created.'),s.a.createElement("ul",null,s.a.createElement("li",null,"ALTER TABLE Persons ADD PRIMARY KEY (ID);")),s.a.createElement("br",null),s.a.createElement("li",null,"To allow naming of a PRIMARY KEY constraint, and for defining a PRIMARY KEY constraint on multiple columns."),s.a.createElement("ul",null,s.a.createElement("li",null,"ALTER TABLE Persons ADD CONSTRAINT PK_Person PRIMARY KEY (ID,LastName);")),s.a.createElement("br",null),s.a.createElement("li",null,"To drop a PRIMARY KEY constraint."),s.a.createElement("ul",null,s.a.createElement("li",null,"ALTER TABLE Persons DROP PRIMARY KEY;")),s.a.createElement("br",null),s.a.createElement("li",null,s.a.createElement("b",null,"Note: "),"If use ALTER TABLE to add a primary key, the primary key column(s) must have been declared to not contain NULL values (when the table was first created).")),s.a.createElement("div",{style:N},s.a.createElement(A.a,{code:O,language:"js",plugins:["line-numbers"]})),s.a.createElement("i",null,"In the example above there is only ONE PRIMARY KEY (PK_Person). However, the VALUE of the primary key is made up of TWO COLUMNS (ID + LastName)."),s.a.createElement("br",null),s.a.createElement("h3",null,"MySQL FOREIGN KEY Constraint"),s.a.createElement("ul",null,s.a.createElement("li",null,"The FOREIGN KEY constraint is used to prevent actions that would destroy links between tables."),s.a.createElement("li",null,"A FOREIGN KEY is a field (or collection of fields) in one table, that refers to the PRIMARY KEY in another table."),s.a.createElement("li",null,"The table with the foreign key is called the child table, and the table with the primary key is called the referenced or parent table."),s.a.createElement("li",null,'Notice that the "PersonID" column in the "Orders" table points to the "PersonID" column in the "Persons" table.'),s.a.createElement("li",null,'The "PersonID" column in the "Persons" table is the PRIMARY KEY in the "Persons" table.'),s.a.createElement("li",null,'The "PersonID" column in the "Orders" table is a FOREIGN KEY in the "Orders" table.'),s.a.createElement("li",null,"The FOREIGN KEY constraint prevents invalid data from being inserted into the foreign key column, because it has to be one of the values contained in the parent table.")),s.a.createElement("br",null),s.a.createElement("ul",null,s.a.createElement("li",null,'To create a FOREIGN KEY constraint on the "PersonID" column when the "Orders" table is already created.',s.a.createElement("br",null),"ALTER TABLE Orders"),s.a.createElement("ul",null,s.a.createElement("li",null,"ADD FOREIGN KEY (PersonID) REFERENCES Persons(PersonID);")),s.a.createElement("br",null),s.a.createElement("li",null,"To allow naming of a FOREIGN KEY constraint, and for defining a FOREIGN KEY constraint on multiple columns."),s.a.createElement("ul",null,s.a.createElement("li",null,"ALTER TABLE Orders ADD CONSTRAINT FK_PersonOrder FOREIGN KEY (PersonID) REFERENCES Persons(PersonID);")),s.a.createElement("br",null),s.a.createElement("li",null,"To drop a FOREIGN KEY constraint."),s.a.createElement("ul",null,s.a.createElement("li",null,"ALTER TABLE Orders DROP FOREIGN KEY FK_PersonOrder;"))),s.a.createElement("br",null),s.a.createElement("div",{style:N},s.a.createElement(A.a,{code:I,language:"js",plugins:["line-numbers"]})),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("b",null,"MySQL CHECK Constraint"),s.a.createElement("ul",null,s.a.createElement("li",null,"The CHECK constraint is used to limit the value range that can be placed in a column."),s.a.createElement("li",null,"If you define a CHECK constraint on a column it will allow only certain values for this column."),s.a.createElement("li",null,"If you define a CHECK constraint on a table it can limit the values in certain columns based on values in other columns in the row.")),s.a.createElement("br",null),s.a.createElement("ul",null,s.a.createElement("li",null,'To create a CHECK constraint on the "Age" column when the table is already created.'),s.a.createElement("ul",null,s.a.createElement("li",null,"ALTER TABLE Persons ADD CHECK (Age gt= 18);")),s.a.createElement("br",null),s.a.createElement("li",null,"To allow naming of a CHECK constraint, and for defining a CHECK constraint on multiple columns."),s.a.createElement("ul",null,s.a.createElement("li",null,"ALTER TABLE Persons ADD CONSTRAINT CHK_PersonAge CHECK (Age ge=18 AND City='Sandnes');")),s.a.createElement("br",null),s.a.createElement("li",null,"To drop a CHECK constraint"),s.a.createElement("ul",null,s.a.createElement("li",null,"ALTER TABLE Persons DROP CHECK CHK_PersonAge;"))),s.a.createElement("br",null),'The following SQL creates a CHECK constraint on the "Age" column when the "Persons" table is created. The CHECK constraint ensures that the age of a person must be 18, or older:',s.a.createElement("br",null),s.a.createElement("div",{style:N},s.a.createElement(A.a,{code:f,language:"js",plugins:["line-numbers"]})),s.a.createElement("br",null),s.a.createElement("h3",null,"MySQL DEFAULT Constraint"),s.a.createElement("ul",null,s.a.createElement("li",null,"The DEFAULT constraint is used to set a default value for a column."),s.a.createElement("li",null,"The default value will be added to all new records, if no other value is specified.")),s.a.createElement("br",null),s.a.createElement("ul",null,s.a.createElement("li",null,'To create a DEFAULT constraint on the "City" column when the table is already created.'),s.a.createElement("ul",null,s.a.createElement("li",null,"ALTER TABLE Persons ALTER City SET DEFAULT 'Sandnes';")),s.a.createElement("br",null),s.a.createElement("li",null,"To drop a DEFAULT constraint."),s.a.createElement("ul",null,s.a.createElement("li",null,"ALTER TABLE Persons ALTER City DROP DEFAULT;"))),s.a.createElement("br",null),'The following SQL sets a DEFAULT value for the "City" column when the "Persons" table is created:',s.a.createElement("br",null),s.a.createElement("div",{style:N},s.a.createElement(A.a,{code:S,language:"js",plugins:["line-numbers"]})),s.a.createElement("br",null),s.a.createElement("h3",null,"MySQL CREATE INDEX Statement"),s.a.createElement("ul",null,s.a.createElement("li",null,"The CREATE INDEX statement is used to create indexes in tables."),s.a.createElement("li",null,"Indexes are used to retrieve data from the database more quickly than otherwise. The users cannot see the indexes, they are just used to speed up searches/ queries."),s.a.createElement("li",null,"Creates an index on a table. Duplicate values are allowed:"),s.a.createElement("ul",null,s.a.createElement("li",null,'The SQL statement below creates an index named "idx_lastname" on the "LastName" column in the "Persons" table:'),s.a.createElement("li",null,"CREATE INDEX idx_lastname ON Persons (LastName);")),s.a.createElement("br",null),s.a.createElement("li",null,"Create an index on a combination of columns, you can list the column names within the parentheses, separated by commas:"),s.a.createElement("ul",null,s.a.createElement("li",null,"CREATE INDEX idx_pname ON Persons (LastName, FirstName);")),s.a.createElement("br",null),s.a.createElement("li",null,"The DROP INDEX statement is used to delete an index in a table."),s.a.createElement("ul",null,s.a.createElement("li",null,"ALTER TABLE table_name DROP INDEX index_name;"))),s.a.createElement("br",null),s.a.createElement("h3",null,"MySQL AUTO INCREMENT Field"),s.a.createElement("ul",null,s.a.createElement("li",null,"Auto-increment allows a unique number to be generated automatically when a new record is inserted into a table."),s.a.createElement("li",null,"Often this is the primary key field that we would like to be created automatically every time a new record is inserted."),s.a.createElement("li",null,"MySQL uses the AUTO_INCREMENT keyword to perform an auto-increment feature."),s.a.createElement("li",null,"By default, the starting value for AUTO_INCREMENT is 1, and it will increment by 1 for each new record."),s.a.createElement("br",null),s.a.createElement("li",null,"AUTO_INCREMENT sequence start with another value."),s.a.createElement("ul",null,s.a.createElement("li",null,"ALTER TABLE Persons AUTO_INCREMENT=100;"))),s.a.createElement("br",null),'The following SQL statement defines the "Personid" column to be an auto-increment primary key field in the "Persons" table:',s.a.createElement("br",null),s.a.createElement("div",{style:N},s.a.createElement(A.a,{code:y,language:"js",plugins:["line-numbers"]})),s.a.createElement("br",null),s.a.createElement("h3",null,"MySQL Working With Dates"),"As long as your data contains only the date portion, your queries will work as expected. However, if a time portion is involved, it gets more complicated.",s.a.createElement("br",null),s.a.createElement("br",null),"MySQL Date Data Types",s.a.createElement("br",null),"MySQL comes with the following data types for storing a date or a date/ time value in the database:",s.a.createElement("br",null),s.a.createElement("ul",null,s.a.createElement("li",null,s.a.createElement("b",null,"DATE: "),"format YYYY-MM-DD"),s.a.createElement("li",null,s.a.createElement("b",null,"DATETIME: "),"YYYY-MM-DD HH:MI:SS"),s.a.createElement("li",null,s.a.createElement("b",null,"TIMESTAMP: "),"YYYY-MM-DD HH:MI:SS"),s.a.createElement("li",null,s.a.createElement("b",null,"YEAR: "),"YYYY or YY")),s.a.createElement("br",null),"Note: The date data type are set for a column when you create a new table in your database!",s.a.createElement("br",null),'Now we want to select the records with an OrderDate of "2008-11-11" from the table.',s.a.createElement("br",null),s.a.createElement("b",null,"SELECT * FROM Orders WHERE OrderDate='2008-11-11'"),s.a.createElement("br",null),s.a.createElement("h3",null,"MySQL CREATE VIEW Statement"),s.a.createElement("ul",null,s.a.createElement("li",null,"A view is a virtual table based on the result-set of an SQL statement."),s.a.createElement("li",null,"A view contains rows and columns, just like a real table. The fields in a view are fields from one or more real tables in the database."),s.a.createElement("li",null,"Can add SQL statements and functions to a view and present the data as if the data were coming from one single table."),s.a.createElement("li",null,"A view is created with the CREATE VIEW statement.")),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("b",null,"Following SQL creates a view that shows all customers from Brazil:"),s.a.createElement("br",null),s.a.createElement("div",{style:N},s.a.createElement(A.a,{code:P,language:"js",plugins:["line-numbers"]})),s.a.createElement("i",null,"We can query the view above: ",s.a.createElement("b",null,"SELECT * FROM [Products Above Average Price];")),s.a.createElement("br",null),s.a.createElement("h3",null,"MySQL Updating a View"),s.a.createElement("ul",null,s.a.createElement("li",null,"A view can be updated with the ",s.a.createElement("b",null,"CREATE OR REPLACE")," VIEW statement."),s.a.createElement("li",null,"A view is deleted with the DROP VIEW statement."),s.a.createElement("ul",null,s.a.createElement("li",null,"DROP VIEW view_name;"))),s.a.createElement("br",null),'The following SQL adds the "City" column to the "Brazil Customers" view:',s.a.createElement("br",null),s.a.createElement("div",{style:N},s.a.createElement(A.a,{code:D,language:"js",plugins:["line-numbers"]})),s.a.createElement("br",null),s.a.createElement("h3",null,"Joins"),s.a.createElement("ul",null,s.a.createElement("li",null,s.a.createElement("b",null,"INNER JOIN: "),"Return rows from both tables that satisfy the given condition."),s.a.createElement("ul",null,s.a.createElement("li",null,"SELECT Users.FirstName, Admin.LastName FROM Users ,Admin Where Users.id = Admin.id;")),s.a.createElement("br",null),s.a.createElement("li",null,s.a.createElement("b",null,"Cross JOIN: "),"Gives us combinations of each row of first table with all records in second table."),s.a.createElement("ul",null,s.a.createElement("li",null,"SELECT * FROM `Admin` CROSS JOIN `Users`;")),s.a.createElement("br",null),s.a.createElement("li",null,s.a.createElement("b",null,"Outer JOINs: "),"Return all records matching from both tables."),s.a.createElement("ul",null,s.a.createElement("li",null,s.a.createElement("b",null,"Left Join: "),"Select Users.FirstName from Users left JOIN Admin on Admin.id = Users.id;"),s.a.createElement("li",null,s.a.createElement("b",null,"Right Join: "),"Select Users.OrderDate, Users.FirstName from Users right JOIN Admin on Admin.id = Users.id;")),s.a.createElement("br",null),s.a.createElement("li",null,s.a.createElement("b",null,"ON clauses: "),"To match the records between table."),s.a.createElement("ul",null,s.a.createElement("li",null,"SELECT A.price , B.first_name FROM `orders` AS A LEFT JOIN `employees` AS B USING ( first_name )")),s.a.createElement("br",null),s.a.createElement("li",null,s.a.createElement("b",null,"SELECT DISTINCT: "),"Return only distinct (different) values."),s.a.createElement("ul",null,s.a.createElement("li",null,"SELECT DISTINCT price from orders;")),s.a.createElement("br",null),s.a.createElement("li",null,s.a.createElement("b",null,"Select distinct records on a join: ")),s.a.createElement("ul",null,s.a.createElement("li",null,"SELECT DISTINCT Users.FirstName, Users.City FROM Users JOIN Admin ON Users.id = Admin.id WHERE Admin.LastName = 'singh' ORDER BY Admin.Age DESC;")),s.a.createElement("br",null),s.a.createElement("li",null,s.a.createElement("b",null,"SELECT with DISTINCT on multiple columns: ")),s.a.createElement("ul",null,s.a.createElement("li",null,"SELECT distinct last_name, status FROM employees WHERE last_name='singh';"),s.a.createElement("li",null,"Sorted Data Using \u2018Order By\u2019 "),s.a.createElement("ul",null,s.a.createElement("li",null,"SELECT price, items FROM orders WHERE id = 2 ORDER BY qty;"))),s.a.createElement("br",null),s.a.createElement("li",null,"SELECT COUNT(id), Age FROM Admin WHERE id gt= 1 GROUP BY Age;"),s.a.createElement("br",null),s.a.createElement("li",null,s.a.createElement("b",null,"Query for Creating a View: ")),s.a.createElement("ul",null,s.a.createElement("li",null,"CREATE VIEW customers_data AS SELECT price, age FROM customers WHERE price =(or less than) 40;")),s.a.createElement("br",null),s.a.createElement("li",null,"DROP VIEW customers_data;"),s.a.createElement("br",null),s.a.createElement("li",null,s.a.createElement("b",null,"Query to Display Primary Keys: ")),s.a.createElement("ul",null,s.a.createElement("li",null,"SHOW KEYS FROM customers WHERE Key_name = 'PRIMARY'")),s.a.createElement("br",null),s.a.createElement("li",null,s.a.createElement("b",null,"Searching for SQL Tables with Wildcards: ")),s.a.createElement("ul",null,s.a.createElement("li",null,"SELECT * From Customers WHERE city LIKE 'us%';")),s.a.createElement("br",null),s.a.createElement("li",null,s.a.createElement("b",null,"Between: ")),s.a.createElement("ul",null,s.a.createElement("li",null,"SELECT Name FROM customers WHERE price BETWEEN 234 AND 2434;")),s.a.createElement("br",null),s.a.createElement("li",null,s.a.createElement("b",null,"Union: ")),s.a.createElement("ul",null,s.a.createElement("li",null,"SELECT phone FROM Customers UNION SELECT items FROM Orders")),s.a.createElement("br",null),s.a.createElement("li",null,s.a.createElement("b",null,"Making Column Labels More Friendly: ")),s.a.createElement("ul",null,s.a.createElement("li",null,"SELECT city AS city_description FROM customers;")),s.a.createElement("br",null),s.a.createElement("li",null,s.a.createElement("b",null,"Always and Everywhere!: ")),s.a.createElement("ul",null,s.a.createElement("li",null,"SELECT city FROM customers WHERE id = ALL (SELECT price FROM customers WHERE phone (greater than) 123456790);")),s.a.createElement("br",null),s.a.createElement("li",null,s.a.createElement("b",null,"Query returns the age for each employee, along with total age of the employees by age: ")),s.a.createElement("ul",null,s.a.createElement("li",null,"SELECT age, salary, city, SUM(age) OVER (PARTITION BY age) FROM customers;"))),s.a.createElement("br",null),s.a.createElement("h3",null,"If Clouse"),s.a.createElement("b",null,"Student"),s.a.createElement("table",null,s.a.createElement("tr",null,s.a.createElement("th",null,"Id"),s.a.createElement("th",null,"Name"),s.a.createElement("th",null,"Percentage")),s.a.createElement("tr",null,s.a.createElement("td",null,"1"),s.a.createElement("td",null,"Ram Kumar"),s.a.createElement("td",null,"57")),s.a.createElement("tr",null,s.a.createElement("td",null,"2"),s.a.createElement("td",null,"Salman Khan"),s.a.createElement("td",null,"28")),s.a.createElement("tr",null,s.a.createElement("td",null,"3"),s.a.createElement("td",null,"Meera Khan"),s.a.createElement("td",null,"81")),s.a.createElement("tr",null,s.a.createElement("td",null,"4"),s.a.createElement("td",null,"Sarita Kumari"),s.a.createElement("td",null,"45"))),s.a.createElement("br",null),s.a.createElement("div",{style:N},s.a.createElement(A.a,{code:p,language:"js",plugins:["line-numbers"]})),s.a.createElement("br",null),s.a.createElement("b",null,"Output"),s.a.createElement("table",null,s.a.createElement("tr",null,s.a.createElement("th",null,"Id"),s.a.createElement("th",null,"Name"),s.a.createElement("th",null,"Percentage"),s.a.createElement("th",null,"Result")),s.a.createElement("tr",null,s.a.createElement("td",null,"1"),s.a.createElement("td",null,"Ram Kumar"),s.a.createElement("td",null,"57"),s.a.createElement("td",null,"Pass")),s.a.createElement("tr",null,s.a.createElement("td",null,"2"),s.a.createElement("td",null,"Salman Khan"),s.a.createElement("td",null,"28"),s.a.createElement("td",null,"Fail")),s.a.createElement("tr",null,s.a.createElement("td",null,"3"),s.a.createElement("td",null,"Meera Khan"),s.a.createElement("td",null,"81"),s.a.createElement("td",null,"Pass")),s.a.createElement("tr",null,s.a.createElement("td",null,"4"),s.a.createElement("td",null,"Sarita Kumari"),s.a.createElement("td",null,"45"),s.a.createElement("td",null,"Pass"))),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("b",null,"CASE"),s.a.createElement("div",{style:N},s.a.createElement(A.a,{code:U,language:"js",plugins:["line-numbers"]}))))))}}]),l}(i.Component);l.default=Object(T.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(v)}}]);
//# sourceMappingURL=203.c56ae096.chunk.js.map