(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[249],{140:function(e,n,t){"use strict";t.d(n,"a",(function(){return p}));var a=t(45),l=t(28),r=t(136),i=t(137),c=t(139),s=t(0),m=t.n(s),u=t(138),o=t.n(u),p=(t(59),function(e){function n(e){var t;return Object(a.a)(this,n),(t=Object(r.a)(this,Object(i.a)(n).call(this,e))).highlight=function(){t.ref&&t.ref.current&&o.a.highlightElement(t.ref.current)},t.ref=m.a.createRef(),t}return Object(c.a)(n,e),Object(l.a)(n,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,n=e.code,t=(e.plugins,e.language);return m.a.createElement("pre",{className:"code-prism"},m.a.createElement("code",{ref:this.ref,className:"language-".concat(t)},n.trim()))}}]),n}(m.a.Component))},141:function(e,n,t){},147:function(e,n,t){"use strict";t.d(n,"a",(function(){return u}));var a=t(0),l=t.n(a),r=t(26),i=t(297),c=t(295),s=t(114),m=Object(s.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function u(){var e=m();return l.a.createElement("div",{className:e.root},l.a.createElement(c.a,null,l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/introPython",className:e.line},"intro Python")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/tuples",className:e.line},"Tuples")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/stringPy",className:e.line},"Strings")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/iteratorsPy",className:e.line},"Iterators")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/json",className:e.line},"Json")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/mathematics",className:e.line},"Mathematics")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/oops_",className:e.line},"Oops")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/abstract",className:e.line},"Abstract")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/exceptionsPy",className:e.line},"ExceptionsHandling")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/pyIntro",className:e.line},"Pickle")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/threadings",className:e.line},"Thread")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/collections",className:e.line},"Collections")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/logging",className:e.line},"Logging")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/regex",className:e.line},"Regex")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/tkinter",className:e.line},"TKinter")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/logicalspy",className:e.line},"Logicals")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/pyLogic",className:e.line},"PyLogic")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/csv",className:e.line},"CsvPython")),l.a.createElement("br",null),"Flask",l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/conroutes",className:e.line},"routes")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/httpsMethods",className:e.line},"Https")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/flasksIn",className:e.line},"Interviews")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/flask_signUp",className:e.line},"Flask_signUp")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/get_search",className:e.line},"Get_Search")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/load_search",className:e.line},"Load_Search"))),l.a.createElement("div",null))}},407:function(e,n,t){"use strict";t.r(n);var a=t(45),l=t(28),r=t(136),i=t(137),c=t(139),s=t(0),m=t.n(s),u=t(138),o=t.n(u),p=t(120),d=t(57),E=t(296),g=t(5),b=(t(141),t(147)),f=t(140),h={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},y="\nx = ['ab', 'cd']\nprint(len(list(map(list, x))))\n".trim(),v=("1.\tset([[1,2],[3,4],[4,5]])\n2.\tset([1,2,2,3,4,5])\n3.\t{1,2,3,4}\n4.\tset((1,2,3,4))\n".trim(),"s1 = string\ns = string[::-1]\n\nif(s1 == s):\n    return 'true'\nelse:\n    return 'false'\n\nprint(fun('madam'))\n".trim()),x="\ndef sum(num):\n    if len(num) == 1:\n        return num[0]\n    else:\n        return num[0] + sum(num[1:])\n\nprint(sum([2, 4, 5, 6, 7]))\n".trim(),j="import random\n\ndef read_random(fname):\n    lines = open(fname).read().splitlines()\n    return random.choice(lines)\n".trim(),w='\n#random() have <shuffle(<list>)> which can randomize any input sequence.\n\nimport random\n\nlist = [2, 18, 8, 4]\n\nprint("Prior Shuffling - 0", list)\nrandom.shuffle(list)\n\nprint("After Shuffling - 1", list)\nrandom.shuffle(list)\n\nprint("After Shuffling - 2", list)\n'.trim(),k="\ndef fast (items= []):\n    items.append (1)\n    return items\n\nprint (fast ())\nprint (fast ())\n".trim(),N="name = input('what is your name? ')\nfavorite_color = input('What is your favorite color')\nprint(name + ' Likes ' + favorite_color)\n".trim(),_="\nfor item in ['Python', 'javaScrupt', 'NodeJs']:\n    print(item)\n\nfor item in range(10):\n    print(item)\n\nfor item in range(5, 10):\n    print(item)\n\nfor item in range(5, 10, 2):\n    print(item)\n".trim(),O="\nfor x in range(4):\n    for y in range(3):\n        print(f'({x}, {y})')\n\n\nnumbers = [5, 2, 5, 2, 2]\nfor x_count in numbers:\n    output = ''\n    for count in range(x_count):\n            output += 'X'\n            print(output)\n".trim(),P="matrix = [\n  [1,2,3],\n  [4,5,6],\n  [7,8,9]\n]\n\nfor row in matrix:\n  for item in row:\n      print(item)\n".trim(),T="coordinates = (1, 2, 3)\nx, y, z = coordinates\nprint(x)\nprint(y)\n\ncoordinates = [1, 2, 3]\nx, y, z = coordinates\nprint(z)\n".trim(),M='\nphone = input("Phone: ")\ndigits_mapping = {\n    "1": "One",\n    "2": "Two",\n    "3": "Three",\n    "4": "Four"\n  }\n  \noutput = ""\nfor ch in phone:\n  output += digits_mapping.get(ch, "!") + " "\nprint(output)\n  '.trim(),C='message = input(">")\nwords = message.split(\' \')\nemojis = {\n    ":)":"*",\n    ":(":"%"\n}\noutput = ""\nfor word in words:\n    output += emojis.get(word, word) + " "\nprint(output)\n'.trim(),S='def emoji_converter(message):\nwords = message.split(" ")\nemojis = {\n    ":)": "*",\n    ":(": "%"\n}\noutput = ""\nfor word in words:\n    output += emojis.get(word, word) + " "\nreturn  output\n\n\nmessage = input(">")\nprint(emoji_converter(message))\n'.trim(),F="import random\n\nfor i in range(3):\n    print(random.randint(10, 20))\nprint(random.randint(10, 20))\n\n\nimport random \n\nclass Dice:\n    def roll(self):\n        first = random.randint(1, 6)\n        second = random.randint(1, 6)\n        return first, second\n\ndice = Dice()\nprint(dice.roll())\n".trim(),A="\nimport openpyxl as xl\n\nwb = xl.load_workbook('transactions.xlsx')\nsheet = wb['Sheet1']\ncell = sheet['a1']\ncell = sheet.cell(1, 1)\nprint(cell.value)\n\nprint(sheet.max_row)\n\nfor row in range(1, sheet.max_row + 1):\n    print(row)\n\nfor row in range(2, sheet.max_row + 1):\n    cell = sheet.cell(row, 3)\n    print(cell.value)\n".trim(),D="import openpyxl as xl\n\nwb = xl.load_workbook('transactions.xlsx')\nsheet = wb['Sheet1']\ncell = sheet['a1']\ncell = sheet.cell(1, 1)\n\nfor row in range(2, sheet.max_row + 1):\n    cell = sheet.cell(row, 3)\n    corrected_price = cell.value * 2\n    corrected_price_cell = sheet.cell(row, 4)\n    corrected_price_cell = corrected_price\n\nwb.save('transactions2.xlsx')\n".trim(),H="\ndef nextPrime(n):\n    while True:\n        n+=1\n        for i in range(2,n):\n\n            if(n%i==0):\n                break\n            else:\n                print(n)\n                return n\n\nnextPrime(13)".trim(),I="\nx=(30,4.5,26,3+4j,'abc', True, 5.6,2-1j)\nt1,t2,t3,t4,t5=[], [], [], [], []\n\nfor e in x:\n    if type(e) == int:\n        t1.append(e)\n    elif type(e) == float:\n        t2.append(e)\n    elif type(e) == complex:\n        t3.append(e)\n    elif type(e) == str:\n        t4.append(e)\n    elif type(e) == bool:\n        t5.append(e)\n\nt1=tuple(t1)\nt2=tuple(t2)\nt3=tuple(t3)\nt4=tuple(t4)\nt5=tuple(t5)\n\nprint(t1, t2, t3, t4, t5, sep='nL')\n".trim(),L="\nprint('Enter number')\nt1 = tuple([int(e) for e in input().split(',')])\nprint('Enter Greatest number', max(t1))".trim(),z="\nt1=(10,20,30,40)\nt2=(5,9,12,18,22,25)\nt3=[]\ni,j,k=0,0,0\n\nwhile i<len(t1) and j<len(t2):\n    if t1[i]<t2[j]:\n        t3.append(t1[i])\n        i+=1\n        k+=1\n    else:\n        t3.append(t2[j])\n        j+=1\n        k+=1\n        \nif i==len(t1):\n    while j<len(t2):\n        t3.append(t2[j])\n        j+=1\n        k+=1\n        \nelif j==len(t2):\n    while i<len(t1):\n        t3.append(t1[i])\n        i+=1\n        k+=1\n        \nt3=tuple(t3)\nprint(t3)".trim(),W="\nl=[eval(x) for x in input(\"Enter list elements\").split(',')]\nelement=eval(input(\"Enter element value\"))\nindex=0\nwhile index<len(l):\n    if l[index]==element:\n        print(index, end='')\n    index+=1".trim(),Y="\ndef sum(n):\n    if n==1:\n        return 1\n    return n**2+sum(n-1)\n\nsum(4)".trim(),J="\ndef fun():\n    return 1,2,3\n\nx=fun()\nprint(x)".trim(),R='\nc = input("Enter a character: ")\n\nprint("The ASCII value of \'" + c + "\' is",ord(c)) '.trim(),X='\ndec = int(input("Enter a decimal number: "))\n\nprint(bin(dec), "in binary.")\nprint(oct(dec), "in octal.")\nprint(hex(dec), "in hexadecimal." )'.trim(),U="\nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n\nY = [[5,8,1,2],\n    [6,7,3,0],\n    [4,5,9,1]]\n\nresult = [[0,0,0,0],\n         [0,0,0,0],\n         [0,0,0,0]]\n\n\nfor i in range(len(X)):                                                             // iterate through rows of X.\n   for j in range(len(Y[0])):                                                       // iterate through columns of Y.\n       for k in range(len(Y)):                                                      // iterate through rows of Y.\n           result[i][j] += X[i][k] * Y[k][j]\n\nfor r in result:\n   print(r)\n".trim(),G='\ndef TowerOfHanoi(n , source, destination, auxilliary):\n    if n==1:\n        print ("Move disk 1 from source",source,"to destination",destination)\n        return\n    TowerOfHanoi(n-1, source, auxilliary, destination)\n    print ("Move disk",n,"from source",source,"to destination",destination)\n    TowerOfHanoi(n-1, auxilliary, destination, source)\n\nn = 4\nTowerOfHanoi(n,\'A\',\'B\',\'C\')'.trim(),q='\ndef add(x, y):\n    return x + y\n\ndef subtract(x, y):\n    return x - y\n\ndef multiply(x, y):\n    return x * y\n\ndef divide(x, y):\n    return x / y\n\n\nprint("Select operation.")\nprint("1.Add")\nprint("2.Subtract")\nprint("3.Multiply")\nprint("4.Divide")\n\nwhile True:\n    choice = input("Enter choice(1/2/3/4): ")\n\n    if choice in (\'1\', \'2\', \'3\', \'4\'):                                      // Check if choice is one of the four options.\n        num1 = float(input("Enter first number: "))\n        num2 = float(input("Enter second number: "))\n\n        if choice == \'1\':\n            print(num1, "+", num2, "=", add(num1, num2))\n\n        elif choice == \'2\':\n            print(num1, "-", num2, "=", subtract(num1, num2))\n\n        elif choice == \'3\':\n            print(num1, "*", num2, "=", multiply(num1, num2))\n\n        elif choice == \'4\':\n            print(num1, "/", num2, "=", divide(num1, num2))\n        break\n    else:\n        print("Invalid Input")\n'.trim(),B=function(e){function n(){return Object(a.a)(this,n),Object(r.a)(this,Object(i.a)(n).apply(this,arguments))}return Object(c.a)(n,e),Object(l.a)(n,[{key:"componentDidMount",value:function(){setTimeout((function(){return o.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return m.a.createElement(p.a,{container:!0},m.a.createElement(p.a,{item:!0,xs:2},m.a.createElement(d.a,{className:e.paper},m.a.createElement("h4",null,m.a.createElement(b.a,null)))),m.a.createElement(p.a,{item:!0,xs:10},m.a.createElement(d.a,{className:e.paper},m.a.createElement(E.a,null,m.a.createElement("b",null,"1. What is the output of the following?"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:y,language:"js",plugins:["line-numbers"]})),m.a.createElement("i",null,"Each element of x is converted into a list."),m.a.createElement("br",null),m.a.createElement("br",null),m.a.createElement("b",null,"2. Write a Python program to check whether a given string is a palindrome or not, without using an iterative method. "),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:v,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("br",null),m.a.createElement("b",null,"3. Write a Python program to calculate the sum of a list of numbers."),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:x,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("br",null),m.a.createElement("b",null,"4. How will you read a random line in a file?"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:j,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("br",null),m.a.createElement("b",null,"5. What is the function to randomize the items of a list in-place?"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:w,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("br",null),m.a.createElement("b",null,"6. What is the result of the below lines of code?"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:k,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("i",null,"The function fast evaluates its arguments only once after the function gets defined. However, since items is a list, so it\u2019ll get modified by appending a 1 to it."),m.a.createElement("br",null),m.a.createElement("br",null),m.a.createElement("b",null,"7. Mukesh likes blue"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:N,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("br",null),m.a.createElement("b",null,"8. For"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:_,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("br",null),m.a.createElement("b",null,"9. Nested loop"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:O,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("br",null),m.a.createElement("b",null,"10. Unpacking"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:T,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("b",null,"11. Enter Digit o/p words"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:M,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("br",null),m.a.createElement("b",null,"12. Print EMOJ"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:C,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("br",null),m.a.createElement("b",null,"13. Creating a reusable Functions"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:S,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("br",null),m.a.createElement("b",null,"14. Generating random Values"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:F,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("br",null),m.a.createElement("b",null,"15. Excel spreadsheet"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:A,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("br",null),m.a.createElement("b",null,"16. Create new colom and new excel sheet"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:D,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"17. Python function to return next Prime number"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:H,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"18. Create tuples with homogeneous elements from a tuple containing homogeneous elements."),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:I,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"19. Fing greatest number from a tuple of ini values."),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:L,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"20. Merge two sorted tuple."),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:z,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"21. Print indices of all the occurrence of a given element in a given list."),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:W,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"22. Recursive function to calculate sum of sequence of first N natural numbers."),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:Y,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"23. Return multiple values."),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:J,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"24. Ascii"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:R,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"25. Conversion"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:X,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"26. Matrix"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:P,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("b",null,"Multilpy 2 Matrix"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:U,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"27. Tower Of Hanoi"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:G,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"28. Calculator"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:q,language:"js",plugins:["line-numbers"]}))))))}}]),n}(s.Component);n.default=Object(g.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(B)}}]);
//# sourceMappingURL=249.6bfd007e.chunk.js.map