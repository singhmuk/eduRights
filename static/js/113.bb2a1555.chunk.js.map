{"version":3,"sources":["components/ReactJs/prismCode.js","components/angularjsd/sidebar.js","components/angularjsd/angular 12/dropdownsAngu.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","dropdownSelect","dropdowns","DropDownAngular","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/113.bb2a1555.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/apiLogic3' className={classes.line}>new updated</Link></MenuItem>\n        <MenuItem><Link to='/ngRepeat' className={classes.line}>NgRepeat</Link></MenuItem>\n        <MenuItem><Link to='/ngModel' className={classes.line}>ng-model</Link></MenuItem>\n        <MenuItem><Link to='/scope' className={classes.line}>Scope</Link></MenuItem>\n        <MenuItem><Link to='/filter' className={classes.line}>Events</Link></MenuItem>\n        <MenuItem><Link to='/directives' className={classes.line}>Directives</Link></MenuItem>\n        <MenuItem><Link to='/angularConditions' className={classes.line}>Condition</Link></MenuItem>\n        <MenuItem><Link to='/angularlFlters' className={classes.line}>Fiters</Link></MenuItem>\n        <MenuItem><Link to='/services' className={classes.line}>Services</Link></MenuItem>\n        <MenuItem><Link to='/validations' className={classes.line}>Validations</Link></MenuItem>\n\n        <p>Angular 12</p>\n        <MenuItem><Link to='/introAngularjs' className={classes.line}>Intro</Link></MenuItem>\n        <MenuItem><Link to='/flows' className={classes.line}>Interviews</Link></MenuItem>\n        <MenuItem><Link to='/angularDir2' className={classes.line}>Architecture</Link></MenuItem>\n        <MenuItem><Link to='/metedata' className={classes.line}>MetaData</Link></MenuItem>\n        <MenuItem><Link to='/ngFor' className={classes.line}>NgFor</Link></MenuItem>\n        <MenuItem><Link to='/pipes' className={classes.line}>Pipes</Link></MenuItem>\n        <MenuItem><Link to='/anguRoutes' className={classes.line}>Routes</Link></MenuItem>\n        <MenuItem><Link to='/lifeCycleAng' className={classes.line}>LifeCycle</Link></MenuItem>\n        <MenuItem><Link to='/angularSelector' className={classes.line}>Change Detection</Link></MenuItem>\n        <MenuItem><Link to='/angularDir' className={classes.line}>Custom Elements</Link></MenuItem>\n        <MenuItem><Link to='/viewProvider' className={classes.line}>ViewProvider</Link></MenuItem>\n        <MenuItem><Link to='/dynamicallyLoad' className={classes.line}>DynamicallyLoad</Link></MenuItem>\n        <MenuItem><Link to='/rxjs' className={classes.line}>Rxjs</Link></MenuItem>\n        <MenuItem><Link to='/ngrxCurd' className={classes.line}>Ngrx</Link></MenuItem>\n        <MenuItem><Link to='/ngrxCounter' className={classes.line}>NgrxCounter</Link></MenuItem>\n\n        <MenuItem><Link to='/projection' className={classes.line}>Pro-Input-Output-Iterates-<br />IncrDecr-Toggle-keyIn-If</Link></MenuItem>\n        <MenuItem><Link to='/angularCurd' className={classes.line}>Curd</Link></MenuItem>\n        <MenuItem><Link to='/filterPlace' className={classes.line}>FilterPlace-get-live-<br />Agree-NoName-Excel</Link></MenuItem>\n        <MenuItem><Link to='/radioButton' className={classes.line}>Radio-s/h-add-<br />version-Launch-Font</Link></MenuItem>\n        <MenuItem><Link to='/multiCheck' className={classes.line}>MultiSel-MultiCheck</Link></MenuItem>\n        <MenuItem><Link to='/services12' className={classes.line}>Services</Link></MenuItem>\n        <MenuItem><Link to='/dropdownsAngu' className={classes.line}>pick-ddSelectData</Link></MenuItem>\n        <MenuItem><Link to='/vote' className={classes.line}>Vote</Link></MenuItem>\n        <MenuItem><Link to='/debounce' className={classes.line}>Debounce</Link></MenuItem>\n        <MenuItem><Link to='/loader' className={classes.line}>Loader</Link></MenuItem>\n        <MenuItem><Link to='/paginations' className={classes.line}>Paginations</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst dropdownSelect = `\n//app.component.ts\nimport { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { throwError, of, forkJoin, combineLatest, BehaviorSubject } from 'rxjs';\nimport { catchError, tap, map, switchMap, filter, first, startWith, delay } from 'rxjs/operators';\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  name = 'Angular';\n  todoUrl = 'https://jsonplaceholder.typicode.com/todos';\n  userUrl = 'https://jsonplaceholder.typicode.com/users';\n  postUrl = 'https://jsonplaceholder.typicode.com/posts';\n\n  // Action stream\n  private userSelectedSubject = new BehaviorSubject<string>('');\n  userSelectedAction$ = this.userSelectedSubject.asObservable();\n\n  // All Users\n  users$ = this.http.get<User[]>(this.userUrl)\n    .pipe(\n      // tap(data => console.log('users', JSON.stringify(data))),\n      catchError(err => throwError('Error occurred'))\n    );\n\n  // Gets multiple sets of related data and returns it all as a single object\n  // Uses an action stream to \"pass in\" the parameter for the first query.\n  // Uses forkJoin\n  dataForUser$ = this.userSelectedAction$\n    .pipe(\n      // Handle the case of no selection\n      filter(userName => Boolean(userName)),\n      // Get the user given the user name\n      switchMap(userName => this.http.get<User[]>(''$'{this.userUrl}?username = '$'{userName}')\n        .pipe(\n          // The query returns an array of users, we only want the first one\n          map(users => users[0]),\n          tap(user => console.log(user)),\n          switchMap(user =>\n            // Pull in any related streams\n            combineLatest([\n              this.http.get<ToDo[]>(''$'{this.todoUrl}?userId = '$'{user.id} ')\n                .pipe(startWith([] as ToDo[])),\n              this.http.get<Post[]>(''$'{this.postUrl}? userId = '$'{user.id}')\n                .pipe(startWith([] as Post[]))\n            ])\n              .pipe(\n                tap(data => console.log('data', data)),\n                // Map the data into the desired format for display\n                map(([todos, posts]) => ({\n                  name: user.name,\n                  todos: todos,\n                  posts: posts\n                }) as UserData)\n              )\n          )\n        )\n      )\n    );\n\n  constructor(private http: HttpClient) { }\n\n  onSelected(userName: string): void {\n    this.userSelectedSubject.next(userName);\n  }\n}\n\nexport interface Post {\n  userId: number;\n  id: number;\n  title: string;\n  body: string\n}\n\nexport interface ToDo {\n  userId: number;\n  id: number;\n  title: string;\n  completed: boolean;\n}\n\nexport interface User {\n  id: number;\n  name: string;\n  username: string;\n  email?: string;\n  website?: string;\n}\n\nexport interface UserData {\n  name: string;\n  posts: Post[];\n  todos: ToDo[];\n}\n\n\n//app.module.ts\nimport { NgModule, Injectable } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS, HttpHeaders, HttpInterceptor, HttpRequest, HttpHandler, HttpEvent,\n   HttpEventType } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\n\nimport { timer, Observable } from 'rxjs';\nimport { tap, delay, switchMap } from 'rxjs/operators';\n\n\n@Injectable()\nexport class PreRequestDelayInterceptor implements HttpInterceptor {\n  static count = -2;\n\n  constructor() { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const timerDelay = timer(5);\n    const start = Date.now();\n\n    // Gradually increase the delay\n    PreRequestDelayInterceptor.count = PreRequestDelayInterceptor.count > 6 ? 0 : PreRequestDelayInterceptor.count + 2;\n\n    return timerDelay\n      .pipe(\n        delay(1000 * PreRequestDelayInterceptor.count),\n        switchMap(() => next.handle(req)),\n        tap(event => {\n          if (event.type == HttpEventType.Response) {\n            const elapsed = Date.now()-start;\n            console.log('Request for '$'{req.urlWithParams} took '$'{elapsed} ms.');\n          }\n        }));\n  }\n}\n\n@NgModule({\n  imports: [BrowserModule, FormsModule,\n    HttpClientModule],\n  declarations: [AppComponent],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: PreRequestDelayInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n//app.component.html\n<div *ngIf='users$ | async as users'>\n\t<select (change)=\"onSelected($event.target.value)\">\n    <option value=\"\">--Select a user--</option>\n    <option *ngFor=\"let user of users\"\n            [value]=\"user.username\">{{ user.name }}</option>\n  </select>\n</div>\n\n<div *ngIf='dataForUser$ | async as data'>\n\t<h2>Data for: {{data.name}}</h2>\n\t<table *ngIf=\"data.todos\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>User</th>\n\t\t\t\t<th>Title</th>\n\t\t\t\t<th>Completed?</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody *ngFor=\"let todo of data.todos\">\n\t\t\t<tr>\n\t\t\t\t<td>{{todo.userId}}</td>\n\t\t\t\t<td>{{todo.title}}</td>\n\t\t\t\t<td>{{todo.completed}}</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\t<p></p>\n\t<table *ngIf=\"data.posts\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>User</th>\n\t\t\t\t<th>Title</th>\n\t\t\t\t<th>Body</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody *ngFor=\"let post of data.posts\">\n\t\t\t<tr>\n\t\t\t\t<td>{{post.userId}}</td>\n\t\t\t\t<td>{{post.title}}</td>\n\t\t\t\t<td>{{post.body}}</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n</div>\n`.trim();\n\nconst dropdowns = `\nimport { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  template: '\n    <div *ngFor=\"let hero of heroes\" (click)=\"onSelect(hero)\">\n      {{hero.id}}\n      {{hero.name}}\n    </div >\n\n  <div *ngIf=\"selectedHero\">\n    <h2>{{selectedHero.name | uppercase}}</h2>\n      id: {{selectedHero.id}}\n      name: {{selectedHero.name}}\n    </div >',\n  })\n\nexport class AppComponent {\n  constructor(private http: HttpClient){}\n\n  heroes:any=[]\n  ngOnInit(){\n    this.http.get('https://jsonplaceholder.typicode.com/users')\n        .subscribe(val=>{\n            this.heroes = val\n        })\n      }\n\n  selectedHero?;\n  onSelect(hero):void {\n     this.selectedHero = hero\n  }\n}\n\n`.trim();\n\n\nclass DropDownAngular extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Pick a data from list</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={dropdowns}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>On dropdown select data</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={dropdownSelect}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(DropDownAngular));\n"],"sourceRoot":""}