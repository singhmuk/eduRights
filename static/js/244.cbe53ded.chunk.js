(this["webpackJsonpmern-stack-client"]=this["webpackJsonpmern-stack-client"]||[]).push([[244],{140:function(e,n,t){"use strict";t.d(n,"a",(function(){return p}));var a=t(45),l=t(28),r=t(136),i=t(137),c=t(139),s=t(0),m=t.n(s),o=t(138),u=t.n(o),p=(t(59),function(e){function n(e){var t;return Object(a.a)(this,n),(t=Object(r.a)(this,Object(i.a)(n).call(this,e))).highlight=function(){t.ref&&t.ref.current&&u.a.highlightElement(t.ref.current)},t.ref=m.a.createRef(),t}return Object(c.a)(n,e),Object(l.a)(n,[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this.props,n=e.code,t=(e.plugins,e.language);return m.a.createElement("pre",{className:"code-prism"},m.a.createElement("code",{ref:this.ref,className:"language-".concat(t)},n.trim()))}}]),n}(m.a.Component))},141:function(e,n,t){},147:function(e,n,t){"use strict";t.d(n,"a",(function(){return o}));var a=t(0),l=t.n(a),r=t(26),i=t(297),c=t(295),s=t(114),m=Object(s.a)((function(e){return{root:{display:"flex"},paper:{marginRight:e.spacing(2)},line:{textDecoration:"none"}}}));function o(){var e=m();return l.a.createElement("div",{className:e.root},l.a.createElement(c.a,null,l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/introPython",className:e.line},"intro Python")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/tuples",className:e.line},"Tuples")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/stringPy",className:e.line},"Strings")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/iteratorsPy",className:e.line},"Iterators")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/json",className:e.line},"Json")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/mathematics",className:e.line},"Mathematics")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/oops_",className:e.line},"Oops")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/abstract",className:e.line},"Abstract")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/exceptionsPy",className:e.line},"ExceptionsHandling")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/pyIntro",className:e.line},"Pickle")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/threadings",className:e.line},"Thread")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/collections",className:e.line},"Collections")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/logging",className:e.line},"Logging")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/regex",className:e.line},"Regex")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/tkinter",className:e.line},"TKinter")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/logicalspy",className:e.line},"Logicals")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/pyLogic",className:e.line},"PyLogic")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/csv",className:e.line},"CsvPython")),l.a.createElement("br",null),"Flask",l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/conroutes",className:e.line},"routes")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/httpsMethods",className:e.line},"Https")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/flasksIn",className:e.line},"Interviews")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/flask_signUp",className:e.line},"Flask_signUp")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/get_search",className:e.line},"Get_Search")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:"/load_search",className:e.line},"Load_Search"))),l.a.createElement("div",null))}},411:function(e,n,t){"use strict";t.r(n);var a=t(45),l=t(28),r=t(136),i=t(137),c=t(139),s=t(0),m=t.n(s),o=t(138),u=t.n(o),p=t(120),E=t(57),g=t(296),b=t(5),d=(t(141),t(147)),f=t(140),h={backgroundColor:"#F0F8FF",padding:"1px",fontSize:"16px"},v='\nnum = int(input("Enter a number: "))\n\nsum = 0\n\ntemp = num\nwhile temp > 0:\n   digit = temp % 10\n   sum += digit ** 3\n   temp //= 10\n\nif num == sum:\n   print(num,"is an Armstrong number")\nelse:\n   print(num,"is not an Armstrong number")'.trim(),y="\nvowels = 'aeiou'\n\nip_str = 'Hello, have you tried our tutorial section yet?'\n\nip_str = ip_str.casefold()\n\ncount = {}.fromkeys(vowels,0)\n\nfor char in ip_str:\n   if char in count:\n       count[char] += 1\n\nprint(count)".trim(),N='\ndef factorial(n):\n   if n == 1:\n       return n\n   else:\n       return n * factorial(n-1)\n\nnum = int(input("Enter a number: "))\n\nif num < 0:\n   print("Sorry, factorial does not exist for negative numbers")\nelif num == 0:\n   print("The factorial of 0 is 1")\nelse:\n   print("The factorial of",num,"is",factorial(num))'.trim(),_="\na, b = 0, 1\n\nwhile b < 80:\n    c=a+b\n    print(c)\n    a=b\n    b=c".trim(),k='\nmy_str = \'aIbohPhoBiA\'\n\nmy_str = my_str.casefold()\n\nrev_str = reversed(my_str)\n\nif list(my_str) == list(rev_str):\n   print("The string is a palindrome.")\nelse:\n   print("The string is not a palindrome.")'.trim(),j="\nnumprimes = input('How many primes to print?  ')\ncount = 0\npotentialprime = 2\n\ndef primetest(potentialprime):\n    divisor = 2\n    while divisor <= potentialprime:\n        if potentialprime == 2:\n            return True\n        elif potentialprime % divisor == 0:\n            return False\n            break\n        while potentialprime % divisor != 0:\n            if potentialprime - divisor > 1:\n                divisor += 1\n            else:\n                return True\n\nwhile count < int(numprimes):\n    if primetest(potentialprime) == True:\n        print ('Prime #' + str(count + 1), 'is', potentialprime)\n        count += 1\n        potentialprime += 1\n    else:\n        potentialprime += 1".trim(),w='\nlower = 900\nupper = 1000\n\nprint("Prime numbers between", lower, "and", upper, "are:")\n\nfor num in range(lower, upper + 1):\n   if num > 1:\n       for i in range(2, num):\n           if (num % i) == 0:\n               break\n       else:\n           print(num)'.trim(),O="\nimport itertools, random\n\n# make a deck of cards\ndeck = list(itertools.product(range(1,14),['Spade','Heart','Diamond','Club']))\n\n# shuffle the cards\nrandom.shuffle(deck)\n\n# draw five cards\nprint(\"You got:\")\nfor i in range(5):\n   print(deck[i][0], \"of\", deck[i][1])".trim(),P=function(e){function n(){return Object(a.a)(this,n),Object(r.a)(this,Object(i.a)(n).apply(this,arguments))}return Object(c.a)(n,e),Object(l.a)(n,[{key:"componentDidMount",value:function(){setTimeout((function(){return u.a.highlightAll()}),0)}},{key:"render",value:function(){var e=this.props.classes;return m.a.createElement(p.a,{container:!0},m.a.createElement(p.a,{item:!0,xs:2},m.a.createElement(E.a,{className:e.paper},m.a.createElement("h4",null,m.a.createElement(d.a,null)))),m.a.createElement(p.a,{item:!0,xs:10},m.a.createElement(E.a,{className:e.paper},m.a.createElement(g.a,null,m.a.createElement("h3",null,"Armstrong"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:v,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"Count_Number_of_Each_Vowel"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:y,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"Factorial"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:N,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"Fibonacci"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:_,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"Palindrome"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:k,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"Prime"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:j,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"print_prime_numbers_an_interval"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:w,language:"js",plugins:["line-numbers"]})),m.a.createElement("br",null),m.a.createElement("h3",null,"Shuffle_Deck_of_Cards"),m.a.createElement("div",{style:h},m.a.createElement(f.a,{code:O,language:"js",plugins:["line-numbers"]}))))))}}]),n}(s.Component);n.default=Object(b.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:"center"}}}))(P)}}]);
//# sourceMappingURL=244.cbe53ded.chunk.js.map