{"version":3,"sources":["components/ReactJs/prismCode.js","components/mern/sidebar.js","components/mern/projects/imageGallery.js"],"names":["PrismCode","props","highlight","ref","current","Prism","highlightElement","React","createRef","this","code","language","plugins","className","trim","Component","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","Sidebar","classes","to","titles","backgroundColor","padding","fontSize","Gallery","multer","gallerys","serverComp","types","album","albumReducer","AddAlbum","AlbumList","UploadImage","AppComp","ImageGallery","setTimeout","highlightAll","container","item","xs","style","withStyles","margin","smMargin","actionDiv","textAlign"],"mappings":"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","file":"static/js/169.a0ca2a02.chunk.js","sourcesContent":["import React from \"react\"\nimport Prism from \"prismjs\"\nimport '../dashboard/blog/styles.css'\n\nexport default class PrismCode extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  componentDidMount() {\n    this.highlight()\n  }\n\n  componentDidUpdate() {\n    this.highlight()\n  }\n\n  highlight = () => {\n    if (this.ref && this.ref.current) {\n      Prism.highlightElement(this.ref.current)\n    }\n  }\n\n  render() {\n    const { code, plugins, language } = this.props\n    return (\n      <pre className=\"code-prism\">\n        <code ref={this.ref} className={`language-${language}`}>\n          {code.trim()}\n        </code>\n      </pre>\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <MenuList>\n        <MenuItem><Link to='/setUpFiles' className={classes.line}>SetUp</Link></MenuItem>\n        <MenuItem><Link to='/javaScript' className={classes.line}>JavaScript</Link></MenuItem>\n        <MenuItem><Link to='/reactCurdMern' className={classes.line}>Mern React</Link></MenuItem>\n        <MenuItem><Link to='/4_reactCurdHooks' className={classes.line}>Mern React Hooks</Link></MenuItem>\n        <MenuItem><Link to='/pagination' className={classes.line}>Sea Sort Pagi Auth_Token</Link></MenuItem>\n        <MenuItem><Link to='/propsModel' className={classes.line}>SS pagination-Captcha</Link></MenuItem>\n        <MenuItem><Link to='/imageGallery' className={classes.line}>ImageGallery</Link></MenuItem>\n        <MenuItem><Link to='/stripes' className={classes.line}>Stripes-Signin with gfb</Link></MenuItem>\n        <MenuItem><Link to='/paginationsMern' className={classes.line}>Paginations-push_notifis</Link></MenuItem>\n        <MenuItem><Link to='/googleMap' className={classes.line}>GoogleMap</Link></MenuItem>\n        <MenuItem><Link to='/videoChat' className={classes.line}>VideoChat</Link></MenuItem>\n        <MenuItem><Link to='/qrSccaners' className={classes.line}>QrCode-reCapcha</Link></MenuItem>\n        <MenuItem><Link to='/react_share' className={classes.line}>Share-Stripe</Link></MenuItem>\n        <MenuItem><Link to='/socialSignUp' className={classes.line}>SocialSignUp</Link></MenuItem>\n        <MenuItem><Link to='/mernSocial' className={classes.line}>MernSocial</Link></MenuItem>\n      </MenuList>\n      <div>\n      </div>\n    </div>\n  );\n}\n\n","import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst Gallery = `\nconst gallerySchema = new Schema({\n  name: { type: String, required: true },\n  description: { type: String, required: false },\n  images: { type: [String], required: false, }\n});\n\nmodule.exports = mongoose.model(\"galleries\", gallerySchema);\n`.trim();\n\nconst multer = `\nconst multer = require(\"multer\");\n\nconst storage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, \"./server/uploads\");\n  },\n  filename: (req, file, cb) => {\n    cb(null, ''$'{Date.now()}_'$'{file.originalname}');\n  },\n});\n\nconst fileFilter = (req, file, cb) => {\n  if (\n    file.mimetype === \"image/jpeg\" ||\n    file.mimetype === \"image/png\" ||\n    file.mimetype === \"image/jpg\"\n  ) {\n    cb(null, true);\n  } else {\n    cb({ message: \"Unsupported file format\" }, false);\n  }\n};\n\nconst upload = multer({\n  storage: storage,\n  limits: { fileSize: 1024 * 1024 },\n  fileFilter: fileFilter,\n});\n\nmodule.exports = upload;\n`.trim();\n\nconst gallerys = `\nconst Gallery = require(\"../models/Gallery\");\nconst upload = require(\"../middlewares/multer\");\nconst fs = require(\"fs\");\n\nrouter.get(\"/\", (req, res) => {\n  Gallery.find().exec((err, galleries) => {\n    if (err)\n      return res.json({\n        status: false,\n        message: \"Server errors\",\n        result: err,\n      });\n    return res.json({\n      status: false,\n      message: \"Data found\",\n      result: galleries,\n    });\n  });\n});\n\nrouter.post(\"/add\", (req, res) => {\n  const gallery = new Gallery(req.body);\n  gallery.save((err, newGallery) => {\n    if (err)\n      return res.json({\n        status: false,\n        message: \"Server errors\",\n        result: err,\n      });\n    return res.json({\n      status: true,\n      message: \"Gallery added\",\n      result: newGallery,\n    });\n  });\n});\n\nrouter.put(\"/upload/:galleryId\", upload.array(\"image\", 3), async (req, res) => {\n  const inputfiles = req.files;\n  const images = [];\n  inputfiles.map((file) => {\n    images.push(file.filename);\n  });\n  const galleryId = req.params.galleryId;\n\n  Gallery.findOneAndUpdate(\n    { _id: galleryId },\n    { $push: { images: images } },\n    { new: true },\n    function (err, data) {\n      if (err) {\n        res.status(500).json({\n          status: false,\n          message: \"Upload error\",\n          result: err,\n        });\n      } else {\n        res.status(200).json({\n          status: true,\n          message: \"Upload successfully!\",\n          result: data,\n        });\n      }\n    }\n  );\n});\n\nrouter.get(\"/detail/:galleryId\", (req, res) => {\n  const galleryId = req.params.galleryId;\n  Gallery.findOne({ _id: galleryId }, function (err, gallery) {\n    if (err) {\n      res.status(500).json({\n        status: false,\n        message: \"Get gallery error\",\n        result: err,\n      });\n    } else {\n      res.status(200).json({\n        status: true,\n        message: \"Get gallery successfully!\",\n        result: gallery,\n      });\n    }\n  });\n});\n\nrouter.put(\"/removeImage/:galleryId\", async (req, res) => {\n  const fileName = req.body.fileName;\n  console.log(\"~~~fileName: \", fileName);\n\n  const galleryId = req.params.galleryId;\n\n  Gallery.findOneAndUpdate(\n    { _id: galleryId },\n    { $pull: { images: fileName } },\n    { new: true },\n    function (err, data) {\n      if (err) {\n        res.status(500).json({\n          status: false,\n          message: \"Remove image error\",\n          result: err,\n        });\n      } else {\n        const path = \"server/uploads/\" + fileName;\n        fs.unlinkSync(path);\n        res.status(200).json({\n          status: true,\n          message: \"Remove image successfully!\",\n          result: data,\n        });\n      }\n    }\n  );\n});\n\nmodule.exports = router;\n`.trim();\n\nconst serverComp = `\nvar path = require(\"path\");\nconst bodyParser = require(\"body-parser\");\n\napp.use(cors());\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(express.static(path.join(__dirname, \"uploads\")));\n\nvar URIstring = \"mongodb://localhost:27017/uploads\";\n\napp.use(\"/galleries\", require(\"./routes/gallery\"));\n\nmongoose.connect(URIstring, {\n  useFindAndModify: false,\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n});\n\napp.use(\"./uploads\", express.static(\"uploads\"));\n\nconst PORT = process.env.PORT || 5000;\nmodule.exports = app.listen(PORT, () => {\n  console.log(\"Server listening in port:\" + PORT);\n});\n`.trim();\n\nconst types = `\nexport const FETCH_ALBUMS = \"FETCH_ALBUMS\";\nexport const FETCH_ALBUM_DETAIL = \"FETCH_ALBUM_DETAIL\";\nexport const ADD_ALBUM = \"ADD_ALBUM\";\nexport const UPLOAD_IMAGE = \"UPLOAD_IMAGE\";\nexport const REMOVE_IMAGE = \"REMOVE_IMAGE\";\n`.trim();\n\nconst album = `\nimport axios from \"axios\";\nimport {\n  FETCH_ALBUMS,\n  FETCH_ALBUM_DETAIL,\n  ADD_ALBUM,\n  UPLOAD_IMAGE,\n  REMOVE_IMAGE,\n} from \"./types\";\n\nexport const fetchAlbums = () => {\n  const req = axios.get(\"/galleries\").then((res) => res.data);\n  return {\n    type: FETCH_ALBUMS,\n    payload: req,\n  };\n};\n\nexport const fetchAlbumDetail = (id) => {\n  const req = axios.get('/galleries/detail/'$'{id}').then((res) => res.data);\n  return {\n    type: FETCH_ALBUM_DETAIL,\n    payload: req,\n  };\n};\n\nexport const addAlbum = (data) => {\n  const req = axios.post(\"/galleries/add\", data).then((res) => res.data);\n  return {\n    type: ADD_ALBUM,\n    payload: req,\n  };\n};\n\nexport const uploadImages = (id, data, config) => {\n  const req = axios.put('/galleries/upload/'$'{id}', data, config)\n    .then((res) => res.data);\n  return {\n    type: UPLOAD_IMAGE,\n    payload: req,\n  };\n};\n\nexport const removeImage = (id, imageName) => {\n  const req = axios.put('/galleries/removeImage/'$'{id}', { fileName: imageName })\n    .then((res) => res.data);\n  return {\n    type: REMOVE_IMAGE,\n    payload: req,\n  };\n};\n`.trim();\n\nconst albumReducer = `\nimport * as ACTION_TYPES from \"../actions/types\";\n\nconst initialState = {\n  albumList: [],\n  albumDetail: {},\n  addedAlbum: {},\n};\nconst albumReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.FETCH_ALBUMS:\n      return {\n        albumList: [...action.payload.result],\n      };\n    case ACTION_TYPES.FETCH_ALBUM_DETAIL:\n      return {\n        albumDetail: action.payload.result,\n      };\n    case ACTION_TYPES.ADD_ALBUM:\n      return {\n        ...state,\n        addedAlbum: action.payload,\n      };\n    case ACTION_TYPES.UPLOAD_IMAGE:\n      return {\n        albumDetail: action.payload.result,\n      };\n    case ACTION_TYPES.REMOVE_IMAGE:\n      return {\n        albumDetail: action.payload.result,\n      };\n    default:\n      return state;\n  }\n};\nexport default albumReducer;\n`.trim();\n\nconst AddAlbum = `\nimport React, { useState, useEffect } from \"react\";\nimport { Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { addAlbum } from \"../actions/album\";\n\nfunction AddAlbum(props) {\n  const dispatch = useDispatch();\n  const [values, setvalues] = useState({});\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setvalues({\n      ...values,\n      [name]: value,\n    });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addAlbum(values)).then((res) => {\n      if (res.payload.status) {\n        // toast.success(res.payload.message);\n        console.log(\"~~~~data: \", res.payload.result._id);\n\n        props.history.push('/upload/'$'{res.payload.result._id}');\n      }\n    });\n  };\n  return (\n    <Fragment>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a href=\"/\">Albums</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            Add\n          </li>\n        </ol>\n      </nav>\n      <div className=\"card shadow-sm\">\n        <div className=\"card title p-2 bg-light\">\n          <h5>Add Album</h5>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Album Name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              className=\"form-control\"\n              placeholder=\"Enter album name\"\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Description</label>\n            <textarea\n              className=\"form-control\"\n              name=\"description\"\n              rows=\"3\"\n              onChange={handleInputChange}\n            ></textarea>\n          </div>\n          <div className=\"form-group\">\n            <button\n              type=\"button\"\n              onClick={handleSubmit}\n              className=\"btn btn-success\"\n            >\n              <i class=\"fas fa-plus\"></i> Save and next\n            </button>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default AddAlbum;\n`.trim();\n\nconst AlbumList = `\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { fetchAlbums } from \"../actions/album\";\n\nfunction AlbumList() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAlbums());\n  }, []);\n  const albumList = useSelector((state) => state.album.albumList);\n  return (\n    <div className=\"card shadow-sm\">\n      <div className=\"card-header\">\n        <h5>Album List</h5>\n      </div>\n      <div className=\"card-title p-4\">\n        <a className=\"btn btn-success\" href=\"/add\">\n          Add Album\n        </a>\n      </div>\n      <div className=\"card-body p-4\">\n        <table class=\"table border\">\n          <thead class=\"table-dark\">\n            <tr>\n              <td>No</td>\n              <td>Album Name</td>\n              <td>Description</td>\n              <td>Image Count</td>\n              <td>Actions</td>\n            </tr>\n          </thead>\n          <tbody>\n            {albumList.map((album, index) => (\n              <tr>\n                <th scope=\"row\">{index + 1}</th>\n                <td>{album.name}</td>\n                <td>{album.description}</td>\n                <td>{album.images.length}</td>\n                <td>\n                  <a class=\"btn btn-info\" href={'/upload/'$'{album._id}'}>\n                    <i class=\"fas fa-image\"></i>\n                  </a>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default AlbumList;\n`.trim();\n\nconst UploadImage = `\nimport React, { useState, useEffect } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { uploadImages, fetchAlbumDetail, removeImage } from \"../actions/album\";\n\nfunction UploadImage(props) {\n  const dispatch = useDispatch();\n  const albumId = props.match.params.id;\n  //   const [albumInfo, setAlbumInfo] = useState({});\n  const albumDetail = useSelector((state) => state.album.albumDetail);\n\n  useEffect(() => {\n    dispatch(fetchAlbumDetail(albumId));\n  }, []);\n\n  const onDrop = (files) => {\n    let formData = new FormData();\n    const config = {\n      header: { \"content-type\": \"multipart/form-data\" },\n    };\n    files.map((file, index) => {\n      formData.append(\"image\", file);\n    });\n\n    dispatch(uploadImages(albumId, formData, config)).then((res) => {\n      if (res.payload.status) {\n        toast.success(res.payload.message);\n      }\n    });\n  };\n\n  const handleDelete = (albumId, imageName) => {\n    dispatch(removeImage(albumId, imageName)).then((res) => {\n      if (res.payload.status) {\n        toast.success(res.payload.message);\n      }\n    });\n  };\n  return (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a href=\"/\">Albums</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            Upload\n          </li>\n        </ol>\n      </nav>\n      <div className=\"card shadow-sm\">\n        <div className=\"card-header\">\n          <h5>Upload Image for Album {albumDetail.name}</h5>\n        </div>\n        <div className=\"card-body\">\n          <Dropzone onDrop={onDrop}>\n            {({ getRootProps, getInputProps }) => (\n              <div\n                className=\"m-1\"\n                style={{\n                  width: \"350px\",\n                  height: \"240px\",\n                  border: \"1px solid lightgray\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n                {...getRootProps()}\n              >\n                <input {...getInputProps()} />\n                <p>Drag and drop files here or click to upload</p>\n              </div>\n            )}\n          </Dropzone>\n          <div className=\"row m-1\">\n            {albumDetail.images &&\n              albumDetail.images.map((image, index) => (\n                <div className=\"card col-md-3 mb-2\">\n                  <div className=\"card-header bg-white\">\n                    <span>{image}</span>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-danger float-end\"\n                      onClick={() => handleDelete(albumId, image)}\n                    >\n                      <i class=\"fas fa-backspace\"></i>\n                    </button>\n                  </div>\n                  <div className=\"card-body p-1\">\n                    <img\n                      style={{ width: \"100%\", maxHeight: \"180px\" }}\n                      class=\"img-thumbnail\"\n                      src={'http://localhost:5000/'$'{image}'}\n                    />\n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UploadImage;\n`.trim();\n\nconst AppComp = `\nimport React from \"react\";\nimport AlbumList from \"./components/AlbumList\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport AddAlbum from \"./components/AddAlbum\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport UploadImage from \"./components/UploadImage\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <ToastContainer />\n      <div className=\"container\">\n        <Route path=\"/\" exact component={AlbumList} />\n        <Route path=\"/add\" exact component={AddAlbum} />\n        <Route path=\"/upload/:id\" exact component={UploadImage} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n`.trim();\n\n\nclass ImageGallery extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1.Image Gallery</h3>\n              <b>models/Gallery.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={Gallery}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>middlewares/multer.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={multer}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>routes/gallery.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={gallerys}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>server</b>\n              <br />\n              Create a folder \"uploads\" with server.js file.\n              <div style={titles}>\n                <PrismCode\n                  code={serverComp}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Client</h3>\n              <b>actions/types.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={types}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>actions/album.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={album}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>reducers/albumReducer.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={albumReducer}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>components/AddAlbum.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={AddAlbum}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>components/AlbumList.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={AlbumList}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>components/UploadImage.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={UploadImage}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>components/App.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={AppComp}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(ImageGallery));\n"],"sourceRoot":""}