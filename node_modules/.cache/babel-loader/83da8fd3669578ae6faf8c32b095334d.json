{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/angularjsd/angular 12/angularCurd.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst curd = `\n//app.module.ts: import { FormsModule } from '@angular/forms';\n\n//app.component.ts\nexport class AppComponent  {\n  name = 'Angular';\n  newEmployeeClick=false\n  empl=[\n    {id:1, name:'a', positions:'a'},\n    {id:2, name:'b', positions:'a'},\n    {id:3, name:'c', positions:'a'},\n  ];\n\n  constructor(){}\n  ngOnInit(){}\n\n  model:any={};\n  model2:any={}\n\n  addEmployee(){\n    this.empl.push(this.model);\n    this.model={}\n  }\n\n  saveButton(){\n    this.newEmployeeClick=!this.newEmployeeClick;\n  }\n\n  deleteEmployee(i){\n    this.empl.splice(i)\n  }\n\n  myValue;\n  editEmployee(editEmpl){\n    this.model2.name = this.empl[editEmpl].name;\n    this.model2.positions = this.empl[editEmpl].positions\n    this.myValue = editEmpl;\n\n  }\n\n  updateEmpl(){\n    let editEmpl = this.myValue;\n    for(let i=0; i<this.empl.length; i++){\n      if(i == editEmpl){\n        this.empl[i] = this.model2;\n        console.log('ss', this.model2)\n        this.model2 = {};\n      }\n    }\n  }\n}\n\n\n\n//app.component.html\n<p>Add Employee</p>\n<div (click)=\"saveButton()\">add</div>\n<div *ngIf=\"newEmployeeClick\">\n  <form>\n    <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"model.name\" >\n    <input type=\"text\" id=\"positions\" name=\"positions\" [(ngModel)]=\"model.positions\" >\n\n    <button type=\"submit\" (click)=\"addEmployee()\">Save</button>\n  </form>\n</div>\n\n<div *ngFor=\"let empls of empl; let i = index\">\n  {{empls.name}}\n  {{empls.positions}}\n<div>\n  <button (click)=\"editEmployee(i)\">E</button>\n  <button (click)=\"deleteEmployee(i)\">X</button>\n</div>\n</div>\n\n<p>Edit Employee</p>\n<form>\n    <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"model2.name\">\n    <input type=\"text\" id=\"positions\" name=\"positions\" [(ngModel)]=\"model2.positions\">\n  <button type=\"submit\" (click)=\"updateEmpl()\">Update</button>\n</form>`.trim();\n\nclass AngularCurd12 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Curd\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: curd,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(AngularCurd12);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/angularjsd/angular 12/angularCurd.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","curd","trim","AngularCurd12","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,EAAkCC,IAAlC,QAA8C,mBAA9C;AAEA,OAAO,0BAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAGA,MAAMC,MAAM,GAAG;AAAEC,EAAAA,eAAe,EAAE,SAAnB;AAA8BC,EAAAA,OAAO,EAAE,KAAvC;AAA8CC,EAAAA,QAAQ,EAAE;AAAxD,CAAf;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH;AAELN,IAAAA,OAAO,EAAEG,KAAK,CAACG,OAAN,CAAc,CAAd;AAFJ,GADgB;AAKvBC,EAAAA,QAAQ,EAAE;AACRF,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADA,GALa;AAQvBE,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF;AARY,CAAL,CAApB;;AAcA,MAAMC,IAAI,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAAD,CAgFJC,IAhFI,EAAb;;AAoFA,MAAMC,aAAN,SAA4BtB,SAA5B,CAAsC;AACpCuB,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,UAAU,CAAC,MAAMvB,KAAK,CAACwB,YAAN,EAAP,EAA6B,CAA7B,CAAV;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,WACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAED,OAAO,CAACb,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CADF,CADF,CADF,EAME,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEa,OAAO,CAACb,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAK,MAAA,KAAK,EAAEN,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEY,IADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF,CADF,CANF,CADF;AAuBD;;AA7BmC;;AAgCtC,eAAgBhB,UAAU,CAACQ,MAAD,CAAV,CAAmBU,aAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst curd = `\n//app.module.ts: import { FormsModule } from '@angular/forms';\n\n//app.component.ts\nexport class AppComponent  {\n  name = 'Angular';\n  newEmployeeClick=false\n  empl=[\n    {id:1, name:'a', positions:'a'},\n    {id:2, name:'b', positions:'a'},\n    {id:3, name:'c', positions:'a'},\n  ];\n\n  constructor(){}\n  ngOnInit(){}\n\n  model:any={};\n  model2:any={}\n\n  addEmployee(){\n    this.empl.push(this.model);\n    this.model={}\n  }\n\n  saveButton(){\n    this.newEmployeeClick=!this.newEmployeeClick;\n  }\n\n  deleteEmployee(i){\n    this.empl.splice(i)\n  }\n\n  myValue;\n  editEmployee(editEmpl){\n    this.model2.name = this.empl[editEmpl].name;\n    this.model2.positions = this.empl[editEmpl].positions\n    this.myValue = editEmpl;\n\n  }\n\n  updateEmpl(){\n    let editEmpl = this.myValue;\n    for(let i=0; i<this.empl.length; i++){\n      if(i == editEmpl){\n        this.empl[i] = this.model2;\n        console.log('ss', this.model2)\n        this.model2 = {};\n      }\n    }\n  }\n}\n\n\n\n//app.component.html\n<p>Add Employee</p>\n<div (click)=\"saveButton()\">add</div>\n<div *ngIf=\"newEmployeeClick\">\n  <form>\n    <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"model.name\" >\n    <input type=\"text\" id=\"positions\" name=\"positions\" [(ngModel)]=\"model.positions\" >\n\n    <button type=\"submit\" (click)=\"addEmployee()\">Save</button>\n  </form>\n</div>\n\n<div *ngFor=\"let empls of empl; let i = index\">\n  {{empls.name}}\n  {{empls.positions}}\n<div>\n  <button (click)=\"editEmployee(i)\">E</button>\n  <button (click)=\"deleteEmployee(i)\">X</button>\n</div>\n</div>\n\n<p>Edit Employee</p>\n<form>\n    <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"model2.name\">\n    <input type=\"text\" id=\"positions\" name=\"positions\" [(ngModel)]=\"model2.positions\">\n  <button type=\"submit\" (click)=\"updateEmpl()\">Update</button>\n</form>`.trim();\n\n\n\nclass AngularCurd12 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Curd</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={curd}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(AngularCurd12));\n"]},"metadata":{},"sourceType":"module"}