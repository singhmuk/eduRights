{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import\"../../ReactJs/styles.css\";import Sidebar from\"../sidebar\";import PrismCode from\"../../ReactJs/prismCode\";var titles={backgroundColor:\"#F0F8FF\",padding:\"1px\",fontSize:\"16px\"};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var creaditCard=\"\\n//import CreditCardDirective in app.module.ts\\n\\nimport { Directive, HostListener, HostBinding } from '@angular/core';\\n\\n@Directive({\\n  selector: '[credit-card]'\\n})\\nexport class CreditCardDirective {\\n\\n  @HostBinding('style.border')\\n  border: string;\\n\\n  @HostListener('input', ['$event'])\\n  onKeyDown(event: KeyboardEvent) {\\n    const input = event.target as HTMLInputElement;\\n    let trimmed = input.value.replace(/s+/g, '');\\n    if(trimmed.length > 16) {\\n      trimmed = trimmed.substr(0, 16);\\n    }\\n    let numbers = [];\\n    for(let i = 0; i < trimmed.length; i += 4) {\\n      numbers.push(trimmed.substr(i, 4));\\n    }\\n    input.value = numbers.join(' ');\\n\\n    this.border = '';\\n    if(/[^d]+/.test(trimmed)) {\\n      this.border = '1px solid red';\\n    }\\n  }\\n}\\n\\n\\n//app.component.ts\\n@Component({\\n  selector: 'app-root',\\n  template: '\\n  < div >\\n  <label>Credit Card Number\\n    <input\\n      name=\\\"credit-card\\\"\\n      type=\\\"text\\\"\\n      credit-card>\\n      </label>\\n    </div>\\n      ',\\n    })\\n\\nexport class AppComponent  {}\\n\".trim();var debounce=\"\\n//debounce-click.directive.ts\\nimport { Directive, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\\nimport { Subject, Subscription } from 'rxjs';\\nimport { debounceTime } from 'rxjs/operators';\\n\\n@Directive({\\n  selector: '[appDebounceClick]'\\n})\\nexport class DebounceClickDirective implements OnInit, OnDestroy {\\n  @Input() debounceTime = 500;\\n  @Output() debounceClick = new EventEmitter();\\n  private clicks = new Subject();\\n  private subscription: Subscription;\\n\\n  constructor() { }\\n\\n  ngOnInit() {\\n    this.subscription = this.clicks.pipe(\\n      debounceTime(this.debounceTime)\\n    ).subscribe(e => this.debounceClick.emit(e));\\n  }\\n\\n  ngOnDestroy() {\\n    this.subscription.unsubscribe();\\n  }\\n\\n  @HostListener('click', ['$event'])\\n  clickEvent(event) {\\n    event.preventDefault();\\n    event.stopPropagation();\\n    this.clicks.next(event);\\n  }\\n}\\n\\n\\n//app.component.ts\\n@Component({\\n  selector: 'app-root',\\n  template: '\\n  <h1> Creating a Custom Debounce Click Directive in Angular</h1>\\n    {{count}}\\n      <br />\\n      <button (click) = \\\"log()\\\"> Regular Click</button>\\n      & nbsp;\\n<button appDebounceClick (debounceClick) = \\\"log()\\\" [debounceTime] = \\\"700\\\"> Debounced Click</button>\\n    ',\\n  })\\nexport class AppComponent  {\\n   count = 0;\\n\\n  log() {\\n    this.count++;\\n    console.log('Clicked!');\\n  }\\n}\\n\".trim();var truncates=\"\\n//truncate.pipe.ts\\nimport { Pipe, PipeTransform } from '@angular/core';\\n\\n@Pipe({ name: 'truncate' })\\nexport class TruncatePipe implements PipeTransform {\\n\\n  transform(value: string, limit: number): string {\\n    return value.length < limit\\n      ? value\\n      : value.slice(0, limit) + '...';\\n  }\\n}\\n\\n\\n//app.component.ts\\n@Component({\\n  selector: 'app-root',\\n  template: \\n  <p> {{'this is a not so long string' | truncate}}</p>\\n    <p>{{'this is a not so long string' | truncate : 20}}</p>\\n      ',\\n    })\\n\\nexport class AppComponent  {}\\n\".trim();var Debounce=/*#__PURE__*/function(_Component){_inherits(Debounce,_Component);function Debounce(){_classCallCheck(this,Debounce);return _possibleConstructorReturn(this,_getPrototypeOf(Debounce).apply(this,arguments));}_createClass(Debounce,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"1. Credit Card Input\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:creaditCard,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"2. Debounce\"),React.createElement(\"ul\",null,React.createElement(\"li\",null,\"This directive is used to help prevent duplicate actions.\"),React.createElement(\"li\",null,\"The Directive API is a particular way to add behavior to existing DOM elements or components. For our use case, we want to debounce or delay click events from occurring when an element is a click.\")),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:debounce,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"3. Truncates\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:truncates,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null)))));}}]);return Debounce;}(Component);export default withStyles(styles)(Debounce);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/angularjsd/angular 12/debounce.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","creaditCard","trim","debounce","truncates","Debounce","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAEA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,QAAY,CACzBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADkB,CAKzBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALe,CAQzBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARc,CAAZ,EAAf,CAaA,GAAMC,CAAAA,WAAW,CAAG,gjCAkDlBC,IAlDkB,EAApB,CAoDA,GAAMC,CAAAA,QAAQ,CAAG,u3CAwDfD,IAxDe,EAAjB,CA0DA,GAAME,CAAAA,SAAS,CAAG,mjBAyBhBF,IAzBgB,EAAlB,C,GA2BMG,CAAAA,Q,gSACgB,CAClBC,UAAU,CAAC,iBAAMxB,CAAAA,KAAK,CAACyB,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACb,KAA1B,EACE,8BACE,oBAAC,OAAD,MADF,CADF,CADF,CADF,CAQE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEa,OAAO,CAACb,KAA1B,EACE,oBAAC,IAAD,MACE,qDADF,CAEE,2BAAK,KAAK,CAAEN,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEY,WADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAFF,CASE,8BATF,CAWE,4CAXF,CAYE,8BACE,0FADF,CAIE,qOAJF,CAZF,CAuBE,2BAAK,KAAK,CAAEZ,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEc,QADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAvBF,CA8BE,8BA9BF,CAgCE,6CAhCF,CAiCE,2BAAK,KAAK,CAAEd,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEe,SADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAjCF,CAwCE,8BAxCF,CADF,CADF,CARF,CADF,CAyDD,C,sBA/DoBvB,S,EAkEvB,cAAeI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBY,QAAnB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport \"../../ReactJs/styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../../ReactJs/prismCode\";\n\nconst titles = { backgroundColor: \"#F0F8FF\", padding: \"1px\", fontSize: \"16px\" };\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n});\n\nconst creaditCard = `\n//import CreditCardDirective in app.module.ts\n\nimport { Directive, HostListener, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[credit-card]'\n})\nexport class CreditCardDirective {\n\n  @HostBinding('style.border')\n  border: string;\n\n  @HostListener('input', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    const input = event.target as HTMLInputElement;\n    let trimmed = input.value.replace(/\\s+/g, '');\n    if(trimmed.length > 16) {\n      trimmed = trimmed.substr(0, 16);\n    }\n    let numbers = [];\n    for(let i = 0; i < trimmed.length; i += 4) {\n      numbers.push(trimmed.substr(i, 4));\n    }\n    input.value = numbers.join(' ');\n\n    this.border = '';\n    if(/[^\\d]+/.test(trimmed)) {\n      this.border = '1px solid red';\n    }\n  }\n}\n\n\n//app.component.ts\n@Component({\n  selector: 'app-root',\n  template: '\n  < div >\n  <label>Credit Card Number\n    <input\n      name=\"credit-card\"\n      type=\"text\"\n      credit-card>\n      </label>\n    </div>\n      ',\n    })\n\nexport class AppComponent  {}\n`.trim();\n\nconst debounce = `\n//debounce-click.directive.ts\nimport { Directive, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Directive({\n  selector: '[appDebounceClick]'\n})\nexport class DebounceClickDirective implements OnInit, OnDestroy {\n  @Input() debounceTime = 500;\n  @Output() debounceClick = new EventEmitter();\n  private clicks = new Subject();\n  private subscription: Subscription;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.subscription = this.clicks.pipe(\n      debounceTime(this.debounceTime)\n    ).subscribe(e => this.debounceClick.emit(e));\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  @HostListener('click', ['$event'])\n  clickEvent(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.clicks.next(event);\n  }\n}\n\n\n//app.component.ts\n@Component({\n  selector: 'app-root',\n  template: '\n  <h1> Creating a Custom Debounce Click Directive in Angular</h1>\n    {{count}}\n      <br />\n      <button (click) = \"log()\"> Regular Click</button>\n      & nbsp;\n<button appDebounceClick (debounceClick) = \"log()\" [debounceTime] = \"700\"> Debounced Click</button>\n    ',\n  })\nexport class AppComponent  {\n   count = 0;\n\n  log() {\n    this.count++;\n    console.log('Clicked!');\n  }\n}\n`.trim();\n\nconst truncates = `\n//truncate.pipe.ts\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'truncate' })\nexport class TruncatePipe implements PipeTransform {\n\n  transform(value: string, limit: number): string {\n    return value.length < limit\n      ? value\n      : value.slice(0, limit) + '...';\n  }\n}\n\n\n//app.component.ts\n@Component({\n  selector: 'app-root',\n  template: \n  <p> {{'this is a not so long string' | truncate}}</p>\n    <p>{{'this is a not so long string' | truncate : 20}}</p>\n      ',\n    })\n\nexport class AppComponent  {}\n`.trim();\n\nclass Debounce extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4>\n              <Sidebar />\n            </h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. Credit Card Input</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={creaditCard}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>2. Debounce</h3>\n              <ul>\n                <li>\n                  This directive is used to help prevent duplicate actions.\n                </li>\n                <li>\n                  The Directive API is a particular way to add behavior to\n                  existing DOM elements or components. For our use case, we want\n                  to debounce or delay click events from occurring when an\n                  element is a click.\n                </li>\n              </ul>\n              <div style={titles}>\n                <PrismCode\n                  code={debounce}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>3. Truncates</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={truncates}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Debounce);\n"]},"metadata":{},"sourceType":"module"}