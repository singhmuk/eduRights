{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/nodeJs/nodeDeep/ejsNode.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst todoList = `\n\n          items: defaultItems\n        });\n\n        list.save();\n\n        res.redirect(\"/\" + customListName);\n      } else {\n        // Show an existing list\n\n        res.render(\"list\", {\n          listTitle: foundList.name,\n          listItems: foundList.items\n        });\n      }\n    }\n  });\n});\n\napp.post(\"/\", function (req, res) {\n\n  const listName = req.body.listSubmit;\n  const itemName = req.body.newTodo;\n\n  const newItem = new Item({\n    name: itemName\n  });\n\n  if (listName === \"Today\") {\n    newItem.save();\n    res.redirect(\"/\");\n  } else {\n    List.findOne({ name: listName }, function (err, foundList) {\n      if (!err) {\n        if (foundList) {\n          foundList.items.push(newItem);\n          foundList.save();\n\n          res.redirect(\"/\" + listName);\n        }\n      }\n    });\n  }\n\n});\n\napp.post(\"/delete\", function (req, res) {\n  const checkedItemId = req.body.checkbox;\n  const listName = req.body.listName;\n\n  // Home Route\n  if (listName === \"Today\") {\n    Item.findByIdAndRemove(checkedItemId, function (err) {\n      if (err) {\n        console.log(\"Error deleting item\");\n      } else {\n        console.log(\"Successfully deleted the item\");\n      }\n    });\n\n    res.redirect(\"/\");\n  } else {\n    List.findOneAndUpdate({ name: listName }, { $pull: { items: { _id: checkedItemId } } }, function (err, foundList) {\n      if (!err) {\n        res.redirect(\"/\" + listName);\n      }\n    });\n  }\n\n});\n\nlet port = process.env.PORT;\nif (port == null || port == \"\") {\n  port = 3000;\n}\napp.listen(port);\n\n\n\n\n//date.js\nexports.getDate = function () {\n  const today = new Date();\n\n  const options = {\n    weekday: 'long',\n    day: 'numeric',\n    month: 'long'\n  };\n\n  return today.toLocaleDateString(\"en-US\", options);\n}\n\nexports.getDay = function() {\n  const today = new Date();\n\n  const options = {\n    weekday: 'long'\n  };\n\n  return today.toLocaleDateString(\"en-US\", options);\n}\n\n\n\n//index.html\n<body>\n    <h1>It's the weekend!</h1>\n  </body>\n`.trim();\nconst todoListEjs = `\n//views/header.ejs\n<head>\n  <meta charset=\"utf-8\">\n  <title>To Do List</title>\n  <link rel=\"stylesheet\" href=\"css/styles.css\">\n</head>\n\n\n//views/footer.ejs\n<footer>\n  Anand Batjargal 2019\n</footer>\n\n\n//views/list.ejs\n\n<%- include(\"header\") -%>\n\n<body>\n\n  <div class=\"box\" id=\"heading\">\n    <h1>\n      <%= listTitle %>\n    </h1>\n  </div>\n\n  <div class=\"box\">\n    <% for(var i = 0; i < listItems.length; i++){ %>\n    <div class=\"item\">\n      <input type=\"checkbox\">\n      <p>\n        <%= listItems[i] %>\n      </p>\n    </div>\n    <% } %>\n\n    <form class=\"item\" action=\"/\" method=\"post\">\n      <input type=\"text\" name=\"newTodo\" placeholder=\"New Item\" autocomplete=\"off\">\n      <button type=\"submit\" name=\"listSubmit\" value=<%= listTitle %>>+</button>\n    </form>\n  </div>\n\n</body>\n\n<%- include(\"footer\") -%>\n`.trim();\nconst blogWebsite = `\nconst express = require(\"express\");\nconst bodyParser = require(\"body-parser\");\nconst ejs = require(\"ejs\");\nconst kebabCase = require('lodash/kebabCase');\nconst mongoose = require('mongoose');\n\nmongoose.connect(\"mongodb://localhost:27017/blogDB\", { useNewUrlParser:true} );\n\nconst homeStartingContent = \"Home Starting Content.\";\nconst aboutContent = \"About Content.\";\nconst contactContent = \"Contact Content\";\n\nconst app = express();\n\nconst postSchema = new mongoose.Schema({\n  title: String,\n  body: String\n});\n\nconst Post = mongoose.model(\"Post\", postSchema);\n\napp.set('view engine', 'ejs');\n\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(express.static(\"public\"));\n\napp.get(\"/\", function(req, res) {\n\n  Post.find(function(err, posts){\n    if(err){\n      console.log(err);\n    }else{\n      res.render(\"home\", {\n        homeStartingContent: homeStartingContent,\n        posts: posts\n      });\n    }\n  });\n});\n\napp.get(\"/about\", function(req, res) {\n  res.render(\"about\", {\n    aboutContent: aboutContent\n  });\n});\n\napp.get(\"/contact\", function(req, res) {\n  res.render(\"contact\", {\n    contactContent: contactContent\n  });\n});\n\napp.get(\"/compose\", function(req, res) {\n  res.render(\"compose\");\n});\n\napp.get(\"/posts/:postId\", function(req, res) {\n  const postId = req.params.postId;\n\n  Post.findById(postId, function(err, post){\n    if(err){\n      console.log(err);\n    }else{\n      res.render(\"post\", {\n        postTitle : post.title,\n        postBody : post.body\n      });\n    }\n  });\n});\n\napp.post(\"/\", function(req, res) {\n  console.log(req.body.journalEntry);\n});\n\napp.post(\"/compose\", function(req, res) {\n  const post = new Post({\n    title: req.body.postTitle,\n    body: req.body.postBody\n  });\n\n  post.save(function(err){\n    if(!err){\n      res.redirect(\"/\");\n    }\n  });\n});\n\n\napp.listen(3000, function() {console.log(\"Server started on port 3000\")});\n`.trim();\nconst viewEjs = `\n//views/about.ejs\n<%- include(\"partials/header\") -%>\n\n<h1>About</h1>\n<p><%= aboutContent %></p>\n<%- include(\"partials/footer\") -%>\n\n\n//views/compose.ejs\n<%- include(\"partials/header\") -%>\n\n<h1>Compose</h1>\n\n<form class=\"form-group\" action=\"/compose\" method=\"post\">\n  <div class=\"form-group\">\n    <label>Title</label>\n    <input class=\"form-control\" type=\"text\" name=\"postTitle\">\n    <label>Post</label>\n    <textarea class=\"form-control\" name=\"postBody\" rows=\"5\" cols=\"30\"></textarea>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">Publish</button>\n</form>\n<%- include(\"partials/footer\") -%>\n\n\n//views/contact.ejs\n<%- include(\"partials/header\") -%>\n\n<h1>Contact</h1>\n\n<p> <%= contactContent %></p>\n<%- include(\"partials/footer\") -%>\n\n\n//views/home.ejs\n<%- include(\"partials/header\") -%>\n<h1>Home</h1>\n\n<p><%= homeStartingContent %></p>\n\n<% posts.forEach(function(post){ %>\n<h1><%= post.title %></h1>\n<p>\n  <%= post.body.substring(0, 100) + \"...\" %>\n  <a href=\"<%= \"/posts/\" + post.title %>\">Read More</a>\n</p>\n<% });%>\n<%- include(\"partials/footer\") -%>\n\n\n//views/post.ejs\n<%- include(\"partials/header\") -%>\n\n<h1><%=postTitle%></h1>\n<p><%=postBody%></p>\n\n<%- include(\"partials/footer\") -%>\n`.trim();\nconst partials = `\n//views/partials/header.ejs\n<head>\n  <meta charset=\"utf-8\">\n  <title>Daily Journal</title>\n  <meta charset=\"utf-8\">\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n  <link rel=\"stylesheet\" href=\"/css/styles.css\">\n  <nav class=\"navbar navbar-default\">\n    <div class=\"container\">\n      <div class=\"navbar-header\">\n        <p class=\"navbar-brand\">DAILY JOURNAL</p>\n      </div>\n        <ul class=\"nav navbar-nav navbar-right\">\n          <!-- 6 -->\n          <li id=\"home\"><a href=\"/\">HOME</a></li>\n          <li id=\"about\"><a href=\"/about\">ABOUT</a></li>\n          <li id=\"contact\"><a href=\"/contact\">CONTACT</a></li>\n        </ul>\n    </div>\n  </nav>\n\n  <body>\n    <div class=\"container\">\n\n    \n//views/partials/footer.ejs\n</div>\n<div class=\"footer-padding\"></div>\n  <div class=\"footer\">\n    <p>Anand Batjargal 2019</p>\n  </div>\n</div>\n</body>\n`.trim();\nconst fruitsProject = `\nconst mongoose = require('mongoose');\n\nmongoose.connect(\"mongodb://localhost:27017/fruitsDB\", { useNewUrlParser: true });\n\nconst fruitSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, \"What's the name of the fruit?\"]\n  },\n  rating: {\n    type: Number,\n    min: 1,\n    max: 10\n  },\n  review: String\n});\n\n// First Parm: String, singular, name of collection,\n// in MongoDB it will be saved all lower case\n// Second Parm: Scheme\nconst Fruit = mongoose.model(\"Fruit\", fruitSchema);\n\nconst fruit = new Fruit({\n  name: \"Apple\",\n  rating: 7,\n  review: \"Pretty solid as a fruit.\"\n});\n\n//fruit.save();\n\nconst personSchema = new mongoose.Schema({\n  name: String,\n  age: Number,\n  favoriteFruit: fruitSchema\n});\n\nconst Person = mongoose.model(\"Person\", personSchema);\n\n//personJohn.save();\n\nconst banana = new Fruit({\n  name: \"Banana\",\n  rating: 6,\n  review: \"Weird texture.\"\n});\n\nconst person = new Person({\n  name: \"Kevin\",\n  age: 25,\n  favoriteFruit: banana\n});\n\nconst orange = new Fruit({\n  name: \"Orange\",\n  rating: 8,\n  review: \"Tastes great.\"\n});\n\n// person.save();\nPerson.updateOne({ name: \"John\" }, { favoriteFruit: orange }, function (err) {\n  if (err) {\n    console.log(err);\n  } else {\n    console.log(\"Success\");\n  }\n});\n\nconst kiwi = new Fruit({\n  name: \"Kiwi\",\n  rating: 4,\n  review: \"Too sweet for me.\"\n});\n\nFruit.insertMany([banana, kiwi, orange], function (err) {\n  if (err) {\n    console.log(err);\n  } else {\n    console.log(\"Successfully saved all the fruits\");\n  }\n});\n\nFruit.find(function (err, fruits) {\n  if (err) {\n    console.log(err);\n  } else {\n    mongoose.connection.close();\n\n    fruits.forEach(function (fruit) {\n      console.log(fruit.name);\n    });\n  }\n});\n`.trim();\n\nclass Ejs extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, \"1. ToDo List\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: todoList,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, \"ejs\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: todoListEjs,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, \"2. Blog-website\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: blogWebsite,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, \"views/\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: viewEjs,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, \"views/partials\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: partials,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    }, \"3. Fruits\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: fruitsProject,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(Ejs);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/nodeJs/nodeDeep/ejsNode.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","todoList","trim","todoListEjs","blogWebsite","viewEjs","partials","fruitsProject","Ejs","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst todoList = `\n\n          items: defaultItems\n        });\n\n        list.save();\n\n        res.redirect(\"/\" + customListName);\n      } else {\n        // Show an existing list\n\n        res.render(\"list\", {\n          listTitle: foundList.name,\n          listItems: foundList.items\n        });\n      }\n    }\n  });\n});\n\napp.post(\"/\", function (req, res) {\n\n  const listName = req.body.listSubmit;\n  const itemName = req.body.newTodo;\n\n  const newItem = new Item({\n    name: itemName\n  });\n\n  if (listName === \"Today\") {\n    newItem.save();\n    res.redirect(\"/\");\n  } else {\n    List.findOne({ name: listName }, function (err, foundList) {\n      if (!err) {\n        if (foundList) {\n          foundList.items.push(newItem);\n          foundList.save();\n\n          res.redirect(\"/\" + listName);\n        }\n      }\n    });\n  }\n\n});\n\napp.post(\"/delete\", function (req, res) {\n  const checkedItemId = req.body.checkbox;\n  const listName = req.body.listName;\n\n  // Home Route\n  if (listName === \"Today\") {\n    Item.findByIdAndRemove(checkedItemId, function (err) {\n      if (err) {\n        console.log(\"Error deleting item\");\n      } else {\n        console.log(\"Successfully deleted the item\");\n      }\n    });\n\n    res.redirect(\"/\");\n  } else {\n    List.findOneAndUpdate({ name: listName }, { $pull: { items: { _id: checkedItemId } } }, function (err, foundList) {\n      if (!err) {\n        res.redirect(\"/\" + listName);\n      }\n    });\n  }\n\n});\n\nlet port = process.env.PORT;\nif (port == null || port == \"\") {\n  port = 3000;\n}\napp.listen(port);\n\n\n\n\n//date.js\nexports.getDate = function () {\n  const today = new Date();\n\n  const options = {\n    weekday: 'long',\n    day: 'numeric',\n    month: 'long'\n  };\n\n  return today.toLocaleDateString(\"en-US\", options);\n}\n\nexports.getDay = function() {\n  const today = new Date();\n\n  const options = {\n    weekday: 'long'\n  };\n\n  return today.toLocaleDateString(\"en-US\", options);\n}\n\n\n\n//index.html\n<body>\n    <h1>It's the weekend!</h1>\n  </body>\n`.trim();\n\nconst todoListEjs = `\n//views/header.ejs\n<head>\n  <meta charset=\"utf-8\">\n  <title>To Do List</title>\n  <link rel=\"stylesheet\" href=\"css/styles.css\">\n</head>\n\n\n//views/footer.ejs\n<footer>\n  Anand Batjargal 2019\n</footer>\n\n\n//views/list.ejs\n\n<%- include(\"header\") -%>\n\n<body>\n\n  <div class=\"box\" id=\"heading\">\n    <h1>\n      <%= listTitle %>\n    </h1>\n  </div>\n\n  <div class=\"box\">\n    <% for(var i = 0; i < listItems.length; i++){ %>\n    <div class=\"item\">\n      <input type=\"checkbox\">\n      <p>\n        <%= listItems[i] %>\n      </p>\n    </div>\n    <% } %>\n\n    <form class=\"item\" action=\"/\" method=\"post\">\n      <input type=\"text\" name=\"newTodo\" placeholder=\"New Item\" autocomplete=\"off\">\n      <button type=\"submit\" name=\"listSubmit\" value=<%= listTitle %>>+</button>\n    </form>\n  </div>\n\n</body>\n\n<%- include(\"footer\") -%>\n`.trim();\n\nconst blogWebsite = `\nconst express = require(\"express\");\nconst bodyParser = require(\"body-parser\");\nconst ejs = require(\"ejs\");\nconst kebabCase = require('lodash/kebabCase');\nconst mongoose = require('mongoose');\n\nmongoose.connect(\"mongodb://localhost:27017/blogDB\", { useNewUrlParser:true} );\n\nconst homeStartingContent = \"Home Starting Content.\";\nconst aboutContent = \"About Content.\";\nconst contactContent = \"Contact Content\";\n\nconst app = express();\n\nconst postSchema = new mongoose.Schema({\n  title: String,\n  body: String\n});\n\nconst Post = mongoose.model(\"Post\", postSchema);\n\napp.set('view engine', 'ejs');\n\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(express.static(\"public\"));\n\napp.get(\"/\", function(req, res) {\n\n  Post.find(function(err, posts){\n    if(err){\n      console.log(err);\n    }else{\n      res.render(\"home\", {\n        homeStartingContent: homeStartingContent,\n        posts: posts\n      });\n    }\n  });\n});\n\napp.get(\"/about\", function(req, res) {\n  res.render(\"about\", {\n    aboutContent: aboutContent\n  });\n});\n\napp.get(\"/contact\", function(req, res) {\n  res.render(\"contact\", {\n    contactContent: contactContent\n  });\n});\n\napp.get(\"/compose\", function(req, res) {\n  res.render(\"compose\");\n});\n\napp.get(\"/posts/:postId\", function(req, res) {\n  const postId = req.params.postId;\n\n  Post.findById(postId, function(err, post){\n    if(err){\n      console.log(err);\n    }else{\n      res.render(\"post\", {\n        postTitle : post.title,\n        postBody : post.body\n      });\n    }\n  });\n});\n\napp.post(\"/\", function(req, res) {\n  console.log(req.body.journalEntry);\n});\n\napp.post(\"/compose\", function(req, res) {\n  const post = new Post({\n    title: req.body.postTitle,\n    body: req.body.postBody\n  });\n\n  post.save(function(err){\n    if(!err){\n      res.redirect(\"/\");\n    }\n  });\n});\n\n\napp.listen(3000, function() {console.log(\"Server started on port 3000\")});\n`.trim();\n\nconst viewEjs = `\n//views/about.ejs\n<%- include(\"partials/header\") -%>\n\n<h1>About</h1>\n<p><%= aboutContent %></p>\n<%- include(\"partials/footer\") -%>\n\n\n//views/compose.ejs\n<%- include(\"partials/header\") -%>\n\n<h1>Compose</h1>\n\n<form class=\"form-group\" action=\"/compose\" method=\"post\">\n  <div class=\"form-group\">\n    <label>Title</label>\n    <input class=\"form-control\" type=\"text\" name=\"postTitle\">\n    <label>Post</label>\n    <textarea class=\"form-control\" name=\"postBody\" rows=\"5\" cols=\"30\"></textarea>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">Publish</button>\n</form>\n<%- include(\"partials/footer\") -%>\n\n\n//views/contact.ejs\n<%- include(\"partials/header\") -%>\n\n<h1>Contact</h1>\n\n<p> <%= contactContent %></p>\n<%- include(\"partials/footer\") -%>\n\n\n//views/home.ejs\n<%- include(\"partials/header\") -%>\n<h1>Home</h1>\n\n<p><%= homeStartingContent %></p>\n\n<% posts.forEach(function(post){ %>\n<h1><%= post.title %></h1>\n<p>\n  <%= post.body.substring(0, 100) + \"...\" %>\n  <a href=\"<%= \"/posts/\" + post.title %>\">Read More</a>\n</p>\n<% });%>\n<%- include(\"partials/footer\") -%>\n\n\n//views/post.ejs\n<%- include(\"partials/header\") -%>\n\n<h1><%=postTitle%></h1>\n<p><%=postBody%></p>\n\n<%- include(\"partials/footer\") -%>\n`.trim();\n\nconst partials = `\n//views/partials/header.ejs\n<head>\n  <meta charset=\"utf-8\">\n  <title>Daily Journal</title>\n  <meta charset=\"utf-8\">\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n  <link rel=\"stylesheet\" href=\"/css/styles.css\">\n  <nav class=\"navbar navbar-default\">\n    <div class=\"container\">\n      <div class=\"navbar-header\">\n        <p class=\"navbar-brand\">DAILY JOURNAL</p>\n      </div>\n        <ul class=\"nav navbar-nav navbar-right\">\n          <!-- 6 -->\n          <li id=\"home\"><a href=\"/\">HOME</a></li>\n          <li id=\"about\"><a href=\"/about\">ABOUT</a></li>\n          <li id=\"contact\"><a href=\"/contact\">CONTACT</a></li>\n        </ul>\n    </div>\n  </nav>\n\n  <body>\n    <div class=\"container\">\n\n    \n//views/partials/footer.ejs\n</div>\n<div class=\"footer-padding\"></div>\n  <div class=\"footer\">\n    <p>Anand Batjargal 2019</p>\n  </div>\n</div>\n</body>\n`.trim();\n\n\nconst fruitsProject = `\nconst mongoose = require('mongoose');\n\nmongoose.connect(\"mongodb://localhost:27017/fruitsDB\", { useNewUrlParser: true });\n\nconst fruitSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, \"What's the name of the fruit?\"]\n  },\n  rating: {\n    type: Number,\n    min: 1,\n    max: 10\n  },\n  review: String\n});\n\n// First Parm: String, singular, name of collection,\n// in MongoDB it will be saved all lower case\n// Second Parm: Scheme\nconst Fruit = mongoose.model(\"Fruit\", fruitSchema);\n\nconst fruit = new Fruit({\n  name: \"Apple\",\n  rating: 7,\n  review: \"Pretty solid as a fruit.\"\n});\n\n//fruit.save();\n\nconst personSchema = new mongoose.Schema({\n  name: String,\n  age: Number,\n  favoriteFruit: fruitSchema\n});\n\nconst Person = mongoose.model(\"Person\", personSchema);\n\n//personJohn.save();\n\nconst banana = new Fruit({\n  name: \"Banana\",\n  rating: 6,\n  review: \"Weird texture.\"\n});\n\nconst person = new Person({\n  name: \"Kevin\",\n  age: 25,\n  favoriteFruit: banana\n});\n\nconst orange = new Fruit({\n  name: \"Orange\",\n  rating: 8,\n  review: \"Tastes great.\"\n});\n\n// person.save();\nPerson.updateOne({ name: \"John\" }, { favoriteFruit: orange }, function (err) {\n  if (err) {\n    console.log(err);\n  } else {\n    console.log(\"Success\");\n  }\n});\n\nconst kiwi = new Fruit({\n  name: \"Kiwi\",\n  rating: 4,\n  review: \"Too sweet for me.\"\n});\n\nFruit.insertMany([banana, kiwi, orange], function (err) {\n  if (err) {\n    console.log(err);\n  } else {\n    console.log(\"Successfully saved all the fruits\");\n  }\n});\n\nFruit.find(function (err, fruits) {\n  if (err) {\n    console.log(err);\n  } else {\n    mongoose.connection.close();\n\n    fruits.forEach(function (fruit) {\n      console.log(fruit.name);\n    });\n  }\n});\n`.trim();\n\n\nclass Ejs extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. ToDo List</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={todoList}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>ejs</b>\n              <div style={titles}>\n                <PrismCode\n                  code={todoListEjs}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>2. Blog-website</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={blogWebsite}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>views/</b>\n              <div style={titles}>\n                <PrismCode\n                  code={viewEjs}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>views/partials</b>\n              <div style={titles}>\n                <PrismCode\n                  code={partials}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>3. Fruits</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={fruitsProject}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Ejs));\n"]},"metadata":{},"sourceType":"module"}