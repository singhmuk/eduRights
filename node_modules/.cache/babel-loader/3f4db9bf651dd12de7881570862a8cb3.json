{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../ReactJs/styles.css';import Sidebar from'./sidebar';import PrismCode from'../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var Calc=\"\\n.foo {\\n\\tWidth: calc(100px + 50px)\\n}\\n\".trim();var Mixin=\"\\n//To define mixin:\\n@mixin grid($flex: true /*default argument*/) {\\n  @if $flex {\\n      @include flex;\\n  } @else {\\n      display: block;\\n  }\\n}\\n\\n\\n.row {\\n  @include grid(true);\\n}\\n\\n/*css*/\\n.row {\\n  display: -webkit-flex;\\n  display: flex;\\n}\\n\".trim();var app=\"\\nimport './App.scss';\\n\\nfunction App() {\\n  return (\\n    <div>\\n       <p className='text'>Paragraph</p>\\n       <div className='main'>\\n       <p className='nesting'>Nesting</p>\\n       </div>\\n\\n       <nav>\\n        <ul>\\n          <li><a href=\\\"#\\\">HTML</a></li>\\n          <li><a href=\\\"#\\\">CSS</a></li>\\n          <li><a href=\\\"#\\\">SASS</a></li>\\n        </ul>\\n      </nav>\\n\\n      <div className=\\\"danger\\\">Warning! This is some text.</div>\\n      <button class=\\\"button-basic button-report\\\">Report this</button>\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\".trim();var stylescss=\"\\n//variables\\n$primaryColor:blue;\\n$secondaryColor:#008000;\\n\\n$basePadding:0.75rem;\\n$borderRadius:10%;\\n\\n$font-weight:(\\n    \\\"regular\\\":400,\\n    \\\"medium\\\":500,\\n    \\\"bold\\\":600\\n);\\n\".trim();var appcss=\"\\n@import 'styles/styles';\\n\\n.text{\\n    color: $secondaryColor;\\n    font-weight: map-get($font-weight, bold);\\n    margin-bottom: $basePadding;\\n}\\n\\n//nesting\\n.main{\\n    .nesting {\\n        color: $primaryColor;\\n        font-weight: map-get($font-weight, medium);  \\n    }\\n}\\n\\nnav {\\n    ul {\\n      margin: 0;\\n      padding: 0;\\n      list-style: none;\\n    }\\n    li {\\n      display: inline-block;\\n    }\\n    a {\\n      display: block;\\n      padding: 6px 12px;\\n      text-decoration: none;\\n    }\\n  }\\n\\n  \\n  //@mixin\\n  @mixin important-text {\\n    color: red;\\n    font-size: 25px;\\n    font-weight: bold;\\n    border: 1px solid blue;\\n  }\\n  \\n  .danger {\\n    @include important-text;\\n    background-color: green;\\n  }\\n\\n  //Sass @extend Directive\\n  .button-basic  {\\n    border: none;\\n    padding: 15px 30px;\\n    text-align: center;\\n    font-size: 16px;\\n    cursor: pointer;\\n  }\\n  \\n  .button-report  {\\n    @extend .button-basic;\\n    background-color: red;\\n  }\\n  \\n  .button-submit  {\\n    @extend .button-basic;\\n    background-color: green;\\n    color: white;\\n  }\\n\".trim();var Sass=/*#__PURE__*/function(_Component){_inherits(Sass,_Component);function Sass(){_classCallCheck(this,Sass);return _possibleConstructorReturn(this,_getPrototypeOf(Sass).apply(this,arguments));}_createClass(Sass,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"1. How does Calc work?\"),\"calc() function allows us to perform mathematical operations on property values. Instead of declaring.\",React.createElement(\"br\",null),React.createElement(\"b\",null,\"Ex. \"),\"static pixel values for an element's width, we can use calc() to specify that the width is the result of the addition of two/ more numeric values.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:Calc,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"2. What is a CSS Preprocessor. What is SCSS, Sass Less, and Stylus?\"),\"A CSS Preprocessor is a tool used to extend the basic functionality of default vanilla CSS through its own scripting language. It helps us to use complex logical syntax like \\u2013 variables, functions, mixins, code nesting, and inheritance to name a few, supercharging our vanilla CSS.\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"SASS (Syntactically Awesome Style Sheets): \"),\"SASS can be written in two different syntaxes using SASS or SCSS.\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"SASS vs SCSS\"),React.createElement(\"ol\",null,React.createElement(\"li\",null,\"SASS is based on indentation and SCSS(Sassy CSS) is not.\"),React.createElement(\"li\",null,\"SASS uses .sass extension while SCSS uses .scss extension.\"),React.createElement(\"li\",null,\"SASS uses indentation rather than brackets to indicate nesting of selectors, and newlines rather than semicolons to separate properties.\")),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"3. What is a Mixin and how to use on?\"),React.createElement(\"ol\",null,React.createElement(\"li\",null,\"A Mixin is a block of code that lets us group CSS declarations we may reuse throughout our site.\"),React.createElement(\"li\",null,\"To use a Mixin, we simply use \",React.createElement(\"b\",null,\"@include\"),\" followed by the name of the Mixin and a semi-colon.\")),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:Mixin,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Sass Example\"),React.createElement(\"b\",null,\"npm install node-sass\"),React.createElement(\"br\",null),React.createElement(\"b\",null,\"app.js\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:app,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"styles/styles.scss\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:stylescss,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"App.scss\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:appcss,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return Sass;}(Component);export default withStyles(styles)(Sass);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/css/sass.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","Calc","trim","Mixin","app","stylescss","appcss","Sass","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../ReactJs/styles.css'\nimport Sidebar from './sidebar';\nimport PrismCode from '../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst Calc = `\n.foo {\n\tWidth: calc(100px + 50px)\n}\n`.trim();\n\nconst Mixin = `\n//To define mixin:\n@mixin grid($flex: true /*default argument*/) {\n  @if $flex {\n      @include flex;\n  } @else {\n      display: block;\n  }\n}\n\n\n.row {\n  @include grid(true);\n}\n\n/*css*/\n.row {\n  display: -webkit-flex;\n  display: flex;\n}\n`.trim();\n\nconst app = `\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div>\n       <p className='text'>Paragraph</p>\n       <div className='main'>\n       <p className='nesting'>Nesting</p>\n       </div>\n\n       <nav>\n        <ul>\n          <li><a href=\"#\">HTML</a></li>\n          <li><a href=\"#\">CSS</a></li>\n          <li><a href=\"#\">SASS</a></li>\n        </ul>\n      </nav>\n\n      <div className=\"danger\">Warning! This is some text.</div>\n      <button class=\"button-basic button-report\">Report this</button>\n    </div>\n  );\n}\n\nexport default App;\n`.trim();\n\nconst stylescss = `\n//variables\n$primaryColor:blue;\n$secondaryColor:#008000;\n\n$basePadding:0.75rem;\n$borderRadius:10%;\n\n$font-weight:(\n    \"regular\":400,\n    \"medium\":500,\n    \"bold\":600\n);\n`.trim();\n\nconst appcss = `\n@import 'styles/styles';\n\n.text{\n    color: $secondaryColor;\n    font-weight: map-get($font-weight, bold);\n    margin-bottom: $basePadding;\n}\n\n//nesting\n.main{\n    .nesting {\n        color: $primaryColor;\n        font-weight: map-get($font-weight, medium);  \n    }\n}\n\nnav {\n    ul {\n      margin: 0;\n      padding: 0;\n      list-style: none;\n    }\n    li {\n      display: inline-block;\n    }\n    a {\n      display: block;\n      padding: 6px 12px;\n      text-decoration: none;\n    }\n  }\n\n  \n  //@mixin\n  @mixin important-text {\n    color: red;\n    font-size: 25px;\n    font-weight: bold;\n    border: 1px solid blue;\n  }\n  \n  .danger {\n    @include important-text;\n    background-color: green;\n  }\n\n  //Sass @extend Directive\n  .button-basic  {\n    border: none;\n    padding: 15px 30px;\n    text-align: center;\n    font-size: 16px;\n    cursor: pointer;\n  }\n  \n  .button-report  {\n    @extend .button-basic;\n    background-color: red;\n  }\n  \n  .button-submit  {\n    @extend .button-basic;\n    background-color: green;\n    color: white;\n  }\n`.trim();\n\n\nclass Sass extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. How does Calc work?</h3>\n              calc() function allows us to perform mathematical operations on property values. Instead of declaring.\n              <br />\n              <b>Ex. </b>static pixel values for an element's width, we can use calc() to specify that the width is the result of the addition of\n              two/ more numeric values.\n              <div style={titles}>\n                <PrismCode\n                  code={Calc}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>2. What is a CSS Preprocessor. What is SCSS, Sass Less, and Stylus?</h3>\n              A CSS Preprocessor is a tool used to extend the basic functionality of default vanilla CSS through its own scripting language. It\n              helps us to use complex logical syntax like – variables, functions, mixins, code nesting, and inheritance to name a few, supercharging\n              our vanilla CSS.\n              <br />\n              <br />\n              <b>SASS (Syntactically Awesome Style Sheets): </b>SASS can be written in two different syntaxes using SASS or SCSS.\n              <br />\n              <br />\n              <b>SASS vs SCSS</b>\n              <ol>\n                <li>SASS is based on indentation and SCSS(Sassy CSS) is not.</li>\n                <li>SASS uses .sass extension while SCSS uses .scss extension.</li>\n                <li>SASS uses indentation rather than brackets to indicate nesting of selectors, and newlines rather than semicolons to separate\n                  properties.</li>\n              </ol>\n              <br />\n\n              <h3>3. What is a Mixin and how to use on?</h3>\n              <ol>\n                <li>A Mixin is a block of code that lets us group CSS declarations we may reuse throughout our site.</li>\n                <li>To use a Mixin, we simply use <b>@include</b> followed by the name of the Mixin and a semi-colon.</li>\n              </ol>\n              <div style={titles}>\n                <PrismCode\n                  code={Mixin}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Sass Example</h3>\n              <b>npm install node-sass</b>\n              <br />\n              <b>app.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={app}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>styles/styles.scss</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={stylescss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>App.scss</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={appcss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Sass));\n"]},"metadata":{},"sourceType":"module"}