{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/async_await.js\";\nimport React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport \"../styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../prismCode\";\nconst titles = {\n  backgroundColor: \"#F0F8FF\",\n  padding: \"1px\",\n  fontSize: \"16px\"\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst multiple = `\nconst App = () => {\n  const [mockdata, setMockdata] = useState([]);\n  const [mockdata2, setMockdata2] = useState([]);\n\n  const getMockdata = axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n  const getMockdata2 = () => {\n    return axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n  };\n\n  useEffect(() => {\n    Promise.all([getMockdata, getMockdata2()]).then((res) => {\n      setMockdata(res[0].data);\n      setMockdata2(res[1].data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <h1>Data One</h1>\n      <ul>\n        {mockdata.map((item) => (\n          <li key={item.id}>{item.name}</li>\n        ))}\n      </ul>\n      <h1>Data Two</h1>\n      <ul>\n        {mockdata2.map((item) => (\n          <li key={item.id}>{item.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}; \n`.trim();\nconst progressbar = `\nconst App = () => {\n  const [progress, setProgress] = useState(0);\n\n  const handleClick = () => {\n    if (progress < 100) {\n      setProgress(progress + 10);\n    }\n  };\n\n  const progressStyle = {\n    width: '$'{progress}%,\n    height: \"20px\",\n    backgroundColor: \"green\",\n  };\n\n  return (\n    <div>\n      <div style={progressStyle}>{progress}%</div>\n      <button onClick={handleClick}>Progress</button>\n    </div>\n  );\n};\n`.trim();\nconst mouseHovers = `\nconst App = () => {\n  const [isHovering, setHovering] = useState(false);\n\n  const handleMouseHover = () => {\n    setHovering(isHovering => !isHovering);\n  }\n\n  return (\n    <div>\n      <div\n        onMouseEnter={handleMouseHover}\n        onMouseLeave={handleMouseHover}\n      >\n        Hover Me\n      </div>\n      {isHovering && <div>Hovering right me</div>}\n    </div>\n  );\n}`.trim();\nconst getLists = `\nconst App = () => {\n  const [mockdata, setMockdata] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/albums/1/photos\")\n      .then((res) => res.json())\n      .then((res) => {\n        setMockdata(res);\n      });\n  }, []);\n\n  const handleSearch = (e) => {\n    let value = e.target.value.toLowerCase();\n    let result = [];\n\n    result = mockdata.filter((data) => {\n      return data.title.search(value) != -1;\n    });\n    setMockdata(result);\n  };\n\n  return (\n    <div>\n      <input type=\"text\" onChange={(event) => handleSearch(event)} />\n      {mockdata.map((items) => (\n        <li>{items.title}</li>\n      ))}\n    </div>\n  );\n};\n`.trim();\nconst fitersdata = `\nconst data = [\n  { category: \"vehicle\", name: \"car\" },\n  { category: \"vehicle\", name: \"jeep\" },\n  { category: \"fruit\", name: \"apple\" },\n  { category: \"fruit\", name: \"orange\" },\n  { category: \"electronics\", name: \"mobile\" },\n  { category: \"electronics\", name: \"laptop\" },\n];\n\nconst App = () => {\n  const [category, setCategory] = useState(\"vehicle\");\n  const filteredNames = data\n    .filter((item) => item.category === category)\n    .map((item) => item.name);\n\n  return (\n    <div>\n      {/* <label>\n        Select a category:\n        <select value={category} onChange={(e) => setCategory(e.target.value)}>\n          <option value=\"vehicle\">Vehicle</option>\n          <option value=\"fruit\">Fruit</option>\n          <option value=\"electronics\">Electronics</option>\n        </select>\n      </label> */}\n      <input\n        type=\"text\"\n        value={category}\n        onChange={(e) => setCategory(e.target.value)}\n      />\n      <ul>\n        {filteredNames.map((name) => (\n          <li key={name}>{name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n`.trim();\nconst MoveButton = `\nconst MoveButton = (props) => {\n  return (\n      <button onClick={props.onClick}>\n          Click To Move\n      </button>\n  );\n}\n\nconst BoxOne = () => <p>Box1</p>;\n\nconst BoxTwo = () => <p>Box2</p>;\n\n\nclass App extends Component {\nstate = { positions: 0 }\n\nhandleClick = () => {\n  this.setState({ positions: (this.state.positions + 1) % 3 })\n}\n\nrender () { \nconst positions = this.state.positions;\n  return (\n      <div>\n          { positions === 0 ? <MoveButton onClick={this.handleClick}/> : ''}\n          <BoxOne />\n          { positions === 1 ? <MoveButton onClick={this.handleClick}/> : ''}\n          <BoxTwo />\n          { positions === 2 ? <MoveButton onClick={this.handleClick}/> : ''}\n      </div>\n  );\n}\n}\n\nexport default App;`.trim();\nconst steps = `\nclass App extends Component {\n   state = { inputValue: \"\" };\n \n handleUpdate = (e) => {\n   if (e.target.validity.valid) {\n     this.setState({ inputValue: e.target.value }); \n   }\n }\n \n reset = () => {\n   this.setState({ inputValue: \"\" }); \n }\n \n render() {\n   return (\n     <div>\n       <input type=\"number\" value={this.state.inputValue} onChange={this.handleUpdate} step=\"any\" />\n       <button onClick={this.reset}>reset</button>\n     </div>\n   )\n }  \n }`.trim();\nconst dateTime = `\n //1\n function date_time() {\n   return Date();\n }\n \n //2\n function formatDate(dayOfWeek, day, month, year) {\n   var daysOfWeek = [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"];\n   var months = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n       return daysOfWeek[dayOfWeek] + \" \" + months[month] + \" \" + day + \" \" + year; }\n \n   var birthday = new Date(Date.UTC(2000,0,1)); \n   var birthDay = formatDate(birthday.getUTCDay(), birthday.getUTCDate(),     \n   birthday.getUTCMonth(), birthday.getUTCFullYear())\n \n \n export { date_time, birthDay }`.trim();\n\nclass AsyncAwait extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"1. Get Lists\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: getLists,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"1. Filter/Dropdawn\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: fitersdata,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"3. Recived data from two different APIS in one function to multiple calls.\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: multiple,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"5. Progress incrase upto 100%\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: progressbar,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"5. Mouse Hover on Card\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: mouseHovers,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"6.onClick move button\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: MoveButton,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, \"7. Step Input\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: steps,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \"8. Date_time\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: dateTime,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(AsyncAwait);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/async_await.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","multiple","trim","progressbar","mouseHovers","getLists","fitersdata","MoveButton","steps","dateTime","AsyncAwait","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,EAAkCC,IAAlC,QAA8C,mBAA9C;AAEA,OAAO,eAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,MAAMC,MAAM,GAAG;AAAEC,EAAAA,eAAe,EAAE,SAAnB;AAA8BC,EAAAA,OAAO,EAAE,KAAvC;AAA8CC,EAAAA,QAAQ,EAAE;AAAxD,CAAf;;AAEA,MAAMC,MAAM,GAAIC,KAAD,KAAY;AACzBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH;AAELN,IAAAA,OAAO,EAAEG,KAAK,CAACG,OAAN,CAAc,CAAd;AAFJ,GADkB;AAKzBC,EAAAA,QAAQ,EAAE;AACRF,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADA,GALe;AAQzBE,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF;AARc,CAAZ,CAAf;;AAaA,MAAMC,QAAQ,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAD,CAmCfC,IAnCe,EAAjB;AAqCA,MAAMC,WAAW,GAAI;;;;;;;;;;;;;;;;;;;;;;;CAAD,CAuBlBD,IAvBkB,EAApB;AAyBA,MAAME,WAAW,GAAI;;;;;;;;;;;;;;;;;;;EAAD,CAmBjBF,IAnBiB,EAApB;AAqBA,MAAMG,QAAQ,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAD,CA+BfH,IA/Be,EAAjB;AAiCA,MAAMI,UAAU,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAD,CAuCjBJ,IAvCiB,EAAnB;AAyCA,MAAMK,UAAU,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAD,CAmCEL,IAnCF,EAAnB;AAqCA,MAAMM,KAAK,GAAI;;;;;;;;;;;;;;;;;;;;;;GAAD,CAsBVN,IAtBU,EAAd;AAwBA,MAAMO,QAAQ,GAAI;;;;;;;;;;;;;;;;;gCAAD,CAiBgBP,IAjBhB,EAAjB;;AAmBA,MAAMQ,UAAN,SAAyB7B,SAAzB,CAAmC;AACjC8B,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,UAAU,CAAC,MAAM9B,KAAK,CAAC+B,YAAN,EAAP,EAA6B,CAA7B,CAAV;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,WACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAED,OAAO,CAACpB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADF,EASE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEoB,OAAO,CAACpB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAK,MAAA,KAAK,EAAEN,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEgB,QADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAXF,EAYE;AAAK,MAAA,KAAK,EAAEhB,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEiB,UADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAZF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oFArBF,EAyBE;AAAK,MAAA,KAAK,EAAEjB,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEY,QADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAzBF,EAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCF,EAkCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAlCF,EAmCE;AAAK,MAAA,KAAK,EAAEZ,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEc,WADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAnCF,EA0CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1CF,EA4CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCA5CF,EA6CE;AAAK,MAAA,KAAK,EAAEd,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEe,WADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA7CF,EAoDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApDF,EAsDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAtDF,EAuDE;AAAK,MAAA,KAAK,EAAEf,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEkB,UADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAvDF,EA8DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9DF,EAgEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAhEF,EAiEE;AAAK,MAAA,KAAK,EAAElB,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEmB,KADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAjEF,EAwEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxEF,EA0EE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA1EF,EA2EE;AAAK,MAAA,KAAK,EAAEnB,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEoB,QADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA3EF,CADF,CADF,CATF,CADF;AAmGD;;AAzGgC;;AA4GnC,eAAexB,UAAU,CAACQ,MAAD,CAAV,CAAmBiB,UAAnB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport \"../styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../prismCode\";\n\nconst titles = { backgroundColor: \"#F0F8FF\", padding: \"1px\", fontSize: \"16px\" };\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n});\n\nconst multiple = `\nconst App = () => {\n  const [mockdata, setMockdata] = useState([]);\n  const [mockdata2, setMockdata2] = useState([]);\n\n  const getMockdata = axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n  const getMockdata2 = () => {\n    return axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n  };\n\n  useEffect(() => {\n    Promise.all([getMockdata, getMockdata2()]).then((res) => {\n      setMockdata(res[0].data);\n      setMockdata2(res[1].data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <h1>Data One</h1>\n      <ul>\n        {mockdata.map((item) => (\n          <li key={item.id}>{item.name}</li>\n        ))}\n      </ul>\n      <h1>Data Two</h1>\n      <ul>\n        {mockdata2.map((item) => (\n          <li key={item.id}>{item.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}; \n`.trim();\n\nconst progressbar = `\nconst App = () => {\n  const [progress, setProgress] = useState(0);\n\n  const handleClick = () => {\n    if (progress < 100) {\n      setProgress(progress + 10);\n    }\n  };\n\n  const progressStyle = {\n    width: '$'{progress}%,\n    height: \"20px\",\n    backgroundColor: \"green\",\n  };\n\n  return (\n    <div>\n      <div style={progressStyle}>{progress}%</div>\n      <button onClick={handleClick}>Progress</button>\n    </div>\n  );\n};\n`.trim();\n\nconst mouseHovers = `\nconst App = () => {\n  const [isHovering, setHovering] = useState(false);\n\n  const handleMouseHover = () => {\n    setHovering(isHovering => !isHovering);\n  }\n\n  return (\n    <div>\n      <div\n        onMouseEnter={handleMouseHover}\n        onMouseLeave={handleMouseHover}\n      >\n        Hover Me\n      </div>\n      {isHovering && <div>Hovering right me</div>}\n    </div>\n  );\n}`.trim();\n\nconst getLists = `\nconst App = () => {\n  const [mockdata, setMockdata] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/albums/1/photos\")\n      .then((res) => res.json())\n      .then((res) => {\n        setMockdata(res);\n      });\n  }, []);\n\n  const handleSearch = (e) => {\n    let value = e.target.value.toLowerCase();\n    let result = [];\n\n    result = mockdata.filter((data) => {\n      return data.title.search(value) != -1;\n    });\n    setMockdata(result);\n  };\n\n  return (\n    <div>\n      <input type=\"text\" onChange={(event) => handleSearch(event)} />\n      {mockdata.map((items) => (\n        <li>{items.title}</li>\n      ))}\n    </div>\n  );\n};\n`.trim();\n\nconst fitersdata = `\nconst data = [\n  { category: \"vehicle\", name: \"car\" },\n  { category: \"vehicle\", name: \"jeep\" },\n  { category: \"fruit\", name: \"apple\" },\n  { category: \"fruit\", name: \"orange\" },\n  { category: \"electronics\", name: \"mobile\" },\n  { category: \"electronics\", name: \"laptop\" },\n];\n\nconst App = () => {\n  const [category, setCategory] = useState(\"vehicle\");\n  const filteredNames = data\n    .filter((item) => item.category === category)\n    .map((item) => item.name);\n\n  return (\n    <div>\n      {/* <label>\n        Select a category:\n        <select value={category} onChange={(e) => setCategory(e.target.value)}>\n          <option value=\"vehicle\">Vehicle</option>\n          <option value=\"fruit\">Fruit</option>\n          <option value=\"electronics\">Electronics</option>\n        </select>\n      </label> */}\n      <input\n        type=\"text\"\n        value={category}\n        onChange={(e) => setCategory(e.target.value)}\n      />\n      <ul>\n        {filteredNames.map((name) => (\n          <li key={name}>{name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n`.trim();\n\nconst MoveButton = `\nconst MoveButton = (props) => {\n  return (\n      <button onClick={props.onClick}>\n          Click To Move\n      </button>\n  );\n}\n\nconst BoxOne = () => <p>Box1</p>;\n\nconst BoxTwo = () => <p>Box2</p>;\n\n\nclass App extends Component {\nstate = { positions: 0 }\n\nhandleClick = () => {\n  this.setState({ positions: (this.state.positions + 1) % 3 })\n}\n\nrender () { \nconst positions = this.state.positions;\n  return (\n      <div>\n          { positions === 0 ? <MoveButton onClick={this.handleClick}/> : ''}\n          <BoxOne />\n          { positions === 1 ? <MoveButton onClick={this.handleClick}/> : ''}\n          <BoxTwo />\n          { positions === 2 ? <MoveButton onClick={this.handleClick}/> : ''}\n      </div>\n  );\n}\n}\n\nexport default App;`.trim();\n\nconst steps = `\nclass App extends Component {\n   state = { inputValue: \"\" };\n \n handleUpdate = (e) => {\n   if (e.target.validity.valid) {\n     this.setState({ inputValue: e.target.value }); \n   }\n }\n \n reset = () => {\n   this.setState({ inputValue: \"\" }); \n }\n \n render() {\n   return (\n     <div>\n       <input type=\"number\" value={this.state.inputValue} onChange={this.handleUpdate} step=\"any\" />\n       <button onClick={this.reset}>reset</button>\n     </div>\n   )\n }  \n }`.trim();\n\nconst dateTime = `\n //1\n function date_time() {\n   return Date();\n }\n \n //2\n function formatDate(dayOfWeek, day, month, year) {\n   var daysOfWeek = [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"];\n   var months = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n       return daysOfWeek[dayOfWeek] + \" \" + months[month] + \" \" + day + \" \" + year; }\n \n   var birthday = new Date(Date.UTC(2000,0,1)); \n   var birthDay = formatDate(birthday.getUTCDay(), birthday.getUTCDate(),     \n   birthday.getUTCMonth(), birthday.getUTCFullYear())\n \n \n export { date_time, birthDay }`.trim();\n\nclass AsyncAwait extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4>\n              <Sidebar />\n            </h4>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. Get Lists</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={getLists}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>1. Filter/Dropdawn</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={fitersdata}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>\n                3. Recived data from two different APIS in one function to\n                multiple calls.\n              </h3>\n              <div style={titles}>\n                <PrismCode\n                  code={multiple}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>5. Progress incrase upto 100%</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={progressbar}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>5. Mouse Hover on Card</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={mouseHovers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>6.onClick move button</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={MoveButton}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>7. Step Input</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={steps}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>8. Date_time</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={dateTime}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(AsyncAwait);\n"]},"metadata":{},"sourceType":"module"}