{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var exRouter=\"Const router = express.Router([options])\".trim();var setHeaders=\"fn(res, path, stat)\".trim();var exStatics=\"\\nvar options = {\\n  dotfiles: 'ignore',\\n  etag: false,\\n  extensions: ['htm', 'html'],\\n  index: false,\\n  maxAge: '1d',\\n  redirect: false,\\n  setHeaders: function (res, path, stat) {\\n    res.set('x-timestamp', Date.now())\\n  }\\n}\\n\\napp.use(express.static('public', options))\\n\".trim();var locals=\"console.dir(app.locals.title)\".trim();var localsCodes=\"\\napp.locals.title = 'My App'\\napp.locals.strftime = require('strftime')\\napp.locals.email = 'me@myapp.com'\\n\".trim();var appAll=\"\\napp.all('/secret', function (req, res, next) {\\n  console.log('Accessing ...')\\n  next()                                                                // pass control to the next handler.\\n})\\n\\napp.all('*', requireAuthentication, loadUser)                             \\n\\n\\n//Or the equivalent:\\napp.all('*', requireAuthentication)\\napp.all('*', loadUser)\\n\\napp.all('/api/*', requireAuthentication)                               //Restricts paths that start with \\u201C/api\\u201D.\\n\".trim();var engine=\"\\napp.engine('pug', require('pug').__express)\\n\\napp.engine('html', require('ejs').renderFile)                         //To map the EJS template engine to \\u201C.html\\u201D files.\\n\".trim();var paramName=\"\\napp.param('user', function (req, res, next, id) {\\n                                                        \\n  User.find(id, function (err, user) {                    //get user details from User model and attach to the request object\\n    if (err) {\\n      next(err)\\n    } else if (user) {\\n      req.user = user\\n      next()\\n    } else {\\n      next(new Error('failed to load user'))\\n    }\\n  })\\n})\\n\".trim();var handling=\"\\napp.use(function (err, req, res, next) {\\n  console.error(err.stack)\\n  res.status(500).send('Something broke!')\\n})\\n\".trim();var pathCode=\"\\napp.use('/abcd', function (req, res, next) {                    //Match paths starting with /abcd.\\n  next();\\n});\\n\\napp.use('/abc?d', function (req, res, next) {                  //Match paths starting with /abcd and /abd:\\n  next();\\n});\\n\\napp.use('/ab+cd', function (req, res, next) {                 //Match paths starting with /abcd, /abbcd, /abbbbbcd, so on.\\n  next();\\n});\\n\\napp.use('/ab*cd', function (req, res, next) {                //Match paths starting /abcd, /abxcd, /abFOOcd, /abbArcd, ...\\n  next();\\n});\\n\\napp.use('/a(bc)?d', function (req, res, next) {               //Match paths starting with /ad and /abcd.\\n  next();\\n});\\n\\n//Regular Expression\\napp.use(//abc|/xyz/, function (req, res, next) {            //Match paths starting with /abc and /xyz.\\n  next();\\n});\\n\\n//Array\\napp.use(['/abcd', '/xyza', //lmn|/pqr/], function (req, res, next) {\\n  next();                                                     //Match paths /abcd, /xyza, /lmn, and /pqr.\\n});\\n\".trim();var middlewareCode=\"\\n//Single Middleware\\napp.use(function (req, res, next) {\\n  next();\\n});\\n\\n\\n//A router is valid middleware.\\nvar router = express.Router();\\nrouter.get('/', function (req, res, next) {\\n  next();\\n});\\napp.use(router);\\n\\n\\n//An Express app is valid middleware.\\nvar subApp = express();\\nsubApp.get('/', function (req, res, next) {\\n  next();\\n});\\napp.use(subApp);\\n\\n\\n\\n//Series of Middleware\\n//We can specify more than one middleware function at the same mount path.\\nvar r1 = express.Router();\\nr1.get('/', function (req, res, next) {\\n  next();\\n});\\n\\nvar r2 = express.Router();\\nr2.get('/', function (req, res, next) {\\n  next();\\n});\\n\\napp.use(r1, r2);\\n\\n\\n\\n//Array\\nUse an array to group middleware logically. If you pass an array of middleware as the first or only middleware \\nparameters, then you must specify the mount path.\\nvar r1 = express.Router();\\nr1.get('/', function (req, res, next) {\\n  next();\\n});\\n\\nvar r2 = express.Router();\\nr2.get('/', function (req, res, next) {\\n  next();\\n});\\n\\napp.use('/', [r1, r2]);\\n\\n\\n\\n//Combination: Can combine all the above ways of mounting middleware.\\nfunction mw1(req, res, next) { next(); }\\nfunction mw2(req, res, next) { next(); }\\n\\nvar r1 = express.Router();\\nr1.get('/', function (req, res, next) { next(); });\\n\\nvar r2 = express.Router();\\nr2.get('/', function (req, res, next) { next(); });\\n\\nvar subApp = express();\\nsubApp.get('/', function (req, res, next) { next(); });\\n\\napp.use(mw1, [mw2, r1, r2], subApp);\\n\".trim();var IntroExpress=/*#__PURE__*/function(_Component){_inherits(IntroExpress,_Component);function IntroExpress(){_classCallCheck(this,IntroExpress);return _possibleConstructorReturn(this,_getPrototypeOf(IntroExpress).apply(this,arguments));}_createClass(IntroExpress,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"1.How to configure middleware using ExpressJS?\"),React.createElement(\"p\",null,\"@Express, a framework that sits on top of Node.js\\u2019s web server and makes it easier to use.Middleware and routing, two features of Express Request handler functions.\"),React.createElement(\"h3\",null,\"3. What is Express?\"),React.createElement(\"p\",null,\"Express is a small framework that sits on top of Node.js\\u2019s web server functionality to simplify its APIs.\",React.createElement(\"br\",null),React.createElement(\"ul\",null,React.createElement(\"li\",null,\"It makes easier to organize our application\\u2019s functionality with middleware and routing.\"),React.createElement(\"li\",null,\"It adds helpful utilities to Node HTTP objects.\"),React.createElement(\"li\",null,\"It facilitates the rendering of dynamic HTML views.\")),React.createElement(\"br\",null),\"The functionality is listens to a web browser\\u2019s requests. When a request comes in, this function will look at the request and determine how to respond.\"),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"4.What Express adds to Node.js\"),React.createElement(\"p\",null,React.createElement(\"ul\",null,React.createElement(\"li\",null,\"Abstracting implemented codes to handle HTTP server request/ response.\"),React.createElement(\"b\",null,\"Ex. \"),\" Sending a single JPEG file is fairly complex in raw Node.js Express reduces it to one line.\",React.createElement(\"br\",null),React.createElement(\"li\",null,\"Rather than one large request handler function, Express has you writing many smaller functions. Some functions are executed for every request and other functions are only executed some-times.\")),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Express has just four major features: \"),React.createElement(\"ul\",null,React.createElement(\"li\",null,\"Middleware\"),React.createElement(\"li\",null,\"Routing\"),React.createElement(\"li\",null,\"Subapplications\"),React.createElement(\"li\",null,\"Conveniences\"))),React.createElement(\"h3\",null,\"5.HTTPS adds a secure layer to HTTP. This secure layer is called TLS (Transport Layer Security) SSL (Secure Sockets Layer).\"),React.createElement(\"p\",null,\"Every peer has a public key that they share with every-body and a private key that they share with nobody. If I want to send something to you,I encrypt the message with my private key and your public key. I can then send you messages that look like garbage to any eaver droppers, and you decrypt them with your private key and my public key.\"),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"6. Methods\"),React.createElement(\"b\",null,\"express.json([options])\"),React.createElement(\"p\",null,\"It parses incoming requests with JSON payloads. Returns middleware that only parses JSON and only looks at requests where the Content-Type header matches the type option. This parser accepts any Unicode encoding of the body and supports automatic inflation of gzip and deflate encodings.\"),React.createElement(\"p\",null,\"A new body object containing the parsed data is populated on the request object after the middleware (i.e. req.body), or an empty object (\",\") if there was no body to parse, the Content-Type was not matched an error occurred.\"),React.createElement(\"b\",null,\"Options:\"),\"inflate(Boolean), limit, reviver(Function), strict, type, verify(Function).\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"1. express.raw([options])\"),React.createElement(\"p\",null,\"It parses incoming request payloads into a Buffer and is based on body-parser.\"),React.createElement(\"b\",null,\"Options:\"),\"inflate, limit, type, verify\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"2. express.Router([options])\"),React.createElement(\"p\",null,\"Creates a new router object.\"),React.createElement(\"b\",null,\"Property:\"),\"caseSensitive, mergeParams, strict\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:exRouter,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"i\",null,\"We can add middleware and HTTP method routes (get, put, post, ...) to router like an application.\"),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"3. express.static(root, [options])\"),React.createElement(\"p\",null,\"It serves static files and is based on serve-static.\"),React.createElement(\"p\",null,\"The root argument specifies the root directory from which to serve static assets. The function determines the file to serve by combining req.url with the provided root directory. When a file is not found, instead of sending a 404 response, it instead calls next() to move on to the next middleware, allowing for stacking and fall-backs.\"),React.createElement(\"b\",null,\"Property:\"),\"dotfiles(String), etag(Boolean), extensions, fallthrough, immutable, index, lastModified, maxAge, redirect, setHeaders.\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Dotfiles: \"),\"Possible values for this option are:\",React.createElement(\"ul\",null,React.createElement(\"li\",null,React.createElement(\"b\",null,\"allow -\"),\" No special treatment for dotfiles.\"),React.createElement(\"li\",null,React.createElement(\"b\",null,\"deny -\"),\" Deny a request for a dotfile, respond with 403, then call next().\"),React.createElement(\"li\",null,React.createElement(\"b\",null,\"ignore -\"),\" Act as if the dotfile does not exist, respond with 404, then call next().\")),React.createElement(\"br\",null),React.createElement(\"b\",null,\"N: \"),\"With the default value, it will not ignore files in a directory that begins with a dot.\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Fallthrough:\"),React.createElement(\"p\",null,React.createElement(\"ul\",null,React.createElement(\"li\",null,\"When Fallthrough is true, client errors such as a bad request or a request to a non-existent file will cause this middleware to simply call next() to invoke the next middleware in the stack.\"),React.createElement(\"li\",null,\"When false, these errors (even 404s), will invoke next(err).\"))),React.createElement(\"p\",null,React.createElement(\"ul\",null,React.createElement(\"li\",null,\"Set this option to true so can map multiple physical directories to the same web address or for routes to fill in non-existent files.\"),React.createElement(\"li\",null,\"Use false if mounted this middleware at a path designed to be strictly a single file system directory, which allows for short-circuiting 404s for less overhead. This middleware will also reply to all methods.\"))),React.createElement(\"br\",null),React.createElement(\"b\",null,\"4. setHeaders:\"),\"Specify a function to set custom response headers. Alterations to the headers must occur synchronously.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:setHeaders,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Example of express.static\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:exStatics,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"b\",null,\"5. express.text([options])\"),React.createElement(\"p\",null,\"It parses incoming request payloads into a string. Returns middleware that parses all bodies as a string and only looks at requests where the Content-Type header matches the type option.\"),React.createElement(\"b\",null,\"Property:\"),\"defaultCharset, inflate, limit, type, verify\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"6. express.urlencoded([options])\"),React.createElement(\"p\",null,\"It parses incoming requests with urlencoded payloads. Returns middleware that only parses urlencoded bodies and only looks at requests where the Content-Type header matches the type option.\"),React.createElement(\"b\",null,\"Property:\"),\"extended, inflate, limit, parameterLimit, type, verify.\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"The app object has methods for:\"),React.createElement(\"ul\",null,React.createElement(\"li\",null,React.createElement(\"b\",null,\"Routing HTTP requests: \"),\"for example, app.METHOD and app.param.\"),React.createElement(\"li\",null,React.createElement(\"b\",null,\"Configuring middleware: \"),\"app.route.\"),React.createElement(\"li\",null,React.createElement(\"b\",null,\"Rendering HTML views: \"),\"app.render.\"),React.createElement(\"li\",null,React.createElement(\"b\",null,\"Registering a template engine: \"),\"app.engine.\")),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"7. app.locals: \"),\"Object has properties that are local variables within the application.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:locals,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"i\",null,\"Once set, the value of app.locals properties persist throughout the life of the application, in contrast with res.locals properties that are valid only for the lifetime of the request.\"),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:localsCodes,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"8. app.all(path, callback [, callback ...]):\"),\"app.all() use for mapping \\u201Cglobal\\u201D logic for specific path prefixes/ arbitrary matches.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:appAll,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"app.engine(ext, callback):\"),React.createElement(\"p\",null,React.createElement(\"ul\",null,React.createElement(\"li\",null,\"Registers the given template engine callback as ext.\"),React.createElement(\"li\",null,\"By default, Express will require() the engine based on the file extension.\"),React.createElement(\"ul\",null,React.createElement(\"li\",null,React.createElement(\"b\",null,\"Ex. \"),\" if you try to render a \\u201Cfoo.pug\\u201D file, Express invokes the following internally, and caches the require() on subsequent calls to increase performance.\")))),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:engine,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Routing methods:\"),React.createElement(\"br\",null),\"Express supports the following routing methods corresponding to the HTTP methods of the same names:\",React.createElement(\"ul\",null,React.createElement(\"li\",null,\"Checkout\"),React.createElement(\"li\",null,\"copy\"),React.createElement(\"li\",null,\"delete\"),React.createElement(\"li\",null,\"get\"),React.createElement(\"li\",null,\"head\"),React.createElement(\"li\",null,\"lock\"),React.createElement(\"li\",null,\"merge\"),React.createElement(\"li\",null,\"mkactivity\"),React.createElement(\"li\",null,\"mkcol\"),React.createElement(\"li\",null,\"move\"),React.createElement(\"li\",null,\"m-search\"),React.createElement(\"li\",null,\"notify\"),React.createElement(\"li\",null,\"options\"),React.createElement(\"li\",null,\"patch\"),React.createElement(\"li\",null,\"post\"),React.createElement(\"li\",null,\"purge\"),React.createElement(\"li\",null,\"put\"),React.createElement(\"li\",null,\"report\"),React.createElement(\"li\",null,\"search\"),React.createElement(\"li\",null,\"subscribe\"),React.createElement(\"li\",null,\"trace\"),React.createElement(\"li\",null,\"unlock\"),React.createElement(\"li\",null,\"unsubscribe\")),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"app.param([name], callback):\"),React.createElement(\"p\",null,\"Add callback triggers to route parameters, where name is the name of the parameter or an array of them, and callback is the callback function. The parameters of the callback function are in order.\",React.createElement(\"ul\",null,React.createElement(\"li\",null,\"request object\"),React.createElement(\"li\",null,\"response object\"),React.createElement(\"li\",null,\"next middleware\"),React.createElement(\"li\",null,\"value of the parameter\"),React.createElement(\"li\",null,\"name of the parameter\"))),React.createElement(\"p\",null,\"If name is an array, the callback trigger is registered for each parameter declared in it, in the order in which they are declared. Furthermore, for each declared parameter except the last one, a call to next inside the callback will call the callback for the next declared parameter. For the last parameter, a call to next will call the next middleware in place for the route currently being processed, just like it would if name were just a string.\"),React.createElement(\"p\",null,React.createElement(\"b\",null,\"Ex.: \"),\"User is present in a route path, you may map user loading logic to automatically provide req.user to the route, or perform validations on the parameter input.\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:paramName,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"9. Error-handling middleware:\"),React.createElement(\"p\",null,\"Error-handling middleware always takes four arguments. Even if you don\\u2019t need to use the next object, you must specify it to maintain the signature. Otherwise, the next object will be interpreted as regular middleware and will fail to handle errors.\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:handling,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"10. Path\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:pathCode,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Middleware callback function examples:\"),\"We can define and mount a middleware function locally.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:middlewareCode,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return IntroExpress;}(Component);export default withStyles(styles)(IntroExpress);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/express/deepExpress/introExpress.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","exRouter","trim","setHeaders","exStatics","locals","localsCodes","appAll","engine","paramName","handling","pathCode","middlewareCode","IntroExpress","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst exRouter = `Const router = express.Router([options])`.trim();\n\nconst setHeaders = `fn(res, path, stat)`.trim();\n\nconst exStatics = `\nvar options = {\n  dotfiles: 'ignore',\n  etag: false,\n  extensions: ['htm', 'html'],\n  index: false,\n  maxAge: '1d',\n  redirect: false,\n  setHeaders: function (res, path, stat) {\n    res.set('x-timestamp', Date.now())\n  }\n}\n\napp.use(express.static('public', options))\n`.trim();\n\nconst locals = `console.dir(app.locals.title)`.trim();\n\nconst localsCodes = `\napp.locals.title = 'My App'\napp.locals.strftime = require('strftime')\napp.locals.email = 'me@myapp.com'\n`.trim();\n\nconst appAll = `\napp.all('/secret', function (req, res, next) {\n  console.log('Accessing ...')\n  next()                                                                // pass control to the next handler.\n})\n\napp.all('*', requireAuthentication, loadUser)                             \n\n\n//Or the equivalent:\napp.all('*', requireAuthentication)\napp.all('*', loadUser)\n\napp.all('/api/*', requireAuthentication)                               //Restricts paths that start with “/api”.\n`.trim();\n\nconst engine = `\napp.engine('pug', require('pug').__express)\n\napp.engine('html', require('ejs').renderFile)                         //To map the EJS template engine to “.html” files.\n`.trim();\n\nconst paramName = `\napp.param('user', function (req, res, next, id) {\n                                                        \n  User.find(id, function (err, user) {                    //get user details from User model and attach to the request object\n    if (err) {\n      next(err)\n    } else if (user) {\n      req.user = user\n      next()\n    } else {\n      next(new Error('failed to load user'))\n    }\n  })\n})\n`.trim();\n\nconst handling = `\napp.use(function (err, req, res, next) {\n  console.error(err.stack)\n  res.status(500).send('Something broke!')\n})\n`.trim();\n\nconst pathCode = `\napp.use('/abcd', function (req, res, next) {                    //Match paths starting with /abcd.\n  next();\n});\n\napp.use('/abc?d', function (req, res, next) {                  //Match paths starting with /abcd and /abd:\n  next();\n});\n\napp.use('/ab+cd', function (req, res, next) {                 //Match paths starting with /abcd, /abbcd, /abbbbbcd, so on.\n  next();\n});\n\napp.use('/ab\\*cd', function (req, res, next) {                //Match paths starting /abcd, /abxcd, /abFOOcd, /abbArcd, ...\n  next();\n});\n\napp.use('/a(bc)?d', function (req, res, next) {               //Match paths starting with /ad and /abcd.\n  next();\n});\n\n//Regular Expression\napp.use(/\\/abc|\\/xyz/, function (req, res, next) {            //Match paths starting with /abc and /xyz.\n  next();\n});\n\n//Array\napp.use(['/abcd', '/xyza', /\\/lmn|\\/pqr/], function (req, res, next) {\n  next();                                                     //Match paths /abcd, /xyza, /lmn, and /pqr.\n});\n`.trim();\n\nconst middlewareCode = `\n//Single Middleware\napp.use(function (req, res, next) {\n  next();\n});\n\n\n//A router is valid middleware.\nvar router = express.Router();\nrouter.get('/', function (req, res, next) {\n  next();\n});\napp.use(router);\n\n\n//An Express app is valid middleware.\nvar subApp = express();\nsubApp.get('/', function (req, res, next) {\n  next();\n});\napp.use(subApp);\n\n\n\n//Series of Middleware\n//We can specify more than one middleware function at the same mount path.\nvar r1 = express.Router();\nr1.get('/', function (req, res, next) {\n  next();\n});\n\nvar r2 = express.Router();\nr2.get('/', function (req, res, next) {\n  next();\n});\n\napp.use(r1, r2);\n\n\n\n//Array\nUse an array to group middleware logically. If you pass an array of middleware as the first or only middleware \nparameters, then you must specify the mount path.\nvar r1 = express.Router();\nr1.get('/', function (req, res, next) {\n  next();\n});\n\nvar r2 = express.Router();\nr2.get('/', function (req, res, next) {\n  next();\n});\n\napp.use('/', [r1, r2]);\n\n\n\n//Combination: Can combine all the above ways of mounting middleware.\nfunction mw1(req, res, next) { next(); }\nfunction mw2(req, res, next) { next(); }\n\nvar r1 = express.Router();\nr1.get('/', function (req, res, next) { next(); });\n\nvar r2 = express.Router();\nr2.get('/', function (req, res, next) { next(); });\n\nvar subApp = express();\nsubApp.get('/', function (req, res, next) { next(); });\n\napp.use(mw1, [mw2, r1, r2], subApp);\n`.trim();\n\n\nclass IntroExpress extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1.How to configure middleware using ExpressJS?</h3>\n              <p>\n                @Express, a framework that sits on top of Node.js’s web server and makes it easier to use.Middleware and routing, two\n                features of Express Request handler functions.\n              </p>\n\n              <h3>3. What is Express?</h3>\n              <p>\n                Express is a small framework that sits on top of Node.js’s web server functionality to simplify its APIs.\n                <br />\n                <ul>\n                  <li>It makes easier to organize our application’s functionality with middleware and routing.</li>\n                  <li>It adds helpful utilities to Node HTTP objects.</li>\n                  <li>It facilitates the rendering of dynamic HTML views.</li>\n                </ul>\n                <br />\n                The functionality is listens to a web browser’s requests. When a request comes in, this\n                function will look at the request and determine how to respond.\n              </p>\n              <br />\n\n              <h3>4.What Express adds to Node.js</h3>\n              <p>\n                <ul>\n                  <li>\n                    Abstracting implemented codes to handle HTTP server request/ response.</li>\n                  <b>Ex. </b> Sending a single JPEG file is fairly complex in raw Node.js Express reduces it to one line.\n                  <br />\n\n                  <li>\n                    Rather than one large request handler function, Express has you writing many smaller functions. Some functions are\n                    executed for every request and other functions are only executed some-times.\n                  </li>\n                </ul>\n                <br />\n\n                <b>Express has just four major features: </b>\n                <ul>\n                  <li>Middleware</li>\n                  <li>Routing</li>\n                  <li>Subapplications</li>\n                  <li>Conveniences</li>\n                </ul>\n              </p>\n\n              <h3>5.HTTPS adds a secure layer to HTTP. This secure layer is called TLS (Transport Layer Security) SSL (Secure Sockets Layer).</h3>\n              <p>\n                Every peer has a public key that they share with every-body and a private key that they share with nobody. If I want\n                to send something to you,I encrypt the message with my private key and your public key. I can then send you messages that look\n                like garbage to any eaver droppers, and you decrypt them with your private key and my public key.\n              </p>\n              <br />\n\n              <h3>6. Methods</h3>\n              <b>express.json([options])</b>\n              <p>It parses incoming requests with JSON payloads. Returns middleware\n                that only parses JSON and only looks at requests where the Content-Type header matches the type\n                option. This parser accepts any Unicode encoding of the body and supports automatic inflation of\n                gzip and deflate encodings.</p>\n              <p>A new body object containing the parsed data is populated on the request object after the\n                middleware (i.e. req.body), or an empty object ({ }) if there was no body to parse, the\n                Content-Type was not matched an error occurred.</p>\n              <b>Options:</b>inflate(Boolean), limit, reviver(Function), strict, type, verify(Function).\n\n              <br />\n              <br />\n              <b>1. express.raw([options])</b>\n              <p>It parses incoming request payloads into a Buffer and is based on body-parser.</p>\n              <b>Options:</b>inflate, limit, type, verify\n\n              <br />\n              <br />\n              <b>2. express.Router([options])</b>\n              <p>Creates a new router object.</p>\n              <b>Property:</b>caseSensitive, mergeParams, strict\n              <div style={titles}>\n                <PrismCode\n                  code={exRouter}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <i>\n                We can add middleware and HTTP method routes (get, put, post, ...) to router like an application.\n              </i>\n              <br />\n              <br />\n              <b>3. express.static(root, [options])</b>\n              <p>It serves static files and is based on serve-static.</p>\n              <p>\n                The root argument specifies the root directory from which to serve static assets. The function\n                determines the file to serve by combining req.url with the provided root directory. When a file\n                is not found, instead of sending a 404 response, it instead calls next() to move on to the next\n                middleware, allowing for stacking and fall-backs.\n              </p>\n              <b>Property:</b>dotfiles(String), etag(Boolean), extensions, fallthrough, immutable, index,\n              lastModified, maxAge, redirect, setHeaders.\n              <br />\n              <br />\n              <b>Dotfiles: </b>Possible values for this option are:\n              <ul>\n                <li><b>allow -</b> No special treatment for dotfiles.</li>\n                <li><b>deny -</b> Deny a request for a dotfile, respond with 403, then call next().</li>\n                <li><b>ignore -</b> Act as if the dotfile does not exist, respond with 404, then call next().</li>\n              </ul>\n              <br />\n              <b>N: </b>With the default value, it will not ignore files in a directory that begins with a dot.\n\n              <br />\n              <br />\n              <b>Fallthrough:</b>\n              <p>\n                <ul>\n                  <li>When Fallthrough is true, client errors such as a bad request or a request to a non-existent file\n                    will cause this middleware to simply call next() to invoke the next middleware in the stack.</li>\n                  <li>When false, these errors (even 404s), will invoke next(err).</li>\n                </ul>\n              </p>\n\n              <p>\n                <ul>\n                  <li>Set this option to true so can map multiple physical directories to the same web address or\n                    for routes to fill in non-existent files.</li>\n                  <li>Use false if mounted this middleware at a path designed to be strictly a single file\n                    system directory, which allows for short-circuiting 404s for less overhead. This middleware will\n                    also reply to all methods.</li>\n                </ul>\n              </p>\n\n              <br />\n              <b>4. setHeaders:</b>\n              Specify a function to set custom response headers. Alterations to the headers must occur synchronously.\n              <div style={titles}>\n                <PrismCode\n                  code={setHeaders}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n\n              <br />\n              <b>Example of express.static</b>\n              <div style={titles}>\n                <PrismCode\n                  code={exStatics}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n\n              <br />\n              <b>5. express.text([options])</b>\n              <p>\n                It parses incoming request payloads into a string. Returns middleware\n                that parses all bodies as a string and only looks at requests where the Content-Type header matches\n                the type option.\n              </p>\n              <b>Property:</b>defaultCharset, inflate, limit, type, verify\n\n              <br />\n              <br />\n              <b>6. express.urlencoded([options])</b>\n              <p>\n                It parses incoming requests with urlencoded payloads.\n                Returns middleware that only parses urlencoded bodies and only looks at requests where the\n                Content-Type header matches the type option.\n              </p>\n              <b>Property:</b>extended, inflate, limit, parameterLimit, type, verify.\n              <br />\n              <br />\n\n              <b>The app object has methods for:</b>\n              <ul>\n                <li><b>Routing HTTP requests: </b>for example, app.METHOD and app.param.</li>\n                <li><b>Configuring middleware: </b>app.route.</li>\n                <li><b>Rendering HTML views: </b>app.render.</li>\n                <li><b>Registering a template engine: </b>app.engine.</li>\n              </ul>\n              <br />\n              <br />\n              <b>7. app.locals: </b>\n              Object has properties that are local variables within the application.\n              <div style={titles}>\n                <PrismCode\n                  code={locals}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <i>\n                Once set, the value of app.locals properties persist throughout the life of the application, in\n                contrast with res.locals properties that are valid only for the lifetime of the request.\n              </i>\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={localsCodes}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>8. app.all(path, callback [, callback ...]):</h3>\n              app.all() use for mapping “global” logic for specific path prefixes/ arbitrary matches.\n              <div style={titles}>\n                <PrismCode\n                  code={appAll}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>app.engine(ext, callback):</h3>\n              <p>\n                <ul>\n                  <li>Registers the given template engine callback as ext.</li>\n                  <li>By default, Express will require() the engine based on the file extension.</li>\n                  <ul>\n                    <li><b>Ex. </b> if you try to render a “foo.pug” file, Express invokes the following internally, and caches the require()\n                      on subsequent calls to increase performance.</li>\n                  </ul>\n                </ul>\n              </p>\n              <div style={titles}>\n                <PrismCode\n                  code={engine}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>Routing methods:</b>\n              <br />\n              Express supports the following routing methods corresponding to the HTTP methods of the same names:\n              <ul>\n                <li>Checkout</li>\n                <li>copy</li>\n                <li>delete</li>\n                <li>get</li>\n                <li>head</li>\n                <li>lock</li>\n                <li>merge</li>\n                <li>mkactivity</li>\n                <li>mkcol</li>\n                <li>move</li>\n                <li>m-search</li>\n                <li>notify</li>\n                <li>options</li>\n                <li>patch</li>\n                <li>post</li>\n                <li>purge</li>\n                <li>put</li>\n                <li>report</li>\n                <li>search</li>\n                <li>subscribe</li>\n                <li>trace</li>\n                <li>unlock</li>\n                <li>unsubscribe</li>\n              </ul>\n              <br />\n\n              <h3>app.param([name], callback):</h3>\n              <p>\n                Add callback triggers to route parameters, where name is the name of the parameter or an array of\n                them, and callback is the callback function. The parameters of the callback function are in order.\n                <ul>\n                  <li>request object</li>\n                  <li>response object</li>\n                  <li>next middleware</li>\n                  <li>value of the parameter</li>\n                  <li>name of the parameter</li>\n                </ul>\n              </p>\n\n              <p>\n                If name is an array, the callback trigger is registered for each parameter declared in it, in the\n                order in which they are declared. Furthermore, for each declared parameter except the last one, a\n                call to next inside the callback will call the callback for the next declared parameter. For the\n                last parameter, a call to next will call the next middleware in place for the route currently being\n                processed, just like it would if name were just a string.\n              </p>\n              <p>\n                <b>Ex.: </b>User is present in a route path, you may map user loading logic to\n                automatically provide req.user to the route, or perform validations on the parameter input.\n              </p>\n              <div style={titles}>\n                <PrismCode\n                  code={paramName}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>9. Error-handling middleware:</h3>\n              <p>\n                Error-handling middleware always takes four arguments. Even if you don’t need to use the next\n                object, you must specify it to maintain the signature. Otherwise, the next object will be\n                interpreted as regular middleware and will fail to handle errors.\n              </p>\n              <div style={titles}>\n                <PrismCode\n                  code={handling}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>10. Path</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={pathCode}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Middleware callback function examples:</h3>\n              We can define and mount a middleware function locally.\n              <div style={titles}>\n                <PrismCode\n                  code={middlewareCode}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(IntroExpress));\n"]},"metadata":{},"sourceType":"module"}