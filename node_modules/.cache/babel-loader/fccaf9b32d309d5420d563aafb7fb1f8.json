{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import\"../../ReactJs/styles.css\";import Sidebar from\"../sidebar\";import PrismCode from\"../../ReactJs/prismCode\";var titles={backgroundColor:\"#F0F8FF\",padding:\"1px\",fontSize:\"16px\"};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var filters=\"\\n//html\\n<input type = \\\"text\\\" [(ngModel)] = \\\"filterBy\\\" (keyup) = \\\"getUsers()\\\">\\n  <div *ngFor=\\\"let user of filtersUser\\\"> {{user.name}}</div>\\n\\n\\nexport class AppComponent  {\\n users: any[];\\n filtersUser: any[];\\n filterBy;\\n\\n constructor(private http:HttpClient){}\\n\\n ngOnInit(){\\n   this.http.get('https://jsonplaceholder.typicode.com/users')\\n        .subscribe(user=>{\\n          this.users=user;\\n          this.filtersUser=[...this.users]\\n        })\\n }\\n getUsers(){\\n     this.filtersUser = [...this.users.filter(user => {\\n       user.name.includes(this.filterBy)})];\\n  }\\n}\\n\".trim();var liveInput=\"\\n//html\\n<input #box (keyup) = 'onKey(box.value)' >\\n  {{result}}\\n\\nexport class HomeComponent {\\n  values = '';\\n  result = '';\\n\\n  onKey(value: string) {\\n    this.values=String(value).replace('a','');\\n    this.result =(this.values).replace('a','');\\n  }\\n}\\n\".trim();var excell=\"\\n//app.component.ts\\nimport * as XLSX from 'xlsx';\\n\\n@Component({\\n  selector: 'app-root',\\n  template: '<div>\\n  <button (click) = \\\"exportexcel()\\\" > Export to Excel</button >\\n\\n    <table id=\\\"excel-table\\\">\\n      <tr>\\n        <th>Id</th>\\n        <th>Name</th>\\n        <th>Username</th>\\n        <th>Email</th>\\n      </tr>\\n      <tr *ngFor=\\\"let item of userList\\\">\\n      <td>{{ item.id }}</td>\\n      <td>{{ item.name }}</td>\\n      <td>{{ item.username }}</td>\\n      <td>{{ item.email }}</td>\\n                  </tr>\\n                </table>\\n              </div>',})\\n\\nexport class AppComponent {\\n  fileName= 'ExcelSheet.xlsx';\\n  userList = [\\n    { \\\"id\\\": 1, \\\"name\\\": \\\"Leanne\\\", \\\"username\\\": \\\"Bret\\\", \\\"email\\\": \\\"Sincere@april.biz\\\" },\\n    { \\\"id\\\": 2,\\\"name\\\": \\\"Ervin\\\", \\\"username\\\": \\\"Antonette\\\", \\\"email\\\": \\\"Shanna@melissa.tv\\\" },\\n    { \\\"id\\\": 3,\\\"name\\\": \\\"Clement\\\",\\\"username\\\": \\\"Samantha\\\",\\\"email\\\": \\\"Nathan@yesenia.net\\\" },\\n    { \\\"id\\\": 4,\\\"name\\\": \\\"Patricia\\\",\\\"username\\\": \\\"Karianne\\\",\\\"email\\\": \\\"Julianne@kory.org\\\" },\\n    { \\\"id\\\": 5,\\\"name\\\": \\\"Chelsey\\\",\\\"username\\\": \\\"Kamren\\\",\\\"email\\\": \\\"Lucio@annie.ca\\\" }\\n  ]\\n\\n  exportexcel(): void {\\n       /* table id is passed over here */\\n       let element = document.getElementById('excel-table');\\n       const ws: XLSX.WorkSheet =XLSX.utils.table_to_sheet(element);\\n\\n       /* generate workbook and add the worksheet */\\n       const wb: XLSX.WorkBook = XLSX.utils.book_new();\\n       XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\\n\\n       /* save to file */\\n       XLSX.writeFile(wb, this.fileName);\\n\\n    }\\n}\\n\".trim();var FilterPlace=/*#__PURE__*/function(_Component){_inherits(FilterPlace,_Component);function FilterPlace(){_classCallCheck(this,FilterPlace);return _possibleConstructorReturn(this,_getPrototypeOf(FilterPlace).apply(this,arguments));}_createClass(FilterPlace,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Filter-jsonPlaceholder\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:filters,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Live Input\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:liveInput,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Export Excel\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:excell,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return FilterPlace;}(Component);export default withStyles(styles)(FilterPlace);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/angularjsd/angular 12/filterPlace.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","filters","trim","liveInput","excell","FilterPlace","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAEA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,QAAY,CACzBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADkB,CAKzBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALe,CAQzBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARc,CAAZ,EAAf,CAaA,GAAMC,CAAAA,OAAO,CAAG,0lBAyBdC,IAzBc,EAAhB,CA2BA,GAAMC,CAAAA,SAAS,CAAG,4QAchBD,IAdgB,EAAlB,CAgBA,GAAME,CAAAA,MAAM,CAAG,kmDAiDbF,IAjDa,EAAf,C,GAmDMG,CAAAA,W,+SACgB,CAClBC,UAAU,CAAC,iBAAMxB,CAAAA,KAAK,CAACyB,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACb,KAA1B,EACE,8BACE,oBAAC,OAAD,MADF,CADF,CADF,CADF,CAQE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEa,OAAO,CAACb,KAA1B,EACE,oBAAC,IAAD,MACE,uDADF,CAEE,2BAAK,KAAK,CAAEN,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEY,OADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAFF,CASE,8BATF,CAWE,2CAXF,CAYE,2BAAK,KAAK,CAAEZ,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEc,SADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAZF,CAoBE,8BApBF,CAqBE,6CArBF,CAsBE,2BAAK,KAAK,CAAEd,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEe,MADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAtBF,CADF,CADF,CARF,CADF,CA6CD,C,yBAnDuBvB,S,EAsD1B,cAAeI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBY,WAAnB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport \"../../ReactJs/styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../../ReactJs/prismCode\";\n\nconst titles = { backgroundColor: \"#F0F8FF\", padding: \"1px\", fontSize: \"16px\" };\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n});\n\nconst filters = `\n//html\n<input type = \"text\" [(ngModel)] = \"filterBy\" (keyup) = \"getUsers()\">\n  <div *ngFor=\"let user of filtersUser\"> {{user.name}}</div>\n\n\nexport class AppComponent  {\n users: any[];\n filtersUser: any[];\n filterBy;\n\n constructor(private http:HttpClient){}\n\n ngOnInit(){\n   this.http.get('https://jsonplaceholder.typicode.com/users')\n        .subscribe(user=>{\n          this.users=user;\n          this.filtersUser=[...this.users]\n        })\n }\n getUsers(){\n     this.filtersUser = [...this.users.filter(user => {\n       user.name.includes(this.filterBy)})];\n  }\n}\n`.trim();\n\nconst liveInput = `\n//html\n<input #box (keyup) = 'onKey(box.value)' >\n  {{result}}\n\nexport class HomeComponent {\n  values = '';\n  result = '';\n\n  onKey(value: string) {\n    this.values=String(value).replace('a','');\n    this.result =(this.values).replace('a','');\n  }\n}\n`.trim();\n\nconst excell = `\n//app.component.ts\nimport * as XLSX from 'xlsx';\n\n@Component({\n  selector: 'app-root',\n  template: '<div>\n  <button (click) = \"exportexcel()\" > Export to Excel</button >\n\n    <table id=\"excel-table\">\n      <tr>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Username</th>\n        <th>Email</th>\n      </tr>\n      <tr *ngFor=\"let item of userList\">\n      <td>{{ item.id }}</td>\n      <td>{{ item.name }}</td>\n      <td>{{ item.username }}</td>\n      <td>{{ item.email }}</td>\n                  </tr>\n                </table>\n              </div>',})\n\nexport class AppComponent {\n  fileName= 'ExcelSheet.xlsx';\n  userList = [\n    { \"id\": 1, \"name\": \"Leanne\", \"username\": \"Bret\", \"email\": \"Sincere@april.biz\" },\n    { \"id\": 2,\"name\": \"Ervin\", \"username\": \"Antonette\", \"email\": \"Shanna@melissa.tv\" },\n    { \"id\": 3,\"name\": \"Clement\",\"username\": \"Samantha\",\"email\": \"Nathan@yesenia.net\" },\n    { \"id\": 4,\"name\": \"Patricia\",\"username\": \"Karianne\",\"email\": \"Julianne@kory.org\" },\n    { \"id\": 5,\"name\": \"Chelsey\",\"username\": \"Kamren\",\"email\": \"Lucio@annie.ca\" }\n  ]\n\n  exportexcel(): void {\n       /* table id is passed over here */\n       let element = document.getElementById('excel-table');\n       const ws: XLSX.WorkSheet =XLSX.utils.table_to_sheet(element);\n\n       /* generate workbook and add the worksheet */\n       const wb: XLSX.WorkBook = XLSX.utils.book_new();\n       XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n\n       /* save to file */\n       XLSX.writeFile(wb, this.fileName);\n\n    }\n}\n`.trim();\n\nclass FilterPlace extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4>\n              <Sidebar />\n            </h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Filter-jsonPlaceholder</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={filters}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Live Input</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={liveInput}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n\n              <br />\n              <h3>Export Excel</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={excell}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(FilterPlace);\n"]},"metadata":{},"sourceType":"module"}