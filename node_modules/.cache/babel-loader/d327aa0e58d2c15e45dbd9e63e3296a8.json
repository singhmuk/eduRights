{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/javaScripts/deepJs/typeScript_2.js\";\nimport React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport \"../../ReactJs/styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../../ReactJs/prismCode\";\nconst titles = {\n  backgroundColor: \"#F0F8FF\",\n  padding: \"1px\",\n  fontSize: \"16px\"\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst objects = `\nconst car: { type: string, model: string, year: number } = {\n  type: \"Toyota\",\n  model: \"Corolla\",\n  year: 2009\n};\n\nconsole.log(car);\n`.trim();\nconst insignature = `\nconst nameAgeMap: { [index: string]: number } = {};\n\nnameAgeMap.Jack = 25;\nnameAgeMap.Mark = \"Fifty\"; \n\nconsole.log(nameAgeMap);\n`.trim();\nconst arrow = `\nnpm install -g typescript\ntsc --version\ntsc --help\ntsc app.ts                                             #to run app.ts file.                                             \n`.trim();\nconst classtypes = `\nclass Dog{\n  age: number\n  breed: string\n\n  constructor(age, breed){\n      this.age = age\n      this.breed = breed\n  }\n  show(){\n      return console.log(this.age * 7)\n  }\n}\n\nconst obj = new Dog(2, 'Labrador');\nobj.show();\n`.trim();\nconst constructors = `\nclass Point{\n  x: number;\n  y: number;\n\n  constructor(x?: number, y?:number){\n    this.x = x;\n    this.y = y\n  }\n\n  getVal(){\n    console.log(this.x, this.y)\n  }\n}\n\nlet obj = Point();\nobj.getVal();\n\n\n//Access modifier\nclass Point{\n  constructor(private x?: number, private y?:number){ }\n\n  getVal(){\n    console.log(this.x, this.y)\n  }\n}\n\nlet obj = Point();\nobj.getVal();\n`.trim();\nconst inheritancetypes = `\nclass Animal{\n  age: number\n  breed: string\n  constructor(age, breed){ \n      this.age = age\n      this.breed = breed\n  }\n  show(sound: string): void{\n      console.log(sound)\n  }\n}\n\nclass Dog extends Animal{\n  bool: boolean\n  constructor(age: number, breed: string, bool: boolean){\n       super(age, breed)                            //call parent constructor\n       this.bool = bool\n  }\n  makeSound(): void{\n      super.show('Dog')\n  }\n  getAgeInHumanYears(): number{\n      return this.age * 7   \n  }\n}\n\nconst obj = new Dog(1, 'Obj', true)\nobj.makeSound();\n\nclass Cat extends Dog{\n  newbool: boolean;\n  constructor(age: number, breed: string, bool, newbool){\n      super(age, breed, bool)\n  }\n  makeSound(): void{\n      super.show('Cat')\n  }\n}\n\nconst obj2 = new Cat(2, 'Obj2', false, true);\nobj2.makeSound();\n`.trim();\nconst inheritance = `\nclass Animal {\n    eat():void {\n        console.log(\"Eating\")\n     }\n}\n\nclass Dog extends Animal {\n   bark():void {\n      console.log(\"Barking\")\n   }\n}\n\nclass BabyDog extends Dog{\n    weep():void {\n        console.log(\"Weeping\")\n     }\n}\nlet obj = new BabyDog();\nobj.eat();\nobj.bark();\nobj.weep()\n`.trim();\nconst declaration = `\ninterface Point {\n  x: number;\n  y: number;\n}\n\nfunction printCoord(pt: Point) {\n  console.log(\"The coordinate's x value is \" + pt.x);\n  console.log(\"The coordinate's y value is \" + pt.y);\n}\n\nprintCoord({x: 100, y: 100});\n`.trim();\nconst inherritancesMul = `\nabstract class Character{\n  hunger:number;\n  health:number;\n  \n  abstract eat(): void\n}\n\ninterface Hero extends Character{\n  heroId:number;\n}\n\ninterface Enemy extends Character{\n  enemyId:number\n}\n\nclass Spy implements Hero, Enemy{\n  hunger:number;\n  health:number;\n  heroId:number;\n  enemyId:number;\n  \n  eat() {\n      this.hunger -= 1\n  }\n} \n\nconst hero: Hero = new Spy();\nconst enemy: Enemy = new Spy();\n`.trim();\nconst Overloading = `\nclass A {\n    public foo(s: string): number;\n    public foo(n: number): string;\n\n    public foo(arg: any): any {\n        if (typeof(arg) === 'number')\n            return arg.toString();\n        if (typeof(arg) === 'string')\n            return arg.length;\n    }\n}\n\nlet obj = new A();\nconsole.log(\"Result: \" +obj.foo(101));\nconsole.log(\"Length of String: \" +obj.foo(\"JavaTpoint\"));\n`.trim();\nconst poly = `\nclass Hero{\n  hunger:number;\n  health:number;\n  \n  attack(){\n     console.log('Attacking')\n  }\n  move(){\n     console.log('Moving')\n  }\n  eat(){\n     console.log('Eating')\n  }\n}\n\nclass Archer extends Hero{\n  arrows:number;\n  attack(){\n     super.attack()\n     console.log('Firing an Arrow')\n     this.arrows -= 1\n  }\n}\n\nclass Mage extends Hero{\n  mana:number\n  \n  attack(): void {\n      super.attack()\n      console.log('Throwing a portion')\n      this.mana -= 1\n  }\n}\n\nclass Knight extends Hero{\n  shield:number\n  attack(){\n     console.log('Knight')\n  }\n}\n\nconst archer:Hero=new Archer();\nconst mage:Hero=new Mage();\nconst knight:Hero=new Knight();\n\narcher.attack();\nmage.attack();\nknight.attack();\n\nclass Tribe{\n  private heros:Hero[];\n  setHeros(heros:Hero[]){\n     this.heros = heros;\n  }\n  \n  attack(): void{\n     for(let hero of this.heros){\n        hero.attack();\n     }\n  }\n}\n\nconst heros: Hero[] = [archer, mage, knight];\nconst tribe = new Tribe();\ntribe.setHeros(heros);\ntribe.attack()\n`.trim();\nconst polyAbs = `\nclass Character{\n  private hunger:number;\n  private health:number;\n  \n  constructor(hunger: number, health: number){\n     this.hunger=hunger;\n     this.health=health;\n  }\n   \n  setHunger(hunger: number): void{\n     this.hunger = hunger;\n  }\n  \n  setHealth(health: number): void {\n     this.health = health;\n  }\n  \n  getHunger():number{\n     return this.hunger;\n  }\n  \n  getHealth():number{\n   return this.health;\n}\n}\n\nclass Hero extends Character{\n  private heroId: number;\n  \n  setHeroId(heroId: number): void{\n     this.heroId = heroId;\n  }\n}\n\n\nconst obj = new Hero(10,100)\nconsole.log(obj.getHunger())\nconsole.log(obj.getHealth())\n`.trim();\nconst statics = `\nclass Character{\n  static characterCount = 0;\n  private hunger:number;\n  private health:number;\n  \n  constructor(hunger: number, health: number){\n     Character.characterCount +=1;\n     console.log(Character.characterCount)\n     this.hunger=hunger;\n     this.health=health;\n  }\n   \n  setHunger(hunger: number): void{\n     this.hunger = hunger;\n  }\n  \n  setHealth(health: number): void {\n     this.health = health;\n  }\n  \n  getHunger():number{\n     return this.hunger;\n  }\n  \n  getHealth():number{\n   return this.health;\n}\n}\n\nclass Hero extends Character{\n  private heroId: number;\n  \n  constructor(heroId: number, hunger: number, health: number){\n     super(hunger, health)\n     this.heroId=heroId;\n  }\n  \n  setHeroId(heroId: number): void{\n     this.heroId = heroId;\n  }\n}\n\nconst obj = new Hero(10,30,100)\nconst obj2 = new Hero(10,30,100)\nconst obj3 = new Hero(10,30,100)\n`.trim();\nconst readOnly = `\nclass Character{\n  static characterCount = 0;\n  private hunger:number;\n  private health:number;\n  \n  constructor(hunger: number, health: number){\n     Character.characterCount +=1;\n     console.log(Character.characterCount)\n     this.hunger=hunger;\n     this.health=health;\n  }\n   \n  setHunger(hunger: number): void{\n     this.hunger = hunger;\n  }\n  \n  setHealth(health: number): void {\n     this.health = health;\n  }\n  \n  getHunger():number{\n     return this.hunger;\n  }\n  \n  getHealth():number{\n   return this.health;\n}\n}\n\nclass Hero extends Character{\n  readonly heroId: number;                                              //cannot mutate after initialize\n  \n  constructor(heroId: number, hunger: number, health: number){\n     super(hunger, health)\n     this.heroId=heroId;\n  }\n}\n\n\nconst obj = new Hero(10,30,100)\nconst obj2 = new Hero(10,30,100)\nconst obj3 = new Hero(10,30,100)\n`.trim();\nconst narrowing = `\nfunction padLeft(padding: number | string, input: string) {\n  if (typeof padding === \"number\") {\n    return new Array(padding + 1).join(\" \") + input;\n  }\n  return padding + input;\n}\n\npadLeft({padding:'1'},{input:'input'})\n\n\n2. Function Type Expressions\nfunction greeter(fn: (a: string) => void) {\n  fn(\"Hello, World\");\n}\n\nfunction printToConsole(s: string) {\n  console.log(s);\n}\n\ngreeter(printToConsole);`.trim();\nconst omitted = `\nfunction greet(name:string, greeting:string='Ritesh'):string{\n  return greeting\n}\n\nconsole.log(greet('Rakesh'))\n`.trim();\nconst parameters = `\nfunction greet(name:string, greeting?:string){\n  return console.log(name, greeting)\n}\n\ngreet('Rakesh')\n\n\n//2\nfunction printName(obj: {first: string; last?: string}) {\n  if (obj.last !== undefined) {\n    console.log(obj.last.toUpperCase());\n  }\n\n  console.log(obj.last?.toUpperCase());\n}\n\nprintName({ first: \"Bob\" });\nprintName({first: \"Alice\", last: \"Alisson\"})\n`.trim();\n\nclass TypeScript2 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, \"1. Cohesion And Coupling Principle\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, \"Component connection inside modules is Cohesion.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, \"Connection b/w model is coupling.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, \"High Cohesion and Low Coupling.\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, \"2. Arrow function\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: arrow,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }, \"3. Object Types\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: objects,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, \"3. Index Signatures\"), \"Index signatures can be used for objects without a defined list of properties.\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: insignature,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, \"4. How without passing constructor parameter run ts\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: constructors,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    }, \"5. Class \"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: classtypes,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    }, \"6. inheritance using super\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: inheritancetypes,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }, \"9. Multi level Inheritance\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: inheritance,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }, \"10. Interface Declaration\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }, \"Interface is a structure that defines the contract in our application. It defines the syntax for classes to follow.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }, \"TypeScript compiler does not convert interface to JavaScript. It uses interface for type checking. This is also known as \\\"duck typing\\\" or \\\"structural subtyping\\\".\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586\n      },\n      __self: this\n    }, \"Interface is defined with the keyword interface and it can include properties and method declarations using a function\")), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: declaration,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }, \"11. Multiple Inheritance, and Interfaces\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: inherritancesMul,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608\n      },\n      __self: this\n    }, \"12. Polymorphism\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: poly,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617\n      },\n      __self: this\n    }, \"13. Function Overloading\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: Overloading,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626\n      },\n      __self: this\n    }, \"14. Constructors, Static, Parameter, and Readonly Properties\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: polyAbs,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637\n      },\n      __self: this\n    }, \"16. Static\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: statics,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    }, \"17. Readonly\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: readOnly,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655\n      },\n      __self: this\n    }, \"18. Narrowing\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: narrowing,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664\n      },\n      __self: this\n    }, \"19. Default Parameters\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666\n      },\n      __self: this\n    }, \"TypeScript provides the Option to add default values to Parameters. So, if the user does not provide a value to an argument, TypeScript will initialize the Parameter with the default value. Default Parameters have the same behaviour as Optional Parameters. If a value is not passed for the default Parameters in a function call, the default Parameter must follow the required Parameters in the function signature. Hence, default Parameters can be omitted while calling a function. However, if a function signature has a default Parameter before a required Parameter, the function can still be called, provided the default Parameter is passed a value of undefined.\")), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: omitted,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689\n      },\n      __self: this\n    }, \"20. Optional Parameter\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691\n      },\n      __self: this\n    }, \"The parameters that may or may not receive a value can be appended with a '?' to mark then as optional.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695\n      },\n      __self: this\n    }, \"All optional parameters must follow required parameters and should be at the end.\")), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: parameters,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(TypeScript2);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/javaScripts/deepJs/typeScript_2.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","objects","trim","insignature","arrow","classtypes","constructors","inheritancetypes","inheritance","declaration","inherritancesMul","Overloading","poly","polyAbs","statics","readOnly","narrowing","omitted","parameters","TypeScript2","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport \"../../ReactJs/styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../../ReactJs/prismCode\";\n\nconst titles = { backgroundColor: \"#F0F8FF\", padding: \"1px\", fontSize: \"16px\" };\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n});\n\nconst objects = `\nconst car: { type: string, model: string, year: number } = {\n  type: \"Toyota\",\n  model: \"Corolla\",\n  year: 2009\n};\n\nconsole.log(car);\n`.trim();\n\nconst insignature = `\nconst nameAgeMap: { [index: string]: number } = {};\n\nnameAgeMap.Jack = 25;\nnameAgeMap.Mark = \"Fifty\"; \n\nconsole.log(nameAgeMap);\n`.trim();\n\nconst arrow = `\nnpm install -g typescript\ntsc --version\ntsc --help\ntsc app.ts                                             #to run app.ts file.                                             \n`.trim();\n\nconst classtypes = `\nclass Dog{\n  age: number\n  breed: string\n\n  constructor(age, breed){\n      this.age = age\n      this.breed = breed\n  }\n  show(){\n      return console.log(this.age * 7)\n  }\n}\n\nconst obj = new Dog(2, 'Labrador');\nobj.show();\n`.trim();\n\nconst constructors = `\nclass Point{\n  x: number;\n  y: number;\n\n  constructor(x?: number, y?:number){\n    this.x = x;\n    this.y = y\n  }\n\n  getVal(){\n    console.log(this.x, this.y)\n  }\n}\n\nlet obj = Point();\nobj.getVal();\n\n\n//Access modifier\nclass Point{\n  constructor(private x?: number, private y?:number){ }\n\n  getVal(){\n    console.log(this.x, this.y)\n  }\n}\n\nlet obj = Point();\nobj.getVal();\n`.trim();\n\nconst inheritancetypes = `\nclass Animal{\n  age: number\n  breed: string\n  constructor(age, breed){ \n      this.age = age\n      this.breed = breed\n  }\n  show(sound: string): void{\n      console.log(sound)\n  }\n}\n\nclass Dog extends Animal{\n  bool: boolean\n  constructor(age: number, breed: string, bool: boolean){\n       super(age, breed)                            //call parent constructor\n       this.bool = bool\n  }\n  makeSound(): void{\n      super.show('Dog')\n  }\n  getAgeInHumanYears(): number{\n      return this.age * 7   \n  }\n}\n\nconst obj = new Dog(1, 'Obj', true)\nobj.makeSound();\n\nclass Cat extends Dog{\n  newbool: boolean;\n  constructor(age: number, breed: string, bool, newbool){\n      super(age, breed, bool)\n  }\n  makeSound(): void{\n      super.show('Cat')\n  }\n}\n\nconst obj2 = new Cat(2, 'Obj2', false, true);\nobj2.makeSound();\n`.trim();\n\nconst inheritance = `\nclass Animal {\n    eat():void {\n        console.log(\"Eating\")\n     }\n}\n\nclass Dog extends Animal {\n   bark():void {\n      console.log(\"Barking\")\n   }\n}\n\nclass BabyDog extends Dog{\n    weep():void {\n        console.log(\"Weeping\")\n     }\n}\nlet obj = new BabyDog();\nobj.eat();\nobj.bark();\nobj.weep()\n`.trim();\n\nconst declaration = `\ninterface Point {\n  x: number;\n  y: number;\n}\n\nfunction printCoord(pt: Point) {\n  console.log(\"The coordinate's x value is \" + pt.x);\n  console.log(\"The coordinate's y value is \" + pt.y);\n}\n\nprintCoord({x: 100, y: 100});\n`.trim();\n\nconst inherritancesMul = `\nabstract class Character{\n  hunger:number;\n  health:number;\n  \n  abstract eat(): void\n}\n\ninterface Hero extends Character{\n  heroId:number;\n}\n\ninterface Enemy extends Character{\n  enemyId:number\n}\n\nclass Spy implements Hero, Enemy{\n  hunger:number;\n  health:number;\n  heroId:number;\n  enemyId:number;\n  \n  eat() {\n      this.hunger -= 1\n  }\n} \n\nconst hero: Hero = new Spy();\nconst enemy: Enemy = new Spy();\n`.trim();\n\nconst Overloading = `\nclass A {\n    public foo(s: string): number;\n    public foo(n: number): string;\n\n    public foo(arg: any): any {\n        if (typeof(arg) === 'number')\n            return arg.toString();\n        if (typeof(arg) === 'string')\n            return arg.length;\n    }\n}\n\nlet obj = new A();\nconsole.log(\"Result: \" +obj.foo(101));\nconsole.log(\"Length of String: \" +obj.foo(\"JavaTpoint\"));\n`.trim();\n\nconst poly = `\nclass Hero{\n  hunger:number;\n  health:number;\n  \n  attack(){\n     console.log('Attacking')\n  }\n  move(){\n     console.log('Moving')\n  }\n  eat(){\n     console.log('Eating')\n  }\n}\n\nclass Archer extends Hero{\n  arrows:number;\n  attack(){\n     super.attack()\n     console.log('Firing an Arrow')\n     this.arrows -= 1\n  }\n}\n\nclass Mage extends Hero{\n  mana:number\n  \n  attack(): void {\n      super.attack()\n      console.log('Throwing a portion')\n      this.mana -= 1\n  }\n}\n\nclass Knight extends Hero{\n  shield:number\n  attack(){\n     console.log('Knight')\n  }\n}\n\nconst archer:Hero=new Archer();\nconst mage:Hero=new Mage();\nconst knight:Hero=new Knight();\n\narcher.attack();\nmage.attack();\nknight.attack();\n\nclass Tribe{\n  private heros:Hero[];\n  setHeros(heros:Hero[]){\n     this.heros = heros;\n  }\n  \n  attack(): void{\n     for(let hero of this.heros){\n        hero.attack();\n     }\n  }\n}\n\nconst heros: Hero[] = [archer, mage, knight];\nconst tribe = new Tribe();\ntribe.setHeros(heros);\ntribe.attack()\n`.trim();\n\nconst polyAbs = `\nclass Character{\n  private hunger:number;\n  private health:number;\n  \n  constructor(hunger: number, health: number){\n     this.hunger=hunger;\n     this.health=health;\n  }\n   \n  setHunger(hunger: number): void{\n     this.hunger = hunger;\n  }\n  \n  setHealth(health: number): void {\n     this.health = health;\n  }\n  \n  getHunger():number{\n     return this.hunger;\n  }\n  \n  getHealth():number{\n   return this.health;\n}\n}\n\nclass Hero extends Character{\n  private heroId: number;\n  \n  setHeroId(heroId: number): void{\n     this.heroId = heroId;\n  }\n}\n\n\nconst obj = new Hero(10,100)\nconsole.log(obj.getHunger())\nconsole.log(obj.getHealth())\n`.trim();\n\nconst statics = `\nclass Character{\n  static characterCount = 0;\n  private hunger:number;\n  private health:number;\n  \n  constructor(hunger: number, health: number){\n     Character.characterCount +=1;\n     console.log(Character.characterCount)\n     this.hunger=hunger;\n     this.health=health;\n  }\n   \n  setHunger(hunger: number): void{\n     this.hunger = hunger;\n  }\n  \n  setHealth(health: number): void {\n     this.health = health;\n  }\n  \n  getHunger():number{\n     return this.hunger;\n  }\n  \n  getHealth():number{\n   return this.health;\n}\n}\n\nclass Hero extends Character{\n  private heroId: number;\n  \n  constructor(heroId: number, hunger: number, health: number){\n     super(hunger, health)\n     this.heroId=heroId;\n  }\n  \n  setHeroId(heroId: number): void{\n     this.heroId = heroId;\n  }\n}\n\nconst obj = new Hero(10,30,100)\nconst obj2 = new Hero(10,30,100)\nconst obj3 = new Hero(10,30,100)\n`.trim();\n\nconst readOnly = `\nclass Character{\n  static characterCount = 0;\n  private hunger:number;\n  private health:number;\n  \n  constructor(hunger: number, health: number){\n     Character.characterCount +=1;\n     console.log(Character.characterCount)\n     this.hunger=hunger;\n     this.health=health;\n  }\n   \n  setHunger(hunger: number): void{\n     this.hunger = hunger;\n  }\n  \n  setHealth(health: number): void {\n     this.health = health;\n  }\n  \n  getHunger():number{\n     return this.hunger;\n  }\n  \n  getHealth():number{\n   return this.health;\n}\n}\n\nclass Hero extends Character{\n  readonly heroId: number;                                              //cannot mutate after initialize\n  \n  constructor(heroId: number, hunger: number, health: number){\n     super(hunger, health)\n     this.heroId=heroId;\n  }\n}\n\n\nconst obj = new Hero(10,30,100)\nconst obj2 = new Hero(10,30,100)\nconst obj3 = new Hero(10,30,100)\n`.trim();\n\nconst narrowing = `\nfunction padLeft(padding: number | string, input: string) {\n  if (typeof padding === \"number\") {\n    return new Array(padding + 1).join(\" \") + input;\n  }\n  return padding + input;\n}\n\npadLeft({padding:'1'},{input:'input'})\n\n\n2. Function Type Expressions\nfunction greeter(fn: (a: string) => void) {\n  fn(\"Hello, World\");\n}\n\nfunction printToConsole(s: string) {\n  console.log(s);\n}\n\ngreeter(printToConsole);`.trim();\n\nconst omitted = `\nfunction greet(name:string, greeting:string='Ritesh'):string{\n  return greeting\n}\n\nconsole.log(greet('Rakesh'))\n`.trim();\n\nconst parameters = `\nfunction greet(name:string, greeting?:string){\n  return console.log(name, greeting)\n}\n\ngreet('Rakesh')\n\n\n//2\nfunction printName(obj: {first: string; last?: string}) {\n  if (obj.last !== undefined) {\n    console.log(obj.last.toUpperCase());\n  }\n\n  console.log(obj.last?.toUpperCase());\n}\n\nprintName({ first: \"Bob\" });\nprintName({first: \"Alice\", last: \"Alisson\"})\n`.trim();\n\nclass TypeScript2 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4>\n              <Sidebar />\n            </h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. Cohesion And Coupling Principle</h3>\n              <ul>\n                <li>Component connection inside modules is Cohesion.</li>\n                <li>Connection b/w model is coupling.</li>\n                <li>High Cohesion and Low Coupling.</li>\n              </ul>\n              <p></p>\n              <h3>2. Arrow function</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={arrow}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>3. Object Types</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={objects}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>3. Index Signatures</h3>\n              Index signatures can be used for objects without a defined list of\n              properties.\n              <div style={titles}>\n                <PrismCode\n                  code={insignature}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>4. How without passing constructor parameter run ts</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={constructors}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>5. Class </h3>\n              <div style={titles}>\n                <PrismCode\n                  code={classtypes}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>6. inheritance using super</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={inheritancetypes}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>9. Multi level Inheritance</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={inheritance}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>10. Interface Declaration</h3>\n              <ul>\n                <li>\n                  Interface is a structure that defines the contract in our\n                  application. It defines the syntax for classes to follow.\n                </li>\n                <li>\n                  TypeScript compiler does not convert interface to JavaScript.\n                  It uses interface for type checking. This is also known as\n                  \"duck typing\" or \"structural subtyping\".\n                </li>\n                <li>\n                  Interface is defined with the keyword interface and it can\n                  include properties and method declarations using a function\n                </li>\n              </ul>\n              <div style={titles}>\n                <PrismCode\n                  code={declaration}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>11. Multiple Inheritance, and Interfaces</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={inherritancesMul}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>12. Polymorphism</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={poly}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>13. Function Overloading</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Overloading}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>\n                14. Constructors, Static, Parameter, and Readonly Properties\n              </h3>\n              <div style={titles}>\n                <PrismCode\n                  code={polyAbs}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>16. Static</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={statics}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>17. Readonly</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={readOnly}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>18. Narrowing</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={narrowing}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>19. Default Parameters</h3>\n              <ul>\n                <li>\n                  TypeScript provides the Option to add default values to\n                  Parameters. So, if the user does not provide a value to an\n                  argument, TypeScript will initialize the Parameter with the\n                  default value. Default Parameters have the same behaviour as\n                  Optional Parameters. If a value is not passed for the default\n                  Parameters in a function call, the default Parameter must\n                  follow the required Parameters in the function signature.\n                  Hence, default Parameters can be omitted while calling a\n                  function. However, if a function signature has a default\n                  Parameter before a required Parameter, the function can still\n                  be called, provided the default Parameter is passed a value of\n                  undefined.\n                </li>\n              </ul>\n              <div style={titles}>\n                <PrismCode\n                  code={omitted}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>20. Optional Parameter</h3>\n              <ul>\n                <li>\n                  The parameters that may or may not receive a value can be\n                  appended with a '?' to mark then as optional.\n                </li>\n                <li>\n                  All optional parameters must follow required parameters and\n                  should be at the end.\n                </li>\n              </ul>\n              <div style={titles}>\n                <PrismCode\n                  code={parameters}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(TypeScript2);\n"]},"metadata":{},"sourceType":"module"}