{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/ReactJs/reactJs_hooks/serverSideRend.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst authentication = `\nclass App extends Component {\n  state={\n    email:null,\n    password:null,\n    login:false,\n    token:null,\n  }\n  \n  componentDidMount(){\n    this.storeCollector();\n  }\n  \n  storeCollector(){\n    let store = JSON.parse(localStorage.getItem('login'));\n    this.setState({store:store})\n    \n    if(store && store.login){\n      this.setItem({login:true})\n    }\n    console.log(store)\n  }\n  \n  login = () => {\n    console.log('form data', this.state);\n    fetch('http://localhost:3000/api/login', {\n      method:\"POST\",\n      body:JSON.stringify(this.state)\n    })\n    .then((res) => {\n      res.json().then((result) => {\n        console.log(result);\n        \n        //to store token into local\n        localStorage.setItem('login', JSON.stringify({\n          login:true,\n          token:result.token\n        }))\n        \n        this.setState({login:true})\n        this.storeCollector();\n      })\n    } )\n  }\n  \n  post(){\n    let token = 'Bearer' + this.state.store.token;\n    console.log(token)\n    \n    console.log('form data', this.state.post);\n    fetch('http://localhost:3000/api/login', {\n      method:\"POST\",\n      // To pass token\n      headers:{'Authorization': token},\n      body:JSON.stringify(this.state.pos)\n    })\n    .then((res) => {\n      res.json().then((result) => {\n        console.log(result);\n        \n        \n      })\n    })\n  }\n  \n  render(){\n  return (\n    <div className=\"App\">\n     <h3>Jwt Token</h3>\n     {!this.state.login ? \n     <div>\n       <input type=\"text\" onChange={(e) => {this.setState({email:e.target.value})}} /><br/>\n     <input type=\"password\" onChange={(e) => {this.setState({password:e.target.value})}} /><br/>\n     <button onClick={this.login()}>Submit</button>\n      </div>\n      :\n      <div>\n        <textarea onChange={(e) => {this.setState={post:e.target.value}}}>\n          \n        </textarea>\n        <button onClick={()=>{this.post()}}>post</button>\n      </div>\n      }\n      </div>\n  );\n}\n}`.trim();\nconst multi = `\nimport { Multiselect } from 'multiselect-react-dropdown';\n\nfunction App() {\n  const data = [\n        {name: 'Srigar', id: 1},\n        {name: 'Sam', id: 2},\n        {name: 'Sam', id: 3},\n        {name: 'Sam', id: 4},\n        {name: 'Sam', id: 5}\n      ]\n              \n  const [ options ] = useState(data);\n  return (\n    <div>\n      <Multiselect\n        options={options} \n        displayValue=\"name\" \n        />\n    </div>\n  );\n}`.trim();\nconst moveButton = `\nconst MoveButton = (props) => {\n  return (\n      <button onClick={props.onClick}>\n          Click To Move\n      </button>\n  );\n}\n\nconst BoxOne = () => <p>Box1</p>;\n\nconst BoxTwo = () => <p>Box2</p>;\n\n\nclass App extends Component {\nstate = { positions: 0 }\n\nhandleClick = () => {\n  this.setState({ positions: (this.state.positions + 1) % 3 })\n}\n\nrender () { \nconst positions = this.state.positions;\n  return (\n      <div>\n          { positions === 0 ? <MoveButton onClick={this.handleClick}/> : ''}\n          <BoxOne />\n          { positions === 1 ? <MoveButton onClick={this.handleClick}/> : ''}\n          <BoxTwo />\n          { positions === 2 ? <MoveButton onClick={this.handleClick}/> : ''}\n      </div>\n  );\n}\n}`.trim();\nconst navigations = `\nimport React,{useState, useCallback}  from \"react\";\n\nfunction App() {\n  const [selected, updateSelection] = useState('HOME'),\n        onMenuClick = useCallback((page)=>{\n            updateSelection(page);\n        });\n  return (\n    <div className=\"layout-column justify-content-center align-items-center\">\n      <div className=\"layout-row justify-content-around align-items-center mt-20 links\"\n           data-testid=\"navigation-tabs\">\n          <a onClick={onMenuClick.bind(null, 'HOME')}>Home</a>\n          <a onClick={onMenuClick.bind(null, 'NEWS')}>News</a>\n          <a onClick={onMenuClick.bind(null, 'CONTACT')}>Contact</a>\n          <a onClick={onMenuClick.bind(null, 'ABOUT')}>About</a>\n      </div>\n\n      <div className=\"card w-20 ma-0\">\n        <section className=\"card-text\" data-testid=\"tab-content\">\n          <span>{selected} PAGE</span>\n        </section>\n      </div>\n    </div>\n  );\n}`.trim();\nconst searchNum = `\nimport React, {useState, useCallback}  from \"react\";\n\nfunction App() {\n  const [movies, updateMovies] = useState([]),\n        [year, updateYear] = useState(null),\n        onSearch = useCallback(()=>{\n          if(year){\n            window.fetch('https://jsonmock.hackerrank.com/api/movies?Year='$'{year}').then((res)=> res.json())\n            .then(({data})=>{\n              updateMovies(data);\n            });\n          }\n        }),\n        onChange = useCallback((e)=>{\n          updateYear(e.target.value);\n        });\n\n  return (\n    <div className=\"layout-column align-items-center mt-50\">\n      <section className=\"layout-row align-items-center justify-content-center\">\n        <input onChange={onChange} type=\"number\" className=\"large\" placeholder=\"Enter Year eg 2015\" data-testid=\"app-input\"/>\n        <button onClick={onSearch} className=\"\" data-testid=\"submit-button\">Search</button>\n      </section>\n\n      <ul className=\"mt-50 styled\" data-testid=\"movieList\">\n  {movies.map(({Title}, index)=> <li key={index} className=\"slide-up-fade-in py-10\">{Title}</li>)}\n        \n      </ul>\n\n      {year && !movies.length && <div className=\"mt-50 slide-up-fade-in\" data-testid=\"no-result\">No Results Found</div>}\n    </div>\n  );\n}`.trim();\n\nclass SSRendering extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"1. Jwt Authentication\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: authentication,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"2. Multi_selects\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: multi,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"3. onClick move button\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: moveButton,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"4. Tab Button\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: navigations,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"5. Search year\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: searchNum,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(SSRendering);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/ReactJs/reactJs_hooks/serverSideRend.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","authentication","trim","multi","moveButton","navigations","searchNum","SSRendering","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\n\nconst authentication = `\nclass App extends Component {\n  state={\n    email:null,\n    password:null,\n    login:false,\n    token:null,\n  }\n  \n  componentDidMount(){\n    this.storeCollector();\n  }\n  \n  storeCollector(){\n    let store = JSON.parse(localStorage.getItem('login'));\n    this.setState({store:store})\n    \n    if(store && store.login){\n      this.setItem({login:true})\n    }\n    console.log(store)\n  }\n  \n  login = () => {\n    console.log('form data', this.state);\n    fetch('http://localhost:3000/api/login', {\n      method:\"POST\",\n      body:JSON.stringify(this.state)\n    })\n    .then((res) => {\n      res.json().then((result) => {\n        console.log(result);\n        \n        //to store token into local\n        localStorage.setItem('login', JSON.stringify({\n          login:true,\n          token:result.token\n        }))\n        \n        this.setState({login:true})\n        this.storeCollector();\n      })\n    } )\n  }\n  \n  post(){\n    let token = 'Bearer' + this.state.store.token;\n    console.log(token)\n    \n    console.log('form data', this.state.post);\n    fetch('http://localhost:3000/api/login', {\n      method:\"POST\",\n      // To pass token\n      headers:{'Authorization': token},\n      body:JSON.stringify(this.state.pos)\n    })\n    .then((res) => {\n      res.json().then((result) => {\n        console.log(result);\n        \n        \n      })\n    })\n  }\n  \n  render(){\n  return (\n    <div className=\"App\">\n     <h3>Jwt Token</h3>\n     {!this.state.login ? \n     <div>\n       <input type=\"text\" onChange={(e) => {this.setState({email:e.target.value})}} /><br/>\n     <input type=\"password\" onChange={(e) => {this.setState({password:e.target.value})}} /><br/>\n     <button onClick={this.login()}>Submit</button>\n      </div>\n      :\n      <div>\n        <textarea onChange={(e) => {this.setState={post:e.target.value}}}>\n          \n        </textarea>\n        <button onClick={()=>{this.post()}}>post</button>\n      </div>\n      }\n      </div>\n  );\n}\n}`.trim();\n\nconst multi = `\nimport { Multiselect } from 'multiselect-react-dropdown';\n\nfunction App() {\n  const data = [\n        {name: 'Srigar', id: 1},\n        {name: 'Sam', id: 2},\n        {name: 'Sam', id: 3},\n        {name: 'Sam', id: 4},\n        {name: 'Sam', id: 5}\n      ]\n              \n  const [ options ] = useState(data);\n  return (\n    <div>\n      <Multiselect\n        options={options} \n        displayValue=\"name\" \n        />\n    </div>\n  );\n}`.trim();\n\nconst moveButton = `\nconst MoveButton = (props) => {\n  return (\n      <button onClick={props.onClick}>\n          Click To Move\n      </button>\n  );\n}\n\nconst BoxOne = () => <p>Box1</p>;\n\nconst BoxTwo = () => <p>Box2</p>;\n\n\nclass App extends Component {\nstate = { positions: 0 }\n\nhandleClick = () => {\n  this.setState({ positions: (this.state.positions + 1) % 3 })\n}\n\nrender () { \nconst positions = this.state.positions;\n  return (\n      <div>\n          { positions === 0 ? <MoveButton onClick={this.handleClick}/> : ''}\n          <BoxOne />\n          { positions === 1 ? <MoveButton onClick={this.handleClick}/> : ''}\n          <BoxTwo />\n          { positions === 2 ? <MoveButton onClick={this.handleClick}/> : ''}\n      </div>\n  );\n}\n}`.trim();\n\n\nconst navigations = `\nimport React,{useState, useCallback}  from \"react\";\n\nfunction App() {\n  const [selected, updateSelection] = useState('HOME'),\n        onMenuClick = useCallback((page)=>{\n            updateSelection(page);\n        });\n  return (\n    <div className=\"layout-column justify-content-center align-items-center\">\n      <div className=\"layout-row justify-content-around align-items-center mt-20 links\"\n           data-testid=\"navigation-tabs\">\n          <a onClick={onMenuClick.bind(null, 'HOME')}>Home</a>\n          <a onClick={onMenuClick.bind(null, 'NEWS')}>News</a>\n          <a onClick={onMenuClick.bind(null, 'CONTACT')}>Contact</a>\n          <a onClick={onMenuClick.bind(null, 'ABOUT')}>About</a>\n      </div>\n\n      <div className=\"card w-20 ma-0\">\n        <section className=\"card-text\" data-testid=\"tab-content\">\n          <span>{selected} PAGE</span>\n        </section>\n      </div>\n    </div>\n  );\n}`.trim();\n\nconst searchNum = `\nimport React, {useState, useCallback}  from \"react\";\n\nfunction App() {\n  const [movies, updateMovies] = useState([]),\n        [year, updateYear] = useState(null),\n        onSearch = useCallback(()=>{\n          if(year){\n            window.fetch('https://jsonmock.hackerrank.com/api/movies?Year='$'{year}').then((res)=> res.json())\n            .then(({data})=>{\n              updateMovies(data);\n            });\n          }\n        }),\n        onChange = useCallback((e)=>{\n          updateYear(e.target.value);\n        });\n\n  return (\n    <div className=\"layout-column align-items-center mt-50\">\n      <section className=\"layout-row align-items-center justify-content-center\">\n        <input onChange={onChange} type=\"number\" className=\"large\" placeholder=\"Enter Year eg 2015\" data-testid=\"app-input\"/>\n        <button onClick={onSearch} className=\"\" data-testid=\"submit-button\">Search</button>\n      </section>\n\n      <ul className=\"mt-50 styled\" data-testid=\"movieList\">\n  {movies.map(({Title}, index)=> <li key={index} className=\"slide-up-fade-in py-10\">{Title}</li>)}\n        \n      </ul>\n\n      {year && !movies.length && <div className=\"mt-50 slide-up-fade-in\" data-testid=\"no-result\">No Results Found</div>}\n    </div>\n  );\n}`.trim();\n\n\nclass SSRendering extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n\n              <h3>1. Jwt Authentication</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={authentication}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>2. Multi_selects</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={multi}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <b>3. onClick move button</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={moveButton}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>4. Tab Button</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={navigations}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>5. Search year</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={searchNum}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(SSRendering));\n"]},"metadata":{},"sourceType":"module"}