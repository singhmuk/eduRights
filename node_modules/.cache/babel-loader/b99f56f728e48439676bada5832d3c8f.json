{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var paramsd=\"\\nfunction Person(fname, lname, city, year){\\n    lname === undefined ? lname = 'Singh' : city = city;\\n    city === undefined? city = 'Delhi' : city = city;\\n\\n\\n    this.fname = fname;\\n    this.lname = lname;\\n    this.city = city;\\n    this.year = year\\n}\\n\\nvar obj = new Person('mukesh',2003);\\nconsole.log(obj);\".trim();var modyPro=\"\\nfunction Person(first, last, age, gender, interests) {\\n\\n  this.name = {\\n    'first': first,\\n    'last' : last\\n  };\\n  this.age = age;\\n  this.gender = gender;\\n}\\n\\nconst person1 = new Person('Bob', 'Smith', 32, 'male', ['music', 'skiing']);\\nconsole.log(person1);\".trim();var inheritingMethos=\"\\nvar obj = {\\n  num: 2,\\n  main: function() {\\n    return this.num + 1;\\n  }\\n};\\n\\nconsole.log(obj.main()); \\n\\nvar newObj = Object.create(obj);\\nnewObj.num = 4; \\n\\nconsole.log(newObj.main());\".trim();var proto=\"\\nlet obj = {\\n  name: \\\"Mukesh\\\",\\n  city: \\\"Ranchi\\\",\\n  getInfo: function(){\\n    console.log(this.name ,\\\"from\\\", this.city)\\n  }\\n}\\n\\nlet obj2 = {\\n  name: \\\"Ritesh\\\"\\n}\\n\\n//Never use it\\nobj2.__proto__=obj;\\n\\nconsole.log(obj2.name);\\nconsole.log(obj.getInfo());\\nconsole.log(obj2.getInfo());\".trim();var polyfill=\"\\n//1\\nFunction.prototype.mybind = function(){\\n  console.log('dddddd')\\n}\\n\\nfunction fun(){}\\n\\n\\n//2\\nlet names = {\\n  fname: 'Mukesh',\\n  hometown: 'Ranchi'\\n}\\n\\nlet getInfo = function(){\\n  return console.log(this.fname,\\\"---\\\",this.hometown);\\n}\\n\\ngetInfo();\\n\\n\\nlet getMyInfo = getInfo.bind(names);        //create own polyfill by bind method (Traditional way).\\ngetMyInfo();  \\n\\n\\n\\nFunction.prototype.mybind = function(...args) {                      // User defind way\\n  let obj = this\\n  return function() {\\n    obj.call(args[0]);\\n  }\\n}\\n\\nlet getMyInfo2 = getInfo.mybind(names);\\ngetMyInfo();\".trim();var code=\"\\nconst pureFun = (num) => Math.pow(num, 1/2);                                   // Pure function.\\nconsole.log(pureFun(64));\\n\\n\\nconst inPureFun = (max, min) => {\\n  return parseInt(Math.random() * (max - min) + min);                          // Impure function.\\n}  \\n\\nconsole.log(inPureFun(10, 2));\\n\".trim();var anonymousFun=\"\\nlet show = function () {\\n  console.log('Anonymous function');\\n};\\n\\nshow();\\n\\n\\n//Using anonymous functions as arguments of other functions\\nsetTimeout(function () {\\n  console.log('Execute later after 1 second')\\n}, 1000);\".trim();var firstFun=\"\\n//Partial Function Application\\n  function applicator(fn, val) {\\n    return function() {\\n      fn(val);\\n    };\\n  }\\n\\nfunction speak(string) {\\n  console.log(string);\\n}\\n\\nvar sayHello = applicator(speak, \\\"Hello\\\");\\nsayHello();   \".trim();var combinators=\"\\nconst add = (x, y) => x + y;\\nconst multiple = (x, y) => x + y;\\nconst sum = (...nums) => nums.reduce((x, y) => x + y);\\nconst product = (...nums) => nums.reduce((x, y) => x * y);\\n\\n\\n//\\nfunction myFunc() {\\n  let name=\\\"Radha\\\";\\n  let bool=true;\\n\\n  console.log('And', name && bool);\\n  console.log('Or', name || bool);\\n}\\n\\nmyFunc();\\n\".trim();var safe=\"const person = {\\n  name: 'Bobo',\\n  address: { \\n    street: 'Main Street', \\n    number: 123\\n   }\\n };\\n \\n const deepPersonClone = JSON.parse(JSON.stringify(person));\\n deepPersonClone.address.number = 456;\\n console.log({ person, deepPersonClone });\".trim();var hoc=\"\\nfunction hocfun(a,b) {\\n  let c=a+b;\\n  console.log(c);\\n  return function(name) { \\n      return [console.log(a), console.log(b), console.log(name)]\\n  };\\n}\\n\\nconst myFunc = hocfun(2,5);\\nmyFunc('Krishana');\\n \".trim();var dynamicScope=\"\\n function foo(){\\n     console.log(a);\\n  }\\n  \\n  function bar(){\\n     var a = 3;\\n     console.log(a);\\n     foo();\\n  }\\n  \\n  var a = 2;\\n  bar();\".trim();var METADATA=\"let METADATA = Symbol('metadata');\\n class Car {\\n      constructor(make, model) {\\n      this.make = make;\\n      this.model = model;\\n    }\\n    \\n  [METADATA]() {\\n        return {\\n        make: this.make,\\n        model: this.model\\n      };\\n    }\\n    [\\\"add\\\"](a, b) {\\n    return a + b;\\n    }\\n    \\n    [1 + 2]() {\\n      return \\\"three\\\";\\n      }\\n    }\\n    \\n let MazdaMPV = new Car(\\\"Mazda\\\", \\\"MPV\\\");\\n   MazdaMPV.add(4, 5);\\n   MazdaMPV[3]();\\n   console.log(MazdaMPV[METADATA]())\\n  \".trim();var statics=\"\\n   class Student {\\n     constructor(name)  {    \\n       this.name = name; \\n        }\\n     static findName(student)  {\\n         return student.name;  \\n     } \\n   }\\n   var s = new Student(\\\"Eden\\\"); \\n   var name = Student.findName(s);\\n   console.log(name);\".trim();var supers=\"\\n   var obj1 = {  \\n     print(){    \\n     console.log(\\\"Hello\\\");  \\n   } \\n }\\n \\n var obj2 = {  \\n     print(){\\n     super.print();  \\n   } \\n }\\n \\n \\n Object.setPrototypeOf(obj2, obj1); \\n obj2.print();\".trim();var access=\"\\n   class A {\\n     foo() { return 'foo in A'; }\\n   }\\n   \\n class B extends A {\\n     foo() { return 'foo in B'; }\\n   }\\n   \\n class C {\\n     foo() { return 'foo in C'; }\\n   }\\n   \\n class D extends C {\\n     foo() { return super.foo(); }\\n   }\\n   \\n \\n b = new B;\\n console.log(b.foo());\\n \\n B.prototype.foo = D.prototype.foo\\n console.log(b.foo());\\n console.log(b instanceof C); // false\".trim();var password=\"\\n let userEmail='LOC1234'\\n let password='1234LOC1234'\\n \\n //console.log(userEmail.toLowerCase())\\n \\n let userCheck = function(myString){\\n   if((myString.includes(123)) && (myString.length>=7)){\\n     return true\\n   }\\n     return false\\n }\\n \\n let passCheck = function(myPass){\\n   if((myPass.includes('123')) && (myPass.length>5)){\\n     return true\\n   }\\n }\\n \\n console.log(userCheck(userEmail))\\n console.log(passCheck(password))\\n \".trim();var Prototypes=/*#__PURE__*/function(_Component){_inherits(Prototypes,_Component);function Prototypes(){_classCallCheck(this,Prototypes);return _possibleConstructorReturn(this,_getPrototypeOf(Prototypes).apply(this,arguments));}_createClass(Prototypes,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"1. Object prototypes\"),React.createElement(\"b\",null,\"Modifying prototypes\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:modyPro,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Default Parameters\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:paramsd,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"2. Inheriting Methods\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:inheritingMethos,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Prototype and Protopal Inheritance\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:proto,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"3. Polyfill\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:polyfill,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"4. What is Functional Programming?\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:code,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"5. First Class Function\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:firstFun,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"b\",null,\"JavaScript anonymous functions\"),React.createElement(\"br\",null),React.createElement(\"i\",null,\"An anonymous function is a function without a name. An anonymous function is often not accessible after its initial creation.\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:anonymousFun,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"6. Combinators\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:combinators,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Shared State\"),React.createElement(\"br\",null),\"Shared state is any variable, object, or memory space that exists in a shared scope, or as the property of an object being passed between scopes. A shared scope can include global scope or closure scopes. \",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:safe,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"8. dynamic_scope:\"),\"Lexical scope is the set of rules about how the Engine can look-up a variable and where it will find it. Dynamic scope can be determined dynamically at runtime, rather than statically at authoretime.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:dynamicScope,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"9. Dynamic Methods:\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:METADATA,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"10. JavaScript static Method:\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:statics,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"h3\",null,\"11. Super\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:supers,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Superclass Property Access\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:access,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"12. Password Enter\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:password,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return Prototypes;}(Component);export default withStyles(styles)(Prototypes);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/javaScripts/deepJs/prototypes.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","paramsd","trim","modyPro","inheritingMethos","proto","polyfill","code","anonymousFun","firstFun","combinators","safe","hoc","dynamicScope","METADATA","statics","supers","access","password","Prototypes","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst paramsd = `\nfunction Person(fname, lname, city, year){\n    lname === undefined ? lname = 'Singh' : city = city;\n    city === undefined? city = 'Delhi' : city = city;\n\n\n    this.fname = fname;\n    this.lname = lname;\n    this.city = city;\n    this.year = year\n}\n\nvar obj = new Person('mukesh',2003);\nconsole.log(obj);`.trim();\n\nconst modyPro = `\nfunction Person(first, last, age, gender, interests) {\n\n  this.name = {\n    'first': first,\n    'last' : last\n  };\n  this.age = age;\n  this.gender = gender;\n}\n\nconst person1 = new Person('Bob', 'Smith', 32, 'male', ['music', 'skiing']);\nconsole.log(person1);`.trim();\n\n\n\nconst inheritingMethos = `\nvar obj = {\n  num: 2,\n  main: function() {\n    return this.num + 1;\n  }\n};\n\nconsole.log(obj.main()); \n\nvar newObj = Object.create(obj);\nnewObj.num = 4; \n\nconsole.log(newObj.main());`.trim();\n\n\nconst proto = `\nlet obj = {\n  name: \"Mukesh\",\n  city: \"Ranchi\",\n  getInfo: function(){\n    console.log(this.name ,\"from\", this.city)\n  }\n}\n\nlet obj2 = {\n  name: \"Ritesh\"\n}\n\n//Never use it\nobj2.__proto__=obj;\n\nconsole.log(obj2.name);\nconsole.log(obj.getInfo());\nconsole.log(obj2.getInfo());`.trim();\n\n\nconst polyfill = `\n//1\nFunction.prototype.mybind = function(){\n  console.log('dddddd')\n}\n\nfunction fun(){}\n\n\n//2\nlet names = {\n  fname: 'Mukesh',\n  hometown: 'Ranchi'\n}\n\nlet getInfo = function(){\n  return console.log(this.fname,\"---\",this.hometown);\n}\n\ngetInfo();\n\n\nlet getMyInfo = getInfo.bind(names);        //create own polyfill by bind method (Traditional way).\ngetMyInfo();  \n\n\n\nFunction.prototype.mybind = function(...args) {                      // User defind way\n  let obj = this\n  return function() {\n    obj.call(args[0]);\n  }\n}\n\nlet getMyInfo2 = getInfo.mybind(names);\ngetMyInfo();`.trim();\n\nconst code = `\nconst pureFun = (num) => Math.pow(num, 1/2);                                   // Pure function.\nconsole.log(pureFun(64));\n\n\nconst inPureFun = (max, min) => {\n  return parseInt(Math.random() * (max - min) + min);                          // Impure function.\n}  \n\nconsole.log(inPureFun(10, 2));\n`.trim()\n\nconst anonymousFun = `\nlet show = function () {\n  console.log('Anonymous function');\n};\n\nshow();\n\n\n//Using anonymous functions as arguments of other functions\nsetTimeout(function () {\n  console.log('Execute later after 1 second')\n}, 1000);`.trim();\n\nconst firstFun = `\n//Partial Function Application\n  function applicator(fn, val) {\n    return function() {\n      fn(val);\n    };\n  }\n\nfunction speak(string) {\n  console.log(string);\n}\n\nvar sayHello = applicator(speak, \"Hello\");\nsayHello();   `.trim();\n\nconst combinators = `\nconst add = (x, y) => x + y;\nconst multiple = (x, y) => x + y;\nconst sum = (...nums) => nums.reduce((x, y) => x + y);\nconst product = (...nums) => nums.reduce((x, y) => x * y);\n\n\n//\nfunction myFunc() {\n  let name=\"Radha\";\n  let bool=true;\n\n  console.log('And', name && bool);\n  console.log('Or', name || bool);\n}\n\nmyFunc();\n`.trim();\n\nconst safe = `const person = {\n  name: 'Bobo',\n  address: { \n    street: 'Main Street', \n    number: 123\n   }\n };\n \n const deepPersonClone = JSON.parse(JSON.stringify(person));\n deepPersonClone.address.number = 456;\n console.log({ person, deepPersonClone });`.trim()\n\nconst hoc = `\nfunction hocfun(a,b) {\n  let c=a+b;\n  console.log(c);\n  return function(name) { \n      return [console.log(a), console.log(b), console.log(name)]\n  };\n}\n\nconst myFunc = hocfun(2,5);\nmyFunc('Krishana');\n `.trim()\n\nconst dynamicScope = `\n function foo(){\n     console.log(a);\n  }\n  \n  function bar(){\n     var a = 3;\n     console.log(a);\n     foo();\n  }\n  \n  var a = 2;\n  bar();`.trim()\n\nconst METADATA = `let METADATA = Symbol('metadata');\n class Car {\n      constructor(make, model) {\n      this.make = make;\n      this.model = model;\n    }\n    \n  [METADATA]() {\n        return {\n        make: this.make,\n        model: this.model\n      };\n    }\n    [\"add\"](a, b) {\n    return a + b;\n    }\n    \n    [1 + 2]() {\n      return \"three\";\n      }\n    }\n    \n let MazdaMPV = new Car(\"Mazda\", \"MPV\");\n   MazdaMPV.add(4, 5);\n   MazdaMPV[3]();\n   console.log(MazdaMPV[METADATA]())\n  `.trim()\n\n\n\n\nconst statics = `\n   class Student {\n     constructor(name)  {    \n       this.name = name; \n        }\n     static findName(student)  {\n         return student.name;  \n     } \n   }\n   var s = new Student(\"Eden\"); \n   var name = Student.findName(s);\n   console.log(name);`.trim();\n\n\nconst supers = `\n   var obj1 = {  \n     print(){    \n     console.log(\"Hello\");  \n   } \n }\n \n var obj2 = {  \n     print(){\n     super.print();  \n   } \n }\n \n \n Object.setPrototypeOf(obj2, obj1); \n obj2.print();`.trim();\n\n\nconst access = `\n   class A {\n     foo() { return 'foo in A'; }\n   }\n   \n class B extends A {\n     foo() { return 'foo in B'; }\n   }\n   \n class C {\n     foo() { return 'foo in C'; }\n   }\n   \n class D extends C {\n     foo() { return super.foo(); }\n   }\n   \n \n b = new B;\n console.log(b.foo());\n \n B.prototype.foo = D.prototype.foo\n console.log(b.foo());\n console.log(b instanceof C); // false`.trim();\n\n\nconst password = `\n let userEmail='LOC1234'\n let password='1234LOC1234'\n \n //console.log(userEmail.toLowerCase())\n \n let userCheck = function(myString){\n   if((myString.includes(123)) && (myString.length>=7)){\n     return true\n   }\n     return false\n }\n \n let passCheck = function(myPass){\n   if((myPass.includes('123')) && (myPass.length>5)){\n     return true\n   }\n }\n \n console.log(userCheck(userEmail))\n console.log(passCheck(password))\n `.trim();\n\n\nclass Prototypes extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. Object prototypes</h3>\n              <b>Modifying prototypes</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={modyPro}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <b>Default Parameters</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={paramsd}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>2. Inheriting Methods</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={inheritingMethos}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>Prototype and Protopal Inheritance</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={proto}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>3. Polyfill</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={polyfill}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>4. What is Functional Programming?</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={code}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <h3>5. First Class Function</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={firstFun}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <b>JavaScript anonymous functions</b>\n              <br />\n              <i>\n                An anonymous function is a function without a name. An anonymous function is often not accessible\n                after its initial creation.\n              </i>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={anonymousFun}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>6. Combinators</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={combinators}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <b>Shared State</b>\n              <br />\n              Shared state is any variable, object, or memory space that exists in a shared\n              scope, or as the property of an object being passed between scopes. A shared\n              scope can include global scope or closure scopes. <br />\n              <br />\n              \n              <div style={titles}>\n                <PrismCode\n                  code={safe}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>8. dynamic_scope:</h3>\n              Lexical scope is the set of rules about how the Engine can look-up a variable and where it will\n              find it. Dynamic scope can be determined dynamically at runtime, rather than statically at authoretime.\n\n              <div style={titles}>\n                <PrismCode\n                  code={dynamicScope}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>9. Dynamic Methods:</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={METADATA}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>10. JavaScript static Method:</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={statics}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n\n              <h3>11. Super</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={supers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>Superclass Property Access</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={access}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>12. Password Enter</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={password}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Prototypes));\n"]},"metadata":{},"sourceType":"module"}