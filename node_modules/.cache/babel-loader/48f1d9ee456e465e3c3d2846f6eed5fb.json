{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/mern/projects/3_reactCurdMern.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst components = `\n//components/AppNavbar.js\nclass AppNavbar extends Component {\n  editItem = () => {\n    this.props.editItem(this.props.children);\n  }\n\n  deleteItem = () => {\n    this.props.deleteCat(this.props.children);\n  }\n\n  render() {\n    const { children: cat } = this.props;\n    return (\n        <div>\n            <p>{cat.name}</p>\n            <button onClick={this.editItem}>Edit</button>\n            <button onClick={this.deleteItem}>Delete</button>\n        </div>\n    );\n  }\n}\n\n\n//components/itemEdit.js\nimport { Modal } from 'reactstrap';\n\nclass ItemsEdit extends Component {\n  state= {\n      modal: false,\n      item: {}\n    };\n\n  componentWillMount() {\n    this.setState({\n      modal: this.props.modal,\n      item: this.props.catEdit\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      modal: nextProps.modal,\n    });\n  }\n\n  toggle = () => {\n    this.props.toggleModal(!this.state.modal);\n  }\n\n  save = () => {\n    this.props.toggleModal(!this.state.modal);\n\n    const { item } = this.state;\n    this.props.editItem(item);\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    const { item } = this.state;\n    const newItem = {...item};\n    newItem[name] = value;\n\n    this.setState({\n        [name]: value,\n        item: newItem\n      });\n  }\n\n  render() {\n    const { item } = this.state;\n    const closeBtn = <button onClick={this.toggle}>&times;</button>;\n    return (\n      <div>\n        <button onClick={this.toggle}>{this.props.buttonLabel}</button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <h3 toggle={this.toggle} close={closeBtn}>Edit Item</h3>\n            <form>\n                <label for=\"name\">Name</label>\n                <input type=\"text\" name=\"name\" id=\"name\" value={item.name} onChange={this.handleChange} />\n            </form>\n            <button onClick={this.save}>Save</button>{' '}\n            <button onClick={this.toggle}>Cancel</button>\n        </Modal>\n      </div>\n    );\n  }\n}\n\n\n//components/ItemModal.js\nimport { Modal } from 'reactstrap';\n\nclass ItemModal extends React.Component {\n  state = {\n      modal: false,\n      name: ''    \n    };\n\n  componentWillMount() {\n    this.setState({\n      modal: this.props.modal\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      modal: nextProps.modal\n    });\n  }\n\n  toggle = () => {\n    this.props.toggleModal(!this.state.modal);\n  }\n  onSubmit = e => {\n    e.preventDefault();\n    const newItem = {\n      name: this.state.name\n    };\n    \n    // Add item via addItem action\n    this.props.addItem(newItem);\n    \n    // Close modal\n    this.toggle();\n  };\n  \n  \n  onChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n      }\n\n  render() {\n    const closeBtn = <button onClick={this.toggle}>&times;</button>;\n    return (\n      <div>\n        <button onClick={this.toggle}>{this.props.buttonLabel}</button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <h2 toggle={this.toggle} close={closeBtn}>New Item</h2>\n                <form onSubmit={this.onSubmit}>\n                <input type='text' name='name' id='item'  onChange={this.onChange} />\n                <button color='dark' block>Add Item</button>\n                \n                <button>Save</button>{' '}\n                <button>Cancel</button>\n            </form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\n\n//components/shoppingList.js\nimport { Container, Row, Button } from 'reactstrap';\n\nimport AppNavbar from './AppNavbar';\nimport ItemModal from './ItemModal';\nimport ItemsEdit from './itemEdit';\n\nclass ShoppingList extends Component {\n  state = {\n        items: [],\n      \tcatEdit: {},\n      \tcreateModal: false,\n      \teditModal: false\n      }\n\n  componentDidMount() {\n      document.title = 'Items | Simple MERN Stack';\n\n      axios.get('/item')\n           .then(res => this.setState({\n            items: res.data})\n            )\n            .catch(() => \n            console.log('error')\n         ); \n      }\n\n  handleCreateModal = () => {\n    this.setState({\n      createModal: true\n    });\n  }\n\n  handleShowModal = (item) => {\n    this.setState({\n      catEdit: {...item},\n      editModal: true\n    });\n\t}\n\n  handleCreateModal = (value) => {\n\t\tthis.setState({\n\t\t\tcreateModal: value\n\t\t});\n\t}\n\n  handleEditModal = (value) => {\n    this.setState({\n      editModal: value\n    });\n  }\n\n  handleCreateItem = (item) => {\n    const { name, color, image } = item;\n    axios.post('/item', {\n      name, color, image\n    })\n    .then(() => {\n      const { items } = this.state;\n      this.setState({\n      items: [...items, {...item}]\n    });\n  })\n  .catch(() => \n  console.log('error')\n  );\n  }\n\n  handleEditCat = (item) => {\n      const { _id, name, color, image } = item;\n      axios.put(/item/'$'{_id}, {\n      name, color, image\n    })      \n    .then(() => {\n    const { items } = this.state;\n    const index = this.findIndex(items, item);\n      this.setState({\n      items: [...items.slice(0, index), {...item}, ...items.slice(index + 1)]\n    });\n  })\n  .catch(() => \n  console.log('error')\n  );\n  }\n\n  handleDeleteItem = (item) => {\n          axios.delete(/item/'$'{item._id})\n          .then(() => {\n            const { items } = this.state;\n            const index = this.findIndex(items, item);\n              this.setState({\n              items: [...items.slice(0, index), ...items.slice(index + 1)]\n        });\n      })\n      .catch(() => \n      console.log('error')\n    );\n  }\n\n\n  findIndex(items, item) {\n    let result = -1;\n    items.forEach((item, index) => {\n      if (item._id === item._id) {\n      result = index;\n      }\n   });\n  return result;\n  }\n\n      render() {\n        const { items, catEdit, createModal, editModal } = this.state;\n          return (\n            <Container>\n              <Button onClick={this.handleCreateModal}> New item </Button>\n                  <Row>\n                    { items.map((item, index) => \n                      <AppNavbar \n                        key={index} \n                        editItem={this.handleShowModal}\n                        deleteCat={this.handleDeleteItem}\n                      >\n                        {item}\n                      </AppNavbar>\n                    )}\n                  </Row>\n                  { createModal ? \n                  <ItemModal\n                    modal={createModal} \n                    toggleModal={this.handleCreateModal}\n                    addItem={this.handleCreateItem}\n                  /> : null }\n                {\n                  editModal ? <ItemsEdit\n                  modal={editModal}\n                  catEdit={catEdit}\n                  toggleModal={this.handleEditModal}\n                  editItem={this.handleEditCat}\n                /> \n                : null\n                }\n                </Container>\n            );\n        }\n    }\n    \n    \n    \n //App.js\n import ShoppingList from './components/shoppingList';\n\nclass App extends Component {\n    render() {\n      return (\n        <Router>\n          <Route exact path=\"/\" component={ShoppingList} />\n        </Router>\n      );\n    }\n  }\n\nexport default App;`.trim();\n\nclass MernReactCurd extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, \"Components\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: components,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(MernReactCurd);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/mern/projects/3_reactCurdMern.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","components","trim","MernReactCurd","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst components = `\n//components/AppNavbar.js\nclass AppNavbar extends Component {\n  editItem = () => {\n    this.props.editItem(this.props.children);\n  }\n\n  deleteItem = () => {\n    this.props.deleteCat(this.props.children);\n  }\n\n  render() {\n    const { children: cat } = this.props;\n    return (\n        <div>\n            <p>{cat.name}</p>\n            <button onClick={this.editItem}>Edit</button>\n            <button onClick={this.deleteItem}>Delete</button>\n        </div>\n    );\n  }\n}\n\n\n//components/itemEdit.js\nimport { Modal } from 'reactstrap';\n\nclass ItemsEdit extends Component {\n  state= {\n      modal: false,\n      item: {}\n    };\n\n  componentWillMount() {\n    this.setState({\n      modal: this.props.modal,\n      item: this.props.catEdit\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      modal: nextProps.modal,\n    });\n  }\n\n  toggle = () => {\n    this.props.toggleModal(!this.state.modal);\n  }\n\n  save = () => {\n    this.props.toggleModal(!this.state.modal);\n\n    const { item } = this.state;\n    this.props.editItem(item);\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    const { item } = this.state;\n    const newItem = {...item};\n    newItem[name] = value;\n\n    this.setState({\n        [name]: value,\n        item: newItem\n      });\n  }\n\n  render() {\n    const { item } = this.state;\n    const closeBtn = <button onClick={this.toggle}>&times;</button>;\n    return (\n      <div>\n        <button onClick={this.toggle}>{this.props.buttonLabel}</button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <h3 toggle={this.toggle} close={closeBtn}>Edit Item</h3>\n            <form>\n                <label for=\"name\">Name</label>\n                <input type=\"text\" name=\"name\" id=\"name\" value={item.name} onChange={this.handleChange} />\n            </form>\n            <button onClick={this.save}>Save</button>{' '}\n            <button onClick={this.toggle}>Cancel</button>\n        </Modal>\n      </div>\n    );\n  }\n}\n\n\n//components/ItemModal.js\nimport { Modal } from 'reactstrap';\n\nclass ItemModal extends React.Component {\n  state = {\n      modal: false,\n      name: ''    \n    };\n\n  componentWillMount() {\n    this.setState({\n      modal: this.props.modal\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      modal: nextProps.modal\n    });\n  }\n\n  toggle = () => {\n    this.props.toggleModal(!this.state.modal);\n  }\n  onSubmit = e => {\n    e.preventDefault();\n    const newItem = {\n      name: this.state.name\n    };\n    \n    // Add item via addItem action\n    this.props.addItem(newItem);\n    \n    // Close modal\n    this.toggle();\n  };\n  \n  \n  onChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n      }\n\n  render() {\n    const closeBtn = <button onClick={this.toggle}>&times;</button>;\n    return (\n      <div>\n        <button onClick={this.toggle}>{this.props.buttonLabel}</button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <h2 toggle={this.toggle} close={closeBtn}>New Item</h2>\n                <form onSubmit={this.onSubmit}>\n                <input type='text' name='name' id='item'  onChange={this.onChange} />\n                <button color='dark' block>Add Item</button>\n                \n                <button>Save</button>{' '}\n                <button>Cancel</button>\n            </form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\n\n//components/shoppingList.js\nimport { Container, Row, Button } from 'reactstrap';\n\nimport AppNavbar from './AppNavbar';\nimport ItemModal from './ItemModal';\nimport ItemsEdit from './itemEdit';\n\nclass ShoppingList extends Component {\n  state = {\n        items: [],\n      \tcatEdit: {},\n      \tcreateModal: false,\n      \teditModal: false\n      }\n\n  componentDidMount() {\n      document.title = 'Items | Simple MERN Stack';\n\n      axios.get('/item')\n           .then(res => this.setState({\n            items: res.data})\n            )\n            .catch(() => \n            console.log('error')\n         ); \n      }\n\n  handleCreateModal = () => {\n    this.setState({\n      createModal: true\n    });\n  }\n\n  handleShowModal = (item) => {\n    this.setState({\n      catEdit: {...item},\n      editModal: true\n    });\n\t}\n\n  handleCreateModal = (value) => {\n\t\tthis.setState({\n\t\t\tcreateModal: value\n\t\t});\n\t}\n\n  handleEditModal = (value) => {\n    this.setState({\n      editModal: value\n    });\n  }\n\n  handleCreateItem = (item) => {\n    const { name, color, image } = item;\n    axios.post('/item', {\n      name, color, image\n    })\n    .then(() => {\n      const { items } = this.state;\n      this.setState({\n      items: [...items, {...item}]\n    });\n  })\n  .catch(() => \n  console.log('error')\n  );\n  }\n\n  handleEditCat = (item) => {\n      const { _id, name, color, image } = item;\n      axios.put(/item/'$'{_id}, {\n      name, color, image\n    })      \n    .then(() => {\n    const { items } = this.state;\n    const index = this.findIndex(items, item);\n      this.setState({\n      items: [...items.slice(0, index), {...item}, ...items.slice(index + 1)]\n    });\n  })\n  .catch(() => \n  console.log('error')\n  );\n  }\n\n  handleDeleteItem = (item) => {\n          axios.delete(/item/'$'{item._id})\n          .then(() => {\n            const { items } = this.state;\n            const index = this.findIndex(items, item);\n              this.setState({\n              items: [...items.slice(0, index), ...items.slice(index + 1)]\n        });\n      })\n      .catch(() => \n      console.log('error')\n    );\n  }\n\n\n  findIndex(items, item) {\n    let result = -1;\n    items.forEach((item, index) => {\n      if (item._id === item._id) {\n      result = index;\n      }\n   });\n  return result;\n  }\n\n      render() {\n        const { items, catEdit, createModal, editModal } = this.state;\n          return (\n            <Container>\n              <Button onClick={this.handleCreateModal}> New item </Button>\n                  <Row>\n                    { items.map((item, index) => \n                      <AppNavbar \n                        key={index} \n                        editItem={this.handleShowModal}\n                        deleteCat={this.handleDeleteItem}\n                      >\n                        {item}\n                      </AppNavbar>\n                    )}\n                  </Row>\n                  { createModal ? \n                  <ItemModal\n                    modal={createModal} \n                    toggleModal={this.handleCreateModal}\n                    addItem={this.handleCreateItem}\n                  /> : null }\n                {\n                  editModal ? <ItemsEdit\n                  modal={editModal}\n                  catEdit={catEdit}\n                  toggleModal={this.handleEditModal}\n                  editItem={this.handleEditCat}\n                /> \n                : null\n                }\n                </Container>\n            );\n        }\n    }\n    \n    \n    \n //App.js\n import ShoppingList from './components/shoppingList';\n\nclass App extends Component {\n    render() {\n      return (\n        <Router>\n          <Route exact path=\"/\" component={ShoppingList} />\n        </Router>\n      );\n    }\n  }\n\nexport default App;`.trim();\n\n\nclass MernReactCurd extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Components</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={components}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(MernReactCurd));\n"]},"metadata":{},"sourceType":"module"}