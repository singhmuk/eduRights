{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var appy=\"\\nfrom flask import Flask, render_template, request, jsonify\\nfrom flask_mysqldb import MySQL,MySQLdb #pip install flask-mysqldb https://github.com/alexferl/flask-mysqldb\\n \\napp = Flask(__name__)\\n         \\napp.secret_key = \\\"caircocoders-ednalan\\\"\\n         \\napp.config['MYSQL_HOST'] = 'localhost'\\napp.config['MYSQL_USER'] = 'root'\\napp.config['MYSQL_PASSWORD'] = ''\\napp.config['MYSQL_DB'] = 'myflaskapp'\\napp.config['MYSQL_CURSORCLASS'] = 'DictCursor'\\nmysql = MySQL(app) \\n         \\n@app.route('/')\\ndef index():\\n    cur = mysql.connection.cursor(MySQLdb.cursors.DictCursor)\\n    cur.execute(\\\"SELECT DISTINCT office FROM employee ORDER BY office ASC\\\")\\n    employee = cur.fetchall()  \\n    return render_template('index.html', employee = employee)\\n \\n@app.route(\\\"/fetchrecords\\\",methods=[\\\"POST\\\",\\\"GET\\\"])\\ndef fetchrecords():\\n    cur = mysql.connection.cursor(MySQLdb.cursors.DictCursor)\\n    if request.method == 'POST':\\n        query = request.form['query']\\n        #print(query)\\n        if query == '':\\n            cur.execute(\\\"SELECT * FROM employee ORDER BY id DESC\\\")\\n            employeelist = cur.fetchall()\\n            print('all list')\\n        else:\\n            search_text = request.form['query']\\n            print(search_text)\\n            cur.execute(\\\"SELECT * FROM employee WHERE office IN (%s) ORDER BY id DESC\\\", [search_text])\\n            employeelist = cur.fetchall()  \\n    return jsonify({'htmlresponse': render_template('response.html', employeelist=employeelist)})\\n \\nif __name__ == \\\"__main__\\\":\\n    app.run(debug=True)\".trim();var response=\"\\n{% for row in employeelist %}  \\n<tr>\\n    <td>{{row.name}}</td>\\n    <td>{{row.position}}</td>\\n    <td>{{row.age}}</td>\\n    <td>{{ \\\"$%.2f\\\"|format(row.salary) }}</td>\\n    <td>{{row.office}}</td>\\n</tr>\\n{% endfor %} \".trim();var index=\"\\n<html>\\n    <head>\\n        <meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=utf-8\\\" />\\n        <title>Python Flask Jquery Ajax Live Data Search Select Dropdown</title>\\n        <script src=\\\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js\\\"></script>\\n        <script src=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\\\"></script>\\n        <link href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\" />\\n    </head>\\n    <body>\\n        <div class=\\\"container\\\">\\n            <br />\\n            <h2 align=\\\"center\\\">Python Flask Jquery Ajax Live Data Search Select Dropdown</h2><br />\\n            <select name=\\\"search_filter\\\" id=\\\"search_filter\\\" class=\\\"form-control\\\">\\n            <option value=\\\"\\\">Select Option</option>';\\n            {% for row in employee %}\\n                <option value=\\\"{{row.office}}\\\">{{row.office}}</option>';    \\n            {% endfor %}\\n            </select>\\n            <input type=\\\"hidden\\\" name=\\\"hidden_value\\\" id=\\\"hidden_value\\\" />\\n            <div style=\\\"clear:both\\\"></div>\\n            <br />\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-striped table-bordered\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Position</th>\\n                            <th>Age</th>\\n                            <th>Salary</th>\\n                            <th>Office</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                    </tbody>\\n                </table>\\n            </div>\\n            <br />\\n            <br />\\n            <br />\\n        </div>\\n<script>\\n$(document).ready(function(){\\n    load_data();\\n    function load_data(query='')\\n    {\\n        $.ajax({\\n            url:\\\"/fetchrecords\\\",\\n            method:\\\"POST\\\",\\n            data:{query:query},\\n            success:function(data)\\n            { \\n                $('tbody').html(data);\\n                $('tbody').append(data.htmlresponse);\\n            }\\n        })\\n    }\\n \\n    $('#search_filter').change(function(){\\n        $('#hidden_value').val($('#search_filter').val());\\n        var query = $('#hidden_value').val(); \\n        load_data(query);\\n    });\\n     \\n});\\n</script>\\n</body>\\n</html>\".trim();var GetSearch=/*#__PURE__*/function(_Component){_inherits(GetSearch,_Component);function GetSearch(){_classCallCheck(this,GetSearch);return _possibleConstructorReturn(this,_getPrototypeOf(GetSearch).apply(this,arguments));}_createClass(GetSearch,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Get Search\"),React.createElement(\"b\",null,\"app.py\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:appy,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"templates/response.html\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:response,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"b\",null,\"templates/index.html\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:index,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return GetSearch;}(Component);export default withStyles(styles)(GetSearch);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/pythone/deeppy/get_search.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","appy","trim","response","index","GetSearch","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAGA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADgB,CAKvBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALa,CAQvBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARY,CAAL,EAApB,CAcA,GAAMC,CAAAA,IAAI,CAAG,wiDAwCYC,IAxCZ,EAAb,CA0CA,GAAMC,CAAAA,QAAQ,CAAG,kOASFD,IATE,EAAjB,CAWA,GAAME,CAAAA,KAAK,CAAG,o3EAmELF,IAnEK,EAAd,C,GAsEMG,CAAAA,S,qSACgB,CAClBC,UAAU,CAAC,iBAAMxB,CAAAA,KAAK,CAACyB,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACb,KAA1B,EACE,8BAAI,oBAAC,OAAD,MAAJ,CADF,CADF,CADF,CAME,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEa,OAAO,CAACb,KAA1B,EACE,oBAAC,IAAD,MACE,2CADF,CAEE,sCAFF,CAGE,2BAAK,KAAK,CAAEN,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEY,IADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAHF,CAUE,8BAVF,CAWE,8BAXF,CAaE,uDAbF,CAcE,2BAAK,KAAK,CAAEZ,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEc,QADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAdF,CAqBE,8BArBF,CAuBE,oDAvBF,CAwBE,2BAAK,KAAK,CAAEd,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEe,KADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAxBF,CADF,CADF,CANF,CADF,CA6CD,C,uBAnDqBvB,S,EAsDxB,cAAgBI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBY,SAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst appy = `\nfrom flask import Flask, render_template, request, jsonify\nfrom flask_mysqldb import MySQL,MySQLdb #pip install flask-mysqldb https://github.com/alexferl/flask-mysqldb\n \napp = Flask(__name__)\n         \napp.secret_key = \"caircocoders-ednalan\"\n         \napp.config['MYSQL_HOST'] = 'localhost'\napp.config['MYSQL_USER'] = 'root'\napp.config['MYSQL_PASSWORD'] = ''\napp.config['MYSQL_DB'] = 'myflaskapp'\napp.config['MYSQL_CURSORCLASS'] = 'DictCursor'\nmysql = MySQL(app) \n         \n@app.route('/')\ndef index():\n    cur = mysql.connection.cursor(MySQLdb.cursors.DictCursor)\n    cur.execute(\"SELECT DISTINCT office FROM employee ORDER BY office ASC\")\n    employee = cur.fetchall()  \n    return render_template('index.html', employee = employee)\n \n@app.route(\"/fetchrecords\",methods=[\"POST\",\"GET\"])\ndef fetchrecords():\n    cur = mysql.connection.cursor(MySQLdb.cursors.DictCursor)\n    if request.method == 'POST':\n        query = request.form['query']\n        #print(query)\n        if query == '':\n            cur.execute(\"SELECT * FROM employee ORDER BY id DESC\")\n            employeelist = cur.fetchall()\n            print('all list')\n        else:\n            search_text = request.form['query']\n            print(search_text)\n            cur.execute(\"SELECT * FROM employee WHERE office IN (%s) ORDER BY id DESC\", [search_text])\n            employeelist = cur.fetchall()  \n    return jsonify({'htmlresponse': render_template('response.html', employeelist=employeelist)})\n \nif __name__ == \"__main__\":\n    app.run(debug=True)`.trim();\n\nconst response = `\n{% for row in employeelist %}  \n<tr>\n    <td>{{row.name}}</td>\n    <td>{{row.position}}</td>\n    <td>{{row.age}}</td>\n    <td>{{ \"$%.2f\"|format(row.salary) }}</td>\n    <td>{{row.office}}</td>\n</tr>\n{% endfor %} `.trim();\n\nconst index = `\n<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n        <title>Python Flask Jquery Ajax Live Data Search Select Dropdown</title>\n        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js\"></script>\n        <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\"></script>\n        <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\" rel=\"stylesheet\" />\n    </head>\n    <body>\n        <div class=\"container\">\n            <br />\n            <h2 align=\"center\">Python Flask Jquery Ajax Live Data Search Select Dropdown</h2><br />\n            <select name=\"search_filter\" id=\"search_filter\" class=\"form-control\">\n            <option value=\"\">Select Option</option>';\n            {% for row in employee %}\n                <option value=\"{{row.office}}\">{{row.office}}</option>';    \n            {% endfor %}\n            </select>\n            <input type=\"hidden\" name=\"hidden_value\" id=\"hidden_value\" />\n            <div style=\"clear:both\"></div>\n            <br />\n            <div class=\"table-responsive\">\n                <table class=\"table table-striped table-bordered\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Position</th>\n                            <th>Age</th>\n                            <th>Salary</th>\n                            <th>Office</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    </tbody>\n                </table>\n            </div>\n            <br />\n            <br />\n            <br />\n        </div>\n<script>\n$(document).ready(function(){\n    load_data();\n    function load_data(query='')\n    {\n        $.ajax({\n            url:\"/fetchrecords\",\n            method:\"POST\",\n            data:{query:query},\n            success:function(data)\n            { \n                $('tbody').html(data);\n                $('tbody').append(data.htmlresponse);\n            }\n        })\n    }\n \n    $('#search_filter').change(function(){\n        $('#hidden_value').val($('#search_filter').val());\n        var query = $('#hidden_value').val(); \n        load_data(query);\n    });\n     \n});\n</script>\n</body>\n</html>`.trim();\n\n\nclass GetSearch extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Get Search</h3>\n              <b>app.py</b>\n              <div style={titles}>\n                <PrismCode\n                  code={appy}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/response.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={response}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <b>templates/index.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={index}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(GetSearch));\n"]},"metadata":{},"sourceType":"module"}