{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import\"../../ReactJs/styles.css\";import Sidebar from\"../sidebar\";import PrismCode from\"../../ReactJs/prismCode\";var titles={backgroundColor:\"#F0F8FF\",padding:\"1px\",fontSize:\"16px\"};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var parentChild=\"\\n//html of AppComponent.ts\\n<app-childs [items]=\\\"data\\\"></app-childs>\\n\\nexport class AppComponent {\\n  data={ id:1, name:'Mukesh' }\\n}\\n\\n\\n//html of ChildsComponent.ts\\n{{items.id}}\\n\\nexport class ChildsComponent {\\n  @Input() items:any\\n  constructor() { }\\n}\\n\".trim();var childParent=\"\\n//html\\n <app-childs (parentFun)=\\\"parentFun($event)\\\"></app-childs>\\n  {{name}}\\n\\nexport class AppComponent {\\n  title = 'childparrent';\\n  name = \\\"\\\";\\n  parentFun(data:any){\\n    console.log(data)\\n    this.name = data.name\\n  }\\n}\\n\\n\\n//html\\n<button (click)='sendData()'> CallParent</button>\\n\\nexport class ChildsComponent {\\n@Output() parentFun:EventEmitter<any> = new EventEmitter()\\n\\n  sendData(){\\n     let user = {\\n      name: \\\"Mukesh\\\",\\n      age: 30\\n    }\\n    this.parentFun.emit(user)\\n  }\\n}\\n\".trim();var keyInput=\"\\n//html\\n<input type = \\\"number\\\" min = \\\"0\\\" max = \\\"100\\\" [value] = \\\"progress\\\">\\n\\nexport class AppComponent {\\n  progress=0;\\n}\".trim();var ifConditions=\"\\n//html\\n{{hoursOfDay}}\\n<button (click) = \\\"checkTime()\\\"> Check</button> \\n{{msg}}\\n\\nexport class AppComponent {\\n hoursOfDay = 9;\\n msg=\\\"\\\"\\n\\n checkTime(){\\n   this.msg = this.hoursOfDay <12 ? \\\"Good Morning\\\" : \\\"Keep on\\\";\\n   this.hoursOfDay = this.hoursOfDay + 1;\\n }\\n}\\n}\".trim();var ifElse=\"\\n//html\\n<button (click)=\\\"getInfo()\\\">if</button>\\n  <div *ngIf=\\\"isTrue; else elseblock\\\">\\n    {{data}}\\n  </div>\\n  <ng-template #elseblock>\\n    Else\\n  </ng-template>\\n\\nexport class AppComponent {\\n  data=\\\"If\\\";\\n  isTrue=false\\n\\n  getInfo(){\\n    this.isTrue = !this.isTrue\\n  }\\n}\".trim();var ifElseThen=\"\\n//html\\n<button (click)=\\\"getInfo()\\\"> click</button>\\n  <div *ngIf=\\\"isTrue; then thenblock else elseblock\\\"> {{data}}</div>\\n  <ng-template #thenblock>\\n    Then\\n  </ng-template>\\n  <ng-template #elseblock>\\n    Else\\n  </ng-template>\\n\\n\\nexport class AppComponent {\\n  data=\\\"If\\\";\\n  isTrue=false\\n\\n  getInfo(){\\n    this.isTrue = !this.isTrue\\n  }\\n}\".trim();var switchCase=\"\\n//html\\n< select(change)=\\\"getValue($event)\\\" >\\n    <option value=\\\"default\\\">Select</option>\\n    <option value=\\\"laptop\\\">Laptop</option>\\n    <option value=\\\"tv\\\">TV</option>\\n    <option value=\\\"mobile\\\">Mobile</option>\\n    <option value=\\\"machine\\\">Machine</option>\\n  </select >\\n\\n<div [ngSwitch] = \\\"selectedItems\\\">\\n    <p *ngSwitchCase=\\\"'laptop'\\\"> Laptop</p>\\n    <p *ngSwitchCase=\\\"'tv'\\\"> TV</p>\\n    <p *ngSwitchCase=\\\"'mobile'\\\"> Mobile</p>\\n    <p *ngSwitchCase=\\\"'machine'\\\"> Machine</p>\\n  </div >\\n\\n    \\nexport class AppComponent {\\n  selectedItems?: string;\\n\\n  getValue(e){\\n    this.selectedItems = e.target.value\\n  }\\n}\".trim();var Projection12=/*#__PURE__*/function(_Component){_inherits(Projection12,_Component);function Projection12(){_classCallCheck(this,Projection12);return _possibleConstructorReturn(this,_getPrototypeOf(Projection12).apply(this,arguments));}_createClass(Projection12,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Parent-Child\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:parentChild,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Child-Parent\"),\"The @Output() decorator in a child component or directive allows data to flow from the child to the parent.\",React.createElement(\"br\",null),React.createElement(\"br\",null),\"The Child Component exposes an EventEmitter Property. This Property is adorned with the @Output decorator. When Child Component needs to communicate with the parent it raises the event. The Parent Component listens to that event and reacts to it.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:childParent,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Key-input\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:keyInput,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"If-Condition\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:ifConditions,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"If-Else\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:ifElse,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"If-Else-Then\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:ifElseThen,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Switch\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:switchCase,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return Projection12;}(Component);export default withStyles(styles)(Projection12);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/angularjsd/angular 12/projection.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","parentChild","trim","childParent","keyInput","ifConditions","ifElse","ifElseThen","switchCase","Projection12","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport \"../../ReactJs/styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../../ReactJs/prismCode\";\n\nconst titles = { backgroundColor: \"#F0F8FF\", padding: \"1px\", fontSize: \"16px\" };\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n});\n\nconst parentChild = `\n//html of AppComponent.ts\n<app-childs [items]=\"data\"></app-childs>\n\nexport class AppComponent {\n  data={ id:1, name:'Mukesh' }\n}\n\n\n//html of ChildsComponent.ts\n{{items.id}}\n\nexport class ChildsComponent {\n  @Input() items:any\n  constructor() { }\n}\n`.trim();\n\nconst childParent = `\n//html\n <app-childs (parentFun)=\"parentFun($event)\"></app-childs>\n  {{name}}\n\nexport class AppComponent {\n  title = 'childparrent';\n  name = \"\";\n  parentFun(data:any){\n    console.log(data)\n    this.name = data.name\n  }\n}\n\n\n//html\n<button (click)='sendData()'> CallParent</button>\n\nexport class ChildsComponent {\n@Output() parentFun:EventEmitter<any> = new EventEmitter()\n\n  sendData(){\n     let user = {\n      name: \"Mukesh\",\n      age: 30\n    }\n    this.parentFun.emit(user)\n  }\n}\n`.trim();\n\nconst keyInput = `\n//html\n<input type = \"number\" min = \"0\" max = \"100\" [value] = \"progress\">\n\nexport class AppComponent {\n  progress=0;\n}`.trim();\n\nconst ifConditions = `\n//html\n{{hoursOfDay}}\n<button (click) = \"checkTime()\"> Check</button> \n{{msg}}\n\nexport class AppComponent {\n hoursOfDay = 9;\n msg=\"\"\n\n checkTime(){\n   this.msg = this.hoursOfDay <12 ? \"Good Morning\" : \"Keep on\";\n   this.hoursOfDay = this.hoursOfDay + 1;\n }\n}\n}`.trim();\n\nconst ifElse = `\n//html\n<button (click)=\"getInfo()\">if</button>\n  <div *ngIf=\"isTrue; else elseblock\">\n    {{data}}\n  </div>\n  <ng-template #elseblock>\n    Else\n  </ng-template>\n\nexport class AppComponent {\n  data=\"If\";\n  isTrue=false\n\n  getInfo(){\n    this.isTrue = !this.isTrue\n  }\n}`.trim();\n\nconst ifElseThen = `\n//html\n<button (click)=\"getInfo()\"> click</button>\n  <div *ngIf=\"isTrue; then thenblock else elseblock\"> {{data}}</div>\n  <ng-template #thenblock>\n    Then\n  </ng-template>\n  <ng-template #elseblock>\n    Else\n  </ng-template>\n\n\nexport class AppComponent {\n  data=\"If\";\n  isTrue=false\n\n  getInfo(){\n    this.isTrue = !this.isTrue\n  }\n}`.trim();\n\nconst switchCase = `\n//html\n< select(change)=\"getValue($event)\" >\n    <option value=\"default\">Select</option>\n    <option value=\"laptop\">Laptop</option>\n    <option value=\"tv\">TV</option>\n    <option value=\"mobile\">Mobile</option>\n    <option value=\"machine\">Machine</option>\n  </select >\n\n<div [ngSwitch] = \"selectedItems\">\n    <p *ngSwitchCase=\"'laptop'\"> Laptop</p>\n    <p *ngSwitchCase=\"'tv'\"> TV</p>\n    <p *ngSwitchCase=\"'mobile'\"> Mobile</p>\n    <p *ngSwitchCase=\"'machine'\"> Machine</p>\n  </div >\n\n    \nexport class AppComponent {\n  selectedItems?: string;\n\n  getValue(e){\n    this.selectedItems = e.target.value\n  }\n}`.trim();\n\nclass Projection12 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4>\n              <Sidebar />\n            </h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Parent-Child</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={parentChild}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Child-Parent</h3>\n              The @Output() decorator in a child component or directive allows\n              data to flow from the child to the parent.\n              <br />\n              <br />\n              The Child Component exposes an EventEmitter Property. This\n              Property is adorned with the @Output decorator. When Child\n              Component needs to communicate with the parent it raises the\n              event. The Parent Component listens to that event and reacts to\n              it.\n              <div style={titles}>\n                <PrismCode\n                  code={childParent}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Key-input</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={keyInput}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>If-Condition</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={ifConditions}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>If-Else</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={ifElse}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>If-Else-Then</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={ifElseThen}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Switch</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={switchCase}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Projection12);\n"]},"metadata":{},"sourceType":"module"}