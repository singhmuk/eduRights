{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import\"../ReactJs/styles.css\";import Sidebar from\"./sidebar\";import PrismCode from\"../ReactJs/prismCode\";var titles={backgroundColor:\"#F0F8FF\",padding:\"1px\",fontSize:\"16px\"};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var Calc=\"\\n.foo {\\n\\tWidth: calc(100px + 50px)\\n}\\n\".trim();var Mixin=\"\\n//To define mixin:\\n@mixin grid($flex: true /*default argument*/) {\\n  @if $flex {\\n      @include flex;\\n  } @else {\\n      display: block;\\n  }\\n}\\n\\n\\n.row {\\n  @include grid(true);\\n}\\n\\n/*css*/\\n.row {\\n  display: -webkit-flex;\\n  display: flex;\\n}\\n\".trim();var app=\"\\nimport './App.scss';\\n\\nfunction App() {\\n  return (\\n    <div>\\n       <p className='text'>Paragraph</p>\\n       <div className='main'>\\n       <p className='nesting'>Nesting</p>\\n       </div>\\n\\n       <nav>\\n        <ul>\\n          <li><a href=\\\"#\\\">HTML</a></li>\\n          <li><a href=\\\"#\\\">CSS</a></li>\\n          <li><a href=\\\"#\\\">SASS</a></li>\\n        </ul>\\n      </nav>\\n\\n      <div className=\\\"danger\\\">Warning! This is some text.</div>\\n      <button class=\\\"button-basic button-report\\\">Report this</button>\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\".trim();var stylescss=\"\\n//variables\\n$primaryColor:blue;\\n$secondaryColor:#008000;\\n\\n$basePadding:0.75rem;\\n$borderRadius:10%;\\n\\n$font-weight:(\\n    \\\"regular\\\":400,\\n    \\\"medium\\\":500,\\n    \\\"bold\\\":600\\n);\\n\".trim();var varNesting=\"\\nh3 { color: $color-primary; }\\n\\np { color: $color-blue; }\\n\\na { color: $color-blue; }\\n\\n$color-primary: pink;\\n$color-blue: blue;\\n$box-border: 1px solid black;\\n$border-radius: 5%;\\n$border-padding: 10px;\\n$border-with: 50%;\\n\\n//scss map\\n$color: (\\n  blue-color: blue,\\n  green-color: green,\\n  yellow-color: yellow,\\n  red-color: red,\\n  white-color: white,\\n);\\n.box1 {\\n  background-color: map-get($color, yellow-color);\\n  border: $box-border;\\n  border-radius: $border-radius;\\n}\\n\\n.box1, h3 {\\n  font-size: 30px;\\n  color: rgb(63, 61, 202);\\n}\\n\\n.box1, p {\\n  font-size: 18px;\\n  color: rgb(41, 143, 75);\\n}\\n\\n.box1, a {\\n  color: rgb(136, 11, 32);\\n}\\n\\n.box1 a:hover {\\n  background-color: red;\\n}\\n\\n.box2 {\\n  background-color: map-get($color, red-color);\\n  width: $border-with;\\n}\\n\\n.box2, h3 {\\n  font-size: 30px;\\n  color: rgb(49, 49, 83);\\n}\\n\\n//nesting\\nul {\\n  list-style-type: square;\\n  li {\\n    padding: 5px;\\n    button {\\n      background-color: blue;\\n\\n      &:hover {\\n        background-color: green;\\n      }\\n    }\\n    &:first-child {\\n      border: 1px solid pink;\\n    }\\n  }\\n}\\n\\n\\n//variable.html\\n<div class=\\\"box1\\\">\\n  <h3>Best Box</h3>\\n  <p>Please make box</p>\\n  <a href=\\\"#\\\">link here</a>\\n</div>\\n<div class=\\\"box2\\\">\\n  <h3>Best Box2</h3>\\n  <p>Please make box2</p>\\n  <a href=\\\"#\\\">link here2</a>\\n</div>\\n<ul>\\n  <li><button>Button1</button></li>\\n  <li><button>Button2</button></li>\\n  <li><button>Button3</button></li>\\n  <li><button>Button4</button></li>\\n  <li><button>Button5</button></li>\\n  <li><button>Button6</button></li>\\n</ul>\\n\".trim();var varriscss=\"\\n$box-border: 1px solid black;\\n$border-radius: 5%;\\n$border-padding: 10px;\\n$border-with: 50%;\\n$font-text: 18px;\\n\\n//scss map\\n$color: (\\n  blue-color: blue,\\n  green-color: green,\\n  yellow-color: yellow,\\n  red-color: red,\\n  white-color: white,\\n);\\n\".trim();var utilitycss=\"\\n@import \\\"./_veriables\\\";\\n\\n.float { float: left; }\\n\\n.floatR { float: right; }\\n\\n.clear { float: both; }\\n\\n.margin-0 { margin: 0; }\\n\\n.padding-0 { padding: 0; }\\n\".trim();var scssmap=\"\\n$color: (\\n  blue-color: blue,\\n  green-color: green,\\n  yellow-color: yellow,\\n  red-color: red,\\n  white-color: white,\\n);\\n\\nh2 {\\n  font-size: $font-text;\\n  color: map-get($color, yellow-color);\\n}\".trim();var mixinscss=\"\\n@import \\\"../scss/base-global\\\";\\n@import \\\"../scss/_veriables\\\";\\n@import \\\"../scss/_typography\\\";\\n@import \\\"../scss/utility\\\";\\n\\n$box-border: 1px solid black;\\n$border-radius: 5%;\\n$border-padding: 10px;\\n$border-with: 50%;\\n\\n//scss map\\n$color: (\\n  blue-color: blue,\\n  green-color: green,\\n  yellow-color: yellow,\\n  red-color: red,\\n  white-color: white,\\n);\\n\\n//mixin\\n@mixin block {\\n  border: $box-border;\\n  border-radius: $border-radius;\\n  padding: $border-padding;\\n  width: $border-with;\\n  h3 {\\n    font-size: 30px;\\n  }\\n}\\n\\n.box1 {\\n  @include block;\\n  background-color: map-get($color, yellow-color);\\n}\\n\\n.box1, h3 {\\n  @include block;\\n  color: rgb(63, 61, 202);\\n}\\n\\n.box2 {\\n  @include block;\\n  background-color: map-get($color, red-color);\\n}\\n\\n.box2, h3 {\\n  @include block;\\n  color: rgb(49, 49, 83);\\n}\".trim();var operatorscss=\"\\n//Comparision Operators: <, >, <=, >=\\n\\n$val1: 10;\\n$val2: 5;\\n\\n.myClass {\\n  padding: $val1 % $val2 + px;\\n}\\n\\n.myClass {\\n  font-size: $val1 + px;\\n}\\n\\n.myClass {\\n  font-size: $val1 * 2 + px;\\n}\\n\".trim();var extendscss=\"\\n.box {\\n  border: 2px solid green;\\n  border-radius: 10px;\\n  width: 300px;\\n}\\n\\n//extends\\n.greenbox {\\n  @extend .box;\\n}\\n\\n//placeholder\\n%box2 {\\n  border: 2px solid green;\\n  border-radius: 10px;\\n  width: 300px;\\n}\\n\\n.greenbox2 {\\n  @extend %box2;\\n}\\n\".trim();var functioncss=\"\\n.function {\\n  background-color: yellow;\\n  border: 1px solid red;\\n}\\n\\n.function:hover {\\n  background-color: darken(blue, 15%);\\n  background-color: mix(black, green);\\n}\\n\\n//custom function\\n@function sum($val, $val2) {\\n  @return $val + $val2;\\n}\\n\\n.function {\\n  font-size: sum(20, 50) * 1px;\\n}\\n\\n//image\\n.header {\\n  background: url(\\\"../image.png\\\");\\n}\".trim();var condotionscss=\"\\n$value: high;\\n\\n.myClass {\\n  @if $value == high {\\n    margin: 100px;\\n  } @else if($value == low) {\\n    margin: 550px;\\n  } @else {\\n    margin: 20px;\\n  }\\n}\\n\\n@mixin myStyle {\\n  font-size: 10px;\\n}\\n.myClass2 {\\n  @include myStyle();\\n}\".trim();var loopcss=\"\\n@for $i from 1 through 4 {\\n  .box {\\n    width: 100px;\\n  }\\n}\\n\\n@for $i from 1 to 4 {\\n  .box {\\n    width: 100px;\\n  }\\n}\\n\\n//each :Loop iteration happen on the basis of list.\\n$devices: desktop, mobile, teblet;\\n\\n@each $active in $devices {\\n  .myDevice {\\n    background-color: green;\\n  }\\n}\\n\\n//while\\n$i: 1;\\n@while $i<4 {\\n  .myClass {\\n    width: 100px;\\n  }\\n\\n  $i: $i + 1;\\n}\\n\".trim();var interpolationcss=\"\\n$side: left;\\n$value: 50;\\n\\n.gap-#{$side}-#{$value} {\\n  margin-#{$side}: 50px;\\n}\\n\\n@mixin gap($side, $value) {\\n}\\n\\n.myClass {\\n  @include gap(right, 100);\\n}\".trim();var contentdirective=\"\\n@mixin myMixin {\\n  font-size: 20px;\\n}\\n\\n.class {\\n  @include myMixin() {\\n    background: red;\\n  }\\n}\\n\\n.class2 {\\n  @include myMixin();\\n  @media only screen and (min-device-width: 481px) and (max-device-width: 1024px) and (orientation: portrait) {\\n    background-color: green;\\n  }\\n}\\n\".trim();var Sass=/*#__PURE__*/function(_Component){_inherits(Sass,_Component);function Sass(){_classCallCheck(this,Sass);return _possibleConstructorReturn(this,_getPrototypeOf(Sass).apply(this,arguments));}_createClass(Sass,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Features of Sass:\"),\"Create scss file with \",React.createElement(\"b\",null,\"_filename\"),\".\",React.createElement(\"ol\",null,React.createElement(\"li\",null,\"Variables\"),React.createElement(\"li\",null,\"Nesting\"),React.createElement(\"li\",null,\"Partials & Imports\"),React.createElement(\"li\",null,\"Mixins\"),React.createElement(\"li\",null,\"Extends\"),React.createElement(\"li\",null,\"Operators\"),React.createElement(\"li\",null,\"Functions\"),React.createElement(\"li\",null,\"Conditional Directives\")),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"1. How does Calc work?\"),\"calc() function allows us to perform mathematical operations on property values. Instead of declaring.\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Ex. \"),\"static pixel values for an element's width, we can use calc() to specify that the width is the result of the addition of two/ more numeric values.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:Calc,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"2. SASS vs SCSS\"),React.createElement(\"ol\",null,React.createElement(\"li\",null,\"SASS is based on indentation and SCSS(Sassy CSS) is not.\"),React.createElement(\"li\",null,\"SASS uses .sass extension while SCSS uses .scss extension.\"),React.createElement(\"li\",null,\"SASS uses indentation rather than brackets to indicate nesting of selectors, and newlines rather than semicolons to separate properties.\")),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"3. What is a Mixin and how to use on?\"),React.createElement(\"ol\",null,React.createElement(\"li\",null,\"A Mixin is a block of code that lets us group CSS declarations we may reuse throughout our site.\"),React.createElement(\"li\",null,\"To use a Mixin, we simply use \",React.createElement(\"b\",null,\"@include\"),\" followed by the name of the Mixin and a semi-colon.\")),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:Mixin,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Sass Example\"),React.createElement(\"b\",null,\"npm install node-sass\"),React.createElement(\"br\",null),React.createElement(\"b\",null,\"app.js\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:app,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"styles/styles.scss\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:stylescss,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"4. Variable & Nesting\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:varNesting,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"5. Variable\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:varriscss,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"6. Utility\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:utilitycss,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"7. scss-map\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:scssmap,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"8. Mixin scss\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:mixinscss,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"9. Operators\"),React.createElement(\"ul\",null,React.createElement(\"li\",null,React.createElement(\"b\",null,\"Equality Operators: \"),\"==, !=\"),React.createElement(\"li\",null,React.createElement(\"b\",null,\"Comparision Operators: \")),React.createElement(\"li\",null,React.createElement(\"b\",null,\"Numeric Operators: \"),\"+, -, %, /, *\")),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:operatorscss,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"10. Extends & Placeholder\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:extendscss,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"11. Functions\"),React.createElement(\"ul\",null,React.createElement(\"li\",null,\"[[sass built-in feFunctions]]\"),React.createElement(\"li\",null,\"darken($colorName, 15%);\"),React.createElement(\"li\",null,\"lighten($colorName, 15%);\"),React.createElement(\"li\",null,\"mix(black, grin);\"),React.createElement(\"li\",null,\"map-get($map, $key)\")),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:functioncss,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"12. Condotions\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:condotionscss,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"13. Loop\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:loopcss,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"14. Interpolation\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:interpolationcss,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"15. Content Directive\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:contentdirective,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return Sass;}(Component);export default withStyles(styles)(Sass);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/css/sass.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","Calc","trim","Mixin","app","stylescss","varNesting","varriscss","utilitycss","scssmap","mixinscss","operatorscss","extendscss","functioncss","condotionscss","loopcss","interpolationcss","contentdirective","Sass","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport \"../ReactJs/styles.css\";\nimport Sidebar from \"./sidebar\";\nimport PrismCode from \"../ReactJs/prismCode\";\n\nconst titles = { backgroundColor: \"#F0F8FF\", padding: \"1px\", fontSize: \"16px\" };\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n});\n\nconst Calc = `\n.foo {\n\tWidth: calc(100px + 50px)\n}\n`.trim();\n\nconst Mixin = `\n//To define mixin:\n@mixin grid($flex: true /*default argument*/) {\n  @if $flex {\n      @include flex;\n  } @else {\n      display: block;\n  }\n}\n\n\n.row {\n  @include grid(true);\n}\n\n/*css*/\n.row {\n  display: -webkit-flex;\n  display: flex;\n}\n`.trim();\n\nconst app = `\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div>\n       <p className='text'>Paragraph</p>\n       <div className='main'>\n       <p className='nesting'>Nesting</p>\n       </div>\n\n       <nav>\n        <ul>\n          <li><a href=\"#\">HTML</a></li>\n          <li><a href=\"#\">CSS</a></li>\n          <li><a href=\"#\">SASS</a></li>\n        </ul>\n      </nav>\n\n      <div className=\"danger\">Warning! This is some text.</div>\n      <button class=\"button-basic button-report\">Report this</button>\n    </div>\n  );\n}\n\nexport default App;\n`.trim();\n\nconst stylescss = `\n//variables\n$primaryColor:blue;\n$secondaryColor:#008000;\n\n$basePadding:0.75rem;\n$borderRadius:10%;\n\n$font-weight:(\n    \"regular\":400,\n    \"medium\":500,\n    \"bold\":600\n);\n`.trim();\n\nconst varNesting = `\nh3 { color: $color-primary; }\n\np { color: $color-blue; }\n\na { color: $color-blue; }\n\n$color-primary: pink;\n$color-blue: blue;\n$box-border: 1px solid black;\n$border-radius: 5%;\n$border-padding: 10px;\n$border-with: 50%;\n\n//scss map\n$color: (\n  blue-color: blue,\n  green-color: green,\n  yellow-color: yellow,\n  red-color: red,\n  white-color: white,\n);\n.box1 {\n  background-color: map-get($color, yellow-color);\n  border: $box-border;\n  border-radius: $border-radius;\n}\n\n.box1, h3 {\n  font-size: 30px;\n  color: rgb(63, 61, 202);\n}\n\n.box1, p {\n  font-size: 18px;\n  color: rgb(41, 143, 75);\n}\n\n.box1, a {\n  color: rgb(136, 11, 32);\n}\n\n.box1 a:hover {\n  background-color: red;\n}\n\n.box2 {\n  background-color: map-get($color, red-color);\n  width: $border-with;\n}\n\n.box2, h3 {\n  font-size: 30px;\n  color: rgb(49, 49, 83);\n}\n\n//nesting\nul {\n  list-style-type: square;\n  li {\n    padding: 5px;\n    button {\n      background-color: blue;\n\n      &:hover {\n        background-color: green;\n      }\n    }\n    &:first-child {\n      border: 1px solid pink;\n    }\n  }\n}\n\n\n//variable.html\n<div class=\"box1\">\n  <h3>Best Box</h3>\n  <p>Please make box</p>\n  <a href=\"#\">link here</a>\n</div>\n<div class=\"box2\">\n  <h3>Best Box2</h3>\n  <p>Please make box2</p>\n  <a href=\"#\">link here2</a>\n</div>\n<ul>\n  <li><button>Button1</button></li>\n  <li><button>Button2</button></li>\n  <li><button>Button3</button></li>\n  <li><button>Button4</button></li>\n  <li><button>Button5</button></li>\n  <li><button>Button6</button></li>\n</ul>\n`.trim();\n\nconst varriscss = `\n$box-border: 1px solid black;\n$border-radius: 5%;\n$border-padding: 10px;\n$border-with: 50%;\n$font-text: 18px;\n\n//scss map\n$color: (\n  blue-color: blue,\n  green-color: green,\n  yellow-color: yellow,\n  red-color: red,\n  white-color: white,\n);\n`.trim();\n\nconst utilitycss = `\n@import \"./_veriables\";\n\n.float { float: left; }\n\n.floatR { float: right; }\n\n.clear { float: both; }\n\n.margin-0 { margin: 0; }\n\n.padding-0 { padding: 0; }\n`.trim();\n\nconst scssmap = `\n$color: (\n  blue-color: blue,\n  green-color: green,\n  yellow-color: yellow,\n  red-color: red,\n  white-color: white,\n);\n\nh2 {\n  font-size: $font-text;\n  color: map-get($color, yellow-color);\n}`.trim();\n\nconst mixinscss = `\n@import \"../scss/base-global\";\n@import \"../scss/_veriables\";\n@import \"../scss/_typography\";\n@import \"../scss/utility\";\n\n$box-border: 1px solid black;\n$border-radius: 5%;\n$border-padding: 10px;\n$border-with: 50%;\n\n//scss map\n$color: (\n  blue-color: blue,\n  green-color: green,\n  yellow-color: yellow,\n  red-color: red,\n  white-color: white,\n);\n\n//mixin\n@mixin block {\n  border: $box-border;\n  border-radius: $border-radius;\n  padding: $border-padding;\n  width: $border-with;\n  h3 {\n    font-size: 30px;\n  }\n}\n\n.box1 {\n  @include block;\n  background-color: map-get($color, yellow-color);\n}\n\n.box1, h3 {\n  @include block;\n  color: rgb(63, 61, 202);\n}\n\n.box2 {\n  @include block;\n  background-color: map-get($color, red-color);\n}\n\n.box2, h3 {\n  @include block;\n  color: rgb(49, 49, 83);\n}`.trim();\n\nconst operatorscss = `\n//Comparision Operators: <, >, <=, >=\n\n$val1: 10;\n$val2: 5;\n\n.myClass {\n  padding: $val1 % $val2 + px;\n}\n\n.myClass {\n  font-size: $val1 + px;\n}\n\n.myClass {\n  font-size: $val1 * 2 + px;\n}\n`.trim();\n\nconst extendscss = `\n.box {\n  border: 2px solid green;\n  border-radius: 10px;\n  width: 300px;\n}\n\n//extends\n.greenbox {\n  @extend .box;\n}\n\n//placeholder\n%box2 {\n  border: 2px solid green;\n  border-radius: 10px;\n  width: 300px;\n}\n\n.greenbox2 {\n  @extend %box2;\n}\n`.trim();\n\nconst functioncss = `\n.function {\n  background-color: yellow;\n  border: 1px solid red;\n}\n\n.function:hover {\n  background-color: darken(blue, 15%);\n  background-color: mix(black, green);\n}\n\n//custom function\n@function sum($val, $val2) {\n  @return $val + $val2;\n}\n\n.function {\n  font-size: sum(20, 50) * 1px;\n}\n\n//image\n.header {\n  background: url(\"../image.png\");\n}`.trim();\n\nconst condotionscss = `\n$value: high;\n\n.myClass {\n  @if $value == high {\n    margin: 100px;\n  } @else if($value == low) {\n    margin: 550px;\n  } @else {\n    margin: 20px;\n  }\n}\n\n@mixin myStyle {\n  font-size: 10px;\n}\n.myClass2 {\n  @include myStyle();\n}`.trim();\n\nconst loopcss = `\n@for $i from 1 through 4 {\n  .box {\n    width: 100px;\n  }\n}\n\n@for $i from 1 to 4 {\n  .box {\n    width: 100px;\n  }\n}\n\n//each :Loop iteration happen on the basis of list.\n$devices: desktop, mobile, teblet;\n\n@each $active in $devices {\n  .myDevice {\n    background-color: green;\n  }\n}\n\n//while\n$i: 1;\n@while $i<4 {\n  .myClass {\n    width: 100px;\n  }\n\n  $i: $i + 1;\n}\n`.trim();\n\nconst interpolationcss = `\n$side: left;\n$value: 50;\n\n.gap-#{$side}-#{$value} {\n  margin-#{$side}: 50px;\n}\n\n@mixin gap($side, $value) {\n}\n\n.myClass {\n  @include gap(right, 100);\n}`.trim();\n\nconst contentdirective = `\n@mixin myMixin {\n  font-size: 20px;\n}\n\n.class {\n  @include myMixin() {\n    background: red;\n  }\n}\n\n.class2 {\n  @include myMixin();\n  @media only screen and (min-device-width: 481px) and (max-device-width: 1024px) and (orientation: portrait) {\n    background-color: green;\n  }\n}\n`.trim();\n\nclass Sass extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4>\n              <Sidebar />\n            </h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Features of Sass:</h3>\n              Create scss file with <b>_filename</b>.\n              <ol>\n                <li>Variables</li>\n                <li>Nesting</li>\n                <li>Partials & Imports</li>\n                <li>Mixins</li>\n                <li>Extends</li>\n                <li>Operators</li>\n                <li>Functions</li>\n                <li>Conditional Directives</li>\n              </ol>\n              <br />\n              <br />\n              <h3>1. How does Calc work?</h3>\n              calc() function allows us to perform mathematical operations on\n              property values. Instead of declaring.\n              <br />\n              <br />\n              <b>Ex. </b>static pixel values for an element's width, we can use\n              calc() to specify that the width is the result of the addition of\n              two/ more numeric values.\n              <div style={titles}>\n                <PrismCode\n                  code={Calc}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>2. SASS vs SCSS</h3>\n              <ol>\n                <li>\n                  SASS is based on indentation and SCSS(Sassy CSS) is not.\n                </li>\n                <li>\n                  SASS uses .sass extension while SCSS uses .scss extension.\n                </li>\n                <li>\n                  SASS uses indentation rather than brackets to indicate nesting\n                  of selectors, and newlines rather than semicolons to separate\n                  properties.\n                </li>\n              </ol>\n              <br />\n              <h3>3. What is a Mixin and how to use on?</h3>\n              <ol>\n                <li>\n                  A Mixin is a block of code that lets us group CSS declarations\n                  we may reuse throughout our site.\n                </li>\n                <li>\n                  To use a Mixin, we simply use <b>@include</b> followed by the\n                  name of the Mixin and a semi-colon.\n                </li>\n              </ol>\n              <div style={titles}>\n                <PrismCode\n                  code={Mixin}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Sass Example</h3>\n              <b>npm install node-sass</b>\n              <br />\n              <b>app.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={app}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>styles/styles.scss</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={stylescss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>4. Variable & Nesting</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={varNesting}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>5. Variable</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={varriscss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>6. Utility</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={utilitycss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>7. scss-map</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={scssmap}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>8. Mixin scss</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={mixinscss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>9. Operators</h3>\n              <ul>\n                <li>\n                  <b>Equality Operators: </b>==, !=\n                </li>\n                <li>\n                  <b>Comparision Operators: </b>\n                </li>\n                <li>\n                  <b>Numeric Operators: </b>+, -, %, /, *\n                </li>\n              </ul>\n              <div style={titles}>\n                <PrismCode\n                  code={operatorscss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>10. Extends & Placeholder</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={extendscss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>11. Functions</h3>\n              <ul>\n                <li>[[sass built-in feFunctions]]</li>\n                <li>darken($colorName, 15%);</li>\n                <li>lighten($colorName, 15%);</li>\n                <li>mix(black, grin);</li>\n                <li>map-get($map, $key)</li>\n              </ul>\n              <div style={titles}>\n                <PrismCode\n                  code={functioncss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>12. Condotions</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={condotionscss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>13. Loop</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={loopcss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>14. Interpolation</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={interpolationcss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>15. Content Directive</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={contentdirective}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Sass);\n"]},"metadata":{},"sourceType":"module"}