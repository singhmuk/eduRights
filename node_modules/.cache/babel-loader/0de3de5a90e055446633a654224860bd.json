{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/Redux/deep/counter.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst counters = `\n//App.js\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { increment, decrement, reset } from \"./actions/actions\";\n\nconst App = ({ count, onDecrement, onIncrement, onReset }) => (\n  <div>\n    {console.log(count)}\n    <p>Count: {count}</p>\n    <button onClick={onDecrement}>-</button>\n    <button onClick={onReset}>Reset</button>\n    <button onClick={onIncrement}>+</button>\n  </div>\n);\n\nconst mapStateToProps = (state) => ({\n  count: state.count,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIncrement: () => {\n      dispatch(increment());\n    },\n    onDecrement: () => {\n      dispatch(decrement());\n    },\n    onReset: () => {\n      dispatch(reset());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n//actions/types.js\nexport const INCREMENT = \"INCREMENT\";\nexport const DECREMENT = \"DECREMENT\";\nexport const RESET = \"RESET\";\n\n\n\n//actions/actions.js\nimport { INCREMENT, DECREMENT, RESET } from \"./types\";\n\nexport function increment() {\n  return {\n    type: INCREMENT,\n  };\n}\n\nexport function decrement() {\n  return {\n    type: DECREMENT,\n  };\n}\n\nexport function reset() {\n  return {\n    type: RESET,\n  };\n}\n\n\n\n//reducers/index.js\nimport { INCREMENT, DECREMENT, RESET } from \"../actions/types\";\n\nconst initialState = {\n  count: 0,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      return {\n        count: state.count + 1,\n      };\n    case DECREMENT:\n      return {\n        count: state.count - 1,\n      };\n    case RESET:\n      return {\n        count: (state.count = 0),\n      };\n    default:\n      return state;\n  }\n};\n\n\n\n//index.js\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n\n//store.js\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(\n  rootReducer, \n  compose(applyMiddleware(thunk))\n  );\n\nexport default store;\n`.trim();\nconst dropdawn = `\n//store.js\nimport { compose, createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducer from './reducers'\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  compose(applyMiddleware(sagaMiddleware))\n)\n\nexport default store;\n\n\n//components/addPlayer.js\nimport React, { Component, useState } from 'react';\n\n\nclass AddPlayer extends Component {\n  state = {\n    playerName: this.props.playerName,\n    selectPlayer: this.props.selectPlayer,\n    selectTeam: this.props.selectTeam\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onAddPlayer(this.state);\n    this.setState({\n      playerName: '',\n      selectPlayer: '',\n      selectTeam: ''\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          Select Team\n          <div>\n            <select className=\"selectFields\"\n              type=\"text\"\n              name=\"teamName\"\n              id=\"inputTodoPriority\"\n              value={this.state.teamName}\n              onChange={this.handleChange}\n            >\n              <option>Select</option>\n              <option>Team A</option>\n              <option>Team B</option>\n            </select>\n          </div>\n\n          <br />\n          Enter Player Name\n          <div>\n            <input className=\"input-text\"\n              name=\"playerName\"\n              type=\"text\"\n              value={this.state.playerName}\n              onChange={this.handleChange}\n              placeholder=\"Enter Name\"\n              />\n          </div>\n\n          <br />\n          <div>\n          Select Player Type:\n            <select className=\"selectFields\"\n              type=\"text\"\n              name=\"playerType\"\n              id=\"inputTodoResponsible\"\n              value={this.state.playerType}\n              onChange={this.handleChange}\n            >\n              <option>Select</option>\n              <option>B</option>\n              <option>Blw</option>\n            </select><br />\n          </div>\n\n          <div>\n            <button variant=\"contained\"  type=\"submit\"\n            >Submit</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\n\nexport default AddPlayer;\n\n\n\n//components/lists.js\n//Lists component is root module.\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport AddPlayer from './addPlayer'\n\n\nclass Lists extends Component {\n  state = {\n    playerName:this.props.playerName\n  };\n\n  handleAdd = (addPlayers) => {\n    this.setState({ playerName: [...this.state.playerName, addPlayers] });\n  }\n\n  render() {\n    return (\n      <div>\n        Add Player\n         <AddPlayer onAddPlayer={this.handleAdd} />\n          Team A\n          {this.state.playerName.map((player, index) =>\n            <div key={index}>\n              {\n                (player.teamName === 'Team A') ?\n                  <div>{player.playerName} ({player.playerType})</div>\n                : ''\n              }\n            </div>\n          )}\n\n        <div>\n          Team B\n              {this.state.playerName.map((player, index) => {\n                return (\n                    <div key={index}>\n                      {\n                          (player.teamName === 'Team B') ?\n                          <div>{player.playerName} ({player.playerType})</div>\n                          : ''\n                      }\n                    </div>\n                  )\n              })}\n            </div>\n        </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => ({\n  playerName: state.addTeamsObj\n})\n\n\nexport default connect(mapStateToProps, null)(Lists);\n\n\n\n//reducers/addTeams.js\n// import { v4 as uuidv4 } from 'uuid';\n\n\nconst initalState = [\n  {\n    id: 1,\n    playerName: \"Virat Kohali\",\n    playerType: \"B\",\n    teamName: \"Team A\",\n  },\n  {\n    id: 2,\n    playerName: \"Axar Patel\",\n    playerType: \"Blw\",\n    teamName: \"Team B\",\n  }\n];;\n\nconst addTeams = (state = initalState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case \"CREATE_PLAYER\":\n      return [...state, {\n        playerName: payload.playerName,\n        playerType: payload.playerType,\n        teamName: \"\",\n        playerList: [],\n      }];\n\n    default:\n      return state;\n  }\n};`.trim();\nconst toggle = `\n//App.js\nimport { toggleFun } from \"./actions/toggleAction\";\n\nconst App = (props) => {\n  return (\n    <div>\n      {props.data ? \"Show\" : \"Hide\"}\n      <button onClick={props.onToggle}>Toggle</button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data.toggle,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onToggle: () => {\n      dispatch(toggleFun());\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n//reducers/toggleReducers.js\nimport { TOGGLES } from \"../actions/types\";\n\nconst initialState = {\n  toggle: true,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  console.log(\"reducers\", state.toggle);\n  switch (type) {\n    case TOGGLES:\n      return {\n        ...state,\n        toggle: !state.toggle,\n      };\n\n    default:\n      return state;\n  }\n};\n\n\n\n//actions/types.js\nexport const TOGGLES = \"TOGGLES\";\n\n\n\n//actions/toggleAction.js\nimport { TOGGLES } from \"./types\";\n\nexport const toggleFun = () => {\n  return {\n    type: TOGGLES,\n    payload: null,\n  };\n};\n`.trim();\n\nclass CountersRedux extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, \"Counter\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: counters,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, \"Dropdawn\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: dropdawn,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, \"Toggle\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: toggle,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(CountersRedux);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/Redux/deep/counter.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","counters","trim","dropdawn","toggle","CountersRedux","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,EAAkCC,IAAlC,QAA8C,mBAA9C;AAEA,OAAO,0BAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAGA,MAAMC,MAAM,GAAG;AAAEC,EAAAA,eAAe,EAAE,SAAnB;AAA8BC,EAAAA,OAAO,EAAE,KAAvC;AAA8CC,EAAAA,QAAQ,EAAE;AAAxD,CAAf;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH;AAELN,IAAAA,OAAO,EAAEG,KAAK,CAACG,OAAN,CAAc,CAAd;AAFJ,GADgB;AAKvBC,EAAAA,QAAQ,EAAE;AACRF,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADA,GALa;AAQvBE,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF;AARY,CAAL,CAApB;;AAaA,MAAMC,QAAQ,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAD,CA0HfC,IA1He,EAAjB;AA4HA,MAAMC,QAAQ,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAD,CAyMbD,IAzMa,EAAjB;AA2MA,MAAME,MAAM,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAD,CAiEbF,IAjEa,EAAf;;AAqEA,MAAMG,aAAN,SAA4BxB,SAA5B,CAAsC;AACpCyB,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,UAAU,CAAC,MAAMzB,KAAK,CAAC0B,YAAN,EAAP,EAA6B,CAA7B,CAAV;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,WACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAED,OAAO,CAACf,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CADF,CADF,CADF,EAME,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEe,OAAO,CAACf,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,MAAA,KAAK,EAAEN,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEY,QADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,EAWE;AAAK,MAAA,KAAK,EAAEZ,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEc,QADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAXF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBF,EAqBE;AAAK,MAAA,KAAK,EAAEd,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEe,MADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CArBF,CADF,CADF,CANF,CADF;AA0CD;;AAhDmC;;AAmDtC,eAAgBnB,UAAU,CAACQ,MAAD,CAAV,CAAmBY,aAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst counters = `\n//App.js\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { increment, decrement, reset } from \"./actions/actions\";\n\nconst App = ({ count, onDecrement, onIncrement, onReset }) => (\n  <div>\n    {console.log(count)}\n    <p>Count: {count}</p>\n    <button onClick={onDecrement}>-</button>\n    <button onClick={onReset}>Reset</button>\n    <button onClick={onIncrement}>+</button>\n  </div>\n);\n\nconst mapStateToProps = (state) => ({\n  count: state.count,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIncrement: () => {\n      dispatch(increment());\n    },\n    onDecrement: () => {\n      dispatch(decrement());\n    },\n    onReset: () => {\n      dispatch(reset());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n//actions/types.js\nexport const INCREMENT = \"INCREMENT\";\nexport const DECREMENT = \"DECREMENT\";\nexport const RESET = \"RESET\";\n\n\n\n//actions/actions.js\nimport { INCREMENT, DECREMENT, RESET } from \"./types\";\n\nexport function increment() {\n  return {\n    type: INCREMENT,\n  };\n}\n\nexport function decrement() {\n  return {\n    type: DECREMENT,\n  };\n}\n\nexport function reset() {\n  return {\n    type: RESET,\n  };\n}\n\n\n\n//reducers/index.js\nimport { INCREMENT, DECREMENT, RESET } from \"../actions/types\";\n\nconst initialState = {\n  count: 0,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      return {\n        count: state.count + 1,\n      };\n    case DECREMENT:\n      return {\n        count: state.count - 1,\n      };\n    case RESET:\n      return {\n        count: (state.count = 0),\n      };\n    default:\n      return state;\n  }\n};\n\n\n\n//index.js\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n\n//store.js\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(\n  rootReducer, \n  compose(applyMiddleware(thunk))\n  );\n\nexport default store;\n`.trim();\n\nconst dropdawn = `\n//store.js\nimport { compose, createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducer from './reducers'\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  compose(applyMiddleware(sagaMiddleware))\n)\n\nexport default store;\n\n\n//components/addPlayer.js\nimport React, { Component, useState } from 'react';\n\n\nclass AddPlayer extends Component {\n  state = {\n    playerName: this.props.playerName,\n    selectPlayer: this.props.selectPlayer,\n    selectTeam: this.props.selectTeam\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onAddPlayer(this.state);\n    this.setState({\n      playerName: '',\n      selectPlayer: '',\n      selectTeam: ''\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          Select Team\n          <div>\n            <select className=\"selectFields\"\n              type=\"text\"\n              name=\"teamName\"\n              id=\"inputTodoPriority\"\n              value={this.state.teamName}\n              onChange={this.handleChange}\n            >\n              <option>Select</option>\n              <option>Team A</option>\n              <option>Team B</option>\n            </select>\n          </div>\n\n          <br />\n          Enter Player Name\n          <div>\n            <input className=\"input-text\"\n              name=\"playerName\"\n              type=\"text\"\n              value={this.state.playerName}\n              onChange={this.handleChange}\n              placeholder=\"Enter Name\"\n              />\n          </div>\n\n          <br />\n          <div>\n          Select Player Type:\n            <select className=\"selectFields\"\n              type=\"text\"\n              name=\"playerType\"\n              id=\"inputTodoResponsible\"\n              value={this.state.playerType}\n              onChange={this.handleChange}\n            >\n              <option>Select</option>\n              <option>B</option>\n              <option>Blw</option>\n            </select><br />\n          </div>\n\n          <div>\n            <button variant=\"contained\"  type=\"submit\"\n            >Submit</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\n\nexport default AddPlayer;\n\n\n\n//components/lists.js\n//Lists component is root module.\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport AddPlayer from './addPlayer'\n\n\nclass Lists extends Component {\n  state = {\n    playerName:this.props.playerName\n  };\n\n  handleAdd = (addPlayers) => {\n    this.setState({ playerName: [...this.state.playerName, addPlayers] });\n  }\n\n  render() {\n    return (\n      <div>\n        Add Player\n         <AddPlayer onAddPlayer={this.handleAdd} />\n          Team A\n          {this.state.playerName.map((player, index) =>\n            <div key={index}>\n              {\n                (player.teamName === 'Team A') ?\n                  <div>{player.playerName} ({player.playerType})</div>\n                : ''\n              }\n            </div>\n          )}\n\n        <div>\n          Team B\n              {this.state.playerName.map((player, index) => {\n                return (\n                    <div key={index}>\n                      {\n                          (player.teamName === 'Team B') ?\n                          <div>{player.playerName} ({player.playerType})</div>\n                          : ''\n                      }\n                    </div>\n                  )\n              })}\n            </div>\n        </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => ({\n  playerName: state.addTeamsObj\n})\n\n\nexport default connect(mapStateToProps, null)(Lists);\n\n\n\n//reducers/addTeams.js\n// import { v4 as uuidv4 } from 'uuid';\n\n\nconst initalState = [\n  {\n    id: 1,\n    playerName: \"Virat Kohali\",\n    playerType: \"B\",\n    teamName: \"Team A\",\n  },\n  {\n    id: 2,\n    playerName: \"Axar Patel\",\n    playerType: \"Blw\",\n    teamName: \"Team B\",\n  }\n];;\n\nconst addTeams = (state = initalState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case \"CREATE_PLAYER\":\n      return [...state, {\n        playerName: payload.playerName,\n        playerType: payload.playerType,\n        teamName: \"\",\n        playerList: [],\n      }];\n\n    default:\n      return state;\n  }\n};`.trim();\n\nconst toggle = `\n//App.js\nimport { toggleFun } from \"./actions/toggleAction\";\n\nconst App = (props) => {\n  return (\n    <div>\n      {props.data ? \"Show\" : \"Hide\"}\n      <button onClick={props.onToggle}>Toggle</button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data.toggle,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onToggle: () => {\n      dispatch(toggleFun());\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n//reducers/toggleReducers.js\nimport { TOGGLES } from \"../actions/types\";\n\nconst initialState = {\n  toggle: true,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  console.log(\"reducers\", state.toggle);\n  switch (type) {\n    case TOGGLES:\n      return {\n        ...state,\n        toggle: !state.toggle,\n      };\n\n    default:\n      return state;\n  }\n};\n\n\n\n//actions/types.js\nexport const TOGGLES = \"TOGGLES\";\n\n\n\n//actions/toggleAction.js\nimport { TOGGLES } from \"./types\";\n\nexport const toggleFun = () => {\n  return {\n    type: TOGGLES,\n    payload: null,\n  };\n};\n`.trim();\n\n\n\nclass CountersRedux extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Counter</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={counters}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Dropdawn</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={dropdawn}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>Toggle</b>\n              <div style={titles}>\n                <PrismCode\n                  code={toggle}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(CountersRedux));\n"]},"metadata":{},"sourceType":"module"}