{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/sortItems.js\";\nimport React, { Component } from \"react\";\nimport PrismCode from \"../prismCode\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport \"../styles.css\";\nimport Sidebar from \"../sidebar\";\nconst titles = {\n  backgroundColor: \"#F0F8FF\",\n  padding: \"1px\",\n  fontSize: \"16px\"\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst countProgress = `\nclass App extends Component {\n  state = {\n      progress: 0,\n      score: 0\n    };  \n    \n    \n  handleClick = () => {\n      this.setState(() => {\n        if (this.state.progress + 10 === 100) {\n          return { progress: 0, score: this.state.score + 1 };\n        }\n        return { progress: this.state.progress + 10 };\n      });\n    }\n\n  render() {\n    const style = { width: this.state.progress + '%' };\n    \n    return (\n      <div onClick={this.handleClick}>\n        {'Score: ' + this.state.score} <br />\n        {this.state.progress + '%'}\n        <div className=\"bar\" style={style} />\n      </div>\n    );\n  }\n}\n\n\n//App.css\n.bar {\n  width: 0;\n  height: 20px;\n  transition: width 0.3s;\n  background: #21d147;\n  cursor: pointer;\n}`.trim();\nconst contTimmer = `\nfunction App() {\n  const [timer, setTimer] = useState(60);\n  const [intervalId, setIntervalId] = useState(null);\n\n  const startTimer = () => {\n    if (intervalId) return;\n    const id = setInterval(() => {\n      setTimer((t) => t - 1);\n    }, 1000);\n    setIntervalId(id);\n  };\n\n  const pauseTimer = () => {\n    if (!intervalId) return;\n    clearInterval(intervalId);\n    setIntervalId(null);\n  };\n\n  useEffect(() => {\n    if (timer === 0) {\n      pauseTimer();\n    }\n  }, [timer]);\n\n  return (\n    <div>\n      <h1>{timer}</h1>\n      <button onClick={startTimer}>{intervalId ? \"Pause\" : \"Start\"}</button>\n      <button onClick={pauseTimer} disabled={!intervalId}>\n        Pause\n      </button>\n    </div>\n  );\n}\n`.trim();\nconst fizzBuzz = `\nclass App extends Component {\n  state = {\n    fizzBuzz: '',\n    counter: 1\n  };\n  \n  isFizzBuzz = () => {\n    const counter = this.state.counter;\n    let fizzBuzz = this.state.fizzBuzz;\n    \n    if (counter % 3 === 0) { fizzBuzz += 'Fizz, ' }\n    if (counter % 5 === 0) { fizzBuzz += 'Buzz, ' };\n    if (counter % 5 && counter % 3) { fizzBuzz += ''$'{counter}, ' };\n    \n    this.setState({ fizzBuzz: fizzBuzz });\n  };\n  increment = () => {\n    this.setState((prevState) => ({ counter: ++prevState.counter }));\n    this.isFizzBuzz();\n  };\n  decrement = () => {\n    this.setState((prevState) => ({ counter: --prevState.counter }));\n    this.isFizzBuzz();\n  };\n  render() {\n    return (\n      <div>\n        <button onClick={this.increment}>+</button>{ }\n        <button onClick={this.decrement}>-</button><br /><br />\n        {this.state.fizzBuzz}\n      </div>\n    );\n  }\n}`.trim();\nconst ratings = `\nconst Star = ({ starId, marked }) => {\n  return (\n    <span\n      star-id={starId}\n      style={{ color: \"green\", cursor: \"pointer\" }}\n    >\n      {marked ? \"★\" : \"☆\"}  // \"/u2605\" : \"/u2606\"\n    </span>\n  );\n};\n\nconst App = () => {\n  const [selection, setSelection] = React.useState(0);\n\n  const [rating, setRating] = React.useState(0);\n\n  const hoverOver = event => {\n    let starId = 0;\n    if (event && event.target && event.target.getAttribute(\"star-id\")) {\n      starId = event.target.getAttribute(\"star-id\");\n    }\n    setSelection(starId);\n  };\n\n  return (\n    <div\n      onMouseOver={hoverOver}\n      onMouseOut={() => hoverOver(null)}\n      onClick={event => setRating(event.target.getAttribute(\"star-id\"))}\n    >\n      {Array.from({ length: 5 }, (v, i) => (\n        <Star starId={i + 1} marked={selection ? selection > i : rating > i} />\n      ))}\n    </div>\n  );\n};`.trim();\n\nclass SortItems extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"1.onClick increase 10% progress bar\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: countProgress,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"2. A click to start the countdown timer and a second one to Pause the timer in the same button\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: contTimmer,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"4. FizzBuzz :\"), \" If counter = 3, then print 'Fizz', counter = 5, 'Buzz' else print counter values.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: fizzBuzz,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"7. Start Rating\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: ratings,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(SortItems);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/sortItems.js"],"names":["React","Component","PrismCode","Prism","Grid","Paper","withStyles","List","Sidebar","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","countProgress","trim","contTimmer","fizzBuzz","ratings","SortItems","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PrismCode from \"../prismCode\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport \"../styles.css\";\nimport Sidebar from \"../sidebar\";\n\nconst titles = { backgroundColor: \"#F0F8FF\", padding: \"1px\", fontSize: \"16px\" };\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n});\n\nconst countProgress = `\nclass App extends Component {\n  state = {\n      progress: 0,\n      score: 0\n    };  \n    \n    \n  handleClick = () => {\n      this.setState(() => {\n        if (this.state.progress + 10 === 100) {\n          return { progress: 0, score: this.state.score + 1 };\n        }\n        return { progress: this.state.progress + 10 };\n      });\n    }\n\n  render() {\n    const style = { width: this.state.progress + '%' };\n    \n    return (\n      <div onClick={this.handleClick}>\n        {'Score: ' + this.state.score} <br />\n        {this.state.progress + '%'}\n        <div className=\"bar\" style={style} />\n      </div>\n    );\n  }\n}\n\n\n//App.css\n.bar {\n  width: 0;\n  height: 20px;\n  transition: width 0.3s;\n  background: #21d147;\n  cursor: pointer;\n}`.trim();\n\nconst contTimmer = `\nfunction App() {\n  const [timer, setTimer] = useState(60);\n  const [intervalId, setIntervalId] = useState(null);\n\n  const startTimer = () => {\n    if (intervalId) return;\n    const id = setInterval(() => {\n      setTimer((t) => t - 1);\n    }, 1000);\n    setIntervalId(id);\n  };\n\n  const pauseTimer = () => {\n    if (!intervalId) return;\n    clearInterval(intervalId);\n    setIntervalId(null);\n  };\n\n  useEffect(() => {\n    if (timer === 0) {\n      pauseTimer();\n    }\n  }, [timer]);\n\n  return (\n    <div>\n      <h1>{timer}</h1>\n      <button onClick={startTimer}>{intervalId ? \"Pause\" : \"Start\"}</button>\n      <button onClick={pauseTimer} disabled={!intervalId}>\n        Pause\n      </button>\n    </div>\n  );\n}\n`.trim();\n\nconst fizzBuzz = `\nclass App extends Component {\n  state = {\n    fizzBuzz: '',\n    counter: 1\n  };\n  \n  isFizzBuzz = () => {\n    const counter = this.state.counter;\n    let fizzBuzz = this.state.fizzBuzz;\n    \n    if (counter % 3 === 0) { fizzBuzz += 'Fizz, ' }\n    if (counter % 5 === 0) { fizzBuzz += 'Buzz, ' };\n    if (counter % 5 && counter % 3) { fizzBuzz += ''$'{counter}, ' };\n    \n    this.setState({ fizzBuzz: fizzBuzz });\n  };\n  increment = () => {\n    this.setState((prevState) => ({ counter: ++prevState.counter }));\n    this.isFizzBuzz();\n  };\n  decrement = () => {\n    this.setState((prevState) => ({ counter: --prevState.counter }));\n    this.isFizzBuzz();\n  };\n  render() {\n    return (\n      <div>\n        <button onClick={this.increment}>+</button>{ }\n        <button onClick={this.decrement}>-</button><br /><br />\n        {this.state.fizzBuzz}\n      </div>\n    );\n  }\n}`.trim();\n\nconst ratings = `\nconst Star = ({ starId, marked }) => {\n  return (\n    <span\n      star-id={starId}\n      style={{ color: \"green\", cursor: \"pointer\" }}\n    >\n      {marked ? \"★\" : \"☆\"}  // \"/u2605\" : \"/u2606\"\n    </span>\n  );\n};\n\nconst App = () => {\n  const [selection, setSelection] = React.useState(0);\n\n  const [rating, setRating] = React.useState(0);\n\n  const hoverOver = event => {\n    let starId = 0;\n    if (event && event.target && event.target.getAttribute(\"star-id\")) {\n      starId = event.target.getAttribute(\"star-id\");\n    }\n    setSelection(starId);\n  };\n\n  return (\n    <div\n      onMouseOver={hoverOver}\n      onMouseOut={() => hoverOver(null)}\n      onClick={event => setRating(event.target.getAttribute(\"star-id\"))}\n    >\n      {Array.from({ length: 5 }, (v, i) => (\n        <Star starId={i + 1} marked={selection ? selection > i : rating > i} />\n      ))}\n    </div>\n  );\n};`.trim();\n\nclass SortItems extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4>\n              <Sidebar />\n            </h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <b>1.onClick increase 10% progress bar</b>\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={countProgress}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>\n                2. A click to start the countdown timer and a second one to\n                Pause the timer in the same button\n              </b>\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={contTimmer}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>4. FizzBuzz :</b> If counter = 3, then print 'Fizz', counter =\n              5, 'Buzz' else print counter values.\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={fizzBuzz}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <b>7. Start Rating</b>\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={ratings}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(SortItems);\n"]},"metadata":{},"sourceType":"module"}