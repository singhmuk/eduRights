{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/pythone/deeppy/conroutes.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst constructor = `\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route('/')\ndef hello_world():\n   return 'Flask'\n\nif __name__ == '__main__':\n   app.run()\n`.trim();\nconst route = `\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route('/home')\ndef hello_world():\n   return 'Flask'\n\nif __name__ == '__main__':\n   app.run()\n`.trim();\nconst templates = `\nfrom flask import Flask\napp = Flask(__name__)\n\ndef hello():\n   return 'hello'\napp.add_url_rule('/', 'hello', hello)\n`.trim();\nconst possible = `\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route('/hello/<name>')\ndef hello_name(name):\n   return 'Hello %s!' % name\n\nif __name__ == '__main__':\n   app.run(debug = True)\n`.trim();\nconst blog = `\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route('/blog/<int:postID>')\ndef show_blog(postID):\n   return 'Blog Number %d' % postID\n\n@app.route('/rev/<float:revNo>')\ndef revision(revNo):\n   return 'Revision Number %f' % revNo\n\nif __name__ == '__main__':\n   app.run()\n`.trim();\nconst building = `\nfrom flask import Flask, redirect, url_for\napp = Flask(__name__)\n\n@app.route('/admin')\ndef hello_admin():\n   return 'Hello Admin'\n\n@app.route('/guest/<guest>')\ndef hello_guest(guest):\n   return 'Hello %s as Guest' % guest\n\n@app.route('/user/<name>')\ndef hello_user(name):\n   if name =='admin':\n      return redirect(url_for('hello_admin'))\n   else:\n      return redirect(url_for('hello_guest',guest = name))\n\nif __name__ == '__main__':\n   app.run(debug = True)\n`.trim();\nconst attached = `\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n   return '<html><body><h1>Hello World</h1></body></html>'\n\nif __name__ == '__main__':\n   app.run(debug = True)\n`.trim();\nconst jinja2 = `\n<!doctype html>\n<html>\n   <body>\n      <h1>Hello {{ name }}!</h1>\n   </body>\n</html>\n\n\n#main.py\nfrom flask import Flask, render_template\napp = Flask(__name__)\n\n@app.route('/hello/<user>')\ndef hello_name(user):\n   return render_template('hello.html', name = user)\n\nif __name__ == '__main__':\n   app.run(debug = True)\n`.trim();\nconst endpoint = `\nfrom flask import Flask, render_template\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef index():\n   return render_template(\"index.html\")\n\nif __name__ == '__main__':\n   app.run(debug = True)\n   \n\n#index.html\n<html>\n   <head>\n      <script type = \"text/javascript\" \n         src = \"{{ url_for('static', filename = 'hello.js') }}\" ></script>\n   </head>\n   \n   <body>\n      <input type = \"button\" onclick = \"sayHello()\" value = \"Say Hello\" />\n   </body>\n</html>\n\n\n#index.js\nfunction sayHello() {\n  alert(\"Hello World\")\n}\n`.trim();\nconst redirect = `\nfrom flask import Flask, redirect, url_for, render_template, request\n\n# Initialize the Flask application\napp = Flask(__name__)\n\n\n@app.route('/')\ndef index():\n    return render_template('log_in.html')\n\n\n@app.route('/login', methods=['POST', 'GET'])\ndef login():\n    if request.method == 'POST' and request.form['username'] == 'admin':\n        return redirect(url_for('success'))\n    else:\n        return redirect(url_for('index'))\n\n\n@app.route('/success')\ndef success():\n    return 'logged in successfully'\n\n\nif __name__ == '__main__':\n    app.run(debug=True)\n`.trim();\n\nclass Conroures extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: constructor,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    })), React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Flask constructor takes the name of current module (__name__) as argument.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"route() function\"), \"The route() of the Flask class is a decorator, which tells the application which URL should call the associated function.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"app.route(rule, options)\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"rule: \"), \"Parameter represents URL binding with the function.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"options: \"), \"Is a list of parameters to be forwarded to the underlying Rule object.\")), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: route,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: templates,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"Variable Rules\"), \"It is possible to build a URL dynamically, by adding variable parts to the rule parameter. This variable part is marked as 'variable-name'. It is passed as a keyword argument to the function with which the rule is associated.\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: possible,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    })), React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"127.0.0.1:5000//hello/TutorialsPoint\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: blog,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    })), React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"http://localhost:5000/blog/11\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"URL Building\"), \"The url_for() is very useful for dynamically building a URL for a specific function. The function accepts the name of a function as first argument, and one or more keyword arguments, each corresponding to the variable part of URL.\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: building,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    })), React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"http://localhost:5000/admin\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Script has a function user(name) which accepts a value to its argument from the URL.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"User() checks if an argument received matches \\u2018admin\\u2019 or not. If it matches, the application is redirected to the hello_admin() using url_for(), otherwise to the hello_guest() passing the received argument as guest parameter to it.\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"Templates\"), \"It is possible to return the output of a function bound to a certain URL in the form of HTML. In the following script, hello() will render \\u2018Hello\\u2019 with \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"h1\"), \" tag attached to it.\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: attached,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Flask uses jinja2 template engine\"), \"A web template contains HTML syntax interspersed placeholders for variables and expressions which are replaced values when the template is rendered.\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: jinja2,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"Static Files\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \"A web application requires a static file such as a javascript/ CSS file supporting the display of a web page. Usually, the web server is configured to serve them for you, but during the development, these files are served from static folder in your package or next to your module and it will be available at /static on the application.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"A special endpoint \\u2018static\\u2019 is used to generate URL for static files.\")), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: endpoint,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, \"Request Object\"), \"Important attributes of request object are given.\", React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, \"Form: \"), \"It is a dictionary object containing key and value pairs of form parameters and their values.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, \"args: \"), \"parsed contents of query string which is part of URL after question mark (?).\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"Cookies: \"), \"dictionary object holding Cookie names and values.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, \"files: \"), \"data pertaining to uploaded file.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"method: \"), \"current request method.\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"Cookies\"), \"A cookie is stored on a client\\u2019s computer in the form of a text file. Its purpose is to remember and track data pertaining to a client\\u2019s usage for better visitor experience and site statistics.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \"Sessions\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, \"Like Cookie, Session data is stored on client. Session is the time interval when a client logs into a server and logs out of it. The data, which is needed to be held across this session, is stored in the client browser.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, \"A session with each client is assigned a Session ID. The Session data is stored on top of cookies and the server signs them cryptographically. For this encryption, a Flask application needs a defined SECRET_KEY.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"Session object is also a dictionary object containing key-value pairs of session variables and associated values.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, \"To release a session variable use pop() method.\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, \"session.pop('username', None)\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"Redirect & Errors\"), \"When called, redirect() returns a response object and redirects the user to another target location with specified status code.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, \"Flask.redirect(location, statuscode, response)\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: redirect,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(Conroures);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/pythone/deeppy/conroutes.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","constructor","trim","route","templates","possible","blog","building","attached","jinja2","endpoint","redirect","Conroures","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst constructor = `\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route('/')\ndef hello_world():\n   return 'Flask'\n\nif __name__ == '__main__':\n   app.run()\n`.trim();\n\nconst route = `\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route('/home')\ndef hello_world():\n   return 'Flask'\n\nif __name__ == '__main__':\n   app.run()\n`.trim();\n\nconst templates = `\nfrom flask import Flask\napp = Flask(__name__)\n\ndef hello():\n   return 'hello'\napp.add_url_rule('/', 'hello', hello)\n`.trim();\n\nconst possible = `\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route('/hello/<name>')\ndef hello_name(name):\n   return 'Hello %s!' % name\n\nif __name__ == '__main__':\n   app.run(debug = True)\n`.trim();\n\nconst blog = `\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route('/blog/<int:postID>')\ndef show_blog(postID):\n   return 'Blog Number %d' % postID\n\n@app.route('/rev/<float:revNo>')\ndef revision(revNo):\n   return 'Revision Number %f' % revNo\n\nif __name__ == '__main__':\n   app.run()\n`.trim();\n\nconst building = `\nfrom flask import Flask, redirect, url_for\napp = Flask(__name__)\n\n@app.route('/admin')\ndef hello_admin():\n   return 'Hello Admin'\n\n@app.route('/guest/<guest>')\ndef hello_guest(guest):\n   return 'Hello %s as Guest' % guest\n\n@app.route('/user/<name>')\ndef hello_user(name):\n   if name =='admin':\n      return redirect(url_for('hello_admin'))\n   else:\n      return redirect(url_for('hello_guest',guest = name))\n\nif __name__ == '__main__':\n   app.run(debug = True)\n`.trim();\n\nconst attached = `\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n   return '<html><body><h1>Hello World</h1></body></html>'\n\nif __name__ == '__main__':\n   app.run(debug = True)\n`.trim();\n\nconst jinja2 = `\n<!doctype html>\n<html>\n   <body>\n      <h1>Hello {{ name }}!</h1>\n   </body>\n</html>\n\n\n#main.py\nfrom flask import Flask, render_template\napp = Flask(__name__)\n\n@app.route('/hello/<user>')\ndef hello_name(user):\n   return render_template('hello.html', name = user)\n\nif __name__ == '__main__':\n   app.run(debug = True)\n`.trim();\n\nconst endpoint = `\nfrom flask import Flask, render_template\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef index():\n   return render_template(\"index.html\")\n\nif __name__ == '__main__':\n   app.run(debug = True)\n   \n\n#index.html\n<html>\n   <head>\n      <script type = \"text/javascript\" \n         src = \"{{ url_for('static', filename = 'hello.js') }}\" ></script>\n   </head>\n   \n   <body>\n      <input type = \"button\" onclick = \"sayHello()\" value = \"Say Hello\" />\n   </body>\n</html>\n\n\n#index.js\nfunction sayHello() {\n  alert(\"Hello World\")\n}\n`.trim();\n\nconst redirect = `\nfrom flask import Flask, redirect, url_for, render_template, request\n\n# Initialize the Flask application\napp = Flask(__name__)\n\n\n@app.route('/')\ndef index():\n    return render_template('log_in.html')\n\n\n@app.route('/login', methods=['POST', 'GET'])\ndef login():\n    if request.method == 'POST' and request.form['username'] == 'admin':\n        return redirect(url_for('success'))\n    else:\n        return redirect(url_for('index'))\n\n\n@app.route('/success')\ndef success():\n    return 'logged in successfully'\n\n\nif __name__ == '__main__':\n    app.run(debug=True)\n`.trim();\n\nclass Conroures extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <div style={titles}>\n                <PrismCode\n                  code={constructor}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <i>Flask constructor takes the name of current module (__name__) as argument.</i>\n              <br />\n\n              <h3>route() function</h3>\n              The route() of the Flask class is a decorator, which tells the application which URL should call the associated function.\n              <br />\n              <br />\n              <b>app.route(rule, options)</b>\n              <ul>\n                <li><b>rule: </b>Parameter represents URL binding with the function.</li>\n                <li><b>options: </b>Is a list of parameters to be forwarded to the underlying Rule object.</li>\n              </ul>\n              <div style={titles}>\n                <PrismCode\n                  code={route}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3></h3>\n              <div style={titles}>\n                <PrismCode\n                  code={templates}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Variable Rules</h3>\n              It is possible to build a URL dynamically, by adding variable parts to the rule parameter. This variable part is marked as 'variable-name'.\n              It is passed as a keyword argument to the function with which the rule is associated.\n              <div style={titles}>\n                <PrismCode\n                  code={possible}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <i>127.0.0.1:5000//hello/TutorialsPoint</i>\n              <br />\n\n              <h3></h3>\n              <div style={titles}>\n                <PrismCode\n                  code={blog}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <i>http://localhost:5000/blog/11</i>\n              <br />\n\n              <h3>URL Building</h3>\n              The url_for() is very useful for dynamically building a URL for a specific function. The function accepts the name of a function as\n              first argument, and one or more keyword arguments, each corresponding to the variable part of URL.\n              <div style={titles}>\n                <PrismCode\n                  code={building}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <i>http://localhost:5000/admin</i>\n              <ul>\n                <li>Script has a function user(name) which accepts a value to its argument from the URL.</li>\n                <li>User() checks if an argument received matches ‘admin’ or not. If it matches, the application is redirected to the hello_admin()\n                  using url_for(), otherwise to the hello_guest() passing the received argument as guest parameter to it.</li>\n              </ul>\n              <br />\n\n              <h3>Templates</h3>\n              It is possible to return the output of a function bound to a certain URL in the form of HTML. In the following script, hello()\n              will render ‘Hello’ with <b>h1</b> tag attached to it.\n              <div style={titles}>\n                <PrismCode\n                  code={attached}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Flask uses jinja2 template engine</h3>\n              A web template contains HTML syntax interspersed placeholders for variables and expressions which are replaced values when the\n              template is rendered.\n              <div style={titles}>\n                <PrismCode\n                  code={jinja2}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Static Files</h3>\n              <ul>\n                <li>A web application requires a static file such as a javascript/ CSS file supporting the display of a web page. Usually, the\n                  web server is\n                  configured to serve them for you, but during the development, these files are served from static folder in your package or next to your module\n                  and it will be available at /static on the application.</li>\n                <li>A special endpoint ‘static’ is used to generate URL for static files.</li>\n              </ul>\n              <div style={titles}>\n                <PrismCode\n                  code={endpoint}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Request Object</h3>\n              Important attributes of request object are given.\n              <ul>\n                <li><b>Form: </b>It is a dictionary object containing key and value pairs of form parameters and their values.</li>\n                <li><b>args: </b>parsed contents of query string which is part of URL after question mark (?).</li>\n                <li><b>Cookies: </b>dictionary object holding Cookie names and values.</li>\n                <li><b>files: </b>data pertaining to uploaded file.</li>\n                <li><b>method: </b>current request method.</li>\n              </ul>\n              <br />\n\n              <h3>Cookies</h3>\n              A cookie is stored on a client’s computer in the form of a text file. Its purpose is to remember and track data pertaining to a\n              client’s usage for better visitor experience and site statistics.\n              <br />\n\n              <h3>Sessions</h3>\n              <ul>\n                <li>Like Cookie, Session data is stored on client. Session is the time interval when a client logs into a server and logs out of it. The data, which\n                  is needed to be held across this session, is stored in the client browser.</li>\n                <li>A session with each client is assigned a Session ID. The Session data is stored on top of cookies and the server signs them cryptographically.\n                  For this encryption, a Flask application needs a defined SECRET_KEY.</li>\n                <li>Session object is also a dictionary object containing key-value pairs of session variables and associated values.</li>\n                <br />\n                <li>To release a session variable use pop() method.</li>\n                <b>session.pop('username', None)</b>\n              </ul>\n              <br />\n\n              <h3>Redirect & Errors</h3>\n              When called, redirect() returns a response object and redirects the user to another target location with specified status code.\n              <br />\n              <br />\n              <b>Flask.redirect(location, statuscode, response)</b>\n\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={redirect}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Conroures));\n"]},"metadata":{},"sourceType":"module"}