{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var server=\"\\nconst app = require(\\\"express\\\")();\\nconst server = require(\\\"http\\\").createServer(app);\\nconst cors = require(\\\"cors\\\");\\n\\nconst io = require(\\\"socket.io\\\")(server, {\\n\\tcors: {\\n\\t\\torigin: \\\"*\\\",\\n\\t\\tmethods: [\\\"GET\\\", \\\"POST\\\"]\\n\\t}\\n});\\n\\napp.use(cors());\\n\\napp.get('/', (req, res) => { res.send('Running'); });\\n\\nio.on(\\\"connection\\\", (socket) => {\\n\\tsocket.emit(\\\"me\\\", socket.id);\\n\\n\\tsocket.on(\\\"disconnect\\\", () => { socket.broadcast.emit(\\\"callEnded\\\") });\\n\\n\\tsocket.on(\\\"callUser\\\", ({ userToCall, signalData, from, name }) => {\\n\\t\\tio.to(userToCall).emit(\\\"callUser\\\", { signal: signalData, from, name });\\n\\t});\\n\\n\\tsocket.on(\\\"answerCall\\\", (data) => { io.to(data.to).emit(\\\"callAccepted\\\", data.signal) });\\n});\\n\\nconst PORT = process.env.PORT || 5000;\\n\\nserver.listen(PORT, () => console.log('Server is running on port 5000'));\\n\".trim();var sidebar=\"\\nimport React, { useState, useContext } from 'react';\\nimport { Button, TextField, Grid,  Paper } from '@material-ui/core';\\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\\nimport { makeStyles } from '@material-ui/core/styles';\\n\\nimport { SocketContext } from '../Context';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  container: {\\n    width: '600px',\\n    margin: '35px 0',\\n    padding: 0,\\n    [theme.breakpoints.down('xs')]: {\\n      width: '80%',\\n    },\\n  },\\n  margin: {\\n    marginTop: 20,\\n  },\\n  padding: {\\n    padding: 20,\\n  },\\n}));\\n\\nconst Sidebar = ({ children }) => {\\n  const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\\n  const [idToCall, setIdToCall] = useState('');\\n  const classes = useStyles();\\n\\n  return (\\n    <div>\\n      <Paper>\\n        <form noValidate autoComplete=\\\"off\\\">\\n          <Grid container>\\n            <Grid item xs={12} md={6}>\\n              <h3>Account Info</h3>\\n              <TextField label=\\\"Name\\\" value={name} onChange={(e) => setName(e.target.value)} fullWidth />\\n              <CopyToClipboard text={me} className={classes.margin}>\\n                <Button variant=\\\"contained\\\" color=\\\"primary\\\" fullWidth startIcon={<Assignment fontSize=\\\"large\\\" />}>\\n                  Copy Your ID\\n                </Button>\\n              </CopyToClipboard>\\n            </Grid>\\n            <Grid item xs={12} md={6}>\\n              <h4>Make a call</h4>\\n              <TextField label=\\\"ID to call\\\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth />\\n              {callAccepted && !callEnded ? (\\n                <Button variant=\\\"contained\\\" color=\\\"secondary\\\" startIcon={<PhoneDisabled fontSize=\\\"large\\\" />} fullWidth \\n                    onClick={leaveCall} className={classes.margin}>\\n                  Hang Up\\n                </Button>\\n              ) : (\\n                <Button variant=\\\"contained\\\" color=\\\"primary\\\" startIcon={<Phone fontSize=\\\"large\\\" />} fullWidth \\n                  onClick={() => callUser(idToCall)} className={classes.margin}>\\n                  Call\\n                </Button>\\n              )}\\n            </Grid>\\n          </Grid>\\n        </form>\\n        {children}\\n      </Paper>\\n    </div>\\n  );\\n};\\n\".trim();var notifications=\"\\nimport React, { useContext } from 'react';\\nimport { SocketContext } from '../Context';\\n\\nconst Notifications = () => {\\n  const { answerCall, call, callAccepted } = useContext(SocketContext);\\n\\n  return (\\n    <>\\n      {call.isReceivingCall && !callAccepted && (\\n        <div style={{ display: 'flex', justifyContent: 'space-around' }}>\\n          <h1>{call.name} is calling:</h1>\\n          <button onClick={answerCall}>Answer</button>\\n        </div>\\n      )}\\n    </>\\n  );\\n};\".trim();var videoPlayer=\"\\nimport React, { useContext } from 'react';\\nimport { Grid, Typography, Paper, makeStyles } from '@material-ui/core';\\nimport { SocketContext } from '../Context';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  video: {\\n    width: '550px',\\n    [theme.breakpoints.down('xs')]: {\\n      width: '300px',\\n    },\\n  },\\n  gridContainer: {\\n    justifyContent: 'center',\\n    [theme.breakpoints.down('xs')]: {\\n      flexDirection: 'column',\\n    },\\n  },\\n  paper: {\\n    padding: '10px',\\n    border: '2px solid black',\\n    margin: '10px',\\n  },\\n}));\\n\\nconst VideoPlayer = () => {\\n  const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\\n  const classes = useStyles();\\n\\n  return (\\n    <Grid container className={classes.gridContainer}>\\n      {stream && (\\n        <Paper className={classes.paper}>\\n          <Grid item xs={12} md={6}>\\n            <Typography variant=\\\"h5\\\" gutterBottom>{name || 'Name'}</Typography>\\n            <video playsInline muted ref={myVideo} autoPlay className={classes.video} />\\n          </Grid>\\n        </Paper>\\n      )}\\n      {callAccepted && !callEnded && (\\n        <Paper className={classes.paper}>\\n          <Grid item xs={12} md={6}>\\n            <Typography variant=\\\"h5\\\" gutterBottom>{call.name || 'Name'}</Typography>\\n            <video playsInline ref={userVideo} autoPlay className={classes.video} />\\n          </Grid>\\n        </Paper>\\n      )}\\n    </Grid>\\n  );\\n};\\n\".trim();var context=\"\\nimport React, { createContext, useState, useRef, useEffect } from 'react';\\nimport { io } from 'socket.io-client';\\nimport Peer from 'simple-peer';\\n\\nconst SocketContext = createContext();\\n\\n// const socket = io('http://localhost:5000');\\nconst socket = io('https://warm-wildwood-81069.herokuapp.com');\\n\\nconst ContextProvider = ({ children }) => {\\n  const [callAccepted, setCallAccepted] = useState(false);\\n  const [callEnded, setCallEnded] = useState(false);\\n  const [stream, setStream] = useState();\\n  const [name, setName] = useState('');\\n  const [call, setCall] = useState({});\\n  const [me, setMe] = useState('');\\n\\n  const myVideo = useRef();\\n  const userVideo = useRef();\\n  const connectionRef = useRef();\\n\\n  useEffect(() => {\\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\\n      .then((currentStream) => {\\n        setStream(currentStream);\\n\\n        myVideo.current.srcObject = currentStream;\\n      });\\n\\n    socket.on('me', (id) => setMe(id));\\n\\n    socket.on('callUser', ({ from, name: callerName, signal }) => {\\n      setCall({ isReceivingCall: true, from, name: callerName, signal });\\n    });\\n  }, []);\\n\\n  const answerCall = () => {\\n    setCallAccepted(true);\\n\\n    const peer = new Peer({ initiator: false, trickle: false, stream });\\n\\n    peer.on('signal', (data) => {\\n      socket.emit('answerCall', { signal: data, to: call.from });\\n    });\\n\\n    peer.on('stream', (currentStream) => { userVideo.current.srcObject = currentStream; });\\n\\n    peer.signal(call.signal);\\n    connectionRef.current = peer;\\n  };\\n\\n  const callUser = (id) => {\\n    const peer = new Peer({ initiator: true, trickle: false, stream });\\n\\n    peer.on('signal', (data) => {\\n      socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\\n    });\\n\\n    peer.on('stream', (currentStream) => { userVideo.current.srcObject = currentStream; });\\n\\n    socket.on('callAccepted', (signal) => {\\n      setCallAccepted(true);\\n      peer.signal(signal);\\n    });\\n\\n    connectionRef.current = peer;\\n  };\\n\\n  const leaveCall = () => {\\n    setCallEnded(true);\\n\\n    connectionRef.current.destroy();\\n    window.location.reload();\\n  };\\n\\n  return (\\n    <SocketContext.Provider value={{\\n      call,\\n      callAccepted,\\n      myVideo,\\n      userVideo,\\n      stream,\\n      name,\\n      setName,\\n      callEnded,\\n      me,\\n      callUser,\\n      leaveCall,\\n      answerCall,\\n    }}\\n    >\\n      {children}\\n    </SocketContext.Provider>\\n  );\\n};\\n\\nexport { ContextProvider, SocketContext };\\n\".trim();var app=\"\\nimport React from 'react';\\nimport { Typography, AppBar } from '@material-ui/core';\\nimport { makeStyles } from '@material-ui/core/styles';\\n\\nimport VideoPlayer from './components/VideoPlayer';\\nimport Sidebar from './components/Sidebar';\\nimport Notifications from './components/Notifications';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  appBar: {\\n    borderRadius: 15,\\n    margin: '30px 100px',\\n    display: 'flex',\\n    flexDirection: 'row',\\n    justifyContent: 'center',\\n    alignItems: 'center',\\n    width: '600px',\\n    border: '2px solid black',\\n\\n    [theme.breakpoints.down('xs')]: {\\n      width: '90%',\\n    },\\n  },\\n  image: {\\n    marginLeft: '15px',\\n  },\\n  wrapper: {\\n    display: 'flex',\\n    flexDirection: 'column',\\n    alignItems: 'center',\\n    width: '100%',\\n  },\\n}));\\n\\nconst App = () => {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.wrapper}>\\n      <p className={classes.appBar}>Video Chat</p>\\n      <VideoPlayer />\\n      <Sidebar>\\n        <Notifications />\\n      </Sidebar>\\n    </div>\\n  );\\n};\\n\\nexport default App;\\n\".trim();var VideoChat=/*#__PURE__*/function(_Component){_inherits(VideoChat,_Component);function VideoChat(){_classCallCheck(this,VideoChat);return _possibleConstructorReturn(this,_getPrototypeOf(VideoChat).apply(this,arguments));}_createClass(VideoChat,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Server\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:server,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Client\"),React.createElement(\"b\",null,\"components/Sidebar.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:sidebar,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"components/Notifications.js\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:notifications,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"components/VideoPlayer.js\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:videoPlayer,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"b\",null,\"components/Context.js\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:context,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"components/App.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:app,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return VideoChat;}(Component);export default withStyles(styles)(VideoChat);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/mern/projects/videoChat.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","server","trim","sidebar","notifications","videoPlayer","context","app","VideoChat","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst server = `\nconst app = require(\"express\")();\nconst server = require(\"http\").createServer(app);\nconst cors = require(\"cors\");\n\nconst io = require(\"socket.io\")(server, {\n\tcors: {\n\t\torigin: \"*\",\n\t\tmethods: [\"GET\", \"POST\"]\n\t}\n});\n\napp.use(cors());\n\napp.get('/', (req, res) => { res.send('Running'); });\n\nio.on(\"connection\", (socket) => {\n\tsocket.emit(\"me\", socket.id);\n\n\tsocket.on(\"disconnect\", () => { socket.broadcast.emit(\"callEnded\") });\n\n\tsocket.on(\"callUser\", ({ userToCall, signalData, from, name }) => {\n\t\tio.to(userToCall).emit(\"callUser\", { signal: signalData, from, name });\n\t});\n\n\tsocket.on(\"answerCall\", (data) => { io.to(data.to).emit(\"callAccepted\", data.signal) });\n});\n\nconst PORT = process.env.PORT || 5000;\n\nserver.listen(PORT, () => console.log('Server is running on port 5000'));\n`.trim();\n\nconst sidebar = `\nimport React, { useState, useContext } from 'react';\nimport { Button, TextField, Grid,  Paper } from '@material-ui/core';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { SocketContext } from '../Context';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: '600px',\n    margin: '35px 0',\n    padding: 0,\n    [theme.breakpoints.down('xs')]: {\n      width: '80%',\n    },\n  },\n  margin: {\n    marginTop: 20,\n  },\n  padding: {\n    padding: 20,\n  },\n}));\n\nconst Sidebar = ({ children }) => {\n  const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\n  const [idToCall, setIdToCall] = useState('');\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Paper>\n        <form noValidate autoComplete=\"off\">\n          <Grid container>\n            <Grid item xs={12} md={6}>\n              <h3>Account Info</h3>\n              <TextField label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth />\n              <CopyToClipboard text={me} className={classes.margin}>\n                <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\n                  Copy Your ID\n                </Button>\n              </CopyToClipboard>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <h4>Make a call</h4>\n              <TextField label=\"ID to call\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth />\n              {callAccepted && !callEnded ? (\n                <Button variant=\"contained\" color=\"secondary\" startIcon={<PhoneDisabled fontSize=\"large\" />} fullWidth \n                    onClick={leaveCall} className={classes.margin}>\n                  Hang Up\n                </Button>\n              ) : (\n                <Button variant=\"contained\" color=\"primary\" startIcon={<Phone fontSize=\"large\" />} fullWidth \n                  onClick={() => callUser(idToCall)} className={classes.margin}>\n                  Call\n                </Button>\n              )}\n            </Grid>\n          </Grid>\n        </form>\n        {children}\n      </Paper>\n    </div>\n  );\n};\n`.trim();\n\nconst notifications = `\nimport React, { useContext } from 'react';\nimport { SocketContext } from '../Context';\n\nconst Notifications = () => {\n  const { answerCall, call, callAccepted } = useContext(SocketContext);\n\n  return (\n    <>\n      {call.isReceivingCall && !callAccepted && (\n        <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n          <h1>{call.name} is calling:</h1>\n          <button onClick={answerCall}>Answer</button>\n        </div>\n      )}\n    </>\n  );\n};`.trim();\n\nconst videoPlayer = `\nimport React, { useContext } from 'react';\nimport { Grid, Typography, Paper, makeStyles } from '@material-ui/core';\nimport { SocketContext } from '../Context';\n\nconst useStyles = makeStyles((theme) => ({\n  video: {\n    width: '550px',\n    [theme.breakpoints.down('xs')]: {\n      width: '300px',\n    },\n  },\n  gridContainer: {\n    justifyContent: 'center',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n    },\n  },\n  paper: {\n    padding: '10px',\n    border: '2px solid black',\n    margin: '10px',\n  },\n}));\n\nconst VideoPlayer = () => {\n  const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.gridContainer}>\n      {stream && (\n        <Paper className={classes.paper}>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h5\" gutterBottom>{name || 'Name'}</Typography>\n            <video playsInline muted ref={myVideo} autoPlay className={classes.video} />\n          </Grid>\n        </Paper>\n      )}\n      {callAccepted && !callEnded && (\n        <Paper className={classes.paper}>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h5\" gutterBottom>{call.name || 'Name'}</Typography>\n            <video playsInline ref={userVideo} autoPlay className={classes.video} />\n          </Grid>\n        </Paper>\n      )}\n    </Grid>\n  );\n};\n`.trim();\n\nconst context = `\nimport React, { createContext, useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\n\nconst SocketContext = createContext();\n\n// const socket = io('http://localhost:5000');\nconst socket = io('https://warm-wildwood-81069.herokuapp.com');\n\nconst ContextProvider = ({ children }) => {\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState('');\n\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n      .then((currentStream) => {\n        setStream(currentStream);\n\n        myVideo.current.srcObject = currentStream;\n      });\n\n    socket.on('me', (id) => setMe(id));\n\n    socket.on('callUser', ({ from, name: callerName, signal }) => {\n      setCall({ isReceivingCall: true, from, name: callerName, signal });\n    });\n  }, []);\n\n  const answerCall = () => {\n    setCallAccepted(true);\n\n    const peer = new Peer({ initiator: false, trickle: false, stream });\n\n    peer.on('signal', (data) => {\n      socket.emit('answerCall', { signal: data, to: call.from });\n    });\n\n    peer.on('stream', (currentStream) => { userVideo.current.srcObject = currentStream; });\n\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n\n  const callUser = (id) => {\n    const peer = new Peer({ initiator: true, trickle: false, stream });\n\n    peer.on('signal', (data) => {\n      socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\n    });\n\n    peer.on('stream', (currentStream) => { userVideo.current.srcObject = currentStream; });\n\n    socket.on('callAccepted', (signal) => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n\n    connectionRef.current.destroy();\n    window.location.reload();\n  };\n\n  return (\n    <SocketContext.Provider value={{\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      me,\n      callUser,\n      leaveCall,\n      answerCall,\n    }}\n    >\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\nexport { ContextProvider, SocketContext };\n`.trim();\n\nconst app = `\nimport React from 'react';\nimport { Typography, AppBar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport VideoPlayer from './components/VideoPlayer';\nimport Sidebar from './components/Sidebar';\nimport Notifications from './components/Notifications';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderRadius: 15,\n    margin: '30px 100px',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '600px',\n    border: '2px solid black',\n\n    [theme.breakpoints.down('xs')]: {\n      width: '90%',\n    },\n  },\n  image: {\n    marginLeft: '15px',\n  },\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.wrapper}>\n      <p className={classes.appBar}>Video Chat</p>\n      <VideoPlayer />\n      <Sidebar>\n        <Notifications />\n      </Sidebar>\n    </div>\n  );\n};\n\nexport default App;\n`.trim();\n\n\nclass VideoChat extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Server</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={server}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Client</h3>\n              <b>components/Sidebar.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={sidebar}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>components/Notifications.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={notifications}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>components/VideoPlayer.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={videoPlayer}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <b>components/Context.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={context}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>components/App.js</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={app}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(VideoChat));\n"]},"metadata":{},"sourceType":"module"}