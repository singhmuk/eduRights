{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/ReactJs/reactJs_hooks/useStates.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst multiState = `\nconst Score = () => {\n  const [teamScores, setTeamScores] = useState({\n    currentScore: 0,\n    totalScore: 308,\n    totalOvers: 1,\n    netRunRate: 6.5,\n    netRunRate2: 6.0,\n  });\n\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [balls, setBalls] = useState(6);\n  const [overs, setOvers] = useState(['0', '1', '2', '3', '4', '5', '6', 'wk', 'wd', 'nb'])\n\n  const toggle = () => {\n    setIsActive(!isActive);\n  }\n  \n  // const handleCount = () => {\n  //   if (balls >= 1) {\n  //     setBalls([balls - 1, teamScores.isPlay=true])\n  //   }\n  // }\n\n  useEffect(() => {\n    let interval = null;\n    if (isActive && seconds <= 3) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds + 1);\n        if(balls>0){\n          setBalls(balls - 1);\n          setOvers([...overs, {\n          id: overs.length,\n          values: overs[Math.floor(Math.random() * overs.length)]+\"\"\n          }])\n        }\n      }, 1000);\n    } \n    else if (seconds === 4) {\n      setSeconds(0);\n    }\n    \n    return () => clearInterval(interval);\n  }, [isActive, seconds, overs]);\n  \n  \n  const lastScore = overs[Math.floor(Math.random() * overs.length)];\n\n  return (\n    <div>\n      <div>\n        <h3>Total Score: {teamScores.totalScore}</h3>\n        <p>Total Overs: {teamScores.totalOvers}</p>\n        <p>Current Run Rate: {teamScores.netRunRate2}</p>\n        <b>Remaining Balls: {balls}</b>\n      </div>\n\n        <button\n          className={''$'{ isActive ?\"active\": \"inactive\"}'} onClick={toggle}>\n          {isActive ? \"Pause\" : \"Start\"}\n        </button>\n    </div>\n  )\n}\n`.trim();\nconst useReducers = `\nimport { useCallback, useState, useEffect } from \"react\";\n\n\nfunction Child({ returnComment }) {\n  useEffect(() => {\n  }, [returnComment]);\n\n  return <div>{returnComment(\"Pedro\")}</div>;\n}\n\nexport default function CallBackTutorial() {\n  const [toggle, setToggle] = useState(false);\n  const [data, setData] = useState(\"Yo, pls sub to the channel!\");\n\n  const returnComment = useCallback(\n    (name) => {\n      return data + name;\n    },\n    [data]\n  );\n\n  return (\n    <div className=\"App\">\n      <Child returnComment={returnComment} />\n\n      <button\n        onClick={() => {\n          setToggle(!toggle);\n        }}\n      >\n        {\" \"}\n        Toggle\n      </button>\n      {toggle && <h1> toggle </h1>}\n    </div>\n  );\n}\n`.trim();\nconst UseImperativeHandles = `\nimport React, { forwardRef, useImperativeHandle, useState, useRef } from \"react\";\n\n\nconst Button = forwardRef((props, ref) => {\n  const [toggle, setToggle] = useState(false);\n\n  useImperativeHandle(ref, () => ({\n    alterToggle() {\n      setToggle(!toggle);\n    },\n  }));\n  return (\n    <>\n      <button>Button From Child</button>\n      {toggle && <span>Toggle</span>}\n    </>\n  );\n});\n\nfunction ImperativeHandle() {\n  const buttonRef = useRef(null);\n  return (\n    <div>\n      <button\n        onClick={() => {\n          buttonRef.current.alterToggle();\n        }}\n      >\n        Button From Parent\n      </button>\n      <Button ref={buttonRef} />\n    </div>\n  );\n}\n\nexport default ImperativeHandle;\n`.trim();\nconst UseLayoutEffects = `\nimport { useLayoutEffect, useEffect, useRef } from \"react\";\n\nfunction LayoutEffectTutorial() {\n  const inputRef = useRef(null);\n\n  useLayoutEffect(() => {\n    console.log(inputRef.current.value);\n  }, []);\n\n  useEffect(() => {\n    inputRef.current.value = \"HELLO\";\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <input ref={inputRef} value=\"PEDRO\" style={{ width: 400, height: 60 }} />\n    </div>\n  );\n}`.trim();\n\nclass UseReducers extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"1. MultiState\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: multiState,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"2. useCallback\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: useReducers,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"3. UseImperativeHandle\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: UseImperativeHandles,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"4. UseLayoutEffect\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: UseLayoutEffects,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(UseReducers);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/ReactJs/reactJs_hooks/useStates.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","multiState","trim","useReducers","UseImperativeHandles","UseLayoutEffects","UseReducers","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst multiState = `\nconst Score = () => {\n  const [teamScores, setTeamScores] = useState({\n    currentScore: 0,\n    totalScore: 308,\n    totalOvers: 1,\n    netRunRate: 6.5,\n    netRunRate2: 6.0,\n  });\n\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [balls, setBalls] = useState(6);\n  const [overs, setOvers] = useState(['0', '1', '2', '3', '4', '5', '6', 'wk', 'wd', 'nb'])\n\n  const toggle = () => {\n    setIsActive(!isActive);\n  }\n  \n  // const handleCount = () => {\n  //   if (balls >= 1) {\n  //     setBalls([balls - 1, teamScores.isPlay=true])\n  //   }\n  // }\n\n  useEffect(() => {\n    let interval = null;\n    if (isActive && seconds <= 3) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds + 1);\n        if(balls>0){\n          setBalls(balls - 1);\n          setOvers([...overs, {\n          id: overs.length,\n          values: overs[Math.floor(Math.random() * overs.length)]+\"\"\n          }])\n        }\n      }, 1000);\n    } \n    else if (seconds === 4) {\n      setSeconds(0);\n    }\n    \n    return () => clearInterval(interval);\n  }, [isActive, seconds, overs]);\n  \n  \n  const lastScore = overs[Math.floor(Math.random() * overs.length)];\n\n  return (\n    <div>\n      <div>\n        <h3>Total Score: {teamScores.totalScore}</h3>\n        <p>Total Overs: {teamScores.totalOvers}</p>\n        <p>Current Run Rate: {teamScores.netRunRate2}</p>\n        <b>Remaining Balls: {balls}</b>\n      </div>\n\n        <button\n          className={''$'{ isActive ?\"active\": \"inactive\"}'} onClick={toggle}>\n          {isActive ? \"Pause\" : \"Start\"}\n        </button>\n    </div>\n  )\n}\n`.trim();\n\nconst useReducers = `\nimport { useCallback, useState, useEffect } from \"react\";\n\n\nfunction Child({ returnComment }) {\n  useEffect(() => {\n  }, [returnComment]);\n\n  return <div>{returnComment(\"Pedro\")}</div>;\n}\n\nexport default function CallBackTutorial() {\n  const [toggle, setToggle] = useState(false);\n  const [data, setData] = useState(\"Yo, pls sub to the channel!\");\n\n  const returnComment = useCallback(\n    (name) => {\n      return data + name;\n    },\n    [data]\n  );\n\n  return (\n    <div className=\"App\">\n      <Child returnComment={returnComment} />\n\n      <button\n        onClick={() => {\n          setToggle(!toggle);\n        }}\n      >\n        {\" \"}\n        Toggle\n      </button>\n      {toggle && <h1> toggle </h1>}\n    </div>\n  );\n}\n`.trim();\n\nconst UseImperativeHandles = `\nimport React, { forwardRef, useImperativeHandle, useState, useRef } from \"react\";\n\n\nconst Button = forwardRef((props, ref) => {\n  const [toggle, setToggle] = useState(false);\n\n  useImperativeHandle(ref, () => ({\n    alterToggle() {\n      setToggle(!toggle);\n    },\n  }));\n  return (\n    <>\n      <button>Button From Child</button>\n      {toggle && <span>Toggle</span>}\n    </>\n  );\n});\n\nfunction ImperativeHandle() {\n  const buttonRef = useRef(null);\n  return (\n    <div>\n      <button\n        onClick={() => {\n          buttonRef.current.alterToggle();\n        }}\n      >\n        Button From Parent\n      </button>\n      <Button ref={buttonRef} />\n    </div>\n  );\n}\n\nexport default ImperativeHandle;\n`.trim();\n\nconst UseLayoutEffects = `\nimport { useLayoutEffect, useEffect, useRef } from \"react\";\n\nfunction LayoutEffectTutorial() {\n  const inputRef = useRef(null);\n\n  useLayoutEffect(() => {\n    console.log(inputRef.current.value);\n  }, []);\n\n  useEffect(() => {\n    inputRef.current.value = \"HELLO\";\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <input ref={inputRef} value=\"PEDRO\" style={{ width: 400, height: 60 }} />\n    </div>\n  );\n}`.trim();\n\nclass UseReducers extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. MultiState</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={multiState}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>2. useCallback</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={useReducers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>3. UseImperativeHandle</b>\n              <div style={titles}>\n                <PrismCode\n                  code={UseImperativeHandles}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>4. UseLayoutEffect</b>\n              <div style={titles}>\n                <PrismCode\n                  code={UseLayoutEffects}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(UseReducers));\n"]},"metadata":{},"sourceType":"module"}