{"ast":null,"code":"import React,{Suspense,lazy}from'react';var IntroAngular=lazy(function(){return import('./deepAngularjs/introAngular');});var Datatypests=lazy(function(){return import('./angular 12/datatypests');});var TypeScript2=lazy(function(){return import('./angular 12/typeScript_2');});var TypeScript4=lazy(function(){return import('./angular 12/typeScript_4');});var AngularCompile=lazy(function(){return import('./deepAngularjs/angCompiler');});var NeyralNetwork=lazy(function(){return import('./deepAngularjs/neural');});var ActivationFuns=lazy(function(){return import('./deepAngularjs/activationFunctions');});var Loss=lazy(function(){return import('./deepAngularjs/loss');});var GradientNeural=lazy(function(){return import('./deepAngularjs/gradientNeural');});var Stochastic=lazy(function(){return import('./deepAngularjs/stochastic');});var Tensorboards=lazy(function(){return import('./deepAngularjs/tensors');});var Benchmarking=lazy(function(){return import('./deepAngularjs/benchmarking');});var Customer=lazy(function(){return import('./deepAngularjs/customer');});var RegularizationDeep=lazy(function(){return import('./deepAngularjs/regularizationDeep');});var Imbalanced=lazy(function(){return import('./deepAngularjs/imbalanced');});var Imbalanced2=lazy(function(){return import('./deepAngularjs/imbalanced2');});var Convolutionals=lazy(function(){return import('./deepAngularjs/convolutionals');});var dataAugmentation=lazy(function(){return import('./deepAngularjs/data_augmentation');});var Transfer=lazy(function(){return import('./deepAngularjs/transfer');});var WordEmbedding=lazy(function(){return import('./deepAngularjs/word_embedding');});var TensorFlows=lazy(function(){return import('./deepAngularjs/tensorflow');});var components={IntroAngular:IntroAngular,AngularCompile:AngularCompile,Datatypests:Datatypests,NeyralNetwork:NeyralNetwork,ActivationFuns:ActivationFuns,Loss:Loss,GradientNeural:GradientNeural,Stochastic:Stochastic,TypeScript2:TypeScript2,TypeScript4:TypeScript4,Tensorboards:Tensorboards,Benchmarking:Benchmarking,Customer:Customer,RegularizationDeep:RegularizationDeep,Imbalanced:Imbalanced,Imbalanced2:Imbalanced2,Convolutionals:Convolutionals,dataAugmentation:dataAugmentation,Transfer:Transfer,WordEmbedding:WordEmbedding,TensorFlows:TensorFlows};export{components};","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/angularjs/index.js"],"names":["React","Suspense","lazy","IntroAngular","Datatypests","TypeScript2","TypeScript4","AngularCompile","NeyralNetwork","ActivationFuns","Loss","GradientNeural","Stochastic","Tensorboards","Benchmarking","Customer","RegularizationDeep","Imbalanced","Imbalanced2","Convolutionals","dataAugmentation","Transfer","WordEmbedding","TensorFlows","components"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,IAA1B,KAAsC,OAAtC,CAEA,GAAMC,CAAAA,YAAY,CAAGD,IAAI,CAAC,iBAAM,QAAO,8BAAP,CAAN,EAAD,CAAzB,CACA,GAAME,CAAAA,WAAW,CAAGF,IAAI,CAAC,iBAAM,QAAO,0BAAP,CAAN,EAAD,CAAxB,CACA,GAAMG,CAAAA,WAAW,CAAGH,IAAI,CAAC,iBAAM,QAAO,2BAAP,CAAN,EAAD,CAAxB,CACA,GAAMI,CAAAA,WAAW,CAAGJ,IAAI,CAAC,iBAAM,QAAO,2BAAP,CAAN,EAAD,CAAxB,CACA,GAAMK,CAAAA,cAAc,CAAGL,IAAI,CAAC,iBAAM,QAAO,6BAAP,CAAN,EAAD,CAA3B,CACA,GAAMM,CAAAA,aAAa,CAAGN,IAAI,CAAC,iBAAM,QAAO,wBAAP,CAAN,EAAD,CAA1B,CACA,GAAMO,CAAAA,cAAc,CAAGP,IAAI,CAAC,iBAAM,QAAO,qCAAP,CAAN,EAAD,CAA3B,CACA,GAAMQ,CAAAA,IAAI,CAAGR,IAAI,CAAC,iBAAM,QAAO,sBAAP,CAAN,EAAD,CAAjB,CACA,GAAMS,CAAAA,cAAc,CAAGT,IAAI,CAAC,iBAAM,QAAO,gCAAP,CAAN,EAAD,CAA3B,CACA,GAAMU,CAAAA,UAAU,CAAGV,IAAI,CAAC,iBAAM,QAAO,4BAAP,CAAN,EAAD,CAAvB,CACA,GAAMW,CAAAA,YAAY,CAAGX,IAAI,CAAC,iBAAM,QAAO,yBAAP,CAAN,EAAD,CAAzB,CACA,GAAMY,CAAAA,YAAY,CAAGZ,IAAI,CAAC,iBAAM,QAAO,8BAAP,CAAN,EAAD,CAAzB,CACA,GAAMa,CAAAA,QAAQ,CAAGb,IAAI,CAAC,iBAAM,QAAO,0BAAP,CAAN,EAAD,CAArB,CACA,GAAMc,CAAAA,kBAAkB,CAAGd,IAAI,CAAC,iBAAM,QAAO,oCAAP,CAAN,EAAD,CAA/B,CACA,GAAMe,CAAAA,UAAU,CAAGf,IAAI,CAAC,iBAAM,QAAO,4BAAP,CAAN,EAAD,CAAvB,CACA,GAAMgB,CAAAA,WAAW,CAAGhB,IAAI,CAAC,iBAAM,QAAO,6BAAP,CAAN,EAAD,CAAxB,CACA,GAAMiB,CAAAA,cAAc,CAAGjB,IAAI,CAAC,iBAAM,QAAO,gCAAP,CAAN,EAAD,CAA3B,CACA,GAAMkB,CAAAA,gBAAgB,CAAGlB,IAAI,CAAC,iBAAM,QAAO,mCAAP,CAAN,EAAD,CAA7B,CACA,GAAMmB,CAAAA,QAAQ,CAAGnB,IAAI,CAAC,iBAAM,QAAO,0BAAP,CAAN,EAAD,CAArB,CACA,GAAMoB,CAAAA,aAAa,CAAGpB,IAAI,CAAC,iBAAM,QAAO,gCAAP,CAAN,EAAD,CAA1B,CACA,GAAMqB,CAAAA,WAAW,CAAGrB,IAAI,CAAC,iBAAM,QAAO,4BAAP,CAAN,EAAD,CAAxB,CAGA,GAAMsB,CAAAA,UAAU,CAAG,CACjBrB,YAAY,CAAZA,YADiB,CACHI,cAAc,CAAdA,cADG,CACaH,WAAW,CAAXA,WADb,CAC0BI,aAAa,CAAbA,aAD1B,CACyCC,cAAc,CAAdA,cADzC,CAEjBC,IAAI,CAAJA,IAFiB,CAEXC,cAAc,CAAdA,cAFW,CAEKC,UAAU,CAAVA,UAFL,CAEiBP,WAAW,CAAXA,WAFjB,CAE8BC,WAAW,CAAXA,WAF9B,CAE2CO,YAAY,CAAZA,YAF3C,CAEyDC,YAAY,CAAZA,YAFzD,CAEuEC,QAAQ,CAARA,QAFvE,CAGjBC,kBAAkB,CAAlBA,kBAHiB,CAGGC,UAAU,CAAVA,UAHH,CAGeC,WAAW,CAAXA,WAHf,CAG4BC,cAAc,CAAdA,cAH5B,CAG4CC,gBAAgB,CAAhBA,gBAH5C,CAG8DC,QAAQ,CAARA,QAH9D,CAIjBC,aAAa,CAAbA,aAJiB,CAIFC,WAAW,CAAXA,WAJE,CAAnB,CAOA,OAASC,UAAT","sourcesContent":["import React, { Suspense, lazy } from 'react';\n\nconst IntroAngular = lazy(() => import('./deepAngularjs/introAngular'));\nconst Datatypests = lazy(() => import('./angular 12/datatypests'));\nconst TypeScript2 = lazy(() => import('./angular 12/typeScript_2'));\nconst TypeScript4 = lazy(() => import('./angular 12/typeScript_4'));\nconst AngularCompile = lazy(() => import('./deepAngularjs/angCompiler'));\nconst NeyralNetwork = lazy(() => import('./deepAngularjs/neural'));\nconst ActivationFuns = lazy(() => import('./deepAngularjs/activationFunctions'));\nconst Loss = lazy(() => import('./deepAngularjs/loss'));\nconst GradientNeural = lazy(() => import('./deepAngularjs/gradientNeural'));\nconst Stochastic = lazy(() => import('./deepAngularjs/stochastic'));\nconst Tensorboards = lazy(() => import('./deepAngularjs/tensors'));\nconst Benchmarking = lazy(() => import('./deepAngularjs/benchmarking'));\nconst Customer = lazy(() => import('./deepAngularjs/customer'));\nconst RegularizationDeep = lazy(() => import('./deepAngularjs/regularizationDeep'));\nconst Imbalanced = lazy(() => import('./deepAngularjs/imbalanced'));\nconst Imbalanced2 = lazy(() => import('./deepAngularjs/imbalanced2'));\nconst Convolutionals = lazy(() => import('./deepAngularjs/convolutionals'));\nconst dataAugmentation = lazy(() => import('./deepAngularjs/data_augmentation'));\nconst Transfer = lazy(() => import('./deepAngularjs/transfer'));\nconst WordEmbedding = lazy(() => import('./deepAngularjs/word_embedding'));\nconst TensorFlows = lazy(() => import('./deepAngularjs/tensorflow'));\n\n\nconst components = {\n  IntroAngular, AngularCompile, Datatypests, NeyralNetwork, ActivationFuns,\n  Loss, GradientNeural, Stochastic, TypeScript2, TypeScript4, Tensorboards, Benchmarking, Customer,\n  RegularizationDeep, Imbalanced, Imbalanced2, Convolutionals, dataAugmentation, Transfer,\n  WordEmbedding, TensorFlows\n};\n\nexport { components };"]},"metadata":{},"sourceType":"module"}