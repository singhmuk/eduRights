{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../styles.css';import Sidebar from'../sidebar';import PrismCode from'../prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var unlike=\"\\nconst App = () => {\\n  const [count, setCount] = useState(0);\\n  const [color, setColor] = useState('green');\\n  const [size, setSize] = useState(1);\\n  \\n  const handleSetCount = () => {\\n    (count === 4) ? setCount(0) : setCount(count + 1); \\n    (count === 4) ? setSize(1) : setSize(size + .05); \\n  };\\n  \\n  const handleSetColor = () => {\\n    if(count === 1) setColor('red');\\n    if(count === 2) setColor('blue');\\n    if(count === 3) setColor('pink');\\n    if(count === 4) setColor('yellow');\\n  };\\n  \\n  const heartStyle = {\\n    color: color,\\n    transform: 'scale('$'{size})'\\n  };\\n  \\n  return (\\n    <>\\n      <button onClick={() => { handleSetCount(); handleSetColor() } }>\\n        <i>Like</i>\\n      </button>\\n      <p style={heartStyle}>You have liked this {count} times</p>\\n    </>\\n  );\\n}\".trim();var checkbox=\"\\nconst App = () => {\\n  const [isChecked, setIsChecked] = useState(false)\\n\\n  const handleClick = () => {\\n    setIsChecked(isChecked => !isChecked);\\n  }\\n\\n  return (\\n    <div>\\n      <input\\n        type=\\\"checkbox\\\"\\n        checked={isChecked}\\n        onChange={handleClick} />\\n    </div>\\n  );\\n}\".trim();var radio=\"\\nconst App = () => {\\n  const [size, setSize] = useState(\\\"\\\")\\n\\n  const handleChange = (e) => {\\n    setSize(e.target.value);\\n  }\\n\\n  const handleSubmit = (e) => {\\n    e.preventDefault();\\n    alert('You chose the '$'{size} pizza.');\\n  }\\n\\n  return (\\n    <form onSubmit={handleSubmit}>\\n      <p className=\\\"title\\\">Select a pizza size:</p>\\n      <label>Small</label>\\n      <input type=\\\"radio\\\" value=\\\"small\\\" checked={size === \\\"small\\\"} onChange={handleChange} />\\n      <label>Medium</label>\\n      <input type=\\\"radio\\\" value=\\\"medium\\\" checked={size === \\\"medium\\\"} onChange={handleChange} />\\n      <label>Large</label>\\n      <input type=\\\"radio\\\" value=\\\"large\\\" checked={size === \\\"large\\\"} onChange={handleChange} />\\n\\n      <button>Make your choice</button>\\n    </form>\\n  );\\n}\".trim();var select=\"\\nconst options = [\\\"Select an Option\\\", \\\"First\\\", \\\"Second\\\", \\\"Third\\\"]\\n\\nconst App = () => {\\n  const [value, setValue] = useState('Select an Option')\\n\\n  const onChange = (e) => {\\n    setValue(e.target.value)\\n  }\\n  return (\\n    <div>\\n      <select value={value} onChange={onChange}>\\n        {options.map(option => {\\n          return <option value={option}>{option}</option>\\n        })}\\n      </select>\\n    </div>\\n  )\\n}\".trim();var scroll=\"\\nconst items = [...Array(100)].map((i) => 'Item '$'{i}');\\n\\nconst App = () => (\\n  <div className=\\\"container\\\">\\n    <div className=\\\"left-col\\\">\\n      Left col\\n    </div>\\n    \\n    <div className=\\\"center-col\\\">\\n      <ul>\\n        {items.map((item, i) => (<li key={'item_'$'{i}'}>{ item }</li>))}\\n      </ul>\\n    </div>\\n    \\n    <div className=\\\"left-col\\\">\\n      Right col\\n    </div>\\n  </div>\\n);\\n\\n\\n//App.css\\n.container {\\n  display: flex;\\n  flex-direction: row;\\n  height: 100vh;\\n}\\n\\n.left-col {\\n  flex: 1;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  background: rgb(106, 91, 235);\\n}\\n\\n.center-col {\\n  flex: 1;\\n  background: #aaa;\\n  overflow-y: scroll;\\n}\".trim();var profiles=\"\\nclass App extends Component {\\n  state = { selectedFile: null };\\n  \\n  onFileChange = (e) => {\\n    this.setState({ selectedFile: e.target.files[0] });\\n  };\\n  \\n  onFileUpload = () => {\\n    // Create an object of formData\\n    const formData = new FormData();\\n  \\n    formData.append(\\n      \\\"myFile\\\",\\n      this.state.selectedFile,\\n    );\\n  \\n    // Request made to the backend api\\n    axios.post(\\\"api/uploadfile\\\", formData);\\n  };\\n  \\n  fileData = () => {\\n    if (this.state.selectedFile) {\\n      return (\\n        <div>\\n          <h2>File Details:</h2>\\n          <p>File Name: {this.state.selectedFile.name}</p>\\n          <p>File Type: {this.state.selectedFile.type}</p>\\n\\n          <p>\\n            Last Modified:{\\\" \\\"}\\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\\n          </p>\\n        </div>\\n      );\\n    } \\n  };\\n  \\n  render() {\\n    return (\\n      <div>\\n          <div>\\n              <input type=\\\"file\\\" onChange={this.onFileChange} />\\n              <button onClick={this.onFileUpload}>\\n                Upload!\\n              </button>\\n          </div>\\n        {this.fileData()}\\n      </div>\\n    );\\n  }\\n}\".trim();var code=\"\\nconst moods = [\\n  { name: \\\"Happy\\\", \\\"emoji\\\": \\\"\\uD83D\\uDE00\\\" }, \\n  { name: \\\"Angry\\\", \\\"emoji\\\": \\\"\\uD83D\\uDE20\\\" },\\n  { name: \\\"Really Angry\\\", \\\"emoji\\\": \\\"\\uD83D\\uDE21\\\" },\\n  { name: \\\"Sad\\\", \\\"emoji\\\": \\\"\\uD83D\\uDE41\\\" },\\n  { name: \\\"Really Sad\\\", \\\"emoji\\\": \\\"\\u2639\\uFE0F\\\" },\\n  { name: \\\"Poop\\\", \\\"emoji\\\": \\\"\\uD83D\\uDCA9\\\" }\\n];\\n\\nclass App extends React.Component {\\n  state = {\\n    mood: { \\n      name: \\\"Emoji\\\", \\n      emoji: null \\n    }\\n  }\\n\\nhandleButtonClick = () => {\\n    const mood = moods[Math.floor(Math.random() * moods.length)];\\n    this.setState({ mood });\\n}\\n\\nrender() {\\n    return (\\n        <div>\\n          <div>{ this.state.mood.emoji }</div>\\n          <div>{ this.state.mood.name }</div>\\n          \\n            <button onClick={this.handleButtonClick}>\\n              Click\\n            </button>\\n        </div>\\n    )\\n  }\\n}\".trim();var Like=/*#__PURE__*/function(_Component){_inherits(Like,_Component);function Like(){_classCallCheck(this,Like);return _possibleConstructorReturn(this,_getPrototypeOf(Like).apply(this,arguments));}_createClass(Like,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"b\",null,\"1. Like\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:unlike,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),\"2. checkbox.js\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:checkbox,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),\"3. radio.js\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:radio,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"4. Select\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:select,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"5. Scroll\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:scroll,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"6. Upload Profile\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:profiles,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"7. EMJ\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:code,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return Like;}(Component);export default withStyles(styles)(Like);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/like.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","unlike","trim","checkbox","radio","select","scroll","profiles","code","Like","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst unlike = `\nconst App = () => {\n  const [count, setCount] = useState(0);\n  const [color, setColor] = useState('green');\n  const [size, setSize] = useState(1);\n  \n  const handleSetCount = () => {\n    (count === 4) ? setCount(0) : setCount(count + 1); \n    (count === 4) ? setSize(1) : setSize(size + .05); \n  };\n  \n  const handleSetColor = () => {\n    if(count === 1) setColor('red');\n    if(count === 2) setColor('blue');\n    if(count === 3) setColor('pink');\n    if(count === 4) setColor('yellow');\n  };\n  \n  const heartStyle = {\n    color: color,\n    transform: 'scale('$'{size})'\n  };\n  \n  return (\n    <>\n      <button onClick={() => { handleSetCount(); handleSetColor() } }>\n        <i>Like</i>\n      </button>\n      <p style={heartStyle}>You have liked this {count} times</p>\n    </>\n  );\n}`.trim()\n\nconst checkbox = `\nconst App = () => {\n  const [isChecked, setIsChecked] = useState(false)\n\n  const handleClick = () => {\n    setIsChecked(isChecked => !isChecked);\n  }\n\n  return (\n    <div>\n      <input\n        type=\"checkbox\"\n        checked={isChecked}\n        onChange={handleClick} />\n    </div>\n  );\n}`.trim()\n\nconst radio = `\nconst App = () => {\n  const [size, setSize] = useState(\"\")\n\n  const handleChange = (e) => {\n    setSize(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    alert('You chose the '$'{size} pizza.');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <p className=\"title\">Select a pizza size:</p>\n      <label>Small</label>\n      <input type=\"radio\" value=\"small\" checked={size === \"small\"} onChange={handleChange} />\n      <label>Medium</label>\n      <input type=\"radio\" value=\"medium\" checked={size === \"medium\"} onChange={handleChange} />\n      <label>Large</label>\n      <input type=\"radio\" value=\"large\" checked={size === \"large\"} onChange={handleChange} />\n\n      <button>Make your choice</button>\n    </form>\n  );\n}`.trim()\n\nconst select = `\nconst options = [\"Select an Option\", \"First\", \"Second\", \"Third\"]\n\nconst App = () => {\n  const [value, setValue] = useState('Select an Option')\n\n  const onChange = (e) => {\n    setValue(e.target.value)\n  }\n  return (\n    <div>\n      <select value={value} onChange={onChange}>\n        {options.map(option => {\n          return <option value={option}>{option}</option>\n        })}\n      </select>\n    </div>\n  )\n}`.trim();\n\n\nconst scroll = `\nconst items = [...Array(100)].map((i) => 'Item '$'{i}');\n\nconst App = () => (\n  <div className=\"container\">\n    <div className=\"left-col\">\n      Left col\n    </div>\n    \n    <div className=\"center-col\">\n      <ul>\n        {items.map((item, i) => (<li key={'item_'$'{i}'}>{ item }</li>))}\n      </ul>\n    </div>\n    \n    <div className=\"left-col\">\n      Right col\n    </div>\n  </div>\n);\n\n\n//App.css\n.container {\n  display: flex;\n  flex-direction: row;\n  height: 100vh;\n}\n\n.left-col {\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgb(106, 91, 235);\n}\n\n.center-col {\n  flex: 1;\n  background: #aaa;\n  overflow-y: scroll;\n}`.trim();\n\nconst profiles = `\nclass App extends Component {\n  state = { selectedFile: null };\n  \n  onFileChange = (e) => {\n    this.setState({ selectedFile: e.target.files[0] });\n  };\n  \n  onFileUpload = () => {\n    // Create an object of formData\n    const formData = new FormData();\n  \n    formData.append(\n      \"myFile\",\n      this.state.selectedFile,\n    );\n  \n    // Request made to the backend api\n    axios.post(\"api/uploadfile\", formData);\n  };\n  \n  fileData = () => {\n    if (this.state.selectedFile) {\n      return (\n        <div>\n          <h2>File Details:</h2>\n          <p>File Name: {this.state.selectedFile.name}</p>\n          <p>File Type: {this.state.selectedFile.type}</p>\n\n          <p>\n            Last Modified:{\" \"}\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\n          </p>\n        </div>\n      );\n    } \n  };\n  \n  render() {\n    return (\n      <div>\n          <div>\n              <input type=\"file\" onChange={this.onFileChange} />\n              <button onClick={this.onFileUpload}>\n                Upload!\n              </button>\n          </div>\n        {this.fileData()}\n      </div>\n    );\n  }\n}`.trim();\n\n\nconst code = `\nconst moods = [\n  { name: \"Happy\", \"emoji\": \"😀\" }, \n  { name: \"Angry\", \"emoji\": \"😠\" },\n  { name: \"Really Angry\", \"emoji\": \"😡\" },\n  { name: \"Sad\", \"emoji\": \"🙁\" },\n  { name: \"Really Sad\", \"emoji\": \"☹️\" },\n  { name: \"Poop\", \"emoji\": \"💩\" }\n];\n\nclass App extends React.Component {\n  state = {\n    mood: { \n      name: \"Emoji\", \n      emoji: null \n    }\n  }\n\nhandleButtonClick = () => {\n    const mood = moods[Math.floor(Math.random() * moods.length)];\n    this.setState({ mood });\n}\n\nrender() {\n    return (\n        <div>\n          <div>{ this.state.mood.emoji }</div>\n          <div>{ this.state.mood.name }</div>\n          \n            <button onClick={this.handleButtonClick}>\n              Click\n            </button>\n        </div>\n    )\n  }\n}`.trim();\n\n\n\nclass Like extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <b>1. Like</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={unlike}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              2. checkbox.js\n              <div style={titles}>\n                <PrismCode\n                  code={checkbox}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              3. radio.js\n              <div style={titles}>\n                <PrismCode\n                  code={radio}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>4. Select</h3>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={select}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>5. Scroll</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={scroll}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>6. Upload Profile</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={profiles}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>7. EMJ</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={code}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Like));\n"]},"metadata":{},"sourceType":"module"}