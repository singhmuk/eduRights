{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';import Queues from'../../../assets/queues.png';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var redesign={height:200,width:500};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var queue=\"var Queue = (function () {\\n  \\n  function Queue() {                                                     \\n    this.queue = [];\\n  }\\n\\n  Queue.prototype.enqueue = function (item) {\\n    this.queue[this.queue.length] = item;                                 //Add a value to the end of the queue.\\n  };\\n\\n  Queue.prototype.dequeue = function () {\\n    if (this.queue.length === 0) {                                        //Removes the value at the front of the queue.\\n      throw \\\"Queue is Empty\\\";\\n    }\\n\\n    var result = this.queue[0];\\n    this.queue.splice(0, 1);                                              //Remove the item at position 0.\\n\\n    return result;\\n  };\\n\\n  Queue.prototype.length = function () {\\n    return this.queue.length;                                             \\n  };\\n\\n  Queue.prototype.peek = function () {\\n    return this.queue[0];                                           //Return the item at the front of the queue.\\n  };\\n\\n \\n  Queue.prototype.view = function () {\\n    console.log(this.queue);                                        \\n  };\\n\\n  return Queue;\\n\\n}());\\n\\nvar myQueue = new Queue();\\n\\nmyQueue.enqueue(1);\\nmyQueue.enqueue(5);\\nmyQueue.enqueue(76);\\nmyQueue.enqueue(69);\\nmyQueue.enqueue(32);\\nmyQueue.enqueue(54);\\n\\nmyQueue.view();\\n\\nconsole.log(\\\"Length: \\\" + myQueue.length());\\nconsole.log(\\\"Front item: \\\" + myQueue.peek());\\nconsole.log(\\\"Removed \\\" + myQueue.dequeue() + \\\" from front.\\\");\\nconsole.log(\\\"New front item: \\\" + myQueue.peek());\\nconsole.log(\\\"Removed \\\" + myQueue.dequeue() + \\\" from front.\\\");\\nconsole.log(\\\"New front item: \\\" + myQueue.peek());\\nmyQueue.enqueue(55);\\nconsole.log(\\\"Inserted 55\\\");\\nconsole.log(\\\"New front item: \\\" + myQueue.peek());\\n\\nfor (var i = 0; i < 5; i++) {\\n  myQueue.dequeue();\\n  myQueue.view();\\n}\\n\\n//console.log(myQueue.dequeue());                                                              // throws exception!\\n\".trim();var Queue=/*#__PURE__*/function(_Component){_inherits(Queue,_Component);function Queue(){_classCallCheck(this,Queue);return _possibleConstructorReturn(this,_getPrototypeOf(Queue).apply(this,arguments));}_createClass(Queue,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Queue\"),React.createElement(\"img\",{src:Queues,alt:\"DeadLock\",className:\"responsive\",style:redesign}),React.createElement(\"ol\",null,React.createElement(\"li\",null,\"JavaScript is an event-driven programming language which makes it possible to support non-blocking operations. Internally, the browser manages only one thread to run the entire JavaScript code, using the event queue to enqueue listeners and the event loop to listen for the registered events. To support asynchronicity in a single-threaded environment, listener functions dequeue and execute only when the call stack is empty.\"),React.createElement(\"br\",null),React.createElement(\"li\",null,\"Queues are just arrays with two primary operations unshift, shift, pop and push. Unshift (add) items to the end of the array, while Pop dequeues them from the beginning of the array.\")),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:queue,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return Queue;}(Component);export default withStyles(styles)(Queue);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/algorithams/deepAlgorithams/queue.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","Queues","titles","backgroundColor","padding","fontSize","redesign","height","width","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","queue","trim","Queue","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CAEA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,QAAQ,CAAG,CACfC,MAAM,CAAE,GADO,CAEfC,KAAK,CAAE,GAFQ,CAAjB,CAKA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELT,OAAO,CAAEM,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADgB,CAKvBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALa,CAQvBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARY,CAAL,EAApB,CAcA,GAAMC,CAAAA,KAAK,CAAG,s5DAiEZC,IAjEY,EAAd,C,GAoEMC,CAAAA,K,iRACgB,CAClBC,UAAU,CAAC,iBAAM1B,CAAAA,KAAK,CAAC2B,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACX,KAA1B,EACE,8BAAI,oBAAC,OAAD,MAAJ,CADF,CADF,CADF,CAME,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEW,OAAO,CAACX,KAA1B,EACE,oBAAC,IAAD,MACE,sCADF,CAEE,2BAAK,GAAG,CAAEV,MAAV,CAAkB,GAAG,CAAC,UAAtB,CAAiC,SAAS,CAAC,YAA3C,CAAwD,KAAK,CAAEK,QAA/D,EAFF,CAGE,8BACE,2cADF,CASE,8BATF,CAWE,uNAXF,CAHF,CAqBE,2BAAK,KAAK,CAAEJ,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEe,KADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CArBF,CADF,CADF,CANF,CADF,CA0CD,C,mBAhDiBxB,S,EAmDpB,cAAgBI,CAAAA,UAAU,CAACY,MAAD,CAAV,CAAmBU,KAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\nimport Queues from '../../../assets/queues.png';\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst redesign = {\n  height: 200,\n  width: 500\n}\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst queue = `var Queue = (function () {\n  \n  function Queue() {                                                     \n    this.queue = [];\n  }\n\n  Queue.prototype.enqueue = function (item) {\n    this.queue[this.queue.length] = item;                                 //Add a value to the end of the queue.\n  };\n\n  Queue.prototype.dequeue = function () {\n    if (this.queue.length === 0) {                                        //Removes the value at the front of the queue.\n      throw \"Queue is Empty\";\n    }\n\n    var result = this.queue[0];\n    this.queue.splice(0, 1);                                              //Remove the item at position 0.\n\n    return result;\n  };\n\n  Queue.prototype.length = function () {\n    return this.queue.length;                                             \n  };\n\n  Queue.prototype.peek = function () {\n    return this.queue[0];                                           //Return the item at the front of the queue.\n  };\n\n \n  Queue.prototype.view = function () {\n    console.log(this.queue);                                        \n  };\n\n  return Queue;\n\n}());\n\nvar myQueue = new Queue();\n\nmyQueue.enqueue(1);\nmyQueue.enqueue(5);\nmyQueue.enqueue(76);\nmyQueue.enqueue(69);\nmyQueue.enqueue(32);\nmyQueue.enqueue(54);\n\nmyQueue.view();\n\nconsole.log(\"Length: \" + myQueue.length());\nconsole.log(\"Front item: \" + myQueue.peek());\nconsole.log(\"Removed \" + myQueue.dequeue() + \" from front.\");\nconsole.log(\"New front item: \" + myQueue.peek());\nconsole.log(\"Removed \" + myQueue.dequeue() + \" from front.\");\nconsole.log(\"New front item: \" + myQueue.peek());\nmyQueue.enqueue(55);\nconsole.log(\"Inserted 55\");\nconsole.log(\"New front item: \" + myQueue.peek());\n\nfor (var i = 0; i < 5; i++) {\n  myQueue.dequeue();\n  myQueue.view();\n}\n\n//console.log(myQueue.dequeue());                                                              // throws exception!\n`.trim()\n\n\nclass Queue extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Queue</h3>\n              <img src={Queues} alt=\"DeadLock\" className=\"responsive\" style={redesign} />\n              <ol>\n                <li>\n                  JavaScript is an event-driven programming language which makes it possible to support\n                  non-blocking operations. Internally, the browser manages only one thread to run the\n                  entire JavaScript code, using the event queue to enqueue listeners and the event loop to\n                  listen for the registered events. To support asynchronicity in a single-threaded\n                  environment, listener functions\n                  dequeue and execute only when the call stack is empty.\n                </li>\n                <br />\n\n                <li>\n                  Queues are just arrays with two primary operations unshift, shift, pop and push.\n                  Unshift (add) items to the end of the array, while Pop dequeues them from the\n                  beginning of the array.\n                </li>\n              </ol>\n\n              <div style={titles}>\n                <PrismCode\n                  code={queue}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Queue));\n"]},"metadata":{},"sourceType":"module"}