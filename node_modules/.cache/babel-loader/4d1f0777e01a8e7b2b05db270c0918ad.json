{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var indexing=\"\\ndb.indexing.find();\\n\\n{\\n  \\\"_id\\\" : ObjectId(\\\"5ef6f997c5897e0cab0063c1\\\"),\\n  \\\"title\\\" : \\\"Mistborn\\\",\\n  \\\"year\\\" : 2006,\\n  \\\"author\\\" : {\\n  \\\"firstname\\\" : \\\"Brandon\\\",\\n  \\\"lastname\\\" : \\\"Sanderson\\\"\\n  }\\n }\".trim();var ensureIndex=\"db.indexing.ensureIndex({year:1})\\n\\nIn ensureIndex() method you can pass multiple fields, to create index on multiple fields\\ndb.indexing.ensureIndex({first_name:1, last_name:-1});\".trim();var getIndexes=\"db.indexing.getIndexes()\".trim();var dropIndex=\"db.indexing.dropIndex({year:1})\".trim();var MongodbMethods=/*#__PURE__*/function(_Component){_inherits(MongodbMethods,_Component);function MongodbMethods(){_classCallCheck(this,MongodbMethods);return _possibleConstructorReturn(this,_getPrototypeOf(MongodbMethods).apply(this,arguments));}_createClass(MongodbMethods,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"b\",null,\"Indexing\"),React.createElement(\"br\",null),\"Indexes support the efficient resolution of queries. Without indexes, MongoDB must scan every document of a collection to select those documents that match the query statement. This scan is highly inefficient and require MongoDB to process a large volume of data.\",React.createElement(\"br\",null),\"\\uF0B7 Indexes improve MongoDB query excution\",React.createElement(\"br\",null),\"\\uF0B7 Without index whole collextion must be scanned (COLLSCAN)\",React.createElement(\"br\",null),\"\\uF0B7 Index stores sorted field values\",React.createElement(\"br\",null),\"\\uF0B7 If appropriate index exists, MongoDB performs only index scan (IXSCAN)\",React.createElement(\"br\",null),\"Indexes are special data structures, that store a small portion of the data set in an easy-to-traverse form. The index stores the value of a specific field or set of fields, ordered by the value of the field as specified in the index.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:indexing,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Create Index in collection:\"),React.createElement(\"br\",null),\"To create an index you need to use ensureIndex() method. We can select any field to create index from collection.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:ensureIndex,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"i\",null,\"The getIndexes() method method returns the description of all the indexes in the collection.\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:getIndexes,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"i\",null,\"The dropIndex() method:\"),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:dropIndex,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return MongodbMethods;}(Component);export default withStyles(styles)(MongodbMethods);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/mongoDB/deepMongodb/mongodbMethods.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","indexing","trim","ensureIndex","getIndexes","dropIndex","MongodbMethods","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = {backgroundColor:'#F0F8FF', padding:'1px', fontSize:'16px'}\n\nconst styles = theme => ({\n  paper: {\n      margin: theme.spacing(1),\n      padding: theme.spacing(1)\n  },\n  smMargin: {\n      margin: theme.spacing(1)\n  },\n  actionDiv: {\n      textAlign: \"center\"\n  }\n})\n\n\nconst indexing = `\ndb.indexing.find();\n\n{\n  \"_id\" : ObjectId(\"5ef6f997c5897e0cab0063c1\"),\n  \"title\" : \"Mistborn\",\n  \"year\" : 2006,\n  \"author\" : {\n  \"firstname\" : \"Brandon\",\n  \"lastname\" : \"Sanderson\"\n  }\n }`.trim()\n\nconst ensureIndex = `db.indexing.ensureIndex({year:1})\n\nIn ensureIndex() method you can pass multiple fields, to create index on multiple fields\ndb.indexing.ensureIndex({first_name:1, last_name:-1});`.trim()\n\nconst getIndexes = `db.indexing.getIndexes()`.trim()\n\nconst dropIndex = `db.indexing.dropIndex({year:1})`.trim()\n\n\nclass MongodbMethods extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n            <Grid item xs={2}>\n                <Paper className={classes.paper}>\n                    <h4><Sidebar /></h4>\n                </Paper>\n            </Grid>\n<Grid item xs={10}>\n<Paper className={classes.paper}>\n<List>\n      <b>Indexing</b>\n      <br/>\n      Indexes support the efficient resolution of queries. Without indexes, MongoDB must scan every\ndocument of a collection to select those documents that match the query statement. This scan is\nhighly inefficient and require MongoDB to process a large volume of data.<br/>\n Indexes improve MongoDB query excution<br/>\n Without index whole collextion must be scanned (COLLSCAN)<br/>\n Index stores sorted field values<br/>\n If appropriate index exists, MongoDB performs only index scan (IXSCAN)<br/>\nIndexes are special data structures, that store a small portion of the data set in an easy-to-traverse\nform. The index stores the value of a specific field or set of fields, ordered by the value of the field as\nspecified in the index.\n      <div style={titles}>\n      <PrismCode\n        code={indexing}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <b>Create Index in collection:</b>\n      <br/>\n      To create an index you need to use ensureIndex() method.\nWe can select any field to create index from collection.\n      <div style={titles}>\n      <PrismCode\n        code={ensureIndex}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <i>The getIndexes() method method returns the description of all the indexes in the collection.</i>\n      <div style={titles}>\n      <PrismCode\n        code={getIndexes}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <i>The dropIndex() method:</i>\n      <br/>\n      <br/>\n      <div style={titles}>\n      <PrismCode\n        code={dropIndex}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      </List>\n      </Paper>\n      </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(MongodbMethods));\n"]},"metadata":{},"sourceType":"module"}