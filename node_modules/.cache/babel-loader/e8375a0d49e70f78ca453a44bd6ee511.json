{"ast":null,"code":"import React, { Suspense, lazy } from 'react';\nconst InfoML = lazy(() => import('./deepMl/infoMl'));\nconst Capture = lazy(() => import('./deepMl/capture'));\nconst JoinImages = lazy(() => import('./deepMl/joinImages'));\nconst K_Mean = lazy(() => import('./deepMl/k_meanClustring'));\nconst Pandas = lazy(() => import('./deepMl/pandas'));\nconst Numpys = lazy(() => import('./deepMl/numpyPy'));\nconst Adaboots = lazy(() => import('./deepMl/adaboost'));\nconst DecisionTree = lazy(() => import('./deepMl/decisiontree'));\nconst KnnPy = lazy(() => import('./deepMl/knn'));\nconst LdaPy = lazy(() => import('./deepMl/lda'));\nconst LeanearRegression = lazy(() => import('./deepMl/leanearRegression'));\nconst LogisticReg = lazy(() => import('./deepMl/logisticRegrations'));\nconst NaiveBrs = lazy(() => import('./deepMl/naiveBar'));\nconst PcaPy = lazy(() => import('./deepMl/pcaPy'));\nconst Perceptron = lazy(() => import('./deepMl/perceptron'));\nconst RandomForest = lazy(() => import('./deepMl/randomForest'));\nconst Rgrations = lazy(() => import('./deepMl/regrations'));\nconst SvmPy = lazy(() => import('./deepMl/svmPy'));\nconst Gradient = lazy(() => import('./deepMl/gredient_decents'));\nconst Libraries = lazy(() => import('./deepMl/libraries'));\nconst Traning = lazy(() => import('./deepMl/training'));\nconst LogisticRegs = lazy(() => import('./deepMl/logisticReg'));\nconst GreedSearch = lazy(() => import('./deepMl/greedSearch'));\nconst Regularizations = lazy(() => import('./deepMl/regularizations'));\nconst Bagging = lazy(() => import('./deepMl/bagging'));\nconst FeaturesEng = lazy(() => import('./deepMl/featuresEng'));\nconst Superwise = lazy(() => import('./deepMl/superwise'));\nconst components = {\n  Capture,\n  JoinImages,\n  K_Mean,\n  Pandas,\n  LogisticRegs,\n  GreedSearch,\n  Regularizations,\n  Bagging,\n  FeaturesEng,\n  InfoML,\n  Adaboots,\n  DecisionTree,\n  KnnPy,\n  LdaPy,\n  LeanearRegression,\n  LogisticReg,\n  NaiveBrs,\n  PcaPy,\n  Perceptron,\n  RandomForest,\n  Rgrations,\n  SvmPy,\n  Traning,\n  Numpys,\n  Libraries,\n  Gradient,\n  Superwise\n};\nexport { components };","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/ml/index.js"],"names":["React","Suspense","lazy","InfoML","Capture","JoinImages","K_Mean","Pandas","Numpys","Adaboots","DecisionTree","KnnPy","LdaPy","LeanearRegression","LogisticReg","NaiveBrs","PcaPy","Perceptron","RandomForest","Rgrations","SvmPy","Gradient","Libraries","Traning","LogisticRegs","GreedSearch","Regularizations","Bagging","FeaturesEng","Superwise","components"],"mappings":"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","sourcesContent":["import React, { Suspense, lazy } from 'react';\n\n\nconst InfoML = lazy(() => import('./deepMl/infoMl'));\nconst Capture = lazy(() => import('./deepMl/capture'));\nconst JoinImages = lazy(() => import('./deepMl/joinImages'));\nconst K_Mean = lazy(() => import('./deepMl/k_meanClustring'));\nconst Pandas = lazy(() => import('./deepMl/pandas'));\nconst Numpys = lazy(() => import('./deepMl/numpyPy'));\nconst Adaboots = lazy(() => import('./deepMl/adaboost'));\nconst DecisionTree = lazy(() => import('./deepMl/decisiontree'));\nconst KnnPy = lazy(() => import('./deepMl/knn'));\nconst LdaPy = lazy(() => import('./deepMl/lda'));\nconst LeanearRegression = lazy(() => import('./deepMl/leanearRegression'));\nconst LogisticReg = lazy(() => import('./deepMl/logisticRegrations'));\nconst NaiveBrs = lazy(() => import('./deepMl/naiveBar'));\nconst PcaPy = lazy(() => import('./deepMl/pcaPy'));\nconst Perceptron = lazy(() => import('./deepMl/perceptron'));\nconst RandomForest = lazy(() => import('./deepMl/randomForest'));\nconst Rgrations = lazy(() => import('./deepMl/regrations'));\nconst SvmPy = lazy(() => import('./deepMl/svmPy'));\nconst Gradient = lazy(() => import('./deepMl/gredient_decents'));\n\nconst Libraries = lazy(() => import('./deepMl/libraries'));\nconst Traning = lazy(() => import('./deepMl/training'));\nconst LogisticRegs = lazy(() => import('./deepMl/logisticReg'));\nconst GreedSearch = lazy(() => import('./deepMl/greedSearch'));\nconst Regularizations = lazy(() => import('./deepMl/regularizations'));\nconst Bagging = lazy(() => import('./deepMl/bagging'));\nconst FeaturesEng = lazy(() => import('./deepMl/featuresEng'));\nconst Superwise = lazy(() => import('./deepMl/superwise'));\n\n\n\nconst components = {\n  Capture, JoinImages, K_Mean, Pandas, LogisticRegs, GreedSearch, Regularizations, Bagging, FeaturesEng,\n  InfoML, Adaboots, DecisionTree, KnnPy, LdaPy, LeanearRegression,\n  LogisticReg, NaiveBrs, PcaPy, Perceptron, RandomForest, Rgrations, SvmPy, Traning,\n  Numpys, Libraries, Gradient,\n  Superwise\n};\n\nexport { components };"]},"metadata":{},"sourceType":"module"}