{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/ReactJs/reactJs_hooks/sortItems.js\";\nimport React, { Component } from 'react';\nimport PrismCode from '../prismCode';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../styles.css';\nimport Sidebar from '../sidebar';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst countProgress = `\nclass App extends Component {\n  state = {\n      progress: 0,\n      score: 0\n    };  \n    \n    \n  handleClick = () => {\n      this.setState(() => {\n        if (this.state.progress + 10 === 100) {\n          return { progress: 0, score: this.state.score + 1 };\n        }\n        return { progress: this.state.progress + 10 };\n      });\n    }\n\n  render() {\n    const style = { width: this.state.progress + '%' };\n    \n    return (\n      <div onClick={this.handleClick}>\n        {'Score: ' + this.state.score} <br />\n        {this.state.progress + '%'}\n        <div className=\"bar\" style={style} />\n      </div>\n    );\n  }\n}\n\n\n//App.css\n.bar {\n  width: 0;\n  height: 20px;\n  transition: width 0.3s;\n  background: #21d147;\n  cursor: pointer;\n}`.trim();\nconst contTimmer = `\nclass App extends Component {\n  state = {\n    isActive: false,\n    secondsElapsed: 1800000 / 1000 //time in seconds\n  };\n\n  getHours() {\n    return (\"0\" + Math.floor(this.state.secondsElapsed / 3600)).slice(-2);\n  }\n\n  getMinutes() {\n    return (\"0\" + Math.floor((this.state.secondsElapsed % 3600) / 60)).slice(-2);\n  }\n\n  getSeconds() {\n    return (\"0\" + (this.state.secondsElapsed % 60)).slice(-2);\n  }\n\n  startTime = () => {\n    this.setState({ isActive: true });\n    \n    this.countdown = setInterval(() => {\n      this.setState({ secondsElapsed: this.state.secondsElapsed - 1 }) \n    }, 1000);\n  };\n\n  resetTime = () => {\n    clearInterval(this.countdown);\n    this.setState({\n        secondsElapsed: 1800000 / 1000,\n        isActive: false\n    });\n  };\n\n  pauseTime = () => {\n    clearInterval(this.countdown);\n    this.setState({ isActive: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <span>{this.getHours()} : {this.getMinutes()} : {this.getSeconds()}</span>\n        </div>\n        <div>\n          <button onClick={this.state.isActive ? this.pauseTime : this.startTime}>\n            Start/Pause\n          </button>\n          <button onClick={this.resetTime}>Reset</button>\n        </div>\n      </div>\n    );\n  }\n}`.trim();\nconst pause = `\nconst App=()=>{\n  const [count, setCount]=useState(0);\n  const [isFalse,setIsFalse]=useState(false);\n\n  const handleCount=()=>{\n   \n       if(isFalse){\n           setCount(count+1)\n       }\n       else{\n           setCount(count-1)\n       }\n  }\n  \n  const handleBtn=()=>{\n   setIsFalse(!isFalse);\n  }\n\n  return(\n   <div>\n       {count}<br/>\n       <button onClick={handleCount}>Count</button>\n       <button onClick={handleBtn}>Handle</button>\n\n   </div>\n  )\n}\n\nexport default App;\n`.trim();\nconst fizzBuzz = `\nclass App extends Component {\n  state = {\n    fizzBuzz: '',\n    counter: 1\n  };\n  \n  isFizzBuzz = () => {\n    const counter = this.state.counter;\n    let fizzBuzz = this.state.fizzBuzz;\n    \n    if (counter % 3 === 0) { fizzBuzz += 'Fizz, ' }\n    if (counter % 5 === 0) { fizzBuzz += 'Buzz, ' };\n    if (counter % 5 && counter % 3) { fizzBuzz += ''$'{counter}, ' };\n    \n    this.setState({ fizzBuzz: fizzBuzz });\n  };\n  increment = () => {\n    this.setState((prevState) => ({ counter: ++prevState.counter }));\n    this.isFizzBuzz();\n  };\n  decrement = () => {\n    this.setState((prevState) => ({ counter: --prevState.counter }));\n    this.isFizzBuzz();\n  };\n  render() {\n    return (\n      <div>\n        <button onClick={this.increment}>+</button>{ }\n        <button onClick={this.decrement}>-</button><br /><br />\n        {this.state.fizzBuzz}\n      </div>\n    );\n  }\n}`.trim();\nconst ratings = `\nconst Star = ({ starId, marked }) => {\n  return (\n    <span\n      star-id={starId}\n      style={{ color: \"green\", cursor: \"pointer\" }}\n    >\n      {marked ? \"★\" : \"☆\"}  // \"/u2605\" : \"/u2606\"\n    </span>\n  );\n};\n\nconst App = () => {\n  const [selection, setSelection] = React.useState(0);\n\n  const [rating, setRating] = React.useState(0);\n\n  const hoverOver = event => {\n    let starId = 0;\n    if (event && event.target && event.target.getAttribute(\"star-id\")) {\n      starId = event.target.getAttribute(\"star-id\");\n    }\n    setSelection(starId);\n  };\n\n  return (\n    <div\n      onMouseOver={hoverOver}\n      onMouseOut={() => hoverOver(null)}\n      onClick={event => setRating(event.target.getAttribute(\"star-id\"))}\n    >\n      {Array.from({ length: 5 }, (v, i) => (\n        <Star starId={i + 1} marked={selection ? selection > i : rating > i} />\n      ))}\n    </div>\n  );\n};`.trim();\n\nclass SortItems extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"1.onClick increase 10% progress bar\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: countProgress,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"2. A click to start the countdown timer and a second one to Pause the timer in the same button\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: contTimmer,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"3. Click on pause button to decrese count again Click on pause to start increse count\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: pause,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"4. FizzBuzz :\"), \" If counter = 3, then print 'Fizz', counter = 5, 'Buzz' else print counter values.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: fizzBuzz,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"7. Start Rating\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: ratings,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(SortItems);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/ReactJs/reactJs_hooks/sortItems.js"],"names":["React","Component","PrismCode","Prism","Grid","Paper","withStyles","List","Sidebar","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","countProgress","trim","contTimmer","pause","fizzBuzz","ratings","SortItems","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PrismCode from '../prismCode';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../styles.css'\nimport Sidebar from '../sidebar';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst countProgress = `\nclass App extends Component {\n  state = {\n      progress: 0,\n      score: 0\n    };  \n    \n    \n  handleClick = () => {\n      this.setState(() => {\n        if (this.state.progress + 10 === 100) {\n          return { progress: 0, score: this.state.score + 1 };\n        }\n        return { progress: this.state.progress + 10 };\n      });\n    }\n\n  render() {\n    const style = { width: this.state.progress + '%' };\n    \n    return (\n      <div onClick={this.handleClick}>\n        {'Score: ' + this.state.score} <br />\n        {this.state.progress + '%'}\n        <div className=\"bar\" style={style} />\n      </div>\n    );\n  }\n}\n\n\n//App.css\n.bar {\n  width: 0;\n  height: 20px;\n  transition: width 0.3s;\n  background: #21d147;\n  cursor: pointer;\n}`.trim();\n\nconst contTimmer = `\nclass App extends Component {\n  state = {\n    isActive: false,\n    secondsElapsed: 1800000 / 1000 //time in seconds\n  };\n\n  getHours() {\n    return (\"0\" + Math.floor(this.state.secondsElapsed / 3600)).slice(-2);\n  }\n\n  getMinutes() {\n    return (\"0\" + Math.floor((this.state.secondsElapsed % 3600) / 60)).slice(-2);\n  }\n\n  getSeconds() {\n    return (\"0\" + (this.state.secondsElapsed % 60)).slice(-2);\n  }\n\n  startTime = () => {\n    this.setState({ isActive: true });\n    \n    this.countdown = setInterval(() => {\n      this.setState({ secondsElapsed: this.state.secondsElapsed - 1 }) \n    }, 1000);\n  };\n\n  resetTime = () => {\n    clearInterval(this.countdown);\n    this.setState({\n        secondsElapsed: 1800000 / 1000,\n        isActive: false\n    });\n  };\n\n  pauseTime = () => {\n    clearInterval(this.countdown);\n    this.setState({ isActive: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <span>{this.getHours()} : {this.getMinutes()} : {this.getSeconds()}</span>\n        </div>\n        <div>\n          <button onClick={this.state.isActive ? this.pauseTime : this.startTime}>\n            Start/Pause\n          </button>\n          <button onClick={this.resetTime}>Reset</button>\n        </div>\n      </div>\n    );\n  }\n}`.trim();\n\nconst pause = `\nconst App=()=>{\n  const [count, setCount]=useState(0);\n  const [isFalse,setIsFalse]=useState(false);\n\n  const handleCount=()=>{\n   \n       if(isFalse){\n           setCount(count+1)\n       }\n       else{\n           setCount(count-1)\n       }\n  }\n  \n  const handleBtn=()=>{\n   setIsFalse(!isFalse);\n  }\n\n  return(\n   <div>\n       {count}<br/>\n       <button onClick={handleCount}>Count</button>\n       <button onClick={handleBtn}>Handle</button>\n\n   </div>\n  )\n}\n\nexport default App;\n`.trim();\n\nconst fizzBuzz = `\nclass App extends Component {\n  state = {\n    fizzBuzz: '',\n    counter: 1\n  };\n  \n  isFizzBuzz = () => {\n    const counter = this.state.counter;\n    let fizzBuzz = this.state.fizzBuzz;\n    \n    if (counter % 3 === 0) { fizzBuzz += 'Fizz, ' }\n    if (counter % 5 === 0) { fizzBuzz += 'Buzz, ' };\n    if (counter % 5 && counter % 3) { fizzBuzz += ''$'{counter}, ' };\n    \n    this.setState({ fizzBuzz: fizzBuzz });\n  };\n  increment = () => {\n    this.setState((prevState) => ({ counter: ++prevState.counter }));\n    this.isFizzBuzz();\n  };\n  decrement = () => {\n    this.setState((prevState) => ({ counter: --prevState.counter }));\n    this.isFizzBuzz();\n  };\n  render() {\n    return (\n      <div>\n        <button onClick={this.increment}>+</button>{ }\n        <button onClick={this.decrement}>-</button><br /><br />\n        {this.state.fizzBuzz}\n      </div>\n    );\n  }\n}`.trim();\n\nconst ratings = `\nconst Star = ({ starId, marked }) => {\n  return (\n    <span\n      star-id={starId}\n      style={{ color: \"green\", cursor: \"pointer\" }}\n    >\n      {marked ? \"★\" : \"☆\"}  // \"/u2605\" : \"/u2606\"\n    </span>\n  );\n};\n\nconst App = () => {\n  const [selection, setSelection] = React.useState(0);\n\n  const [rating, setRating] = React.useState(0);\n\n  const hoverOver = event => {\n    let starId = 0;\n    if (event && event.target && event.target.getAttribute(\"star-id\")) {\n      starId = event.target.getAttribute(\"star-id\");\n    }\n    setSelection(starId);\n  };\n\n  return (\n    <div\n      onMouseOver={hoverOver}\n      onMouseOut={() => hoverOver(null)}\n      onClick={event => setRating(event.target.getAttribute(\"star-id\"))}\n    >\n      {Array.from({ length: 5 }, (v, i) => (\n        <Star starId={i + 1} marked={selection ? selection > i : rating > i} />\n      ))}\n    </div>\n  );\n};`.trim();\n\n\n\nclass SortItems extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <b>1.onClick increase 10% progress bar</b>\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={countProgress}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>2. A click to start the countdown timer and a second one to Pause the timer in the same button</b>\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={contTimmer}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>3. Click on pause button to decrese count again Click on pause to start increse count</b>\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={pause}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>4. FizzBuzz :</b> If counter = 3, then print 'Fizz', counter = 5, 'Buzz' else print counter values.\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={fizzBuzz}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <b>7. Start Rating</b>\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={ratings}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(SortItems));"]},"metadata":{},"sourceType":"module"}