{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/javaScripts/deepJs/prototypes.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst paramsd = `\nfunction Person(fname, lname, city, year){\n    lname === undefined ? lname = 'Singh' : city = city;\n    city === undefined? city = 'Delhi' : city = city;\n\n\n    this.fname = fname;\n    this.lname = lname;\n    this.city = city;\n    this.year = year\n}\n\nvar obj = new Person('mukesh',2003);\nconsole.log(obj);`.trim();\nconst modyPro = `\nfunction Person(first, last, age, gender, interests) {\n\n  this.name = {\n    'first': first,\n    'last' : last\n  };\n  this.age = age;\n  this.gender = gender;\n}\n\nconst person1 = new Person('Bob', 'Smith', 32, 'male', ['music', 'skiing']);\nconsole.log(person1);`.trim();\nconst inheritingMethos = `\nvar obj = {\n  num: 2,\n  main: function() {\n    return this.num + 1;\n  }\n};\n\nconsole.log(obj.main()); \n\nvar newObj = Object.create(obj);\nnewObj.num = 4; \n\nconsole.log(newObj.main());`.trim();\nconst proto = `\nlet obj = {\n  name: \"Mukesh\",\n  city: \"Ranchi\",\n  getInfo: function(){\n    console.log(this.name ,\"from\", this.city)\n  }\n}\n\nlet obj2 = {\n  name: \"Ritesh\"\n}\n\n//Never use it\nobj2.__proto__=obj;\n\nconsole.log(obj2.name);\nconsole.log(obj.getInfo());\nconsole.log(obj2.getInfo());`.trim();\nconst polyfill = `\n//1\nFunction.prototype.mybind = function(){\n  console.log('dddddd')\n}\n\nfunction fun(){}\n\n\n//2\nlet names = {\n  fname: 'Mukesh',\n  hometown: 'Ranchi'\n}\n\nlet getInfo = function(){\n  return console.log(this.fname,\"---\",this.hometown);\n}\n\ngetInfo();\n\n\nlet getMyInfo = getInfo.bind(names);        //create own polyfill by bind method (Traditional way).\ngetMyInfo();  \n\n\n\nFunction.prototype.mybind = function(...args) {                      // User defind way\n  let obj = this\n  return function() {\n    obj.call(args[0]);\n  }\n}\n\nlet getMyInfo2 = getInfo.mybind(names);\ngetMyInfo();`.trim();\nconst code = `\nconst pureFun = (num) => Math.pow(num, 1/2);                                   // Pure function.\nconsole.log(pureFun(64));\n\n\nconst inPureFun = (max, min) => {\n  return parseInt(Math.random() * (max - min) + min);                          // Impure function.\n}  \n\nconsole.log(inPureFun(10, 2));\n`.trim();\nconst anonymousFun = `\nlet show = function () {\n  console.log('Anonymous function');\n};\n\nshow();\n\n\n//Using anonymous functions as arguments of other functions\nsetTimeout(function () {\n  console.log('Execute later after 1 second')\n}, 1000);`.trim();\nconst firstFun = `\n//Partial Function Application\n  function applicator(fn, val) {\n    return function() {\n      fn(val);\n    };\n  }\n\nfunction speak(string) {\n  console.log(string);\n}\n\nvar sayHello = applicator(speak, \"Hello\");\nsayHello();   `.trim();\nconst combinators = `\nconst add = (x, y) => x + y;\nconst multiple = (x, y) => x + y;\nconst sum = (...nums) => nums.reduce((x, y) => x + y);\nconst product = (...nums) => nums.reduce((x, y) => x * y);\n\n\n//\nfunction myFunc() {\n  let name=\"Radha\";\n  let bool=true;\n\n  console.log('And', name && bool);\n  console.log('Or', name || bool);\n}\n\nmyFunc();\n`.trim();\nconst safe = `const person = {\n  name: 'Bobo',\n  address: { \n    street: 'Main Street', \n    number: 123\n   }\n };\n \n const deepPersonClone = JSON.parse(JSON.stringify(person));\n deepPersonClone.address.number = 456;\n console.log({ person, deepPersonClone });`.trim();\nconst hoc = `\nfunction hocfun(a,b) {\n  let c=a+b;\n  console.log(c);\n  return function(name) { \n      return [console.log(a), console.log(b), console.log(name)]\n  };\n}\n\nconst myFunc = hocfun(2,5);\nmyFunc('Krishana');\n `.trim();\nconst dynamicScope = `\n function foo(){\n     console.log(a);\n  }\n  \n  function bar(){\n     var a = 3;\n     console.log(a);\n     foo();\n  }\n  \n  var a = 2;\n  bar();`.trim();\nconst METADATA = `let METADATA = Symbol('metadata');\n class Car {\n      constructor(make, model) {\n      this.make = make;\n      this.model = model;\n    }\n    \n  [METADATA]() {\n        return {\n        make: this.make,\n        model: this.model\n      };\n    }\n    [\"add\"](a, b) {\n    return a + b;\n    }\n    \n    [1 + 2]() {\n      return \"three\";\n      }\n    }\n    \n let MazdaMPV = new Car(\"Mazda\", \"MPV\");\n   MazdaMPV.add(4, 5);\n   MazdaMPV[3]();\n   console.log(MazdaMPV[METADATA]())\n  `.trim();\nconst statics = `\n   class Student {\n     constructor(name)  {    \n       this.name = name; \n        }\n     static findName(student)  {\n         return student.name;  \n     } \n   }\n   var s = new Student(\"Eden\"); \n   var name = Student.findName(s);\n   console.log(name);`.trim();\nconst supers = `\n   var obj1 = {  \n     print(){    \n     console.log(\"Hello\");  \n   } \n }\n \n var obj2 = {  \n     print(){\n     super.print();  \n   } \n }\n \n \n Object.setPrototypeOf(obj2, obj1); \n obj2.print();`.trim();\nconst access = `\n   class A {\n     foo() { return 'foo in A'; }\n   }\n   \n class B extends A {\n     foo() { return 'foo in B'; }\n   }\n   \n class C {\n     foo() { return 'foo in C'; }\n   }\n   \n class D extends C {\n     foo() { return super.foo(); }\n   }\n   \n \n b = new B;\n console.log(b.foo());\n \n B.prototype.foo = D.prototype.foo\n console.log(b.foo());\n console.log(b instanceof C); // false`.trim();\nconst password = `\n let userEmail='LOC1234'\n let password='1234LOC1234'\n \n //console.log(userEmail.toLowerCase())\n \n let userCheck = function(myString){\n   if((myString.includes(123)) && (myString.length>=7)){\n     return true\n   }\n     return false\n }\n \n let passCheck = function(myPass){\n   if((myPass.includes('123')) && (myPass.length>5)){\n     return true\n   }\n }\n \n console.log(userCheck(userEmail))\n console.log(passCheck(password))\n `.trim();\n\nclass Prototypes extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"1. Object prototypes\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, \"Modifying prototypes\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: modyPro,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"Default Parameters\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: paramsd,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"2. Inheriting Methods\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: inheritingMethos,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, \"Prototype and Protopal Inheritance\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: proto,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, \"3. Polyfill\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: polyfill,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, \"4. What is Functional Programming?\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: code,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, \"5. First Class Function\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: firstFun,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, \"JavaScript anonymous functions\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, \"An anonymous function is a function without a name. An anonymous function is often not accessible after its initial creation.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: anonymousFun,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, \"6. Combinators\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: combinators,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, \"Shared State\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }), \"Shared state is any variable, object, or memory space that exists in a shared scope, or as the property of an object being passed between scopes. A shared scope can include global scope or closure scopes. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: safe,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, \"8. dynamic_scope:\"), \"Lexical scope is the set of rules about how the Engine can look-up a variable and where it will find it. Dynamic scope can be determined dynamically at runtime, rather than statically at authoretime.\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: dynamicScope,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, \"9. Dynamic Methods:\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: METADATA,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, \"10. JavaScript static Method:\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: statics,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, \"11. Super\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: supers,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }, \"Superclass Property Access\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: access,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, \"12. Password Enter\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: password,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(Prototypes);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/javaScripts/deepJs/prototypes.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","paramsd","trim","modyPro","inheritingMethos","proto","polyfill","code","anonymousFun","firstFun","combinators","safe","hoc","dynamicScope","METADATA","statics","supers","access","password","Prototypes","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst paramsd = `\nfunction Person(fname, lname, city, year){\n    lname === undefined ? lname = 'Singh' : city = city;\n    city === undefined? city = 'Delhi' : city = city;\n\n\n    this.fname = fname;\n    this.lname = lname;\n    this.city = city;\n    this.year = year\n}\n\nvar obj = new Person('mukesh',2003);\nconsole.log(obj);`.trim();\n\nconst modyPro = `\nfunction Person(first, last, age, gender, interests) {\n\n  this.name = {\n    'first': first,\n    'last' : last\n  };\n  this.age = age;\n  this.gender = gender;\n}\n\nconst person1 = new Person('Bob', 'Smith', 32, 'male', ['music', 'skiing']);\nconsole.log(person1);`.trim();\n\n\n\nconst inheritingMethos = `\nvar obj = {\n  num: 2,\n  main: function() {\n    return this.num + 1;\n  }\n};\n\nconsole.log(obj.main()); \n\nvar newObj = Object.create(obj);\nnewObj.num = 4; \n\nconsole.log(newObj.main());`.trim();\n\n\nconst proto = `\nlet obj = {\n  name: \"Mukesh\",\n  city: \"Ranchi\",\n  getInfo: function(){\n    console.log(this.name ,\"from\", this.city)\n  }\n}\n\nlet obj2 = {\n  name: \"Ritesh\"\n}\n\n//Never use it\nobj2.__proto__=obj;\n\nconsole.log(obj2.name);\nconsole.log(obj.getInfo());\nconsole.log(obj2.getInfo());`.trim();\n\n\nconst polyfill = `\n//1\nFunction.prototype.mybind = function(){\n  console.log('dddddd')\n}\n\nfunction fun(){}\n\n\n//2\nlet names = {\n  fname: 'Mukesh',\n  hometown: 'Ranchi'\n}\n\nlet getInfo = function(){\n  return console.log(this.fname,\"---\",this.hometown);\n}\n\ngetInfo();\n\n\nlet getMyInfo = getInfo.bind(names);        //create own polyfill by bind method (Traditional way).\ngetMyInfo();  \n\n\n\nFunction.prototype.mybind = function(...args) {                      // User defind way\n  let obj = this\n  return function() {\n    obj.call(args[0]);\n  }\n}\n\nlet getMyInfo2 = getInfo.mybind(names);\ngetMyInfo();`.trim();\n\nconst code = `\nconst pureFun = (num) => Math.pow(num, 1/2);                                   // Pure function.\nconsole.log(pureFun(64));\n\n\nconst inPureFun = (max, min) => {\n  return parseInt(Math.random() * (max - min) + min);                          // Impure function.\n}  \n\nconsole.log(inPureFun(10, 2));\n`.trim()\n\nconst anonymousFun = `\nlet show = function () {\n  console.log('Anonymous function');\n};\n\nshow();\n\n\n//Using anonymous functions as arguments of other functions\nsetTimeout(function () {\n  console.log('Execute later after 1 second')\n}, 1000);`.trim();\n\nconst firstFun = `\n//Partial Function Application\n  function applicator(fn, val) {\n    return function() {\n      fn(val);\n    };\n  }\n\nfunction speak(string) {\n  console.log(string);\n}\n\nvar sayHello = applicator(speak, \"Hello\");\nsayHello();   `.trim();\n\nconst combinators = `\nconst add = (x, y) => x + y;\nconst multiple = (x, y) => x + y;\nconst sum = (...nums) => nums.reduce((x, y) => x + y);\nconst product = (...nums) => nums.reduce((x, y) => x * y);\n\n\n//\nfunction myFunc() {\n  let name=\"Radha\";\n  let bool=true;\n\n  console.log('And', name && bool);\n  console.log('Or', name || bool);\n}\n\nmyFunc();\n`.trim();\n\nconst safe = `const person = {\n  name: 'Bobo',\n  address: { \n    street: 'Main Street', \n    number: 123\n   }\n };\n \n const deepPersonClone = JSON.parse(JSON.stringify(person));\n deepPersonClone.address.number = 456;\n console.log({ person, deepPersonClone });`.trim()\n\nconst hoc = `\nfunction hocfun(a,b) {\n  let c=a+b;\n  console.log(c);\n  return function(name) { \n      return [console.log(a), console.log(b), console.log(name)]\n  };\n}\n\nconst myFunc = hocfun(2,5);\nmyFunc('Krishana');\n `.trim()\n\nconst dynamicScope = `\n function foo(){\n     console.log(a);\n  }\n  \n  function bar(){\n     var a = 3;\n     console.log(a);\n     foo();\n  }\n  \n  var a = 2;\n  bar();`.trim()\n\nconst METADATA = `let METADATA = Symbol('metadata');\n class Car {\n      constructor(make, model) {\n      this.make = make;\n      this.model = model;\n    }\n    \n  [METADATA]() {\n        return {\n        make: this.make,\n        model: this.model\n      };\n    }\n    [\"add\"](a, b) {\n    return a + b;\n    }\n    \n    [1 + 2]() {\n      return \"three\";\n      }\n    }\n    \n let MazdaMPV = new Car(\"Mazda\", \"MPV\");\n   MazdaMPV.add(4, 5);\n   MazdaMPV[3]();\n   console.log(MazdaMPV[METADATA]())\n  `.trim()\n\n\n\n\nconst statics = `\n   class Student {\n     constructor(name)  {    \n       this.name = name; \n        }\n     static findName(student)  {\n         return student.name;  \n     } \n   }\n   var s = new Student(\"Eden\"); \n   var name = Student.findName(s);\n   console.log(name);`.trim();\n\n\nconst supers = `\n   var obj1 = {  \n     print(){    \n     console.log(\"Hello\");  \n   } \n }\n \n var obj2 = {  \n     print(){\n     super.print();  \n   } \n }\n \n \n Object.setPrototypeOf(obj2, obj1); \n obj2.print();`.trim();\n\n\nconst access = `\n   class A {\n     foo() { return 'foo in A'; }\n   }\n   \n class B extends A {\n     foo() { return 'foo in B'; }\n   }\n   \n class C {\n     foo() { return 'foo in C'; }\n   }\n   \n class D extends C {\n     foo() { return super.foo(); }\n   }\n   \n \n b = new B;\n console.log(b.foo());\n \n B.prototype.foo = D.prototype.foo\n console.log(b.foo());\n console.log(b instanceof C); // false`.trim();\n\n\nconst password = `\n let userEmail='LOC1234'\n let password='1234LOC1234'\n \n //console.log(userEmail.toLowerCase())\n \n let userCheck = function(myString){\n   if((myString.includes(123)) && (myString.length>=7)){\n     return true\n   }\n     return false\n }\n \n let passCheck = function(myPass){\n   if((myPass.includes('123')) && (myPass.length>5)){\n     return true\n   }\n }\n \n console.log(userCheck(userEmail))\n console.log(passCheck(password))\n `.trim();\n\n\nclass Prototypes extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. Object prototypes</h3>\n              <b>Modifying prototypes</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={modyPro}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <b>Default Parameters</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={paramsd}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>2. Inheriting Methods</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={inheritingMethos}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>Prototype and Protopal Inheritance</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={proto}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>3. Polyfill</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={polyfill}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>4. What is Functional Programming?</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={code}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <h3>5. First Class Function</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={firstFun}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <b>JavaScript anonymous functions</b>\n              <br />\n              <i>\n                An anonymous function is a function without a name. An anonymous function is often not accessible\n                after its initial creation.\n              </i>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={anonymousFun}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>6. Combinators</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={combinators}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <b>Shared State</b>\n              <br />\n              Shared state is any variable, object, or memory space that exists in a shared\n              scope, or as the property of an object being passed between scopes. A shared\n              scope can include global scope or closure scopes. <br />\n              <br />\n              \n              <div style={titles}>\n                <PrismCode\n                  code={safe}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>8. dynamic_scope:</h3>\n              Lexical scope is the set of rules about how the Engine can look-up a variable and where it will\n              find it. Dynamic scope can be determined dynamically at runtime, rather than statically at authoretime.\n\n              <div style={titles}>\n                <PrismCode\n                  code={dynamicScope}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>9. Dynamic Methods:</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={METADATA}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>10. JavaScript static Method:</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={statics}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n\n              <h3>11. Super</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={supers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>Superclass Property Access</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={access}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>12. Password Enter</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={password}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Prototypes));\n"]},"metadata":{},"sourceType":"module"}