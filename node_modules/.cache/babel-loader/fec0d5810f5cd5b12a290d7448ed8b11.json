{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/ticGame.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst ReactShareSimplified = `\nimport {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n  EmailShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  GooglePlusIcon,\n  EmailIcon,\n  WhatsappIcon\n} from \"react-share\";\n\n\nclass ReactShareSimplified extends Component {\n  render() {\n    const {url,title,facebook,googlePlus,twitter,whatsapp,email,addClass,Previewemail} = this.props;\n    let {facebookClass,twitterClass,googlePlusClass,whatsappClass,emailClass} = this.props || \"shareIcon\";\n    console.log(\"iconsize\",this.props.iconSize);\n    \n    let iconSize = 32;\n    if(this.props.iconSize!==undefined){\n        iconSize = this.props.iconSize\n    }\n    \n    return (\n      <span className={addClass}>\n        {facebook && (<FacebookShareButton url={url} quote={title} style={{outline:'none'}} className={facebookClass}>\n          <FacebookIcon\n            size={iconSize}\n            round />\n        </FacebookShareButton>)}\n        \n        {googlePlus && (<GooglePlusShareButton url={url} quote={title} style={{outline:'none'}} className={googlePlusClass}>\n          <GooglePlusIcon\n            size={iconSize}\n            round />\n        </GooglePlusShareButton>)}\n        \n        {twitter && (<TwitterShareButton url={url} quote={title} style={{outline:'none'}}  className={twitterClass}>\n          <TwitterIcon\n            size={iconSize}\n            round />\n        </TwitterShareButton>)}\n        \n        {whatsapp && (<WhatsappShareButton url={url} quote={title} style={{outline:'none'}} className={whatsappClass}>\n          <WhatsappIcon\n            size={iconSize}\n            round />\n        </WhatsappShareButton>)}\n        \n        {email && (<EmailShareButton url={url} quote={title} style={{outline:'none'}} className={emailClass}>\n          <EmailIcon\n            size={iconSize}\n            round />\n        </EmailShareButton>)}\n        {Previewemail && (<EmailShareButton url={url} quote={title} style={{outline:'none'}} className={emailClass}>\n          <EmailIcon\n            size={iconSize}\n            round />\n        </EmailShareButton>)}\n      </span>\n    );\n  }\n}\nexport default ReactShareSimplified;`.trim();\nconst ShareApp = `\nimport ReactShareSimplified from './dist/ReactShareSimplified'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    const url = \"https://www.github.com\";\n    const title = \"React share simplified\";\n    return (\n      <div className=\"App\">\n        <div className=\"align-inline\" style={{marginTop:'10px'}}>\n          <span className=\"share-title\">Share: </span>\n          <ReactShareSimplified\n            url={url}\n            title={title}\n            facebook={true}\n            facebookClass=\"iconStyle\"\n            googlePlus={true}\n            googlePlusClass=\"iconStyle\"\n            twitter={true}\n            twitterClass=\"iconStyle\"\n            email={true}\n            emailClass=\"iconStyle\"\n            whatsapp={true}\n            whatsappClass=\"iconStyle\"\n            iconSize={32}\n            addClass=\"align-inline\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;`.trim();\nconst ShareAppCss = `\n.share-title {\n  justify-content: center;\n  align-self: center;\n  font-size: 17px;\n  font-family: \"Nunito\";\n  font-weight: 500;\n  margin-right: 5px;\n}\n.align-inline {\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n}\n.iconStyle {\n    margin: 0 5px 5px;\n    cursor: pointer;\n}`.trim();\nconst minMaxs = `\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div>\n    <form className={classes.container} noValidate>\n      <TextField\n        id=\"date\"\n        label=\"Birthday\"\n        type=\"date\"\n        defaultValue=\"2017-05-24\"\n        className={classes.textField}\n        inputProps={{\n          min: \"2020-10-10\"\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <p>End date</p>\n      <TextField\n        id=\"date\"\n        label=\"Birthday\"\n        type=\"date\"\n        defaultValue=\"2017-05-24\"\n        className={classes.textField}\n        inputProps={{\n          min: \"2020-10-10\"\n        }}\n      />\n    </form>\n    </div>\n  );\n}\n\nexport default App;`.trim();\nconst MoveButton = `\nconst MoveButton = (props) => {\n  return (\n      <button onClick={props.onClick}>\n          Click To Move\n      </button>\n  );\n}\n\nconst BoxOne = () => <p>Box1</p>;\n\nconst BoxTwo = () => <p>Box2</p>;\n\n\nclass App extends Component {\nstate = { positions: 0 }\n\nhandleClick = () => {\n  this.setState({ positions: (this.state.positions + 1) % 3 })\n}\n\nrender () { \nconst positions = this.state.positions;\n  return (\n      <div>\n          { positions === 0 ? <MoveButton onClick={this.handleClick}/> : ''}\n          <BoxOne />\n          { positions === 1 ? <MoveButton onClick={this.handleClick}/> : ''}\n          <BoxTwo />\n          { positions === 2 ? <MoveButton onClick={this.handleClick}/> : ''}\n      </div>\n  );\n}\n}\n\nexport default App;`.trim();\nconst slideshow = `\nimport \"./slideshow.css\";\n\nconst colors = [\"green\", \"blue\", \"yellow\"];\nconst delay = 2500;\n\nexport default function Slideshow() {\n  const [index, setIndex] = useState(0);\n  const timeoutRef = useRef(null);\n\n  function resetTimeout() {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n  }\n\n  useEffect(() => {\n    resetTimeout();\n    timeoutRef.current = setTimeout(() => setIndex((prevIndex) =>\n          prevIndex === colors.length - 1 ? 0 : prevIndex + 1\n        ), delay);\n\n    return () => {\n      resetTimeout();\n    };\n  }, [index]);\n\n  return (\n    <div className=\"slideshow\">\n      <div\n        className=\"slideshowSlider\"\n        style={{ transform: 'translate3d('$'{-index * 100}%, 0, 0)' }}\n      >\n        {colors.map((backgroundColor, index) => (\n          <div className=\"slide\" key={index} style={{ backgroundColor }}></div>\n        ))}\n      </div>\n\n      <div>\n        {colors.map((_, idx) => (\n          <div\n            className={'slideshowDot'$'{index === idx ? \" active\" : \"\"}'}\n            onClick={() => { setIndex(idx) }} />\n        ))}\n      </div>\n    </div>\n  );\n}`.trim();\nconst slideshowCss = `\n.slideshow {\n  margin: 0 auto;\n  overflow: hidden;\n  max-width: 500px;\n}\n\n.slideshowSlider {\n  white-space: nowrap;\n  transition: ease 1000ms;\n}\n\n.slide {\n  display: inline-block;\n\n  height: 400px;\n  width: 100%;\n  border-radius: 40px;\n}\n\n.slideshowDots {\n  text-align: center;\n}\n\n.slideshowDot {\n  display: inline-block;\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  background-color: #c4c4c4;\n}\n\n.slideshowDot.active {\n  background-color: #6a0dad;\n}`.trim();\n\nclass TicGame extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, \"1.Share\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"dist/ReactShareSimplified.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: ReactShareSimplified,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \"App.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: ShareApp,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, \"App.css\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: ShareAppCss,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \"2.Min-Max date\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: minMaxs,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, \"3.onClick move button\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: MoveButton,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, \"4.slideshow\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: slideshow,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, \"slideshow.css\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: slideshowCss,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(TicGame);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/ticGame.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","ReactShareSimplified","trim","ShareApp","ShareAppCss","minMaxs","MoveButton","slideshow","slideshowCss","TicGame","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst ReactShareSimplified = `\nimport {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n  EmailShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  GooglePlusIcon,\n  EmailIcon,\n  WhatsappIcon\n} from \"react-share\";\n\n\nclass ReactShareSimplified extends Component {\n  render() {\n    const {url,title,facebook,googlePlus,twitter,whatsapp,email,addClass,Previewemail} = this.props;\n    let {facebookClass,twitterClass,googlePlusClass,whatsappClass,emailClass} = this.props || \"shareIcon\";\n    console.log(\"iconsize\",this.props.iconSize);\n    \n    let iconSize = 32;\n    if(this.props.iconSize!==undefined){\n        iconSize = this.props.iconSize\n    }\n    \n    return (\n      <span className={addClass}>\n        {facebook && (<FacebookShareButton url={url} quote={title} style={{outline:'none'}} className={facebookClass}>\n          <FacebookIcon\n            size={iconSize}\n            round />\n        </FacebookShareButton>)}\n        \n        {googlePlus && (<GooglePlusShareButton url={url} quote={title} style={{outline:'none'}} className={googlePlusClass}>\n          <GooglePlusIcon\n            size={iconSize}\n            round />\n        </GooglePlusShareButton>)}\n        \n        {twitter && (<TwitterShareButton url={url} quote={title} style={{outline:'none'}}  className={twitterClass}>\n          <TwitterIcon\n            size={iconSize}\n            round />\n        </TwitterShareButton>)}\n        \n        {whatsapp && (<WhatsappShareButton url={url} quote={title} style={{outline:'none'}} className={whatsappClass}>\n          <WhatsappIcon\n            size={iconSize}\n            round />\n        </WhatsappShareButton>)}\n        \n        {email && (<EmailShareButton url={url} quote={title} style={{outline:'none'}} className={emailClass}>\n          <EmailIcon\n            size={iconSize}\n            round />\n        </EmailShareButton>)}\n        {Previewemail && (<EmailShareButton url={url} quote={title} style={{outline:'none'}} className={emailClass}>\n          <EmailIcon\n            size={iconSize}\n            round />\n        </EmailShareButton>)}\n      </span>\n    );\n  }\n}\nexport default ReactShareSimplified;`.trim();\n\nconst ShareApp = `\nimport ReactShareSimplified from './dist/ReactShareSimplified'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    const url = \"https://www.github.com\";\n    const title = \"React share simplified\";\n    return (\n      <div className=\"App\">\n        <div className=\"align-inline\" style={{marginTop:'10px'}}>\n          <span className=\"share-title\">Share: </span>\n          <ReactShareSimplified\n            url={url}\n            title={title}\n            facebook={true}\n            facebookClass=\"iconStyle\"\n            googlePlus={true}\n            googlePlusClass=\"iconStyle\"\n            twitter={true}\n            twitterClass=\"iconStyle\"\n            email={true}\n            emailClass=\"iconStyle\"\n            whatsapp={true}\n            whatsappClass=\"iconStyle\"\n            iconSize={32}\n            addClass=\"align-inline\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;`.trim();\n\nconst ShareAppCss = `\n.share-title {\n  justify-content: center;\n  align-self: center;\n  font-size: 17px;\n  font-family: \"Nunito\";\n  font-weight: 500;\n  margin-right: 5px;\n}\n.align-inline {\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n}\n.iconStyle {\n    margin: 0 5px 5px;\n    cursor: pointer;\n}`.trim();\n\nconst minMaxs = `\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div>\n    <form className={classes.container} noValidate>\n      <TextField\n        id=\"date\"\n        label=\"Birthday\"\n        type=\"date\"\n        defaultValue=\"2017-05-24\"\n        className={classes.textField}\n        inputProps={{\n          min: \"2020-10-10\"\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <p>End date</p>\n      <TextField\n        id=\"date\"\n        label=\"Birthday\"\n        type=\"date\"\n        defaultValue=\"2017-05-24\"\n        className={classes.textField}\n        inputProps={{\n          min: \"2020-10-10\"\n        }}\n      />\n    </form>\n    </div>\n  );\n}\n\nexport default App;`.trim();\n\nconst MoveButton = `\nconst MoveButton = (props) => {\n  return (\n      <button onClick={props.onClick}>\n          Click To Move\n      </button>\n  );\n}\n\nconst BoxOne = () => <p>Box1</p>;\n\nconst BoxTwo = () => <p>Box2</p>;\n\n\nclass App extends Component {\nstate = { positions: 0 }\n\nhandleClick = () => {\n  this.setState({ positions: (this.state.positions + 1) % 3 })\n}\n\nrender () { \nconst positions = this.state.positions;\n  return (\n      <div>\n          { positions === 0 ? <MoveButton onClick={this.handleClick}/> : ''}\n          <BoxOne />\n          { positions === 1 ? <MoveButton onClick={this.handleClick}/> : ''}\n          <BoxTwo />\n          { positions === 2 ? <MoveButton onClick={this.handleClick}/> : ''}\n      </div>\n  );\n}\n}\n\nexport default App;`.trim();\n\nconst slideshow = `\nimport \"./slideshow.css\";\n\nconst colors = [\"green\", \"blue\", \"yellow\"];\nconst delay = 2500;\n\nexport default function Slideshow() {\n  const [index, setIndex] = useState(0);\n  const timeoutRef = useRef(null);\n\n  function resetTimeout() {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n  }\n\n  useEffect(() => {\n    resetTimeout();\n    timeoutRef.current = setTimeout(() => setIndex((prevIndex) =>\n          prevIndex === colors.length - 1 ? 0 : prevIndex + 1\n        ), delay);\n\n    return () => {\n      resetTimeout();\n    };\n  }, [index]);\n\n  return (\n    <div className=\"slideshow\">\n      <div\n        className=\"slideshowSlider\"\n        style={{ transform: 'translate3d('$'{-index * 100}%, 0, 0)' }}\n      >\n        {colors.map((backgroundColor, index) => (\n          <div className=\"slide\" key={index} style={{ backgroundColor }}></div>\n        ))}\n      </div>\n\n      <div>\n        {colors.map((_, idx) => (\n          <div\n            className={'slideshowDot'$'{index === idx ? \" active\" : \"\"}'}\n            onClick={() => { setIndex(idx) }} />\n        ))}\n      </div>\n    </div>\n  );\n}`.trim();\n\nconst slideshowCss = `\n.slideshow {\n  margin: 0 auto;\n  overflow: hidden;\n  max-width: 500px;\n}\n\n.slideshowSlider {\n  white-space: nowrap;\n  transition: ease 1000ms;\n}\n\n.slide {\n  display: inline-block;\n\n  height: 400px;\n  width: 100%;\n  border-radius: 40px;\n}\n\n.slideshowDots {\n  text-align: center;\n}\n\n.slideshowDot {\n  display: inline-block;\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  background-color: #c4c4c4;\n}\n\n.slideshowDot.active {\n  background-color: #6a0dad;\n}`.trim();\n\n\nclass TicGame extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1.Share</h3>\n              <b>dist/ReactShareSimplified.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={ReactShareSimplified}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>App.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={ShareApp}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <h3>App.css</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={ShareAppCss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <h3>2.Min-Max date</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={minMaxs}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <h3>3.onClick move button</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={MoveButton}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <h3>4.slideshow</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={slideshow}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>slideshow.css</b>\n              <div style={titles}>\n                <PrismCode\n                  code={slideshowCss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(TicGame));\n"]},"metadata":{},"sourceType":"module"}