{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/Redux/deep/expenseTraMern.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst curd = `\n//components/User.js\nexport const User = ({ name, email, id, onEdit, onDelete }) => {\n  const [isEdit, setIsEdit] = useState(false);\n\n  const handleEdit = () => { setIsEdit(!isEdit); };\n\n  const handleDelete = () => { onDelete(id); };\n\n  const handleOnEditSubmit = (e) => {\n    e.preventDefault();\n    onEdit(id, e.target.name.value, e.target.email.value);\n    setIsEdit(!isEdit);\n  };\n\n  return (\n    <div>\n      {isEdit ? (\n        <form onSubmit={handleOnEditSubmit}>\n          <input placeholder=\"Name\" name=\"name\" defaultValue={name} />\n          <input placeholder=\"Email\" name=\"email\" defaultValue={email} />\n          <button onSubmit={handleOnEditSubmit}>Save</button>\n        </form>\n      ) : (\n        <div className=\"user\">\n          <span className=\"user-name\">{name}</span>\n          <span className=\"user-email\">{email}</span>\n          <div>\n            <button onClick={handleEdit}>Edit</button>\n            <button onClick={handleDelete}>Delete</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n\n\n//components/AddUser.js\nexport const AddUser = ({ onAdd }) => {\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    onAdd(e.target.name.value, e.target.email.value);\n    e.target.name.value = \"\";\n    e.target.email.value = \"\";\n  };\n\n  return (\n    <form onSubmit={handleOnSubmit}>\n      <h3>Add User</h3>\n      <input placeholder=\"Name\" name=\"name\" />\n      <input placeholder=\"Email\" name=\"email\" />\n      <button onSubmit={handleOnSubmit}>Add</button>\n      <hr />\n    </form>\n  );\n};\n\n\n//App.js\nimport { User } from \"./components/User\";\nimport { AddUser } from \"./components/AddUser\";\n\nexport default function App() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    await fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((data) => setUsers(data))\n      .catch((error) => console.log(error));\n  };\n\n  const onAdd = async (name, email) => {\n    await fetch(\"https://jsonplaceholder.typicode.com/users\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: name,\n        email: email\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    })\n      .then((res) => {\n        if (res.status !== 201) {\n          return;\n        } else {\n          return res.json();\n        }\n      })\n      .then((data) => {\n        setUsers((users) => [...users, data]);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const onEdit = async (id, name, email) => {\n    await fetch('https://jsonplaceholder.typicode.com/users/'$'{id}', {\n    method: \"PUT\",\n      body: JSON.stringify({\n        name: name,\n        email: email\n      }),\n        headers: {\n  \"Content-type\": \"application/json; charset=UTF-8\"\n}\n    })\n      .then((res) => {\n  if (res.status !== 200) {\n    return;\n  } else {\n    return res.json();\n  }\n})\n  .then((data) => {\n    const updatedUsers = users.map((user) => {\n      if (user.id === id) {\n        user.name = name;\n        user.email = email;\n      }\n\n      return user;\n    });\n\n    setUsers((users) => updatedUsers);\n  })\n  .catch((error) => console.log(error));\n  };\n\nconst onDelete = async (id) => {\n  await fetch('https://jsonplaceholder.typicode.com/users/'$'{id}', {\n    method: \"DELETE\"\n  })\n    .then((res) => {\n      if (res.status !== 200) {\n        return;\n      } else {\n        setUsers(\n          users.filter((user) => {\n            return user.id !== id;\n          })\n        );\n      }\n    })\n    .catch((error) => console.log(error));\n};\n\nreturn (\n  <div className=\"App\">\n    <h1>Users</h1>\n    <AddUser onAdd={onAdd} />\n    {users.map((user) => (\n      <User\n        id={user.id}\n        key={user.id}\n        name={user.name}\n        email={user.email}\n        onEdit={onEdit}\n        onDelete={onDelete}\n      />\n    ))}\n  </div>\n);\n}\n\n`.trim(); // const server = ``.trim();\n\nclass ExpenseTraMern extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"React Curd Json Placeholder\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: curd,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(ExpenseTraMern);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/Redux/deep/expenseTraMern.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","curd","trim","ExpenseTraMern","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,EAAkCC,IAAlC,QAA8C,mBAA9C;AAEA,OAAO,0BAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAGA,MAAMC,MAAM,GAAG;AAAEC,EAAAA,eAAe,EAAE,SAAnB;AAA8BC,EAAAA,OAAO,EAAE,KAAvC;AAA8CC,EAAAA,QAAQ,EAAE;AAAxD,CAAf;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH;AAELN,IAAAA,OAAO,EAAEG,KAAK,CAACG,OAAN,CAAc,CAAd;AAFJ,GADgB;AAKvBC,EAAAA,QAAQ,EAAE;AACRF,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADA,GALa;AAQvBE,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF;AARY,CAAL,CAApB;;AAaA,MAAMC,IAAI,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAD,CA2KXC,IA3KW,EAAb,C,CA6KA;;AAGA,MAAMC,cAAN,SAA6BtB,SAA7B,CAAuC;AACrCuB,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,UAAU,CAAC,MAAMvB,KAAK,CAACwB,YAAN,EAAP,EAA6B,CAA7B,CAAV;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,WACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAED,OAAO,CAACb,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CADF,CADF,CADF,EAME,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEa,OAAO,CAACb,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAEE;AAAK,MAAA,KAAK,EAAEN,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEY,IADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF,CADF,CANF,CADF;AAuBD;;AA7BoC;;AAgCvC,eAAgBhB,UAAU,CAACQ,MAAD,CAAV,CAAmBU,cAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst curd = `\n//components/User.js\nexport const User = ({ name, email, id, onEdit, onDelete }) => {\n  const [isEdit, setIsEdit] = useState(false);\n\n  const handleEdit = () => { setIsEdit(!isEdit); };\n\n  const handleDelete = () => { onDelete(id); };\n\n  const handleOnEditSubmit = (e) => {\n    e.preventDefault();\n    onEdit(id, e.target.name.value, e.target.email.value);\n    setIsEdit(!isEdit);\n  };\n\n  return (\n    <div>\n      {isEdit ? (\n        <form onSubmit={handleOnEditSubmit}>\n          <input placeholder=\"Name\" name=\"name\" defaultValue={name} />\n          <input placeholder=\"Email\" name=\"email\" defaultValue={email} />\n          <button onSubmit={handleOnEditSubmit}>Save</button>\n        </form>\n      ) : (\n        <div className=\"user\">\n          <span className=\"user-name\">{name}</span>\n          <span className=\"user-email\">{email}</span>\n          <div>\n            <button onClick={handleEdit}>Edit</button>\n            <button onClick={handleDelete}>Delete</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n\n\n//components/AddUser.js\nexport const AddUser = ({ onAdd }) => {\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    onAdd(e.target.name.value, e.target.email.value);\n    e.target.name.value = \"\";\n    e.target.email.value = \"\";\n  };\n\n  return (\n    <form onSubmit={handleOnSubmit}>\n      <h3>Add User</h3>\n      <input placeholder=\"Name\" name=\"name\" />\n      <input placeholder=\"Email\" name=\"email\" />\n      <button onSubmit={handleOnSubmit}>Add</button>\n      <hr />\n    </form>\n  );\n};\n\n\n//App.js\nimport { User } from \"./components/User\";\nimport { AddUser } from \"./components/AddUser\";\n\nexport default function App() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    await fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((data) => setUsers(data))\n      .catch((error) => console.log(error));\n  };\n\n  const onAdd = async (name, email) => {\n    await fetch(\"https://jsonplaceholder.typicode.com/users\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: name,\n        email: email\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    })\n      .then((res) => {\n        if (res.status !== 201) {\n          return;\n        } else {\n          return res.json();\n        }\n      })\n      .then((data) => {\n        setUsers((users) => [...users, data]);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const onEdit = async (id, name, email) => {\n    await fetch('https://jsonplaceholder.typicode.com/users/'$'{id}', {\n    method: \"PUT\",\n      body: JSON.stringify({\n        name: name,\n        email: email\n      }),\n        headers: {\n  \"Content-type\": \"application/json; charset=UTF-8\"\n}\n    })\n      .then((res) => {\n  if (res.status !== 200) {\n    return;\n  } else {\n    return res.json();\n  }\n})\n  .then((data) => {\n    const updatedUsers = users.map((user) => {\n      if (user.id === id) {\n        user.name = name;\n        user.email = email;\n      }\n\n      return user;\n    });\n\n    setUsers((users) => updatedUsers);\n  })\n  .catch((error) => console.log(error));\n  };\n\nconst onDelete = async (id) => {\n  await fetch('https://jsonplaceholder.typicode.com/users/'$'{id}', {\n    method: \"DELETE\"\n  })\n    .then((res) => {\n      if (res.status !== 200) {\n        return;\n      } else {\n        setUsers(\n          users.filter((user) => {\n            return user.id !== id;\n          })\n        );\n      }\n    })\n    .catch((error) => console.log(error));\n};\n\nreturn (\n  <div className=\"App\">\n    <h1>Users</h1>\n    <AddUser onAdd={onAdd} />\n    {users.map((user) => (\n      <User\n        id={user.id}\n        key={user.id}\n        name={user.name}\n        email={user.email}\n        onEdit={onEdit}\n        onDelete={onDelete}\n      />\n    ))}\n  </div>\n);\n}\n\n`.trim();\n\n// const server = ``.trim();\n\n\nclass ExpenseTraMern extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>React Curd Json Placeholder</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={curd}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(ExpenseTraMern));\n"]},"metadata":{},"sourceType":"module"}