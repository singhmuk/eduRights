{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/angularjsd/deepAngularjs/validations.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst app = `\n//app.js\nvar app = angular.module('myApp', []);\napp.controller('validateCtrl', validateCtrl);\n  \n  function validateCtrl($scope) {\n      $scope.user = 'John Doe';\n      $scope.email = 'john.doe@gmail.com';\n  }\n  \n  \n//indes.html\n  <body ng-controller=\"validateCtrl\">\n    <form name=\"myForm\" novalidate>\n    <p>Username:<br>\n    <input type=\"text\" name=\"user\" ng-model=\"user\" required>\n        <span style=\"color:red\" ng-show=\"myForm.user.$dirty && myForm.user.$invalid\">\n        <span ng-show=\"myForm.user.$error.required\">Username is required.</span>\n        </span>\n    </p>\n    \n    <p>Email:<br>\n    <input type=\"email\" name=\"email\" ng-model=\"email\" required>\n        <span style=\"color:red\" ng-show=\"myForm.email.$dirty && myForm.email.$invalid\">\n        <span ng-show=\"myForm.email.$error.required\">Email is required.</span>\n        <span ng-show=\"myForm.email.$error.email\">Invalid email address.</span>\n        </span>\n    </p>\n    \n    <p>\n        <input type=\"submit\"\n        ng-disabled=\"myForm.user.$dirty && myForm.user.$invalid ||  \n        myForm.email.$dirty && myForm.email.$invalid\">\n    </p>\n    \n    </form>\n  </body>\n  `.trim();\n\nclass Validations extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Validation\"), \"Form State and Input State\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), \"AngularJS is constantly updating the state of both the form and the input fields.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), \"Input fields have the following states:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), \"$untouched The field has not been touched yet\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), \"$touched The field has been touched\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), \"$pristine The field has not been modified yet\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), \"$dirty The field has been modified\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), \"$invalid The field content is not valid\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), \"$valid The field content is valid\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), \"They are all properties of the input field, and are either true or false.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), \"Forms have the following states:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), \"$pristine No fields have been modified yet\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), \"$dirty One or more have been modified\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), \"$invalid The form content is not valid\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), \"$valid The form content is valid\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), \"$submitted The form is submitted\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), \"They are all properties of the form, and are either true or false.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"app.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: app,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(Validations);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/angularjsd/deepAngularjs/validations.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","app","trim","Validations","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = {backgroundColor:'#F0F8FF', padding:'1px', fontSize:'16px'}\n\nconst styles = theme => ({\n  paper: {\n      margin: theme.spacing(1),\n      padding: theme.spacing(1)\n  },\n  smMargin: {\n      margin: theme.spacing(1)\n  },\n  actionDiv: {\n      textAlign: \"center\"\n  }\n})\n\n\nconst app = `\n//app.js\nvar app = angular.module('myApp', []);\napp.controller('validateCtrl', validateCtrl);\n  \n  function validateCtrl($scope) {\n      $scope.user = 'John Doe';\n      $scope.email = 'john.doe@gmail.com';\n  }\n  \n  \n//indes.html\n  <body ng-controller=\"validateCtrl\">\n    <form name=\"myForm\" novalidate>\n    <p>Username:<br>\n    <input type=\"text\" name=\"user\" ng-model=\"user\" required>\n        <span style=\"color:red\" ng-show=\"myForm.user.$dirty && myForm.user.$invalid\">\n        <span ng-show=\"myForm.user.$error.required\">Username is required.</span>\n        </span>\n    </p>\n    \n    <p>Email:<br>\n    <input type=\"email\" name=\"email\" ng-model=\"email\" required>\n        <span style=\"color:red\" ng-show=\"myForm.email.$dirty && myForm.email.$invalid\">\n        <span ng-show=\"myForm.email.$error.required\">Email is required.</span>\n        <span ng-show=\"myForm.email.$error.email\">Invalid email address.</span>\n        </span>\n    </p>\n    \n    <p>\n        <input type=\"submit\"\n        ng-disabled=\"myForm.user.$dirty && myForm.user.$invalid ||  \n        myForm.email.$dirty && myForm.email.$invalid\">\n    </p>\n    \n    </form>\n  </body>\n  `.trim()\n\n\nclass Validations extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n            <Grid item xs={2}>\n                <Paper className={classes.paper}>\n                    <h4><Sidebar /></h4>\n                </Paper>\n            </Grid>\n<Grid item xs={10}>\n<Paper className={classes.paper}>\n<List>\n      <h3>Validation</h3>\n      Form State and Input State<br/>\nAngularJS is constantly updating the state of both the form and the input fields.\n<br/>\n<br/>\nInput fields have the following states:\n<br/>\n<br/>\n$untouched The field has not been touched yet<br/>\n$touched The field has been touched<br/>\n$pristine The field has not been modified yet<br/>\n$dirty The field has been modified<br/>\n$invalid The field content is not valid<br/>\n$valid The field content is valid<br/>\nThey are all properties of the input field, and are either true or false.<br/>\n<br/>\nForms have the following states:<br/>\n<br/>\n$pristine No fields have been modified yet<br/>\n$dirty One or more have been modified<br/>\n$invalid The form content is not valid<br/>\n$valid The form content is valid<br/>\n$submitted The form is submitted<br/>\nThey are all properties of the form, and are either true or false.\n<br/>\n      <b>app.js</b>\n      <div style={titles}>\n      <PrismCode\n        code={app}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      </List>\n      </Paper>\n      </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Validations));\n"]},"metadata":{},"sourceType":"module"}