{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/angularjsd/angular 12/multiCheck.js\";\nimport React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport \"../../ReactJs/styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../../ReactJs/prismCode\";\nconst titles = {\n  backgroundColor: \"#F0F8FF\",\n  padding: \"1px\",\n  fontSize: \"16px\"\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst mulSelects = `\n//html\n<li *ngFor=\"let item of list\">\n<input type=\"checkbox\" [(ngModel)] = \"item.checked\">\n  {{item.name}}\n</li>\n{{this.result | json}}\n\n\nexport class AppComponent {\n  list: any[];\n\n  constructor(private http: HttpClient){}\n  ngOnInit() {\n    this.http.get('https://jsonplaceholder.typicode.com/users')\n        .subscribe(val => {\n          this.list = val\n        })\n    }\n\n  get result() {\n    return this.list.filter(item => item.checked);\n  }\n\n}\n`.trim();\nconst multiCheck = `\n//in app.module => import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray} from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  template: '\n  < form[formGroup]=\"form\"(ngSubmit) = \"submit()\" >\n    <div * ngFor=\"let web of websiteList\" >\n      <input type=\"checkbox\" [value] = \"web.id\"(change) = \"onCheckboxChange($event)\" />\n        {{web.name}}\n      </div >\n\n  <button type=\"submit\" [disabled] = \"!form.valid\"> Submit</button>\n    </form>\n',})\n\nexport class AppComponent {\n form: FormGroup;\n  websiteList: any = [\n    { id: 1, name: 'ItSolutionStuff.com' },\n    { id: 2, name: 'HDTuto.com' },\n    { id: 3, name: 'NiceSnippets.com' }\n  ];\n\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group({\n      website: this.formBuilder.array([], [Validators.required])\n    })\n  }\n\n  onCheckboxChange(e) {\n    const website = this.form.get('website') as FormArray;\n\n    if (e.target.checked) {\n      website.push(new FormControl(e.target.value));\n    } else {\n       const index = website.controls.findIndex(x => x.value === e.target.value);\n       website.removeAt(index);\n    }\n  }\n\n  submit(){\n    console.log(this.form.value);\n  }\n}\n`.trim();\nconst dropdawn = `\n//html\n<select #select (change) = \"onChange()\">\n    <option>Select</option>\n      <option *ngFor=\"let item of this.dataList; let i = index\"\n              value = \"{{item.name}}\" [selected] = \"i == 0\">\n        {{item.name}}\n      </option >\n    </select >\n\nexport class AppComponent {\n  dataList: Array<any> = [];\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(){\n    this.http.get('https://jsonplaceholder.typicode.com/users')\n        .subscribe(val => {\n          this.dataList = val\n        })\n    }\n\n  onChange(){\n    console.log('sss', this.dataList)\n  }\n}`.trim();\nconst dropForm = `\nimport { Component } from '@angular/core';\nimport { FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-root',\n  template: '\n  <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\n    <select (change) = \"changeCity($event)\" formControlName=\"cityName\">\n              <option value=\"\">Choose your city</option>\n              <option *ngFor=\"let city of City\" [ngValue]=\"city\">{{city}}</option>\n            </select>\n\n            < !--error block-- >\n  <div *ngIf=\"isSubmitted && cityName.errors?.required\">\n    Please enter your city name\n  </div>\n\n  <button type=\"submit\">Submit</button>\n      </form >',\n})\n\nexport class AppComponent {\n  isSubmitted = false;\n  City: any = ['Florida', 'South Dakota', 'Tennessee', 'Michigan']\n\n  constructor(public fb: FormBuilder) { }\n\n  //Form\n  registrationForm = this.fb.group({\n    cityName: ['', [Validators.required]]\n  })\n\n  changeCity(e) {\n    console.log(e.value)\n    this.cityName.setValue(e.target.value)\n  }\n\n  get cityName() {\n    return this.registrationForm.get('cityName');\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n    if (!this.registrationForm.valid) {\n      return false;\n    } else {\n      alert(JSON.stringify(this.registrationForm.value))\n    }\n  }\n}`.trim();\nconst pipes = `\n@Component({\n  selector: 'app-root',\n  template: '\n    <div> {{product | json}}</div>\n    <div>Birthdate: {{(product?.birthdate | date:'longDate') | uppercase}}</div>\n    <label>Price: </label>{{product.price | currency: 'USD': 'symbol'}}\n  ',\n})\n\nexport class AppComponent {\n  product = {\n    name: 'frimfram',\n    price: 42,\n    birthdate:  new Date(1970, 1, 25)\n  };\n}`.trim();\nconst currency = `\n@Component({\n  selector: 'app-root',\n  template: '\n      <div>{{money | currency: 'JPY': 'symbol'}}</div >\n      <div>{{money | currency:'USD':'symbol'}}</div>\n      <div>{{money | currency:'INR':'symbol'}}</div>\n      <div>{{money | currency:'JPY':'' }}å††</div>\n    ',\n})\n\nexport class AppComponent {\n\tmoney = 1980;\n}`.trim();\nconst switching = `\ninterface name{\n  name:string;\n  city:string;\n  state:string;\n  country:string;\n  street:string;\n}\n\nfunction address(obj:name){\n  switch(obj.name){\n    case 'Mukesh':\n      console.log(obj.name)\n    case 'Gr. Noida':\n      console.log(obj.city)\n    case 'UP':\n      console.log(obj.state)\n    case 'India':\n      console.log(obj.country)\n    case 'Sanjay Vihar':\n      console.log(obj.street)\n    break;\n    default:\n      console.log('Sorry')\n  }\n}\n\nconst obj2={name:'Mukesh', city:'Gr. Noida', state:'UP', country:'India',street:'Sanjay Vihar'};\naddress(obj2)\n}`.trim();\n\nclass MultiCheck extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Multi Select\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: mulSelects,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"MultiCheck\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: multiCheck,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Dropdown\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: dropdawn,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Dropdown Form\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: dropForm,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Pipes\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: pipes,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"Currency converter\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: currency,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"Switch case\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: switching,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(MultiCheck);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/angularjsd/angular 12/multiCheck.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","mulSelects","trim","multiCheck","dropdawn","dropForm","pipes","currency","switching","MultiCheck","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport \"../../ReactJs/styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../../ReactJs/prismCode\";\n\nconst titles = { backgroundColor: \"#F0F8FF\", padding: \"1px\", fontSize: \"16px\" };\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n});\n\nconst mulSelects = `\n//html\n<li *ngFor=\"let item of list\">\n<input type=\"checkbox\" [(ngModel)] = \"item.checked\">\n  {{item.name}}\n</li>\n{{this.result | json}}\n\n\nexport class AppComponent {\n  list: any[];\n\n  constructor(private http: HttpClient){}\n  ngOnInit() {\n    this.http.get('https://jsonplaceholder.typicode.com/users')\n        .subscribe(val => {\n          this.list = val\n        })\n    }\n\n  get result() {\n    return this.list.filter(item => item.checked);\n  }\n\n}\n`.trim();\n\nconst multiCheck = `\n//in app.module => import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray} from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  template: '\n  < form[formGroup]=\"form\"(ngSubmit) = \"submit()\" >\n    <div * ngFor=\"let web of websiteList\" >\n      <input type=\"checkbox\" [value] = \"web.id\"(change) = \"onCheckboxChange($event)\" />\n        {{web.name}}\n      </div >\n\n  <button type=\"submit\" [disabled] = \"!form.valid\"> Submit</button>\n    </form>\n',})\n\nexport class AppComponent {\n form: FormGroup;\n  websiteList: any = [\n    { id: 1, name: 'ItSolutionStuff.com' },\n    { id: 2, name: 'HDTuto.com' },\n    { id: 3, name: 'NiceSnippets.com' }\n  ];\n\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group({\n      website: this.formBuilder.array([], [Validators.required])\n    })\n  }\n\n  onCheckboxChange(e) {\n    const website = this.form.get('website') as FormArray;\n\n    if (e.target.checked) {\n      website.push(new FormControl(e.target.value));\n    } else {\n       const index = website.controls.findIndex(x => x.value === e.target.value);\n       website.removeAt(index);\n    }\n  }\n\n  submit(){\n    console.log(this.form.value);\n  }\n}\n`.trim();\n\nconst dropdawn = `\n//html\n<select #select (change) = \"onChange()\">\n    <option>Select</option>\n      <option *ngFor=\"let item of this.dataList; let i = index\"\n              value = \"{{item.name}}\" [selected] = \"i == 0\">\n        {{item.name}}\n      </option >\n    </select >\n\nexport class AppComponent {\n  dataList: Array<any> = [];\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(){\n    this.http.get('https://jsonplaceholder.typicode.com/users')\n        .subscribe(val => {\n          this.dataList = val\n        })\n    }\n\n  onChange(){\n    console.log('sss', this.dataList)\n  }\n}`.trim();\n\nconst dropForm = `\nimport { Component } from '@angular/core';\nimport { FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-root',\n  template: '\n  <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\n    <select (change) = \"changeCity($event)\" formControlName=\"cityName\">\n              <option value=\"\">Choose your city</option>\n              <option *ngFor=\"let city of City\" [ngValue]=\"city\">{{city}}</option>\n            </select>\n\n            < !--error block-- >\n  <div *ngIf=\"isSubmitted && cityName.errors?.required\">\n    Please enter your city name\n  </div>\n\n  <button type=\"submit\">Submit</button>\n      </form >',\n})\n\nexport class AppComponent {\n  isSubmitted = false;\n  City: any = ['Florida', 'South Dakota', 'Tennessee', 'Michigan']\n\n  constructor(public fb: FormBuilder) { }\n\n  //Form\n  registrationForm = this.fb.group({\n    cityName: ['', [Validators.required]]\n  })\n\n  changeCity(e) {\n    console.log(e.value)\n    this.cityName.setValue(e.target.value)\n  }\n\n  get cityName() {\n    return this.registrationForm.get('cityName');\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n    if (!this.registrationForm.valid) {\n      return false;\n    } else {\n      alert(JSON.stringify(this.registrationForm.value))\n    }\n  }\n}`.trim();\n\nconst pipes = `\n@Component({\n  selector: 'app-root',\n  template: '\n    <div> {{product | json}}</div>\n    <div>Birthdate: {{(product?.birthdate | date:'longDate') | uppercase}}</div>\n    <label>Price: </label>{{product.price | currency: 'USD': 'symbol'}}\n  ',\n})\n\nexport class AppComponent {\n  product = {\n    name: 'frimfram',\n    price: 42,\n    birthdate:  new Date(1970, 1, 25)\n  };\n}`.trim();\n\nconst currency = `\n@Component({\n  selector: 'app-root',\n  template: '\n      <div>{{money | currency: 'JPY': 'symbol'}}</div >\n      <div>{{money | currency:'USD':'symbol'}}</div>\n      <div>{{money | currency:'INR':'symbol'}}</div>\n      <div>{{money | currency:'JPY':'' }}å††</div>\n    ',\n})\n\nexport class AppComponent {\n\tmoney = 1980;\n}`.trim();\n\nconst switching = `\ninterface name{\n  name:string;\n  city:string;\n  state:string;\n  country:string;\n  street:string;\n}\n\nfunction address(obj:name){\n  switch(obj.name){\n    case 'Mukesh':\n      console.log(obj.name)\n    case 'Gr. Noida':\n      console.log(obj.city)\n    case 'UP':\n      console.log(obj.state)\n    case 'India':\n      console.log(obj.country)\n    case 'Sanjay Vihar':\n      console.log(obj.street)\n    break;\n    default:\n      console.log('Sorry')\n  }\n}\n\nconst obj2={name:'Mukesh', city:'Gr. Noida', state:'UP', country:'India',street:'Sanjay Vihar'};\naddress(obj2)\n}`.trim();\n\nclass MultiCheck extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4>\n              <Sidebar />\n            </h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Multi Select</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={mulSelects}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <h3>MultiCheck</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={multiCheck}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <h3>Dropdown</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={dropdawn}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <h3>Dropdown Form</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={dropForm}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Pipes</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={pipes}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Currency converter</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={currency}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Switch case</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={switching}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(MultiCheck);\n"]},"metadata":{},"sourceType":"module"}