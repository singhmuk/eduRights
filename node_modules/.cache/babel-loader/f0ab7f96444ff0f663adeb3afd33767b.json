{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var ReactShareSimplified=\"\\nimport {\\n  FacebookShareButton,\\n  GooglePlusShareButton,\\n  TwitterShareButton,\\n  WhatsappShareButton,\\n  EmailShareButton,\\n  FacebookIcon,\\n  TwitterIcon,\\n  GooglePlusIcon,\\n  EmailIcon,\\n  WhatsappIcon\\n} from \\\"react-share\\\";\\n\\n\\nclass ReactShareSimplified extends Component {\\n  render() {\\n    const {url,title,facebook,googlePlus,twitter,whatsapp,email,addClass,Previewemail} = this.props;\\n    let {facebookClass,twitterClass,googlePlusClass,whatsappClass,emailClass} = this.props || \\\"shareIcon\\\";\\n    console.log(\\\"iconsize\\\",this.props.iconSize);\\n    \\n    let iconSize = 32;\\n    if(this.props.iconSize!==undefined){\\n        iconSize = this.props.iconSize\\n    }\\n    \\n    return (\\n      <span className={addClass}>\\n        {facebook && (<FacebookShareButton url={url} quote={title} style={{outline:'none'}} className={facebookClass}>\\n          <FacebookIcon\\n            size={iconSize}\\n            round />\\n        </FacebookShareButton>)}\\n        \\n        {googlePlus && (<GooglePlusShareButton url={url} quote={title} style={{outline:'none'}} className={googlePlusClass}>\\n          <GooglePlusIcon\\n            size={iconSize}\\n            round />\\n        </GooglePlusShareButton>)}\\n        \\n        {twitter && (<TwitterShareButton url={url} quote={title} style={{outline:'none'}}  className={twitterClass}>\\n          <TwitterIcon\\n            size={iconSize}\\n            round />\\n        </TwitterShareButton>)}\\n        \\n        {whatsapp && (<WhatsappShareButton url={url} quote={title} style={{outline:'none'}} className={whatsappClass}>\\n          <WhatsappIcon\\n            size={iconSize}\\n            round />\\n        </WhatsappShareButton>)}\\n        \\n        {email && (<EmailShareButton url={url} quote={title} style={{outline:'none'}} className={emailClass}>\\n          <EmailIcon\\n            size={iconSize}\\n            round />\\n        </EmailShareButton>)}\\n        {Previewemail && (<EmailShareButton url={url} quote={title} style={{outline:'none'}} className={emailClass}>\\n          <EmailIcon\\n            size={iconSize}\\n            round />\\n        </EmailShareButton>)}\\n      </span>\\n    );\\n  }\\n}\\nexport default ReactShareSimplified;\".trim();var ShareApp=\"\\nimport ReactShareSimplified from './dist/ReactShareSimplified'\\nimport './App.css';\\n\\nclass App extends Component {\\n  render() {\\n    const url = \\\"https://www.github.com\\\";\\n    const title = \\\"React share simplified\\\";\\n    return (\\n      <div className=\\\"App\\\">\\n        <div className=\\\"align-inline\\\" style={{marginTop:'10px'}}>\\n          <span className=\\\"share-title\\\">Share: </span>\\n          <ReactShareSimplified\\n            url={url}\\n            title={title}\\n            facebook={true}\\n            facebookClass=\\\"iconStyle\\\"\\n            googlePlus={true}\\n            googlePlusClass=\\\"iconStyle\\\"\\n            twitter={true}\\n            twitterClass=\\\"iconStyle\\\"\\n            email={true}\\n            emailClass=\\\"iconStyle\\\"\\n            whatsapp={true}\\n            whatsappClass=\\\"iconStyle\\\"\\n            iconSize={32}\\n            addClass=\\\"align-inline\\\"\\n          />\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\".trim();var ShareAppCss=\"\\n.share-title {\\n  justify-content: center;\\n  align-self: center;\\n  font-size: 17px;\\n  font-family: \\\"Nunito\\\";\\n  font-weight: 500;\\n  margin-right: 5px;\\n}\\n.align-inline {\\n  display: flex;\\n  flex: 1;\\n  flex-direction: row;\\n}\\n.iconStyle {\\n    margin: 0 5px 5px;\\n    cursor: pointer;\\n}\".trim();var minMaxs=\"\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport TextField from '@material-ui/core/TextField';\\n\\nconst useStyles = makeStyles((theme) => ({\\n  container: {\\n    display: 'flex',\\n    flexWrap: 'wrap',\\n  },\\n  textField: {\\n    marginLeft: theme.spacing(1),\\n    marginRight: theme.spacing(1),\\n    width: 200,\\n  },\\n}));\\n\\nfunction App() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div>\\n    <form className={classes.container} noValidate>\\n      <TextField\\n        id=\\\"date\\\"\\n        label=\\\"Birthday\\\"\\n        type=\\\"date\\\"\\n        defaultValue=\\\"2017-05-24\\\"\\n        className={classes.textField}\\n        inputProps={{\\n          min: \\\"2020-10-10\\\"\\n        }}\\n        InputLabelProps={{\\n          shrink: true,\\n        }}\\n      />\\n      <p>End date</p>\\n      <TextField\\n        id=\\\"date\\\"\\n        label=\\\"Birthday\\\"\\n        type=\\\"date\\\"\\n        defaultValue=\\\"2017-05-24\\\"\\n        className={classes.textField}\\n        inputProps={{\\n          min: \\\"2020-10-10\\\"\\n        }}\\n      />\\n    </form>\\n    </div>\\n  );\\n}\\n\\nexport default App;\".trim();var MoveButton=\"\\nconst MoveButton = (props) => {\\n  return (\\n      <button onClick={props.onClick}>\\n          Click To Move\\n      </button>\\n  );\\n}\\n\\nconst BoxOne = () => <p>Box1</p>;\\n\\nconst BoxTwo = () => <p>Box2</p>;\\n\\n\\nclass App extends Component {\\nstate = { positions: 0 }\\n\\nhandleClick = () => {\\n  this.setState({ positions: (this.state.positions + 1) % 3 })\\n}\\n\\nrender () { \\nconst positions = this.state.positions;\\n  return (\\n      <div>\\n          { positions === 0 ? <MoveButton onClick={this.handleClick}/> : ''}\\n          <BoxOne />\\n          { positions === 1 ? <MoveButton onClick={this.handleClick}/> : ''}\\n          <BoxTwo />\\n          { positions === 2 ? <MoveButton onClick={this.handleClick}/> : ''}\\n      </div>\\n  );\\n}\\n}\\n\\nexport default App;\".trim();var slideshow=\"\\nimport \\\"./slideshow.css\\\";\\n\\nconst colors = [\\\"green\\\", \\\"blue\\\", \\\"yellow\\\"];\\nconst delay = 2500;\\n\\nexport default function Slideshow() {\\n  const [index, setIndex] = useState(0);\\n  const timeoutRef = useRef(null);\\n\\n  function resetTimeout() {\\n    if (timeoutRef.current) {\\n      clearTimeout(timeoutRef.current);\\n    }\\n  }\\n\\n  useEffect(() => {\\n    resetTimeout();\\n    timeoutRef.current = setTimeout(() => setIndex((prevIndex) =>\\n          prevIndex === colors.length - 1 ? 0 : prevIndex + 1\\n        ), delay);\\n\\n    return () => {\\n      resetTimeout();\\n    };\\n  }, [index]);\\n\\n  return (\\n    <div className=\\\"slideshow\\\">\\n      <div\\n        className=\\\"slideshowSlider\\\"\\n        style={{ transform: 'translate3d('$'{-index * 100}%, 0, 0)' }}\\n      >\\n        {colors.map((backgroundColor, index) => (\\n          <div className=\\\"slide\\\" key={index} style={{ backgroundColor }}></div>\\n        ))}\\n      </div>\\n\\n      <div>\\n        {colors.map((_, idx) => (\\n          <div\\n            className={'slideshowDot'$'{index === idx ? \\\" active\\\" : \\\"\\\"}'}\\n            onClick={() => { setIndex(idx) }} />\\n        ))}\\n      </div>\\n    </div>\\n  );\\n}\".trim();var slideshowCss=\"\\n.slideshow {\\n  margin: 0 auto;\\n  overflow: hidden;\\n  max-width: 500px;\\n}\\n\\n.slideshowSlider {\\n  white-space: nowrap;\\n  transition: ease 1000ms;\\n}\\n\\n.slide {\\n  display: inline-block;\\n\\n  height: 400px;\\n  width: 100%;\\n  border-radius: 40px;\\n}\\n\\n.slideshowDots {\\n  text-align: center;\\n}\\n\\n.slideshowDot {\\n  display: inline-block;\\n  height: 20px;\\n  width: 20px;\\n  border-radius: 50%;\\n  background-color: #c4c4c4;\\n}\\n\\n.slideshowDot.active {\\n  background-color: #6a0dad;\\n}\".trim();var TicGame=/*#__PURE__*/function(_Component){_inherits(TicGame,_Component);function TicGame(){_classCallCheck(this,TicGame);return _possibleConstructorReturn(this,_getPrototypeOf(TicGame).apply(this,arguments));}_createClass(TicGame,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"1.Share\"),React.createElement(\"b\",null,\"dist/ReactShareSimplified.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:ReactShareSimplified,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"App.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:ShareApp,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"App.css\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:ShareAppCss,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"2.Min-Max date\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:minMaxs,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"3.onClick move button\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:MoveButton,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"4.slideshow\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:slideshow,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"slideshow.css\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:slideshowCss,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return TicGame;}(Component);export default withStyles(styles)(TicGame);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/ticGame.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","ReactShareSimplified","trim","ShareApp","ShareAppCss","minMaxs","MoveButton","slideshow","slideshowCss","TicGame","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CAGA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADgB,CAKvBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALa,CAQvBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARY,CAAL,EAApB,CAaA,GAAMC,CAAAA,oBAAoB,CAAG,sqEAkESC,IAlET,EAA7B,CAoEA,GAAMC,CAAAA,QAAQ,CAAG,i9BAkCID,IAlCJ,EAAjB,CAoCA,GAAME,CAAAA,WAAW,CAAG,6SAiBjBF,IAjBiB,EAApB,CAmBA,GAAMG,CAAAA,OAAO,CAAG,6kCAmDKH,IAnDL,EAAhB,CAqDA,GAAMI,CAAAA,UAAU,CAAG,uwBAmCEJ,IAnCF,EAAnB,CAqCA,GAAMK,CAAAA,SAAS,CAAG,oqCA+CfL,IA/Ce,EAAlB,CAiDA,GAAMM,CAAAA,YAAY,CAAG,kfAkClBN,IAlCkB,EAArB,C,GAqCMO,CAAAA,O,2RACgB,CAClBC,UAAU,CAAC,iBAAM5B,CAAAA,KAAK,CAAC6B,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACjB,KAA1B,EACE,8BAAI,oBAAC,OAAD,MAAJ,CADF,CADF,CADF,CAME,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEiB,OAAO,CAACjB,KAA1B,EACE,oBAAC,IAAD,MACE,wCADF,CAEE,4DAFF,CAGE,2BAAK,KAAK,CAAEN,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEY,oBADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAHF,CAUE,8BAVF,CAWE,8BAXF,CAaE,sCAbF,CAcE,2BAAK,KAAK,CAAEZ,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEc,QADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAdF,CAqBE,8BArBF,CAsBE,8BAtBF,CAwBE,wCAxBF,CAyBE,2BAAK,KAAK,CAAEd,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEe,WADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAzBF,CAgCE,8BAhCF,CAiCE,8BAjCF,CAmCE,+CAnCF,CAoCE,2BAAK,KAAK,CAAEf,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEgB,OADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CApCF,CA2CE,8BA3CF,CA4CE,8BA5CF,CA8CE,sDA9CF,CA+CE,2BAAK,KAAK,CAAEhB,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEiB,UADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CA/CF,CAsDE,8BAtDF,CAuDE,8BAvDF,CAyDE,4CAzDF,CA0DE,2BAAK,KAAK,CAAEjB,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEkB,SADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CA1DF,CAiEE,8BAjEF,CAkEE,8BAlEF,CAoEE,6CApEF,CAqEE,2BAAK,KAAK,CAAElB,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEmB,YADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CArEF,CADF,CADF,CANF,CADF,CA0FD,C,qBAhGmB3B,S,EAmGtB,cAAgBI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBgB,OAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst ReactShareSimplified = `\nimport {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n  EmailShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  GooglePlusIcon,\n  EmailIcon,\n  WhatsappIcon\n} from \"react-share\";\n\n\nclass ReactShareSimplified extends Component {\n  render() {\n    const {url,title,facebook,googlePlus,twitter,whatsapp,email,addClass,Previewemail} = this.props;\n    let {facebookClass,twitterClass,googlePlusClass,whatsappClass,emailClass} = this.props || \"shareIcon\";\n    console.log(\"iconsize\",this.props.iconSize);\n    \n    let iconSize = 32;\n    if(this.props.iconSize!==undefined){\n        iconSize = this.props.iconSize\n    }\n    \n    return (\n      <span className={addClass}>\n        {facebook && (<FacebookShareButton url={url} quote={title} style={{outline:'none'}} className={facebookClass}>\n          <FacebookIcon\n            size={iconSize}\n            round />\n        </FacebookShareButton>)}\n        \n        {googlePlus && (<GooglePlusShareButton url={url} quote={title} style={{outline:'none'}} className={googlePlusClass}>\n          <GooglePlusIcon\n            size={iconSize}\n            round />\n        </GooglePlusShareButton>)}\n        \n        {twitter && (<TwitterShareButton url={url} quote={title} style={{outline:'none'}}  className={twitterClass}>\n          <TwitterIcon\n            size={iconSize}\n            round />\n        </TwitterShareButton>)}\n        \n        {whatsapp && (<WhatsappShareButton url={url} quote={title} style={{outline:'none'}} className={whatsappClass}>\n          <WhatsappIcon\n            size={iconSize}\n            round />\n        </WhatsappShareButton>)}\n        \n        {email && (<EmailShareButton url={url} quote={title} style={{outline:'none'}} className={emailClass}>\n          <EmailIcon\n            size={iconSize}\n            round />\n        </EmailShareButton>)}\n        {Previewemail && (<EmailShareButton url={url} quote={title} style={{outline:'none'}} className={emailClass}>\n          <EmailIcon\n            size={iconSize}\n            round />\n        </EmailShareButton>)}\n      </span>\n    );\n  }\n}\nexport default ReactShareSimplified;`.trim();\n\nconst ShareApp = `\nimport ReactShareSimplified from './dist/ReactShareSimplified'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    const url = \"https://www.github.com\";\n    const title = \"React share simplified\";\n    return (\n      <div className=\"App\">\n        <div className=\"align-inline\" style={{marginTop:'10px'}}>\n          <span className=\"share-title\">Share: </span>\n          <ReactShareSimplified\n            url={url}\n            title={title}\n            facebook={true}\n            facebookClass=\"iconStyle\"\n            googlePlus={true}\n            googlePlusClass=\"iconStyle\"\n            twitter={true}\n            twitterClass=\"iconStyle\"\n            email={true}\n            emailClass=\"iconStyle\"\n            whatsapp={true}\n            whatsappClass=\"iconStyle\"\n            iconSize={32}\n            addClass=\"align-inline\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;`.trim();\n\nconst ShareAppCss = `\n.share-title {\n  justify-content: center;\n  align-self: center;\n  font-size: 17px;\n  font-family: \"Nunito\";\n  font-weight: 500;\n  margin-right: 5px;\n}\n.align-inline {\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n}\n.iconStyle {\n    margin: 0 5px 5px;\n    cursor: pointer;\n}`.trim();\n\nconst minMaxs = `\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div>\n    <form className={classes.container} noValidate>\n      <TextField\n        id=\"date\"\n        label=\"Birthday\"\n        type=\"date\"\n        defaultValue=\"2017-05-24\"\n        className={classes.textField}\n        inputProps={{\n          min: \"2020-10-10\"\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <p>End date</p>\n      <TextField\n        id=\"date\"\n        label=\"Birthday\"\n        type=\"date\"\n        defaultValue=\"2017-05-24\"\n        className={classes.textField}\n        inputProps={{\n          min: \"2020-10-10\"\n        }}\n      />\n    </form>\n    </div>\n  );\n}\n\nexport default App;`.trim();\n\nconst MoveButton = `\nconst MoveButton = (props) => {\n  return (\n      <button onClick={props.onClick}>\n          Click To Move\n      </button>\n  );\n}\n\nconst BoxOne = () => <p>Box1</p>;\n\nconst BoxTwo = () => <p>Box2</p>;\n\n\nclass App extends Component {\nstate = { positions: 0 }\n\nhandleClick = () => {\n  this.setState({ positions: (this.state.positions + 1) % 3 })\n}\n\nrender () { \nconst positions = this.state.positions;\n  return (\n      <div>\n          { positions === 0 ? <MoveButton onClick={this.handleClick}/> : ''}\n          <BoxOne />\n          { positions === 1 ? <MoveButton onClick={this.handleClick}/> : ''}\n          <BoxTwo />\n          { positions === 2 ? <MoveButton onClick={this.handleClick}/> : ''}\n      </div>\n  );\n}\n}\n\nexport default App;`.trim();\n\nconst slideshow = `\nimport \"./slideshow.css\";\n\nconst colors = [\"green\", \"blue\", \"yellow\"];\nconst delay = 2500;\n\nexport default function Slideshow() {\n  const [index, setIndex] = useState(0);\n  const timeoutRef = useRef(null);\n\n  function resetTimeout() {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n  }\n\n  useEffect(() => {\n    resetTimeout();\n    timeoutRef.current = setTimeout(() => setIndex((prevIndex) =>\n          prevIndex === colors.length - 1 ? 0 : prevIndex + 1\n        ), delay);\n\n    return () => {\n      resetTimeout();\n    };\n  }, [index]);\n\n  return (\n    <div className=\"slideshow\">\n      <div\n        className=\"slideshowSlider\"\n        style={{ transform: 'translate3d('$'{-index * 100}%, 0, 0)' }}\n      >\n        {colors.map((backgroundColor, index) => (\n          <div className=\"slide\" key={index} style={{ backgroundColor }}></div>\n        ))}\n      </div>\n\n      <div>\n        {colors.map((_, idx) => (\n          <div\n            className={'slideshowDot'$'{index === idx ? \" active\" : \"\"}'}\n            onClick={() => { setIndex(idx) }} />\n        ))}\n      </div>\n    </div>\n  );\n}`.trim();\n\nconst slideshowCss = `\n.slideshow {\n  margin: 0 auto;\n  overflow: hidden;\n  max-width: 500px;\n}\n\n.slideshowSlider {\n  white-space: nowrap;\n  transition: ease 1000ms;\n}\n\n.slide {\n  display: inline-block;\n\n  height: 400px;\n  width: 100%;\n  border-radius: 40px;\n}\n\n.slideshowDots {\n  text-align: center;\n}\n\n.slideshowDot {\n  display: inline-block;\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  background-color: #c4c4c4;\n}\n\n.slideshowDot.active {\n  background-color: #6a0dad;\n}`.trim();\n\n\nclass TicGame extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1.Share</h3>\n              <b>dist/ReactShareSimplified.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={ReactShareSimplified}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>App.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={ShareApp}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <h3>App.css</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={ShareAppCss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <h3>2.Min-Max date</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={minMaxs}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <h3>3.onClick move button</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={MoveButton}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <h3>4.slideshow</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={slideshow}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>slideshow.css</b>\n              <div style={titles}>\n                <PrismCode\n                  code={slideshowCss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(TicGame));\n"]},"metadata":{},"sourceType":"module"}