{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/pythone/deeppy/get_search.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst appy = `\nfrom flask import Flask, render_template, request, jsonify\nfrom flask_mysqldb import MySQL,MySQLdb #pip install flask-mysqldb https://github.com/alexferl/flask-mysqldb\n \napp = Flask(__name__)\n         \napp.secret_key = \"caircocoders-ednalan\"\n         \napp.config['MYSQL_HOST'] = 'localhost'\napp.config['MYSQL_USER'] = 'root'\napp.config['MYSQL_PASSWORD'] = ''\napp.config['MYSQL_DB'] = 'myflaskapp'\napp.config['MYSQL_CURSORCLASS'] = 'DictCursor'\nmysql = MySQL(app) \n         \n@app.route('/')\ndef index():\n    cur = mysql.connection.cursor(MySQLdb.cursors.DictCursor)\n    cur.execute(\"SELECT DISTINCT office FROM employee ORDER BY office ASC\")\n    employee = cur.fetchall()  \n    return render_template('index.html', employee = employee)\n \n@app.route(\"/fetchrecords\",methods=[\"POST\",\"GET\"])\ndef fetchrecords():\n    cur = mysql.connection.cursor(MySQLdb.cursors.DictCursor)\n    if request.method == 'POST':\n        query = request.form['query']\n        #print(query)\n        if query == '':\n            cur.execute(\"SELECT * FROM employee ORDER BY id DESC\")\n            employeelist = cur.fetchall()\n            print('all list')\n        else:\n            search_text = request.form['query']\n            print(search_text)\n            cur.execute(\"SELECT * FROM employee WHERE office IN (%s) ORDER BY id DESC\", [search_text])\n            employeelist = cur.fetchall()  \n    return jsonify({'htmlresponse': render_template('response.html', employeelist=employeelist)})\n \nif __name__ == \"__main__\":\n    app.run(debug=True)`.trim();\nconst response = `\n{% for row in employeelist %}  \n<tr>\n    <td>{{row.name}}</td>\n    <td>{{row.position}}</td>\n    <td>{{row.age}}</td>\n    <td>{{ \"$%.2f\"|format(row.salary) }}</td>\n    <td>{{row.office}}</td>\n</tr>\n{% endfor %} `.trim();\nconst index = `\n<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n        <title>Python Flask Jquery Ajax Live Data Search Select Dropdown</title>\n        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js\"></script>\n        <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\"></script>\n        <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\" rel=\"stylesheet\" />\n    </head>\n    <body>\n        <div class=\"container\">\n            <br />\n            <h2 align=\"center\">Python Flask Jquery Ajax Live Data Search Select Dropdown</h2><br />\n            <select name=\"search_filter\" id=\"search_filter\" class=\"form-control\">\n            <option value=\"\">Select Option</option>';\n            {% for row in employee %}\n                <option value=\"{{row.office}}\">{{row.office}}</option>';    \n            {% endfor %}\n            </select>\n            <input type=\"hidden\" name=\"hidden_value\" id=\"hidden_value\" />\n            <div style=\"clear:both\"></div>\n            <br />\n            <div class=\"table-responsive\">\n                <table class=\"table table-striped table-bordered\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Position</th>\n                            <th>Age</th>\n                            <th>Salary</th>\n                            <th>Office</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    </tbody>\n                </table>\n            </div>\n            <br />\n            <br />\n            <br />\n        </div>\n<script>\n$(document).ready(function(){\n    load_data();\n    function load_data(query='')\n    {\n        $.ajax({\n            url:\"/fetchrecords\",\n            method:\"POST\",\n            data:{query:query},\n            success:function(data)\n            { \n                $('tbody').html(data);\n                $('tbody').append(data.htmlresponse);\n            }\n        })\n    }\n \n    $('#search_filter').change(function(){\n        $('#hidden_value').val($('#search_filter').val());\n        var query = $('#hidden_value').val(); \n        load_data(query);\n    });\n     \n});\n</script>\n</body>\n</html>`.trim();\n\nclass GetSearch extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Get Search\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"app.py\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: appy,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"templates/response.html\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: response,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"templates/index.html\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: index,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(GetSearch);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/pythone/deeppy/get_search.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","appy","trim","response","index","GetSearch","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,EAAkCC,IAAlC,QAA8C,mBAA9C;AAEA,OAAO,0BAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAGA,MAAMC,MAAM,GAAG;AAAEC,EAAAA,eAAe,EAAE,SAAnB;AAA8BC,EAAAA,OAAO,EAAE,KAAvC;AAA8CC,EAAAA,QAAQ,EAAE;AAAxD,CAAf;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH;AAELN,IAAAA,OAAO,EAAEG,KAAK,CAACG,OAAN,CAAc,CAAd;AAFJ,GADgB;AAKvBC,EAAAA,QAAQ,EAAE;AACRF,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADA,GALa;AAQvBE,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF;AARY,CAAL,CAApB;;AAcA,MAAMC,IAAI,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wBAAD,CAwCYC,IAxCZ,EAAb;AA0CA,MAAMC,QAAQ,GAAI;;;;;;;;;cAAD,CASFD,IATE,EAAjB;AAWA,MAAME,KAAK,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAAD,CAmELF,IAnEK,EAAd;;AAsEA,MAAMG,SAAN,SAAwBxB,SAAxB,CAAkC;AAChCyB,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,UAAU,CAAC,MAAMzB,KAAK,CAAC0B,YAAN,EAAP,EAA6B,CAA7B,CAAV;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,WACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAED,OAAO,CAACf,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CADF,CADF,CADF,EAME,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEe,OAAO,CAACf,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAK,MAAA,KAAK,EAAEN,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEY,IADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAbF,EAcE;AAAK,MAAA,KAAK,EAAEZ,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEc,QADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAdF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAvBF,EAwBE;AAAK,MAAA,KAAK,EAAEd,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEe,KADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAxBF,CADF,CADF,CANF,CADF;AA6CD;;AAnD+B;;AAsDlC,eAAgBnB,UAAU,CAACQ,MAAD,CAAV,CAAmBY,SAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst appy = `\nfrom flask import Flask, render_template, request, jsonify\nfrom flask_mysqldb import MySQL,MySQLdb #pip install flask-mysqldb https://github.com/alexferl/flask-mysqldb\n \napp = Flask(__name__)\n         \napp.secret_key = \"caircocoders-ednalan\"\n         \napp.config['MYSQL_HOST'] = 'localhost'\napp.config['MYSQL_USER'] = 'root'\napp.config['MYSQL_PASSWORD'] = ''\napp.config['MYSQL_DB'] = 'myflaskapp'\napp.config['MYSQL_CURSORCLASS'] = 'DictCursor'\nmysql = MySQL(app) \n         \n@app.route('/')\ndef index():\n    cur = mysql.connection.cursor(MySQLdb.cursors.DictCursor)\n    cur.execute(\"SELECT DISTINCT office FROM employee ORDER BY office ASC\")\n    employee = cur.fetchall()  \n    return render_template('index.html', employee = employee)\n \n@app.route(\"/fetchrecords\",methods=[\"POST\",\"GET\"])\ndef fetchrecords():\n    cur = mysql.connection.cursor(MySQLdb.cursors.DictCursor)\n    if request.method == 'POST':\n        query = request.form['query']\n        #print(query)\n        if query == '':\n            cur.execute(\"SELECT * FROM employee ORDER BY id DESC\")\n            employeelist = cur.fetchall()\n            print('all list')\n        else:\n            search_text = request.form['query']\n            print(search_text)\n            cur.execute(\"SELECT * FROM employee WHERE office IN (%s) ORDER BY id DESC\", [search_text])\n            employeelist = cur.fetchall()  \n    return jsonify({'htmlresponse': render_template('response.html', employeelist=employeelist)})\n \nif __name__ == \"__main__\":\n    app.run(debug=True)`.trim();\n\nconst response = `\n{% for row in employeelist %}  \n<tr>\n    <td>{{row.name}}</td>\n    <td>{{row.position}}</td>\n    <td>{{row.age}}</td>\n    <td>{{ \"$%.2f\"|format(row.salary) }}</td>\n    <td>{{row.office}}</td>\n</tr>\n{% endfor %} `.trim();\n\nconst index = `\n<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n        <title>Python Flask Jquery Ajax Live Data Search Select Dropdown</title>\n        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js\"></script>\n        <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\"></script>\n        <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\" rel=\"stylesheet\" />\n    </head>\n    <body>\n        <div class=\"container\">\n            <br />\n            <h2 align=\"center\">Python Flask Jquery Ajax Live Data Search Select Dropdown</h2><br />\n            <select name=\"search_filter\" id=\"search_filter\" class=\"form-control\">\n            <option value=\"\">Select Option</option>';\n            {% for row in employee %}\n                <option value=\"{{row.office}}\">{{row.office}}</option>';    \n            {% endfor %}\n            </select>\n            <input type=\"hidden\" name=\"hidden_value\" id=\"hidden_value\" />\n            <div style=\"clear:both\"></div>\n            <br />\n            <div class=\"table-responsive\">\n                <table class=\"table table-striped table-bordered\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Position</th>\n                            <th>Age</th>\n                            <th>Salary</th>\n                            <th>Office</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    </tbody>\n                </table>\n            </div>\n            <br />\n            <br />\n            <br />\n        </div>\n<script>\n$(document).ready(function(){\n    load_data();\n    function load_data(query='')\n    {\n        $.ajax({\n            url:\"/fetchrecords\",\n            method:\"POST\",\n            data:{query:query},\n            success:function(data)\n            { \n                $('tbody').html(data);\n                $('tbody').append(data.htmlresponse);\n            }\n        })\n    }\n \n    $('#search_filter').change(function(){\n        $('#hidden_value').val($('#search_filter').val());\n        var query = $('#hidden_value').val(); \n        load_data(query);\n    });\n     \n});\n</script>\n</body>\n</html>`.trim();\n\n\nclass GetSearch extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Get Search</h3>\n              <b>app.py</b>\n              <div style={titles}>\n                <PrismCode\n                  code={appy}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/response.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={response}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <b>templates/index.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={index}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(GetSearch));\n"]},"metadata":{},"sourceType":"module"}