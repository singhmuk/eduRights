{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/angularjsd/angular 12/radioButton.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst radio = `\nimport { FormsModule } from '@angular/forms';\n\n//app.component.ts\n@Component({\n  selector: 'my-app',\n  template: '\n    <div *ngFor=\"let season of seasons; let i = index\">\n    <input type=\"radio\" id=\"season{{i}}\" name=\"seasons\" [value]=\"season\" [(ngModel)]=\"chhose\" />\n      {{season}}\n    </div >\n    {{chhose}}',\n            })\n\nexport class AppComponent {\n  chhose: string;\n  seasons: string[] = ['Winter', 'Spring', 'Summer', 'Autumn'];\n}\n`.trim();\nconst showHide = `\n@Component({\n  selector: 'app-child',\n  template: '\n  <button (click)=\"handleBtn()\">handle</button>\n    <div *ngIf=\"isShow\">\n      {{name}}\n    </div>',\n})\n\nexport class ChildComponent implements OnInit {\n  constructor() { }\n  ngOnInit() {\n\n  }\n  isShow: false;\n  name=\"Name\"\n\n  handleBtn(){\n    this.isShow = !this.isShow\n  }\n}\n`.trim();\nconst displays = `\nimport { FormsModule } from '@angular/forms';\n\n\n//app.component.ts\nexport class AppComponent  {\n  name = 'Angular';\n  newEmployeeClick=false\n  empl=[\n    {id:1, name:'a', positons:'a'},\n    {id:2, name:'b', positons:'a'},\n    {id:3, name:'c', positons:'a'},\n  ];\n\n  constructor(){}\n  ngOnInit(){}\n\n  model:any={};\n  model2:any={}\n\n  addEmployee(){\n    this.empl.push(this.model);\n    this.model={}\n  }\n\n  addButton(){\n    this.newEmployeeClick=!this.newEmployeeClick;\n  }\n}\n\n\n//app.component.html\n<p>Add Employee</p>\n<div (click)=\"addButton()\">add</div>\n<div *ngIf=\"newEmployeeClick\">\n  <form>\n    <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"model.name\">\n    <input type=\"text\" id=\"positons\" name=\"positons\" [(ngModel)]=\"model.positons\">\n\n    <button type=\"submit\" (click)=\"addEmployee()\">Save</button>\n  </form>\n</div>\n\n<div *ngFor=\"let empls of empl\">\n  {{empls.name}}\n  {{empls.positons}}\n</div>`.trim();\nconst version = `\nimport { Component, Input, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '\n  <h2> Source code version</h2>\n    <button (click) = \"newMinor()\"> New minor version</button>\n      <button (click) = \"newMajor()\"> New major version</button>\n        <app-voters [major] = \"major\"[minor] = \"minor\"></app-voters>\n          '})\n\nexport class AppComponent {\n  major = 1;\n  minor = 23;\n\n  newMinor() { this.minor++; }\n\n  newMajor() {\n    this.major++;\n    this.minor = 0;\n  }\n}\n\n\n@Component({\n  selector: 'app-voters',\n  template: '\n          <li *ngFor=\"let change of changeLog\"> {{change}}</li>\n  '\n})\n\nexport class VotersComponent {\n  @Input() major = 0;\n  @Input() minor = 0;\n  changeLog: string[] = [];\n\n  ngOnChanges(changes: SimpleChanges) {\n    const log: string[] = [];\n    \n    for (const propName in changes) {\n      const changedProp = changes[propName];\n      const to = JSON.stringify(changedProp.currentValue);\n      \n      if (changedProp.isFirstChange()) {\n        log.push('Initial value of '$'{propName} set to '$'{to}');\n      } else {\n        const from = JSON.stringify(changedProp.previousValue);\n        log.push('$'{propName} changed from '$'{from} to '$'{to}');\n      }\n    }\n    this.changeLog.push(log.join(', '));\n  }\n}\n\n`.trim();\nconst launch = `\nimport { Component, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '\n  <button (click)=\"start()\"> start</button>\n    {{seconds}}\n    {{message}}\n      ',\n    })\n  \nexport class AppComponent { \n  invalidId=0;\n  message=\"\";\n  seconds=10;\n  \n  start(){\n    setInterval(()=>{\n      this.seconds -= 1;\n      if(this.seconds==0){\n        this.message = 'Blast off!'\n      }\n      else{\n        if (this.seconds < 0) {this.seconds = 10;} \n        this.message = 'Holding at T - '$'{this.seconds} seconds';\n      }\n    },1000)\n  }\n}\n`.trim();\nconst changeFonts = `\n@Component({\n  selector: 'app-root',\n  template: '\n  <button (click)=\"dec()\">Smaller</button>\n    <button (click) = \"inc()\"> Bigger</button>\n      <label [style.font-size.px] = \"fontSize\"> {{fontSize}}px</label>\n        ',\n      })\n\nexport class AppComponent {\n  constructor() { }\n  fontSize = 16;\n\n  resize(delta: number){\n    this.fontSize = Math.min(40, Math.max(8, +this.fontSize + delta))\n  }\n\n  dec(){ this.resize(-1)}\n\n  inc(){ this.resize(+1)}\n}`.trim();\n\nclass RadioButton12 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Radio\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: radio,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Show Hide\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: showHide,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Add Input\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: displays,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"Version\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: version,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"Launch\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: launch,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"Change Font\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: changeFonts,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(RadioButton12);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/angularjsd/angular 12/radioButton.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","radio","trim","showHide","displays","version","launch","changeFonts","RadioButton12","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst radio = `\nimport { FormsModule } from '@angular/forms';\n\n//app.component.ts\n@Component({\n  selector: 'my-app',\n  template: '\n    <div *ngFor=\"let season of seasons; let i = index\">\n    <input type=\"radio\" id=\"season{{i}}\" name=\"seasons\" [value]=\"season\" [(ngModel)]=\"chhose\" />\n      {{season}}\n    </div >\n    {{chhose}}',\n            })\n\nexport class AppComponent {\n  chhose: string;\n  seasons: string[] = ['Winter', 'Spring', 'Summer', 'Autumn'];\n}\n`.trim();\n\n\nconst showHide = `\n@Component({\n  selector: 'app-child',\n  template: '\n  <button (click)=\"handleBtn()\">handle</button>\n    <div *ngIf=\"isShow\">\n      {{name}}\n    </div>',\n})\n\nexport class ChildComponent implements OnInit {\n  constructor() { }\n  ngOnInit() {\n\n  }\n  isShow: false;\n  name=\"Name\"\n\n  handleBtn(){\n    this.isShow = !this.isShow\n  }\n}\n`.trim();\n\n\nconst displays = `\nimport { FormsModule } from '@angular/forms';\n\n\n//app.component.ts\nexport class AppComponent  {\n  name = 'Angular';\n  newEmployeeClick=false\n  empl=[\n    {id:1, name:'a', positons:'a'},\n    {id:2, name:'b', positons:'a'},\n    {id:3, name:'c', positons:'a'},\n  ];\n\n  constructor(){}\n  ngOnInit(){}\n\n  model:any={};\n  model2:any={}\n\n  addEmployee(){\n    this.empl.push(this.model);\n    this.model={}\n  }\n\n  addButton(){\n    this.newEmployeeClick=!this.newEmployeeClick;\n  }\n}\n\n\n//app.component.html\n<p>Add Employee</p>\n<div (click)=\"addButton()\">add</div>\n<div *ngIf=\"newEmployeeClick\">\n  <form>\n    <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"model.name\">\n    <input type=\"text\" id=\"positons\" name=\"positons\" [(ngModel)]=\"model.positons\">\n\n    <button type=\"submit\" (click)=\"addEmployee()\">Save</button>\n  </form>\n</div>\n\n<div *ngFor=\"let empls of empl\">\n  {{empls.name}}\n  {{empls.positons}}\n</div>`.trim();\n\n\nconst version = `\nimport { Component, Input, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '\n  <h2> Source code version</h2>\n    <button (click) = \"newMinor()\"> New minor version</button>\n      <button (click) = \"newMajor()\"> New major version</button>\n        <app-voters [major] = \"major\"[minor] = \"minor\"></app-voters>\n          '})\n\nexport class AppComponent {\n  major = 1;\n  minor = 23;\n\n  newMinor() { this.minor++; }\n\n  newMajor() {\n    this.major++;\n    this.minor = 0;\n  }\n}\n\n\n@Component({\n  selector: 'app-voters',\n  template: '\n          <li *ngFor=\"let change of changeLog\"> {{change}}</li>\n  '\n})\n\nexport class VotersComponent {\n  @Input() major = 0;\n  @Input() minor = 0;\n  changeLog: string[] = [];\n\n  ngOnChanges(changes: SimpleChanges) {\n    const log: string[] = [];\n    \n    for (const propName in changes) {\n      const changedProp = changes[propName];\n      const to = JSON.stringify(changedProp.currentValue);\n      \n      if (changedProp.isFirstChange()) {\n        log.push('Initial value of '$'{propName} set to '$'{to}');\n      } else {\n        const from = JSON.stringify(changedProp.previousValue);\n        log.push('$'{propName} changed from '$'{from} to '$'{to}');\n      }\n    }\n    this.changeLog.push(log.join(', '));\n  }\n}\n\n`.trim();\n\nconst launch = `\nimport { Component, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '\n  <button (click)=\"start()\"> start</button>\n    {{seconds}}\n    {{message}}\n      ',\n    })\n  \nexport class AppComponent { \n  invalidId=0;\n  message=\"\";\n  seconds=10;\n  \n  start(){\n    setInterval(()=>{\n      this.seconds -= 1;\n      if(this.seconds==0){\n        this.message = 'Blast off!'\n      }\n      else{\n        if (this.seconds < 0) {this.seconds = 10;} \n        this.message = 'Holding at T - '$'{this.seconds} seconds';\n      }\n    },1000)\n  }\n}\n`.trim();\n\nconst changeFonts = `\n@Component({\n  selector: 'app-root',\n  template: '\n  <button (click)=\"dec()\">Smaller</button>\n    <button (click) = \"inc()\"> Bigger</button>\n      <label [style.font-size.px] = \"fontSize\"> {{fontSize}}px</label>\n        ',\n      })\n\nexport class AppComponent {\n  constructor() { }\n  fontSize = 16;\n\n  resize(delta: number){\n    this.fontSize = Math.min(40, Math.max(8, +this.fontSize + delta))\n  }\n\n  dec(){ this.resize(-1)}\n\n  inc(){ this.resize(+1)}\n}`.trim();\n\n\nclass RadioButton12 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Radio</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={radio}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Show Hide</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={showHide}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Add Input</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={displays}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Version</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={version}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Launch</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={launch}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Change Font</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={changeFonts}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(RadioButton12));\n"]},"metadata":{},"sourceType":"module"}