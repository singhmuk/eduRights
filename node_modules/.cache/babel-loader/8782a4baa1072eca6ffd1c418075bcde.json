{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var authentication=\"\\nclass App extends Component {\\n  state={\\n    email:null,\\n    password:null,\\n    login:false,\\n    token:null,\\n  }\\n  \\n  componentDidMount(){\\n    this.storeCollector();\\n  }\\n  \\n  storeCollector(){\\n    let store = JSON.parse(localStorage.getItem('login'));\\n    this.setState({store:store})\\n    \\n    if(store && store.login){\\n      this.setItem({login:true})\\n    }\\n    console.log(store)\\n  }\\n  \\n  login = () => {\\n    console.log('form data', this.state);\\n    fetch('http://localhost:3000/api/login', {\\n      method:\\\"POST\\\",\\n      body:JSON.stringify(this.state)\\n    })\\n    .then((res) => {\\n      res.json().then((result) => {\\n        console.log(result);\\n        \\n        //to store token into local\\n        localStorage.setItem('login', JSON.stringify({\\n          login:true,\\n          token:result.token\\n        }))\\n        \\n        this.setState({login:true})\\n        this.storeCollector();\\n      })\\n    } )\\n  }\\n  \\n  post(){\\n    let token = 'Bearer' + this.state.store.token;\\n    console.log(token)\\n    \\n    console.log('form data', this.state.post);\\n    fetch('http://localhost:3000/api/login', {\\n      method:\\\"POST\\\",\\n      // To pass token\\n      headers:{'Authorization': token},\\n      body:JSON.stringify(this.state.pos)\\n    })\\n    .then((res) => {\\n      res.json().then((result) => {\\n        console.log(result);\\n        \\n        \\n      })\\n    })\\n  }\\n  \\n  render(){\\n  return (\\n    <div className=\\\"App\\\">\\n     <h3>Jwt Token</h3>\\n     {!this.state.login ? \\n     <div>\\n       <input type=\\\"text\\\" onChange={(e) => {this.setState({email:e.target.value})}} /><br/>\\n     <input type=\\\"password\\\" onChange={(e) => {this.setState({password:e.target.value})}} /><br/>\\n     <button onClick={this.login()}>Submit</button>\\n      </div>\\n      :\\n      <div>\\n        <textarea onChange={(e) => {this.setState={post:e.target.value}}}>\\n          \\n        </textarea>\\n        <button onClick={()=>{this.post()}}>post</button>\\n      </div>\\n      }\\n      </div>\\n  );\\n}\\n}\".trim();var multi=\"\\nimport { Multiselect } from 'multiselect-react-dropdown';\\n\\nfunction App() {\\n  const data = [\\n        {name: 'Srigar', id: 1},\\n        {name: 'Sam', id: 2},\\n        {name: 'Sam', id: 3},\\n        {name: 'Sam', id: 4},\\n        {name: 'Sam', id: 5}\\n      ]\\n              \\n  const [ options ] = useState(data);\\n  return (\\n    <div>\\n      <Multiselect\\n        options={options} \\n        displayValue=\\\"name\\\" \\n        />\\n    </div>\\n  );\\n}\".trim();var navigations=\"\\nimport React,{useState, useCallback}  from \\\"react\\\";\\n\\nfunction App() {\\n  const [selected, updateSelection] = useState('HOME'),\\n        onMenuClick = useCallback((page)=>{\\n            updateSelection(page);\\n        });\\n  return (\\n    <div className=\\\"layout-column justify-content-center align-items-center\\\">\\n      <div className=\\\"layout-row justify-content-around align-items-center mt-20 links\\\"\\n           data-testid=\\\"navigation-tabs\\\">\\n          <a onClick={onMenuClick.bind(null, 'HOME')}>Home</a>\\n          <a onClick={onMenuClick.bind(null, 'NEWS')}>News</a>\\n          <a onClick={onMenuClick.bind(null, 'CONTACT')}>Contact</a>\\n          <a onClick={onMenuClick.bind(null, 'ABOUT')}>About</a>\\n      </div>\\n\\n      <div className=\\\"card w-20 ma-0\\\">\\n        <section className=\\\"card-text\\\" data-testid=\\\"tab-content\\\">\\n          <span>{selected} PAGE</span>\\n        </section>\\n      </div>\\n    </div>\\n  );\\n}\".trim();var searchNum=\"\\nimport React, {useState, useCallback}  from \\\"react\\\";\\n\\nfunction App() {\\n  const [movies, updateMovies] = useState([]),\\n        [year, updateYear] = useState(null),\\n        onSearch = useCallback(()=>{\\n          if(year){\\n            window.fetch('https://jsonmock.hackerrank.com/api/movies?Year='$'{year}').then((res)=> res.json())\\n            .then(({data})=>{\\n              updateMovies(data);\\n            });\\n          }\\n        }),\\n        onChange = useCallback((e)=>{\\n          updateYear(e.target.value);\\n        });\\n\\n  return (\\n    <div className=\\\"layout-column align-items-center mt-50\\\">\\n      <section className=\\\"layout-row align-items-center justify-content-center\\\">\\n        <input onChange={onChange} type=\\\"number\\\" className=\\\"large\\\" placeholder=\\\"Enter Year eg 2015\\\" data-testid=\\\"app-input\\\"/>\\n        <button onClick={onSearch} className=\\\"\\\" data-testid=\\\"submit-button\\\">Search</button>\\n      </section>\\n\\n      <ul className=\\\"mt-50 styled\\\" data-testid=\\\"movieList\\\">\\n  {movies.map(({Title}, index)=> <li key={index} className=\\\"slide-up-fade-in py-10\\\">{Title}</li>)}\\n        \\n      </ul>\\n\\n      {year && !movies.length && <div className=\\\"mt-50 slide-up-fade-in\\\" data-testid=\\\"no-result\\\">No Results Found</div>}\\n    </div>\\n  );\\n}\".trim();var SSRendering=/*#__PURE__*/function(_Component){_inherits(SSRendering,_Component);function SSRendering(){_classCallCheck(this,SSRendering);return _possibleConstructorReturn(this,_getPrototypeOf(SSRendering).apply(this,arguments));}_createClass(SSRendering,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"1. Jwt Authentication\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:authentication,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"2. Multi_selects\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:multi,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"4. Tab Button\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:navigations,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"5. Search year\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:searchNum,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return SSRendering;}(Component);export default withStyles(styles)(SSRendering);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/serverSideRend.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","authentication","trim","multi","navigations","searchNum","SSRendering","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\n\nconst authentication = `\nclass App extends Component {\n  state={\n    email:null,\n    password:null,\n    login:false,\n    token:null,\n  }\n  \n  componentDidMount(){\n    this.storeCollector();\n  }\n  \n  storeCollector(){\n    let store = JSON.parse(localStorage.getItem('login'));\n    this.setState({store:store})\n    \n    if(store && store.login){\n      this.setItem({login:true})\n    }\n    console.log(store)\n  }\n  \n  login = () => {\n    console.log('form data', this.state);\n    fetch('http://localhost:3000/api/login', {\n      method:\"POST\",\n      body:JSON.stringify(this.state)\n    })\n    .then((res) => {\n      res.json().then((result) => {\n        console.log(result);\n        \n        //to store token into local\n        localStorage.setItem('login', JSON.stringify({\n          login:true,\n          token:result.token\n        }))\n        \n        this.setState({login:true})\n        this.storeCollector();\n      })\n    } )\n  }\n  \n  post(){\n    let token = 'Bearer' + this.state.store.token;\n    console.log(token)\n    \n    console.log('form data', this.state.post);\n    fetch('http://localhost:3000/api/login', {\n      method:\"POST\",\n      // To pass token\n      headers:{'Authorization': token},\n      body:JSON.stringify(this.state.pos)\n    })\n    .then((res) => {\n      res.json().then((result) => {\n        console.log(result);\n        \n        \n      })\n    })\n  }\n  \n  render(){\n  return (\n    <div className=\"App\">\n     <h3>Jwt Token</h3>\n     {!this.state.login ? \n     <div>\n       <input type=\"text\" onChange={(e) => {this.setState({email:e.target.value})}} /><br/>\n     <input type=\"password\" onChange={(e) => {this.setState({password:e.target.value})}} /><br/>\n     <button onClick={this.login()}>Submit</button>\n      </div>\n      :\n      <div>\n        <textarea onChange={(e) => {this.setState={post:e.target.value}}}>\n          \n        </textarea>\n        <button onClick={()=>{this.post()}}>post</button>\n      </div>\n      }\n      </div>\n  );\n}\n}`.trim();\n\nconst multi = `\nimport { Multiselect } from 'multiselect-react-dropdown';\n\nfunction App() {\n  const data = [\n        {name: 'Srigar', id: 1},\n        {name: 'Sam', id: 2},\n        {name: 'Sam', id: 3},\n        {name: 'Sam', id: 4},\n        {name: 'Sam', id: 5}\n      ]\n              \n  const [ options ] = useState(data);\n  return (\n    <div>\n      <Multiselect\n        options={options} \n        displayValue=\"name\" \n        />\n    </div>\n  );\n}`.trim();\n\nconst navigations = `\nimport React,{useState, useCallback}  from \"react\";\n\nfunction App() {\n  const [selected, updateSelection] = useState('HOME'),\n        onMenuClick = useCallback((page)=>{\n            updateSelection(page);\n        });\n  return (\n    <div className=\"layout-column justify-content-center align-items-center\">\n      <div className=\"layout-row justify-content-around align-items-center mt-20 links\"\n           data-testid=\"navigation-tabs\">\n          <a onClick={onMenuClick.bind(null, 'HOME')}>Home</a>\n          <a onClick={onMenuClick.bind(null, 'NEWS')}>News</a>\n          <a onClick={onMenuClick.bind(null, 'CONTACT')}>Contact</a>\n          <a onClick={onMenuClick.bind(null, 'ABOUT')}>About</a>\n      </div>\n\n      <div className=\"card w-20 ma-0\">\n        <section className=\"card-text\" data-testid=\"tab-content\">\n          <span>{selected} PAGE</span>\n        </section>\n      </div>\n    </div>\n  );\n}`.trim();\n\nconst searchNum = `\nimport React, {useState, useCallback}  from \"react\";\n\nfunction App() {\n  const [movies, updateMovies] = useState([]),\n        [year, updateYear] = useState(null),\n        onSearch = useCallback(()=>{\n          if(year){\n            window.fetch('https://jsonmock.hackerrank.com/api/movies?Year='$'{year}').then((res)=> res.json())\n            .then(({data})=>{\n              updateMovies(data);\n            });\n          }\n        }),\n        onChange = useCallback((e)=>{\n          updateYear(e.target.value);\n        });\n\n  return (\n    <div className=\"layout-column align-items-center mt-50\">\n      <section className=\"layout-row align-items-center justify-content-center\">\n        <input onChange={onChange} type=\"number\" className=\"large\" placeholder=\"Enter Year eg 2015\" data-testid=\"app-input\"/>\n        <button onClick={onSearch} className=\"\" data-testid=\"submit-button\">Search</button>\n      </section>\n\n      <ul className=\"mt-50 styled\" data-testid=\"movieList\">\n  {movies.map(({Title}, index)=> <li key={index} className=\"slide-up-fade-in py-10\">{Title}</li>)}\n        \n      </ul>\n\n      {year && !movies.length && <div className=\"mt-50 slide-up-fade-in\" data-testid=\"no-result\">No Results Found</div>}\n    </div>\n  );\n}`.trim();\n\n\nclass SSRendering extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n\n              <h3>1. Jwt Authentication</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={authentication}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>2. Multi_selects</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={multi}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              \n              <h3>4. Tab Button</h3>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={navigations}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>5. Search year</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={searchNum}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(SSRendering));\n"]},"metadata":{},"sourceType":"module"}