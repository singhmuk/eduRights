{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/mern/projects/react_share.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst reactShareSimplified = `\nimport {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n  EmailShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  GooglePlusIcon,\n  EmailIcon,\n  WhatsappIcon\n} from \"react-share\";\n\n\nclass ReactShareSimplified extends Component {\n  render() {\n    const { url, title, facebook, googlePlus, twitter, whatsapp, email, addClass, Previewemail } = this.props;\n    let { facebookClass, twitterClass, googlePlusClass, whatsappClass, emailClass } = this.props || \"shareIcon\";\n\n    let iconSize = 32;\n    if (this.props.iconSize !== undefined) { iconSize = this.props.iconSize }\n\n    return (\n      <span className={addClass}>\n        {facebook && (<FacebookShareButton url={url} quote={title} className={facebookClass}>\n          <FacebookIcon size={iconSize} round />\n        </FacebookShareButton>)}\n\n        {googlePlus && (<GooglePlusShareButton url={url} quote={title}  className={googlePlusClass}>\n          <GooglePlusIcon size={iconSize} round />\n        </GooglePlusShareButton>)}\n\n        {twitter && (<TwitterShareButton url={url} quote={title} style={{ outline: 'none' }} className={twitterClass}>\n          <TwitterIcon size={iconSize} round />\n        </TwitterShareButton>)}\n\n        {whatsapp && (<WhatsappShareButton url={url} quote={title} style={{ outline: 'none' }} className={whatsappClass}>\n          <WhatsappIcon size={iconSize} round />\n        </WhatsappShareButton>)}\n\n        {email && (<EmailShareButton url={url} quote={title} style={{ outline: 'none' }} className={emailClass}>\n          <EmailIcon size={iconSize} round />\n        </EmailShareButton>)}\n        {Previewemail && (<EmailShareButton url={url} quote={title} style={{ outline: 'none' }} className={emailClass}>\n          <EmailIcon size={iconSize} round />\n        </EmailShareButton>)}\n      </span>\n    );\n  }\n}`.trim();\nconst app = `\n//App.js\nimport ReactShareSimplified from './dist/ReactShareSimplified'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    const url = \"https://www.github.com\";\n    const title = \"React share simplified\";\n    return (\n      <div className=\"App\">\n        <div className=\"align-inline\" style={{marginTop:'10px'}}>\n          <span className=\"share-title\">Share: </span>\n          <ReactShareSimplified\n            url={url}\n            title={title}\n            facebook={true}\n            facebookClass=\"iconStyle\"\n            googlePlus={true}\n            googlePlusClass=\"iconStyle\"\n            twitter={true}\n            twitterClass=\"iconStyle\"\n            email={true}\n            emailClass=\"iconStyle\"\n            whatsapp={true}\n            whatsappClass=\"iconStyle\"\n            iconSize={32}\n            addClass=\"align-inline\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n//App.css\n.share-title {\n  justify-content: center;\n  align-self: center;\n  font-size: 17px;\n  font-family: \"Nunito\";\n  font-weight: 500;\n  margin-right: 5px;\n}\n.align-inline {\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n}\n.iconStyle {\n    margin: 0 5px 5px;\n    cursor: pointer;\n}\n`.trim();\nconst server = `\nconst cors = require('cors');\nconst express = require('express');\n\n//Secret key\nconst stripe = require('stripe')('sk_test_51He1P4Jz7nbfLVoYjEiuLJJXUkw3yFMOLRXLm8Ons2fnzuwfo\n               FLzCyncHIubREzUs60yiDPNvSxZltanq41RyLEi00vKugjwhC');\nconst uuid = require('uuid');\n\nconst app = express();\n\napp.use(express.json())\napp.use(cors())\n\napp.get('/', (req, res) => {\n    res.send('It is working')\n})\n\napp.post('/payment', (req, res) => {\n    const { product, token } = req.body;\n    console.log('Products', product);\n    console.log('Price', product.price);\n    const idempontencyKey = uuid()\n\n    return stripe.customers.create({\n        email: token.email,\n        source: token.id\n    }).then(customer => {\n        stripe.charges.create({\n            amount: product.price * 100,\n            currency: 'usd',\n            customer: customer.id,\n            receipt_email: token.email,\n            description: 'Purchase of product.name',\n            shipping: {\n                name: token.card.name,\n                address: {\n                    country: token.card.address_country\n                }\n            }\n        }, { idempontencyKey })\n    })\n        .then(result => res.status(200).json(result))\n        .catch(err => console.log(err))\n})\n\n\napp.listen(5000, () => console.log('Started on port 5000'))`.trim();\nconst clientApp = `\nimport React, { useState } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\n\nfunction App() {\n\n  const [product, setProduct] = useState({\n    name: \"Reactjs\",\n    price: 10,\n    productBy: 'Facebook'\n  })\n\n  const makePayment = token => {\n    const body = {\n      token,\n      product\n    }\n    const header = {\n      \"Content-Type\": \"application/json\"\n    }\n\n    return fetch('http://localhost:5000/payment', {\n    method: 'POST',\n      header,\n      body: JSON.stringify(body)\n    }).then(res => {\n        console.log('Response', res)\n        const { status } = res;\n        console.log('Status', status)\n      })\n  .catch(err => console.log(err))\n  }\n\nreturn (\n  <div className=\"App\">\n    Stripe\n    <StripeCheckout\n      //Publishable key\n      // stripeKey={process.env.REACT_APP_KEY}\n      stripeKey=\"pk_test_51He1P4Jz7nbfLVoYDBP7q8kVxEZLjLd34krGafVPawZ4PIkziUVjrOyzePVtXM3rkRoo04sV\n                 fvFjBuRZehSWy8Xu00kIVA41KE\"\n      token={makePayment}\n      amount={product.price * 100}\n      name=\"Reactjs\"\n      shippingAddress\n      billingAddress\n    />\n  </div>\n);\n}\n`.trim();\n\nclass ReactShare extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"React Share\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"dist/ReactShareSimplified.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: reactShareSimplified,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"App.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: app,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Stripe\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"server.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: server,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"Client\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"App.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: clientApp,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(ReactShare);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/mern/projects/react_share.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","reactShareSimplified","trim","app","server","clientApp","ReactShare","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst reactShareSimplified = `\nimport {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n  EmailShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  GooglePlusIcon,\n  EmailIcon,\n  WhatsappIcon\n} from \"react-share\";\n\n\nclass ReactShareSimplified extends Component {\n  render() {\n    const { url, title, facebook, googlePlus, twitter, whatsapp, email, addClass, Previewemail } = this.props;\n    let { facebookClass, twitterClass, googlePlusClass, whatsappClass, emailClass } = this.props || \"shareIcon\";\n\n    let iconSize = 32;\n    if (this.props.iconSize !== undefined) { iconSize = this.props.iconSize }\n\n    return (\n      <span className={addClass}>\n        {facebook && (<FacebookShareButton url={url} quote={title} className={facebookClass}>\n          <FacebookIcon size={iconSize} round />\n        </FacebookShareButton>)}\n\n        {googlePlus && (<GooglePlusShareButton url={url} quote={title}  className={googlePlusClass}>\n          <GooglePlusIcon size={iconSize} round />\n        </GooglePlusShareButton>)}\n\n        {twitter && (<TwitterShareButton url={url} quote={title} style={{ outline: 'none' }} className={twitterClass}>\n          <TwitterIcon size={iconSize} round />\n        </TwitterShareButton>)}\n\n        {whatsapp && (<WhatsappShareButton url={url} quote={title} style={{ outline: 'none' }} className={whatsappClass}>\n          <WhatsappIcon size={iconSize} round />\n        </WhatsappShareButton>)}\n\n        {email && (<EmailShareButton url={url} quote={title} style={{ outline: 'none' }} className={emailClass}>\n          <EmailIcon size={iconSize} round />\n        </EmailShareButton>)}\n        {Previewemail && (<EmailShareButton url={url} quote={title} style={{ outline: 'none' }} className={emailClass}>\n          <EmailIcon size={iconSize} round />\n        </EmailShareButton>)}\n      </span>\n    );\n  }\n}`.trim();\n\nconst app = `\n//App.js\nimport ReactShareSimplified from './dist/ReactShareSimplified'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    const url = \"https://www.github.com\";\n    const title = \"React share simplified\";\n    return (\n      <div className=\"App\">\n        <div className=\"align-inline\" style={{marginTop:'10px'}}>\n          <span className=\"share-title\">Share: </span>\n          <ReactShareSimplified\n            url={url}\n            title={title}\n            facebook={true}\n            facebookClass=\"iconStyle\"\n            googlePlus={true}\n            googlePlusClass=\"iconStyle\"\n            twitter={true}\n            twitterClass=\"iconStyle\"\n            email={true}\n            emailClass=\"iconStyle\"\n            whatsapp={true}\n            whatsappClass=\"iconStyle\"\n            iconSize={32}\n            addClass=\"align-inline\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n//App.css\n.share-title {\n  justify-content: center;\n  align-self: center;\n  font-size: 17px;\n  font-family: \"Nunito\";\n  font-weight: 500;\n  margin-right: 5px;\n}\n.align-inline {\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n}\n.iconStyle {\n    margin: 0 5px 5px;\n    cursor: pointer;\n}\n`.trim();\n\nconst server = `\nconst cors = require('cors');\nconst express = require('express');\n\n//Secret key\nconst stripe = require('stripe')('sk_test_51He1P4Jz7nbfLVoYjEiuLJJXUkw3yFMOLRXLm8Ons2fnzuwfo\n               FLzCyncHIubREzUs60yiDPNvSxZltanq41RyLEi00vKugjwhC');\nconst uuid = require('uuid');\n\nconst app = express();\n\napp.use(express.json())\napp.use(cors())\n\napp.get('/', (req, res) => {\n    res.send('It is working')\n})\n\napp.post('/payment', (req, res) => {\n    const { product, token } = req.body;\n    console.log('Products', product);\n    console.log('Price', product.price);\n    const idempontencyKey = uuid()\n\n    return stripe.customers.create({\n        email: token.email,\n        source: token.id\n    }).then(customer => {\n        stripe.charges.create({\n            amount: product.price * 100,\n            currency: 'usd',\n            customer: customer.id,\n            receipt_email: token.email,\n            description: 'Purchase of product.name',\n            shipping: {\n                name: token.card.name,\n                address: {\n                    country: token.card.address_country\n                }\n            }\n        }, { idempontencyKey })\n    })\n        .then(result => res.status(200).json(result))\n        .catch(err => console.log(err))\n})\n\n\napp.listen(5000, () => console.log('Started on port 5000'))`.trim();\n\nconst clientApp = `\nimport React, { useState } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\n\nfunction App() {\n\n  const [product, setProduct] = useState({\n    name: \"Reactjs\",\n    price: 10,\n    productBy: 'Facebook'\n  })\n\n  const makePayment = token => {\n    const body = {\n      token,\n      product\n    }\n    const header = {\n      \"Content-Type\": \"application/json\"\n    }\n\n    return fetch('http://localhost:5000/payment', {\n    method: 'POST',\n      header,\n      body: JSON.stringify(body)\n    }).then(res => {\n        console.log('Response', res)\n        const { status } = res;\n        console.log('Status', status)\n      })\n  .catch(err => console.log(err))\n  }\n\nreturn (\n  <div className=\"App\">\n    Stripe\n    <StripeCheckout\n      //Publishable key\n      // stripeKey={process.env.REACT_APP_KEY}\n      stripeKey=\"pk_test_51He1P4Jz7nbfLVoYDBP7q8kVxEZLjLd34krGafVPawZ4PIkziUVjrOyzePVtXM3rkRoo04sV\n                 fvFjBuRZehSWy8Xu00kIVA41KE\"\n      token={makePayment}\n      amount={product.price * 100}\n      name=\"Reactjs\"\n      shippingAddress\n      billingAddress\n    />\n  </div>\n);\n}\n`.trim();\n\n\nclass ReactShare extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>React Share</h3>\n              <b>dist/ReactShareSimplified.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={reactShareSimplified}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>App.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={app}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Stripe</h3>\n              <b>server.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={server}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Client</h3>\n              <b>App.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={clientApp}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(ReactShare));\n"]},"metadata":{},"sourceType":"module"}