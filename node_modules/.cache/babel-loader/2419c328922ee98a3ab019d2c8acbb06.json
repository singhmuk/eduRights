{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/angularjsd/deepAngularjs/services.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst interval = `\n//app.js\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', myCtrl);\n\nfunction myCtrl($scope, $interval) {\n  $interval(() => {\n      $scope.theTime = new Date().toLocaleTimeString();\n  }, 1000);\n};\n\n\n//index.html\n<body ng-controller=\"myCtrl\">\n        <h1>{{theTime}}</h1>\n    <p>The $interval service runs a function every specified millisecond.</p>\n</body>\n`.trim();\nconst location = `\n//app.js\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', myCtrl);\n    \nfunction myCtrl($scope, $location) {\n    $scope.myUrl = $location.absUrl();\n};\n\n\n//index.html\n<body ng-controller=\"myCtrl\">\n        <p>The url of this page is:</p>\n        <h3>{{myUrl}}</h3>\n</body>\n`.trim();\nconst timeout = `\n//app.js\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', myCtrl);\n\nfunction myCtrl($scope, $timeout) {\n  $scope.myHeader = \"Hello World!\";\n  $timeout(function () {\n      $scope.myHeader = \"How are you today?\";\n  }, 2000);\n};\n\n\n//index.html\n<body ng-controller=\"myCtrl\">\n    <h1>{{myHeader}}</h1>\n</body>\n`.trim();\nconst hexafy = `\napp.service('hexafy', hexafy);\n\nfunction hexafy() {\n  this.myFunc = function (x) {\n    return x.toString(16);\n  }\n};`.trim();\nconst intervals = `\nvar app = angular.module('myApp', []);\n    \napp.service('hexafy', hexafy);\n\nfunction hexafy() {\n    this.myFunc = function (x) {\n        return x.toString(16);\n    }\n};\n\n\napp.controller('myCtrl', myCtrl);\n\nfunction myCtrl($scope, hexafy) {\n  $scope.hex = hexafy.myFunc(255);\n}`.trim();\nconst intervalsIndex = `\n<!DOCTYPE html>\n<html  ng-app=\"myApp\" >\n<script src=\"angular.js\"></script>\n<script src=\"app.js\"></script>\n\n<body>\n    <div ng-controller=\"myCtrl\">\n        <p>The hexadecimal value of 255 is:</p>\n        <h1>{{hex}}</h1>\n    </div>\n    \n    <p>A custom service with a method that converts a given number into a hexadecimal number.</p>\n    \n</body>\n</html>`.trim();\nconst factory = `\nvar mod = angular.module(\"MyModule\", []);\n\nmod.provider(\"myFactory\", myFactory);\n\nfunction myFactory() {\n  this.$get = function() {\n      console.log(\"myFactoryFunction.$get() called.\"); // ADDED this line\n      return \"My Value\";\n  };\n};\n\nmod.controller(\"MyController\", function(myFactory) {\n  console.log(\"MyController - myFactory: \" + myFactory);\n});\n\nmod.controller(\"MyController2\", function(myFactory) { // ADDED this controller\n  console.log(\"MyController2 - myFactory: \" + myFactory);\n});\n\n\n//index.html\n<body>\n<div ng-controller=\"MyController\"></div>\n<div ng-controller=\"MyController2\"></div>\n</body>\n`.trim();\nconst provider = `\nvar mod = angular.module(\"MyModule\", []);\n\nmod.provider(\"myProvider\", myProvider);\n\nfunction myProvider() {\n  this.$get = function() {\n      console.log(\"MyProviderFunction.$get() called.\"); // ADDED this line\n      return \"My Value\";\n  };\n};\n\nmod.controller(\"MyController\", function(myProvider) {\n  console.log(\"MyController - myProvider: \" + myProvider);\n});\n\nmod.controller(\"MyController2\", function(myProvider) { // ADDED this controller\n  console.log(\"MyController2 - myProvider: \" + myProvider);\n});\n\n\n//index.html\n<body>\n    <div ng-controller=\"MyController\"></div>\n    <div ng-controller=\"MyController2\"></div>\n</body>\n`.trim();\nconst service = `\nvar mod = angular.module(\"MyModule\", []);\n\nmod.service(\"myService\", myService);\n\nfunction myService() { // CHANGED \"factory\" to \"service\"\n// NOTE that the only function being passed is the object constructor from before\nthis.getValue = function() {\n    return \"My Value\";\n};\n};\n\nmod.controller(\"MyController\", function(myService) {\nconsole.log(\"MyController - myService: \" + myService.getValue());\n});\n\nmod.controller(\"MyController2\", function(myService) {\nconsole.log(\"MyController2 - myService: \" + myService.getValue());\n});\n\n\n//index,html\n<body>\n    <div ng-controller=\"MyController\"></div>\n    <div ng-controller=\"MyController2\"></div>\n</body>`.trim();\n\nclass Services extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Services\"), \"The $interval service is AngularJS' version of the window.setInterval function.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"interval.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: interval,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"built-in $location service to get the absolute url of the page\"), \"In AngularJS, a service is a function, or object, that is available for, and limited to, your AngularJS application.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), \"AngularJS has about 30 built-in services. One of them is the $location service.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), \"The $location service has methods which return information about the location of the current web page:\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: location,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"This header will change after two seconds\"), \"The $timeout service runs a function after a specified number of milliseconds.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), \"The $timeout service is AngularJS' version of the window.setTimeout function.\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: timeout,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Custom Services\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"hexafy.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: hexafy,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"intervals.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: intervals,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"intervalsIndex.html\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: intervalsIndex,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Services vs Provider vs Factory\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: factory,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Provider\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: provider,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"Services\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: service,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(Services);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/angularjsd/deepAngularjs/services.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","interval","trim","location","timeout","hexafy","intervals","intervalsIndex","factory","provider","service","Services","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = {backgroundColor:'#F0F8FF', padding:'1px', fontSize:'16px'}\n\nconst styles = theme => ({\n  paper: {\n      margin: theme.spacing(1),\n      padding: theme.spacing(1)\n  },\n  smMargin: {\n      margin: theme.spacing(1)\n  },\n  actionDiv: {\n      textAlign: \"center\"\n  }\n})\n\n\nconst interval = `\n//app.js\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', myCtrl);\n\nfunction myCtrl($scope, $interval) {\n  $interval(() => {\n      $scope.theTime = new Date().toLocaleTimeString();\n  }, 1000);\n};\n\n\n//index.html\n<body ng-controller=\"myCtrl\">\n        <h1>{{theTime}}</h1>\n    <p>The $interval service runs a function every specified millisecond.</p>\n</body>\n`.trim()\n\nconst location = `\n//app.js\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', myCtrl);\n    \nfunction myCtrl($scope, $location) {\n    $scope.myUrl = $location.absUrl();\n};\n\n\n//index.html\n<body ng-controller=\"myCtrl\">\n        <p>The url of this page is:</p>\n        <h3>{{myUrl}}</h3>\n</body>\n`.trim()\n\n\nconst timeout = `\n//app.js\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', myCtrl);\n\nfunction myCtrl($scope, $timeout) {\n  $scope.myHeader = \"Hello World!\";\n  $timeout(function () {\n      $scope.myHeader = \"How are you today?\";\n  }, 2000);\n};\n\n\n//index.html\n<body ng-controller=\"myCtrl\">\n    <h1>{{myHeader}}</h1>\n</body>\n`.trim()\n    \n    \nconst hexafy = `\napp.service('hexafy', hexafy);\n\nfunction hexafy() {\n  this.myFunc = function (x) {\n    return x.toString(16);\n  }\n};`.trim()\n\nconst intervals = `\nvar app = angular.module('myApp', []);\n    \napp.service('hexafy', hexafy);\n\nfunction hexafy() {\n    this.myFunc = function (x) {\n        return x.toString(16);\n    }\n};\n\n\napp.controller('myCtrl', myCtrl);\n\nfunction myCtrl($scope, hexafy) {\n  $scope.hex = hexafy.myFunc(255);\n}`.trim()\n\nconst intervalsIndex = `\n<!DOCTYPE html>\n<html  ng-app=\"myApp\" >\n<script src=\"angular.js\"></script>\n<script src=\"app.js\"></script>\n\n<body>\n    <div ng-controller=\"myCtrl\">\n        <p>The hexadecimal value of 255 is:</p>\n        <h1>{{hex}}</h1>\n    </div>\n    \n    <p>A custom service with a method that converts a given number into a hexadecimal number.</p>\n    \n</body>\n</html>`.trim()\n\n\nconst factory = `\nvar mod = angular.module(\"MyModule\", []);\n\nmod.provider(\"myFactory\", myFactory);\n\nfunction myFactory() {\n  this.$get = function() {\n      console.log(\"myFactoryFunction.$get() called.\"); // ADDED this line\n      return \"My Value\";\n  };\n};\n\nmod.controller(\"MyController\", function(myFactory) {\n  console.log(\"MyController - myFactory: \" + myFactory);\n});\n\nmod.controller(\"MyController2\", function(myFactory) { // ADDED this controller\n  console.log(\"MyController2 - myFactory: \" + myFactory);\n});\n\n\n//index.html\n<body>\n<div ng-controller=\"MyController\"></div>\n<div ng-controller=\"MyController2\"></div>\n</body>\n`.trim();\n\n\nconst provider = `\nvar mod = angular.module(\"MyModule\", []);\n\nmod.provider(\"myProvider\", myProvider);\n\nfunction myProvider() {\n  this.$get = function() {\n      console.log(\"MyProviderFunction.$get() called.\"); // ADDED this line\n      return \"My Value\";\n  };\n};\n\nmod.controller(\"MyController\", function(myProvider) {\n  console.log(\"MyController - myProvider: \" + myProvider);\n});\n\nmod.controller(\"MyController2\", function(myProvider) { // ADDED this controller\n  console.log(\"MyController2 - myProvider: \" + myProvider);\n});\n\n\n//index.html\n<body>\n    <div ng-controller=\"MyController\"></div>\n    <div ng-controller=\"MyController2\"></div>\n</body>\n`.trim();\n\nconst service = `\nvar mod = angular.module(\"MyModule\", []);\n\nmod.service(\"myService\", myService);\n\nfunction myService() { // CHANGED \"factory\" to \"service\"\n// NOTE that the only function being passed is the object constructor from before\nthis.getValue = function() {\n    return \"My Value\";\n};\n};\n\nmod.controller(\"MyController\", function(myService) {\nconsole.log(\"MyController - myService: \" + myService.getValue());\n});\n\nmod.controller(\"MyController2\", function(myService) {\nconsole.log(\"MyController2 - myService: \" + myService.getValue());\n});\n\n\n//index,html\n<body>\n    <div ng-controller=\"MyController\"></div>\n    <div ng-controller=\"MyController2\"></div>\n</body>`.trim();\n\n\nclass Services extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n            <Grid item xs={2}>\n                <Paper className={classes.paper}>\n                    <h4><Sidebar /></h4>\n                </Paper>\n            </Grid>\n<Grid item xs={10}>\n<Paper className={classes.paper}>\n<List>\n      <h3>Services</h3>\n      The $interval service is AngularJS' version of the window.setInterval function.\n      <br/>\n      <b>interval.js</b>\n      <div style={titles}>\n      <PrismCode\n        code={interval}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n        <br/>\n        <h3>built-in $location service to get the absolute url of the page</h3>\n        In AngularJS, a service is a function, or object, that is available for, and limited to, your AngularJS application.\n        <br/>\nAngularJS has about 30 built-in services. One of them is the $location service.\n<br/>\nThe $location service has methods which return information about the location of the current web page:\n      <div style={titles}>\n      <PrismCode\n        code={location}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n        <h3>This header will change after two seconds</h3>\n        The $timeout service runs a function after a specified number of milliseconds.\n        <br/>\n        The $timeout service is AngularJS' version of the window.setTimeout function.\n      <div style={titles}>\n      <PrismCode\n        code={timeout}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n        <br/>\n      <h1>Custom Services</h1>\n        <b>hexafy.js</b>\n      <div style={titles}>\n      <PrismCode\n        code={hexafy}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n        <b>intervals.js</b>\n      <div style={titles}>\n      <PrismCode\n        code={intervals}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n        <b>intervalsIndex.html</b>\n      <div style={titles}>\n      <PrismCode\n        code={intervalsIndex}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <h3>Services vs Provider vs Factory</h3>\n      <div style={titles}>\n      <PrismCode\n        code={factory}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <h3>Provider</h3>\n      <div style={titles}>\n      <PrismCode\n        code={provider}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <h3>Services</h3>\n      <div style={titles}>\n      <PrismCode\n        code={service}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      </List>\n      </Paper>\n      </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Services));\n"]},"metadata":{},"sourceType":"module"}