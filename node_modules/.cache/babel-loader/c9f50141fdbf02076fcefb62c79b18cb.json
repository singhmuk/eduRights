{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var modules=\"\\n//names.js\\nconst john = 'john'\\nconst peter = 'peter'\\nmodule.exports = { john, peter }\\n\\n\\n//utils.js\\nconst sayHi = (name) => {\\n  console.log('Hello there '$'{name}')\\n}\\nmodule.exports = sayHi\\n\\n\\n//mind-grenade.js\\nconst num1 = 5\\nconst num2 = 10\\n\\nfunction addValues() {\\n  console.log('the sum is : '$'{num1 + num2}')\\n}\\naddValues()\\n\\n\\n//app.js\\nconst fun=()=>{\\n  const names = require('./modules/04-names')\\n  const sayHi = require('./modules/05-utils')\\n  require('./modules/07-mind-grenade')\\n  sayHi('susan')\\n  sayHi(names.john)\\n  sayHi(names.peter)\\n  }\\n  module.exports={fun}\\n\\n\\n  //server.js\\n  const {fun} = require('app.js');\\n\".trim();var patterns=\"\\nconst http = require('http')\\n\\nconst server = http.createServer((req, res) => {\\n  if (req.url === '/') {\\n    res.end('Home Page')\\n  }\\n  if (req.url === '/about') {\\n    for (let i = 0; i < 1000; i++) {\\n      for (let j = 0; j < 1000; j++) {\\n        console.log('$'{i} '$'{j}')\\n      }\\n    }\\n    res.end('About Page')\\n  }\\n  res.end('Error Page')\\n})\\n\\nserver.listen(5000, () => console.log('Server listening on port : 5000....'))\\n\".trim();var awaitPat=\"\\nconst { readFile, writeFile } = require('fs').promises\\n\\nconst start = async () => {\\n  try {\\n    const first = await readFile('./content/first.txt', 'utf8')\\n    const second = await readFile('./content/second.txt', 'utf8')\\n    await writeFile(\\n      './content/result-mind-grenade.txt',\\n      'THIS IS AWESOME : '$'{first} '$'{second}',\\n      { flag: 'a' }\\n    )\\n    console.log(first, second)\\n  } catch (error) {\\n    console.log(error)\\n  }\\n}\\n\\nstart();\".trim();var fSync=\"\\nconst { readFileSync, writeFileSync } = require('fs')\\nconst first = readFileSync('./first.txt', 'utf8')\\nconst second = readFileSync('./second.txt', 'utf8')\\n\\nconst fun=()=>{\\n    writeFileSync(\\n        './result-sync.txt',\\n        'Here is the result : '$'{first}, '$'{second}',\\n        { flag: 'a' }\\n      )\\n      console.log('done with this task')\\n      console.log('starting the next one')\\n}\\n\\nmodule.exports={fun}\".trim();var fsAsync=\"\\nconst { readFile, writeFile } = require('fs')\\n\\nconst fun=()=>{\\nreadFile('./first.txt', 'utf8', (err, result) => {\\n  if (err) {\\n    console.log(err)\\n    return\\n  }\\n  const first = result\\n  readFile('./second.txt', 'utf8', (err, result) => {\\n    if (err) {\\n      console.log(err)\\n      return\\n    }\\n    const second = result\\n    writeFile(\\n      './result-async.txt',\\n      'Here is the result : '$'{first}, '$'{second}',\\n      (err, result) => {\\n        if (err) {\\n          console.log(err)\\n          return\\n        }\\n        console.log('done with this task')\\n      }\\n    )\\n  })\\n})\\n}\\n\\nmodule.exports={fun}\".trim();var http=\"\\nconst http = require('http')\\n\\nconst fun=()=>{\\n    const server = http.createServer((req, res) => {\\n          if (req.url === '/') {\\n            res.end('Welcome to our home page')\\n          }\\n          if (req.url === '/about') {\\n            res.end('Here is our short history')\\n          }\\n          res.end('\\n          <h1>Oops!</h1>\\n        <p>We can't seem to find the page you are looking for</p>\\n        <a href=\\\"/\\\">back home</a>\\n          ')\\n          \\n        if (req.url === '/') {\\n          res.end('Welcome to our home page')\\n        } else if (req.url === '/about') {\\n          res.end('Here is our short history')\\n        } else {\\n          res.end('\\n          <h1>Oops!</h1>\\n          <p>We can't seem to find the page you are looking for</p>\\n          <a href=\\\"/\\\">back home</a>\\n          ')\\n        }\\n      })\\n      server;\\n}\\n\\nmodule.exports={fun}\".trim();var EventEmitter=\"\\nconst EventEmitter = require('events')\\nconst customEmitter = new EventEmitter()\\n\\ncustomEmitter.on('response', (name, id) => {\\n  console.log('data recieved user '$'{name} with id:'$'{id}')\\n})\\n\\ncustomEmitter.on('response', () => {\\n  console.log('some other logic here')\\n})\\n\\ncustomEmitter.emit('response', 'john', 34)\\n\".trim();var requestEvent=\"\\nconst http = require('http')\\nconst server = http.createServer()\\n\\nserver.on('request', (req, res) => {\\n  res.end('Welcome')\\n})\\n\\nserver.listen(5000)\\n\".trim();var createBigFile=\"\\nconst { writeFileSync } = require('fs')\\n\\nconst fun=()=>{\\n    for (let i = 0; i < 10000; i++) {\\n        writeFileSync('./big.txt', 'hello world '$'{i}\\n', { flag: 'a' })\\n      }\\n}\\n\\nmodule.exports={fun}\".trim();var streams=\"\\nconst { createReadStream } = require('fs')\\n// const stream = createReadStream('./content/big.txt', { highWaterMark: 90000 })\\n// const stream = createReadStream('../content/big.txt', { encoding: 'utf8' })\\nconst stream = createReadStream('./big.txt')\\n\\n\\nconst fun=()=>{\\n    stream.on('data', (result) => {\\n        console.log(result)\\n      })\\n      stream.on('error', (err) => console.log(err))\\n}\\n\\nmodule.exports={fun}\".trim();var httpStream=\"\\nvar http = require('http')\\nvar fs = require('fs')\\n\\nconst fun=()=>{\\n    http\\n    .createServer(function (req, res) {\\n      // const text = fs.readFileSync('./content/big.txt', 'utf8')\\n      // res.end(text)\\n      const fileStream = fs.createReadStream('./content/big.txt', 'utf8')\\n      fileStream.on('open', () => {\\n        fileStream.pipe(res)\\n      })\\n      fileStream.on('error', (err) => {\\n        res.end(err)\\n      })\\n    })\\n    .listen(5001)\\n}\\n\\nmodule.exports={fun}\".trim();var Ejs=/*#__PURE__*/function(_Component){_inherits(Ejs,_Component);function Ejs(){_classCallCheck(this,Ejs);return _possibleConstructorReturn(this,_getPrototypeOf(Ejs).apply(this,arguments));}_createClass(Ejs,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"modules\"),\"Every file is module by default.\",React.createElement(\"br\",null),\"Modules - Encapsulated Code (only share minimum)\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:modules,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Async-Patterns\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:patterns,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Await-Pattern\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:awaitPat,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"fs-sync\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:fSync,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"fs-async\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:fsAsync,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Http\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:http,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"EventEmitter\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:EventEmitter,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Request-Event\"),\"Emits request event subcribe to it / listen for it / respond to it.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:requestEvent,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"create Big File\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:createBigFile,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Streams\"),\"default 64kb\",React.createElement(\"br\",null),\"last buffer - remainder\",React.createElement(\"br\",null),\"highWaterMark - control size\",React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:streams,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"http-stream\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:httpStream,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return Ejs;}(Component);export default withStyles(styles)(Ejs);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/nodeJs/nodeDeep/ejsNode.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","modules","trim","patterns","awaitPat","fSync","fsAsync","http","EventEmitter","requestEvent","createBigFile","streams","httpStream","Ejs","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst modules = `\n//names.js\nconst john = 'john'\nconst peter = 'peter'\nmodule.exports = { john, peter }\n\n\n//utils.js\nconst sayHi = (name) => {\n  console.log('Hello there '$'{name}')\n}\nmodule.exports = sayHi\n\n\n//mind-grenade.js\nconst num1 = 5\nconst num2 = 10\n\nfunction addValues() {\n  console.log('the sum is : '$'{num1 + num2}')\n}\naddValues()\n\n\n//app.js\nconst fun=()=>{\n  const names = require('./modules/04-names')\n  const sayHi = require('./modules/05-utils')\n  require('./modules/07-mind-grenade')\n  sayHi('susan')\n  sayHi(names.john)\n  sayHi(names.peter)\n  }\n  module.exports={fun}\n\n\n  //server.js\n  const {fun} = require('app.js');\n`.trim();\n\nconst patterns = `\nconst http = require('http')\n\nconst server = http.createServer((req, res) => {\n  if (req.url === '/') {\n    res.end('Home Page')\n  }\n  if (req.url === '/about') {\n    for (let i = 0; i < 1000; i++) {\n      for (let j = 0; j < 1000; j++) {\n        console.log('$'{i} '$'{j}')\n      }\n    }\n    res.end('About Page')\n  }\n  res.end('Error Page')\n})\n\nserver.listen(5000, () => console.log('Server listening on port : 5000....'))\n`.trim();\n\nconst awaitPat = `\nconst { readFile, writeFile } = require('fs').promises\n\nconst start = async () => {\n  try {\n    const first = await readFile('./content/first.txt', 'utf8')\n    const second = await readFile('./content/second.txt', 'utf8')\n    await writeFile(\n      './content/result-mind-grenade.txt',\n      'THIS IS AWESOME : '$'{first} '$'{second}',\n      { flag: 'a' }\n    )\n    console.log(first, second)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nstart();`.trim();\n\nconst fSync = `\nconst { readFileSync, writeFileSync } = require('fs')\nconst first = readFileSync('./first.txt', 'utf8')\nconst second = readFileSync('./second.txt', 'utf8')\n\nconst fun=()=>{\n    writeFileSync(\n        './result-sync.txt',\n        'Here is the result : '$'{first}, '$'{second}',\n        { flag: 'a' }\n      )\n      console.log('done with this task')\n      console.log('starting the next one')\n}\n\nmodule.exports={fun}`.trim();\n\nconst fsAsync = `\nconst { readFile, writeFile } = require('fs')\n\nconst fun=()=>{\nreadFile('./first.txt', 'utf8', (err, result) => {\n  if (err) {\n    console.log(err)\n    return\n  }\n  const first = result\n  readFile('./second.txt', 'utf8', (err, result) => {\n    if (err) {\n      console.log(err)\n      return\n    }\n    const second = result\n    writeFile(\n      './result-async.txt',\n      'Here is the result : '$'{first}, '$'{second}',\n      (err, result) => {\n        if (err) {\n          console.log(err)\n          return\n        }\n        console.log('done with this task')\n      }\n    )\n  })\n})\n}\n\nmodule.exports={fun}`.trim();\n\nconst http = `\nconst http = require('http')\n\nconst fun=()=>{\n    const server = http.createServer((req, res) => {\n          if (req.url === '/') {\n            res.end('Welcome to our home page')\n          }\n          if (req.url === '/about') {\n            res.end('Here is our short history')\n          }\n          res.end('\n          <h1>Oops!</h1>\n        <p>We can't seem to find the page you are looking for</p>\n        <a href=\"/\">back home</a>\n          ')\n          \n        if (req.url === '/') {\n          res.end('Welcome to our home page')\n        } else if (req.url === '/about') {\n          res.end('Here is our short history')\n        } else {\n          res.end('\n          <h1>Oops!</h1>\n          <p>We can't seem to find the page you are looking for</p>\n          <a href=\"/\">back home</a>\n          ')\n        }\n      })\n      server;\n}\n\nmodule.exports={fun}`.trim();\n\nconst EventEmitter = `\nconst EventEmitter = require('events')\nconst customEmitter = new EventEmitter()\n\ncustomEmitter.on('response', (name, id) => {\n  console.log('data recieved user '$'{name} with id:'$'{id}')\n})\n\ncustomEmitter.on('response', () => {\n  console.log('some other logic here')\n})\n\ncustomEmitter.emit('response', 'john', 34)\n`.trim();\n\nconst requestEvent = `\nconst http = require('http')\nconst server = http.createServer()\n\nserver.on('request', (req, res) => {\n  res.end('Welcome')\n})\n\nserver.listen(5000)\n`.trim();\n\nconst createBigFile = `\nconst { writeFileSync } = require('fs')\n\nconst fun=()=>{\n    for (let i = 0; i < 10000; i++) {\n        writeFileSync('./big.txt', 'hello world '$'{i}\\n', { flag: 'a' })\n      }\n}\n\nmodule.exports={fun}`.trim();\n\nconst streams = `\nconst { createReadStream } = require('fs')\n// const stream = createReadStream('./content/big.txt', { highWaterMark: 90000 })\n// const stream = createReadStream('../content/big.txt', { encoding: 'utf8' })\nconst stream = createReadStream('./big.txt')\n\n\nconst fun=()=>{\n    stream.on('data', (result) => {\n        console.log(result)\n      })\n      stream.on('error', (err) => console.log(err))\n}\n\nmodule.exports={fun}`.trim();\n\nconst httpStream = `\nvar http = require('http')\nvar fs = require('fs')\n\nconst fun=()=>{\n    http\n    .createServer(function (req, res) {\n      // const text = fs.readFileSync('./content/big.txt', 'utf8')\n      // res.end(text)\n      const fileStream = fs.createReadStream('./content/big.txt', 'utf8')\n      fileStream.on('open', () => {\n        fileStream.pipe(res)\n      })\n      fileStream.on('error', (err) => {\n        res.end(err)\n      })\n    })\n    .listen(5001)\n}\n\nmodule.exports={fun}`.trim();\n\n\nclass Ejs extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>modules</h3>\n              Every file is module by default.<br/>\n              Modules - Encapsulated Code (only share minimum)\n              <div style={titles}>\n                <PrismCode\n                  code={modules}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Async-Patterns</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={patterns}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Await-Pattern</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={awaitPat}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>fs-sync</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={fSync}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <h3>fs-async</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={fsAsync}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Http</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={http}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>EventEmitter</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={EventEmitter}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Request-Event</h3>\n              Emits request event subcribe to it / listen for it / respond to it.\n              <div style={titles}>\n                <PrismCode\n                  code={requestEvent}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>create Big File</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={createBigFile}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Streams</h3>\n              default 64kb<br/>\n              last buffer - remainder<br/>\n              highWaterMark - control size<br/>\n              <div style={titles}>\n                <PrismCode\n                  code={streams}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>http-stream</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={httpStream}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Ejs));\n"]},"metadata":{},"sourceType":"module"}