{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/pythone/deeppy/load_search.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst appy = `\nfrom flask import Flask, render_template, request\nimport mysql.connector\n  \napp = Flask(__name__) #creating the Flask class object   \n \n@app.route('/')   \ndef student():  \n    return render_template('test.html'); \n    \n@app.route('/result', methods=['POST', 'GET']) \ndef result():\n  mydb=mysql.connector.connect(\n    host=\"localhost\",\n    user=\"root\",\n    password=\"\",\n    database=\"myflaskapp\"\n  )\n  \n  mycursor=mydb.cursor()\n  if request.method=='POST':\n    result=request.form\n    title=result['title']\n    mycursor.execute(\"select id, title, body, author, create_date from articles where title='\"+title+\"'\")\n    r=mycursor.fetchone()\n    mydb.commit()\n    mycursor.close()\n    return render_template('index.html',r=r)\n    \napp.run(debug=True)\n  \nif __name__ =='__main__':  \n    app.run(debug = True)  `.trim();\nconst test = `\n<html>\n  <body>\n    <form action = \"http://127.0.0.1:5000/result\" method=\"POST\">\n    <p>Name <input type=\"text\" name=\"title\" /></p>\n    <p>Name <input type=\"submit\" value=\"submit\" /></p>\n    </form>\n  </body>\n</html>`.trim();\nconst index = `\n<html>\n  <body>\n<form action = \"http://127.0.0.1:5000/result\" method=\"POST\">\n  \n  <p>Id <input type=\"text\" value=\"{{r[0]}}\" name=\"id\" /></p>\n  <p>Title <input type=\"text\" value=\"{{r[1]}}\" name=\"title\" /></p>\n  <p>Body <input type=\"text\" value=\"{{r[2]}}\" name=\"body\" /></p>\n  <p>Author <input type=\"text\" value=\"{{r[3]}}\" name=\"author\" /></p>\n  <p>create_date <input type=\"text\" value=\"{{r[4]}}\" name=\"create_date\" /></p>\n  \n  <p><input type=\"submit\" name=\"submit\" /></p>\n  \n</form>\n</body>\n</html>`.trim();\n\nclass LoadSearch extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Load Search\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"app.py\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: appy,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"templates/test.html\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: test,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"templates/index.html\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: index,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(LoadSearch);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/pythone/deeppy/load_search.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","appy","trim","test","index","LoadSearch","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst appy = `\nfrom flask import Flask, render_template, request\nimport mysql.connector\n  \napp = Flask(__name__) #creating the Flask class object   \n \n@app.route('/')   \ndef student():  \n    return render_template('test.html'); \n    \n@app.route('/result', methods=['POST', 'GET']) \ndef result():\n  mydb=mysql.connector.connect(\n    host=\"localhost\",\n    user=\"root\",\n    password=\"\",\n    database=\"myflaskapp\"\n  )\n  \n  mycursor=mydb.cursor()\n  if request.method=='POST':\n    result=request.form\n    title=result['title']\n    mycursor.execute(\"select id, title, body, author, create_date from articles where title='\"+title+\"'\")\n    r=mycursor.fetchone()\n    mydb.commit()\n    mycursor.close()\n    return render_template('index.html',r=r)\n    \napp.run(debug=True)\n  \nif __name__ =='__main__':  \n    app.run(debug = True)  `.trim();\n\nconst test = `\n<html>\n  <body>\n    <form action = \"http://127.0.0.1:5000/result\" method=\"POST\">\n    <p>Name <input type=\"text\" name=\"title\" /></p>\n    <p>Name <input type=\"submit\" value=\"submit\" /></p>\n    </form>\n  </body>\n</html>`.trim();\n\nconst index = `\n<html>\n  <body>\n<form action = \"http://127.0.0.1:5000/result\" method=\"POST\">\n  \n  <p>Id <input type=\"text\" value=\"{{r[0]}}\" name=\"id\" /></p>\n  <p>Title <input type=\"text\" value=\"{{r[1]}}\" name=\"title\" /></p>\n  <p>Body <input type=\"text\" value=\"{{r[2]}}\" name=\"body\" /></p>\n  <p>Author <input type=\"text\" value=\"{{r[3]}}\" name=\"author\" /></p>\n  <p>create_date <input type=\"text\" value=\"{{r[4]}}\" name=\"create_date\" /></p>\n  \n  <p><input type=\"submit\" name=\"submit\" /></p>\n  \n</form>\n</body>\n</html>`.trim();\n\n\nclass LoadSearch extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Load Search</h3>\n              <b>app.py</b>\n              <div style={titles}>\n                <PrismCode\n                  code={appy}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/test.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={test}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/index.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={index}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(LoadSearch));\n"]},"metadata":{},"sourceType":"module"}