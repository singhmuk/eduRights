{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/sortItems.js\";\nimport React, { Component } from \"react\";\nimport PrismCode from \"../prismCode\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport \"../styles.css\";\nimport Sidebar from \"../sidebar\";\nconst titles = {\n  backgroundColor: \"#F0F8FF\",\n  padding: \"1px\",\n  fontSize: \"16px\"\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst contTimmer = `\nfunction App() {\n  const [timer, setTimer] = useState(60);\n  const [intervalId, setIntervalId] = useState(null);\n\n  const startTimer = () => {\n    if (intervalId) return;\n    const id = setInterval(() => {\n      setTimer((t) => t - 1);\n    }, 1000);\n    setIntervalId(id);\n  };\n\n  const pauseTimer = () => {\n    if (!intervalId) return;\n    clearInterval(intervalId);\n    setIntervalId(null);\n  };\n\n  useEffect(() => {\n    if (timer === 0) {\n      pauseTimer();\n    }\n  }, [timer]);\n\n  return (\n    <div>\n      <h1>{timer}</h1>\n      <button onClick={startTimer}>{intervalId ? \"Pause\" : \"Start\"}</button>\n      <button onClick={pauseTimer} disabled={!intervalId}>\n        Pause\n      </button>\n    </div>\n  );\n}\n`.trim();\nconst fizzBuzz = `\nconst App = () => {\n  const [counter, setCounter] = useState(1);\n\n  function handleCounter() {\n    setCounter(counter + 1);\n  }\n\n  return (\n    <div>\n      <h1>\n        {counter % 3 === 0 ? \"Fizz\" : \"\"}\n        {counter % 5 === 0 ? \"Buzz\" : \"\"}\n        {counter % 3 !== 0 && counter % 5 !== 0 ? counter : \"\"}\n      </h1>\n      <button onClick={handleCounter}>Next</button>\n    </div>\n  );\n};\n`.trim();\nconst ratings = `\nconst Star = ({ starId, marked }) => {\n  return (\n    <span\n      star-id={starId}\n      style={{ color: \"green\", cursor: \"pointer\" }}\n    >\n      {marked ? \"★\" : \"☆\"}  // \"/u2605\" : \"/u2606\"\n    </span>\n  );\n};\n\nconst App = () => {\n  const [selection, setSelection] = React.useState(0);\n\n  const [rating, setRating] = React.useState(0);\n\n  const hoverOver = event => {\n    let starId = 0;\n    if (event && event.target && event.target.getAttribute(\"star-id\")) {\n      starId = event.target.getAttribute(\"star-id\");\n    }\n    setSelection(starId);\n  };\n\n  return (\n    <div\n      onMouseOver={hoverOver}\n      onMouseOut={() => hoverOver(null)}\n      onClick={event => setRating(event.target.getAttribute(\"star-id\"))}\n    >\n      {Array.from({ length: 5 }, (v, i) => (\n        <Star starId={i + 1} marked={selection ? selection > i : rating > i} />\n      ))}\n    </div>\n  );\n};`.trim();\n\nclass SortItems extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"2. A click to start the countdown timer and a second one to Pause the timer in the same button\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: contTimmer,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"4. FizzBuzz :\"), \" If counter = 3, then print 'Fizz', counter = 5, 'Buzz' else print counter values.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: fizzBuzz,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"7. Start Rating\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: ratings,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(SortItems);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/sortItems.js"],"names":["React","Component","PrismCode","Prism","Grid","Paper","withStyles","List","Sidebar","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","contTimmer","trim","fizzBuzz","ratings","SortItems","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PrismCode from \"../prismCode\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport \"../styles.css\";\nimport Sidebar from \"../sidebar\";\n\nconst titles = { backgroundColor: \"#F0F8FF\", padding: \"1px\", fontSize: \"16px\" };\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n});\n\nconst contTimmer = `\nfunction App() {\n  const [timer, setTimer] = useState(60);\n  const [intervalId, setIntervalId] = useState(null);\n\n  const startTimer = () => {\n    if (intervalId) return;\n    const id = setInterval(() => {\n      setTimer((t) => t - 1);\n    }, 1000);\n    setIntervalId(id);\n  };\n\n  const pauseTimer = () => {\n    if (!intervalId) return;\n    clearInterval(intervalId);\n    setIntervalId(null);\n  };\n\n  useEffect(() => {\n    if (timer === 0) {\n      pauseTimer();\n    }\n  }, [timer]);\n\n  return (\n    <div>\n      <h1>{timer}</h1>\n      <button onClick={startTimer}>{intervalId ? \"Pause\" : \"Start\"}</button>\n      <button onClick={pauseTimer} disabled={!intervalId}>\n        Pause\n      </button>\n    </div>\n  );\n}\n`.trim();\n\nconst fizzBuzz = `\nconst App = () => {\n  const [counter, setCounter] = useState(1);\n\n  function handleCounter() {\n    setCounter(counter + 1);\n  }\n\n  return (\n    <div>\n      <h1>\n        {counter % 3 === 0 ? \"Fizz\" : \"\"}\n        {counter % 5 === 0 ? \"Buzz\" : \"\"}\n        {counter % 3 !== 0 && counter % 5 !== 0 ? counter : \"\"}\n      </h1>\n      <button onClick={handleCounter}>Next</button>\n    </div>\n  );\n};\n`.trim();\n\nconst ratings = `\nconst Star = ({ starId, marked }) => {\n  return (\n    <span\n      star-id={starId}\n      style={{ color: \"green\", cursor: \"pointer\" }}\n    >\n      {marked ? \"★\" : \"☆\"}  // \"/u2605\" : \"/u2606\"\n    </span>\n  );\n};\n\nconst App = () => {\n  const [selection, setSelection] = React.useState(0);\n\n  const [rating, setRating] = React.useState(0);\n\n  const hoverOver = event => {\n    let starId = 0;\n    if (event && event.target && event.target.getAttribute(\"star-id\")) {\n      starId = event.target.getAttribute(\"star-id\");\n    }\n    setSelection(starId);\n  };\n\n  return (\n    <div\n      onMouseOver={hoverOver}\n      onMouseOut={() => hoverOver(null)}\n      onClick={event => setRating(event.target.getAttribute(\"star-id\"))}\n    >\n      {Array.from({ length: 5 }, (v, i) => (\n        <Star starId={i + 1} marked={selection ? selection > i : rating > i} />\n      ))}\n    </div>\n  );\n};`.trim();\n\nclass SortItems extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4>\n              <Sidebar />\n            </h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <b>\n                2. A click to start the countdown timer and a second one to\n                Pause the timer in the same button\n              </b>\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={contTimmer}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>4. FizzBuzz :</b> If counter = 3, then print 'Fizz', counter =\n              5, 'Buzz' else print counter values.\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={fizzBuzz}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <b>7. Start Rating</b>\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={ratings}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(SortItems);\n"]},"metadata":{},"sourceType":"module"}