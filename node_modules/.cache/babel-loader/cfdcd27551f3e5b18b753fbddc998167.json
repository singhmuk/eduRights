{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/angularjsd/angular 12/output.js\";\nimport React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport \"../../ReactJs/styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../../ReactJs/prismCode\";\nconst titles = {\n  backgroundColor: \"#F0F8FF\",\n  padding: \"1px\",\n  fontSize: \"16px\"\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst parentChild = `\n//html of AppComponent.ts\n<app-childs [items]=\"data\"></app-childs>\n\nexport class AppComponent {\n  data={ id:1, name:'Mukesh' }\n}\n\n\n//html of ChildsComponent.ts\n{{items.id}}\n\nexport class ChildsComponent {\n  @Input() items:any\n  constructor() { }\n}\n`.trim();\nconst childParent = `\n//html\n <app-childs (parentFun)=\"parentFun($event)\"></app-childs>\n  {{name}}\n\nexport class AppComponent {\n  title = 'childparrent';\n  name = \"\";\n  parentFun(data:any){\n    console.log(data)\n    this.name = data.name\n  }\n}\n\n\n//html\n<button (click)='sendData()'> CallParent</button>\n\nexport class ChildsComponent {\n@Output() parentFun:EventEmitter<any> = new EventEmitter()\n\n  sendData(){\n     let user = {\n      name: \"Mukesh\",\n      age: 30\n    }\n    this.parentFun.emit(user)\n  }\n}\n`.trim();\nconst keyInput = `\n//html\n<input type = \"number\" min = \"0\" max = \"100\" [value] = \"progress\">\n\nexport class AppComponent {\n  progress=0;\n}`.trim();\nconst ifConditions = `\n//html\n{{hoursOfDay}}\n<button (click) = \"checkTime()\"> Check</button> \n{{msg}}\n\nexport class AppComponent {\n hoursOfDay = 9;\n msg=\"\"\n\n checkTime(){\n   this.msg = this.hoursOfDay <12 ? \"Good Morning\" : \"Keep on\";\n   this.hoursOfDay = this.hoursOfDay + 1;\n }\n}\n}`.trim();\nconst ifElse = `\n//html\n<button (click)=\"getInfo()\">if</button>\n  <div *ngIf=\"isTrue; else elseblock\">\n    {{data}}\n  </div>\n  <ng-template #elseblock>\n    Else\n  </ng-template>\n\nexport class AppComponent {\n  data=\"If\";\n  isTrue=false\n\n  getInfo(){\n    this.isTrue = !this.isTrue\n  }\n}`.trim();\nconst ifElseThen = `\n//html\n<button (click)=\"getInfo()\"> click</button>\n  <div *ngIf=\"isTrue; then thenblock else elseblock\"> {{data}}</div>\n  <ng-template #thenblock>\n    Then\n  </ng-template>\n  <ng-template #elseblock>\n    Else\n  </ng-template>\n\n\nexport class AppComponent {\n  data=\"If\";\n  isTrue=false\n\n  getInfo(){\n    this.isTrue = !this.isTrue\n  }\n}`.trim();\nconst switchCase = `\n//html\n< select(change)=\"getValue($event)\" >\n    <option value=\"default\">Select</option>\n    <option value=\"laptop\">Laptop</option>\n    <option value=\"tv\">TV</option>\n    <option value=\"mobile\">Mobile</option>\n    <option value=\"machine\">Machine</option>\n  </select >\n\n<div [ngSwitch] = \"selectedItems\">\n    <p *ngSwitchCase=\"'laptop'\"> Laptop</p>\n    <p *ngSwitchCase=\"'tv'\"> TV</p>\n    <p *ngSwitchCase=\"'mobile'\"> Mobile</p>\n    <p *ngSwitchCase=\"'machine'\"> Machine</p>\n  </div >\n\n    \nexport class AppComponent {\n  selectedItems?: string;\n\n  getValue(e){\n    this.selectedItems = e.target.value\n  }\n}`.trim();\n\nclass Out extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"className\")));\n  }\n\n}\n\nexport default withStyles(styles)(Out);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/angularjsd/angular 12/output.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","parentChild","trim","childParent","keyInput","ifConditions","ifElse","ifElseThen","switchCase","Out","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,EAAkCC,IAAlC,QAA8C,mBAA9C;AAEA,OAAO,0BAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,MAAMC,MAAM,GAAG;AAAEC,EAAAA,eAAe,EAAE,SAAnB;AAA8BC,EAAAA,OAAO,EAAE,KAAvC;AAA8CC,EAAAA,QAAQ,EAAE;AAAxD,CAAf;;AAEA,MAAMC,MAAM,GAAIC,KAAD,KAAY;AACzBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH;AAELN,IAAAA,OAAO,EAAEG,KAAK,CAACG,OAAN,CAAc,CAAd;AAFJ,GADkB;AAKzBC,EAAAA,QAAQ,EAAE;AACRF,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADA,GALe;AAQzBE,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF;AARc,CAAZ,CAAf;;AAaA,MAAMC,WAAW,GAAI;;;;;;;;;;;;;;;;CAAD,CAgBlBC,IAhBkB,EAApB;AAkBA,MAAMC,WAAW,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAD,CA6BlBD,IA7BkB,EAApB;AA+BA,MAAME,QAAQ,GAAI;;;;;;EAAD,CAMdF,IANc,EAAjB;AAQA,MAAMG,YAAY,GAAI;;;;;;;;;;;;;;;EAAD,CAelBH,IAfkB,EAArB;AAiBA,MAAMI,MAAM,GAAI;;;;;;;;;;;;;;;;;EAAD,CAiBZJ,IAjBY,EAAf;AAmBA,MAAMK,UAAU,GAAI;;;;;;;;;;;;;;;;;;;EAAD,CAmBhBL,IAnBgB,EAAnB;AAqBA,MAAMM,UAAU,GAAI;;;;;;;;;;;;;;;;;;;;;;;;EAAD,CAwBhBN,IAxBgB,EAAnB;;AA0BA,MAAMO,GAAN,SAAkB5B,SAAlB,CAA4B;AAC1B6B,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,UAAU,CAAC,MAAM7B,KAAK,CAAC8B,YAAN,EAAP,EAA6B,CAA7B,CAAV;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,WACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAED,OAAO,CAACnB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADF,EAQE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEmB,OAAO,CAACnB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CARF,CADF;AAgBD;;AAtByB;;AAyB5B,eAAeV,UAAU,CAACQ,MAAD,CAAV,CAAmBgB,GAAnB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport \"../../ReactJs/styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../../ReactJs/prismCode\";\n\nconst titles = { backgroundColor: \"#F0F8FF\", padding: \"1px\", fontSize: \"16px\" };\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n});\n\nconst parentChild = `\n//html of AppComponent.ts\n<app-childs [items]=\"data\"></app-childs>\n\nexport class AppComponent {\n  data={ id:1, name:'Mukesh' }\n}\n\n\n//html of ChildsComponent.ts\n{{items.id}}\n\nexport class ChildsComponent {\n  @Input() items:any\n  constructor() { }\n}\n`.trim();\n\nconst childParent = `\n//html\n <app-childs (parentFun)=\"parentFun($event)\"></app-childs>\n  {{name}}\n\nexport class AppComponent {\n  title = 'childparrent';\n  name = \"\";\n  parentFun(data:any){\n    console.log(data)\n    this.name = data.name\n  }\n}\n\n\n//html\n<button (click)='sendData()'> CallParent</button>\n\nexport class ChildsComponent {\n@Output() parentFun:EventEmitter<any> = new EventEmitter()\n\n  sendData(){\n     let user = {\n      name: \"Mukesh\",\n      age: 30\n    }\n    this.parentFun.emit(user)\n  }\n}\n`.trim();\n\nconst keyInput = `\n//html\n<input type = \"number\" min = \"0\" max = \"100\" [value] = \"progress\">\n\nexport class AppComponent {\n  progress=0;\n}`.trim();\n\nconst ifConditions = `\n//html\n{{hoursOfDay}}\n<button (click) = \"checkTime()\"> Check</button> \n{{msg}}\n\nexport class AppComponent {\n hoursOfDay = 9;\n msg=\"\"\n\n checkTime(){\n   this.msg = this.hoursOfDay <12 ? \"Good Morning\" : \"Keep on\";\n   this.hoursOfDay = this.hoursOfDay + 1;\n }\n}\n}`.trim();\n\nconst ifElse = `\n//html\n<button (click)=\"getInfo()\">if</button>\n  <div *ngIf=\"isTrue; else elseblock\">\n    {{data}}\n  </div>\n  <ng-template #elseblock>\n    Else\n  </ng-template>\n\nexport class AppComponent {\n  data=\"If\";\n  isTrue=false\n\n  getInfo(){\n    this.isTrue = !this.isTrue\n  }\n}`.trim();\n\nconst ifElseThen = `\n//html\n<button (click)=\"getInfo()\"> click</button>\n  <div *ngIf=\"isTrue; then thenblock else elseblock\"> {{data}}</div>\n  <ng-template #thenblock>\n    Then\n  </ng-template>\n  <ng-template #elseblock>\n    Else\n  </ng-template>\n\n\nexport class AppComponent {\n  data=\"If\";\n  isTrue=false\n\n  getInfo(){\n    this.isTrue = !this.isTrue\n  }\n}`.trim();\n\nconst switchCase = `\n//html\n< select(change)=\"getValue($event)\" >\n    <option value=\"default\">Select</option>\n    <option value=\"laptop\">Laptop</option>\n    <option value=\"tv\">TV</option>\n    <option value=\"mobile\">Mobile</option>\n    <option value=\"machine\">Machine</option>\n  </select >\n\n<div [ngSwitch] = \"selectedItems\">\n    <p *ngSwitchCase=\"'laptop'\"> Laptop</p>\n    <p *ngSwitchCase=\"'tv'\"> TV</p>\n    <p *ngSwitchCase=\"'mobile'\"> Mobile</p>\n    <p *ngSwitchCase=\"'machine'\"> Machine</p>\n  </div >\n\n    \nexport class AppComponent {\n  selectedItems?: string;\n\n  getValue(e){\n    this.selectedItems = e.target.value\n  }\n}`.trim();\n\nclass Out extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4>\n              <Sidebar />\n            </h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n          className\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Out);\n"]},"metadata":{},"sourceType":"module"}