{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var projection=\"\\n@Component({\\n  selector: 'app-root',\\n  template: '{{data.name}}',\\n})\\nexport class AppComponent {\\n  data={\\n    id:1,\\n    name:'Mukesh'\\n  }\\n}\\n\".trim();var parentChild=\"\\nimport { Component, Input } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-root',\\n  template: '<app-childs [items]=\\\"data\\\"></app-childs>',\\n})\\nexport class AppComponent {\\n  data={\\n    id:1,\\n    name:'Mukesh'\\n  }\\n}\\n\\n\\n@Component({\\n  selector: 'app-childs',\\n  template: '{{items.id}}',\\n})\\nexport class ChildsComponent {\\n  @Input() items:any\\n  constructor() { }\\n}\\n\".trim();var childParent=\"\\nimport { Component, Output, EventEmitter } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-root',\\n  template: '<app-childs (parentFun)=\\\"parentFun($event)\\\"></app-childs>\\n  {{name}}\\n'})\\nexport class AppComponent {\\n  title = 'childparrent';\\n  name = \\\"\\\";\\n  parentFun(data:any){\\n    console.log(data)\\n    this.name = data.name\\n  }\\n}\\n\\n\\n@Component({\\n  selector: 'app-childs',\\n  template: '<button (click)='sendData()'> CallParent</button>',\\n})\\nexport class ChildsComponent {\\n\\n  @Output() parentFun:EventEmitter<any> = new EventEmitter()\\n\\n  sendData(){\\n     let user = {\\n      name: \\\"Mukesh\\\",\\n      age: 30\\n    }\\n    this.parentFun.emit(user)\\n  }\\n}\\n\".trim();var counting=\"\\n@Component({\\n  selector: 'app-root',\\n  template: '\\n  <button (click)=\\\"handleCount()\\\"> Count</button>\\n    {{ count }}\\n<button (click) = \\\"handleButton()\\\"> Pause</button>',})\\n\\nexport class AppComponent {\\n  title = 'demo';\\n  count=0;\\n  isPause: true;\\n\\n  handleCount(){\\n    if(this.isPause==true){\\n    this.count=this.count+1\\n    }\\n    else{\\n      this.count=this.count-1\\n    }\\n  }\\n\\n  handleButton(){\\n    this.isPause = !this.isPause\\n  }\\n}\".trim();var toggle=\"\\n@Component({\\n  selector: 'app-root',\\n  template: '{{ toggle }}\\n<button (click) = \\\"onToggle()\\\"> Toggle</button>\\n    ',\\n})\\n\\nexport class AppComponent {\\n  toggle=false;\\n\\n  onToggle(){\\n    this.toggle ? \\\"ON\\\" : \\\"OFF\\\";\\n    this.toggle = !this.toggle\\n  }\\n}\".trim();var keyInput=\"\\n@Component({\\n  selector: 'app-root',\\n  template: '\\n  <input type = \\\"number\\\" min = \\\"0\\\" max = \\\"100\\\"\\n  [value] = \\\"progress\\\">\\n        ',\\n      })\\n\\nexport class AppComponent {\\n  constructor() { }\\n  progress=0;\\n}\".trim();var ifConditions=\"\\n@Component({\\n  selector: 'app-root',\\n  template: '\\n{{hoursOfDay}}<br/>\\n    <button (click) = \\\"checkTime()\\\"> Check</button> <br/>\\n{{msg}}\\n',})\\n\\nexport class AppComponent {\\n hoursOfDay = 9;\\n msg=\\\"\\\"\\n\\n checkTime(){\\n   this.msg = this.hoursOfDay <12 ? \\\"Good Morning\\\" : \\\"Keep on\\\";\\n   this.hoursOfDay = this.hoursOfDay + 1;\\n }\\n}\\n}\".trim();var ifElse=\"\\n@Component({\\n  selector: 'app-root',\\n  template: '\\n  <button (click)=\\\"getInfo()\\\">if</button>\\n    <div *ngIf=\\\"isTrue; else elseblock\\\">\\n      {{data}}\\n    </div>\\n  <ng-template #elseblock>\\n    Else\\n  </ng-template>\\n  ',\\n})\\nexport class AppComponent {\\n  data=\\\"If\\\";\\n  isTrue=false\\n\\n  getInfo(){\\n    this.isTrue = !this.isTrue\\n  }\\n}\".trim();var ifElseThen=\"\\n@Component({\\n  selector: 'app-root',\\n  template: '\\n  <button (click)=\\\"getInfo()\\\"> click</button>\\n    <div *ngIf=\\\"isTrue; then thenblock else elseblock\\\"> {{data}}</div>\\n    <ng-template #thenblock>\\n      Then\\n    </ng-template>\\n    <ng-template #elseblock>\\n      Else\\n    </ng-template>\\n  ',\\n})\\nexport class AppComponent {\\n  data=\\\"If\\\";\\n  isTrue=false\\n\\n  getInfo(){\\n    this.isTrue = !this.isTrue\\n  }\\n}\".trim();var switchCase=\"\\n@Component({\\n  selector: 'app-root',\\n  template: '\\n  < select(change)=\\\"getValue($event)\\\" >\\n      <option value=\\\"default\\\">Select</option>\\n      <option value=\\\"laptop\\\">Laptop</option>\\n      <option value=\\\"tv\\\">TV</option>\\n      <option value=\\\"mobile\\\">Mobile</option>\\n      <option value=\\\"machine\\\">Machine</option>\\n    </select >\\n\\n  <div [ngSwitch] = \\\"selectedItems\\\">\\n    <p *ngSwitchCase=\\\"'laptop'\\\"> Laptop</p>\\n      <p *ngSwitchCase=\\\"'tv'\\\"> TV</p>\\n        <p *ngSwitchCase=\\\"'mobile'\\\"> Mobile</p>\\n          <p *ngSwitchCase=\\\"'machine'\\\"> Machine</p>\\n    </div >\\n  ',\\n})\\nexport class AppComponent {\\n  selectedItems?: string;\\n\\n  getValue(e){\\n    this.selectedItems = e.target.value\\n  }\\n}\".trim();var pushSplice=\"\\n@Component({\\n  selector: 'app-root',\\n  template: '\\n    <input type = \\\"text\\\" name = \\\"\\\" #uname><br/>\\n    <button (click) = \\\"createUser(uname)\\\">Create</button>\\n\\n\\n  <table>\\n    <tr *ngFor=\\\"let user of users; let i=index\\\">\\n    <td>{{user.name}}</td>\\n    <button (click)=\\\"removeUser(i)\\\">X</button>\\n      </tr>\\n    </table>\\n  '',\\n})\\nexport class AppComponent {\\n  users = [];\\n\\n  createUser(uname){\\n    this.users.push({\\n      name:uname.value\\n    })\\n  }\\n\\n  removeUser(id){\\n    this.users.splice(id, 1)\\n  }\\n}\".trim();var Projection12=/*#__PURE__*/function(_Component){_inherits(Projection12,_Component);function Projection12(){_classCallCheck(this,Projection12);return _possibleConstructorReturn(this,_getPrototypeOf(Projection12).apply(this,arguments));}_createClass(Projection12,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Content projection\"),React.createElement(\"ul\",null,React.createElement(\"li\",null,\"Is used to project content in a component.\"),React.createElement(\"li\",null,\"Allows to insert a shadow DOM in our component.\"),React.createElement(\"li\",null,\"In Angular, achieve content projection using \",React.createElement(\"b\",null,\"'ng-content'  '/ng-content' \"),\".  You\")),React.createElement(\"br\",null),React.createElement(\"ol\",null,React.createElement(\"li\",null,\"Single-slot content projection\"),React.createElement(\"li\",null,\"Multi-slot content projection\"),React.createElement(\"li\",null,\"Conditional content projection\")),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:projection,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Parent-Child\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:parentChild,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Child-Parent\"),\"The @Output() decorator in a child component or directive allows data to flow from the child to the parent.\",React.createElement(\"br\",null),React.createElement(\"br\",null),\"The Child Component exposes an EventEmitter Property. This Property is adorned with the @Output decorator. When Child Component needs to communicate with the parent it raises the event. The Parent Component listens to that event and reacts to it.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:childParent,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Count Inc-Dec\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:counting,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Toggle\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:toggle,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Key-input\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:keyInput,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"If-Condition\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:ifConditions,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"If-Else\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:ifElse,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"If-Else-Then\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:ifElseThen,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Switch\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:switchCase,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Push Splice\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:pushSplice,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return Projection12;}(Component);export default withStyles(styles)(Projection12);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/angularjsd/angular 12/projection.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","projection","trim","parentChild","childParent","counting","toggle","keyInput","ifConditions","ifElse","ifElseThen","switchCase","pushSplice","Projection12","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst projection = `\n@Component({\n  selector: 'app-root',\n  template: '{{data.name}}',\n})\nexport class AppComponent {\n  data={\n    id:1,\n    name:'Mukesh'\n  }\n}\n`.trim();\n\nconst parentChild = `\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '<app-childs [items]=\"data\"></app-childs>',\n})\nexport class AppComponent {\n  data={\n    id:1,\n    name:'Mukesh'\n  }\n}\n\n\n@Component({\n  selector: 'app-childs',\n  template: '{{items.id}}',\n})\nexport class ChildsComponent {\n  @Input() items:any\n  constructor() { }\n}\n`.trim();\n\nconst childParent = `\nimport { Component, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '<app-childs (parentFun)=\"parentFun($event)\"></app-childs>\n  {{name}}\n'})\nexport class AppComponent {\n  title = 'childparrent';\n  name = \"\";\n  parentFun(data:any){\n    console.log(data)\n    this.name = data.name\n  }\n}\n\n\n@Component({\n  selector: 'app-childs',\n  template: '<button (click)='sendData()'> CallParent</button>',\n})\nexport class ChildsComponent {\n\n  @Output() parentFun:EventEmitter<any> = new EventEmitter()\n\n  sendData(){\n     let user = {\n      name: \"Mukesh\",\n      age: 30\n    }\n    this.parentFun.emit(user)\n  }\n}\n`.trim();\n\nconst counting = `\n@Component({\n  selector: 'app-root',\n  template: '\n  <button (click)=\"handleCount()\"> Count</button>\n    {{ count }}\n<button (click) = \"handleButton()\"> Pause</button>',})\n\nexport class AppComponent {\n  title = 'demo';\n  count=0;\n  isPause: true;\n\n  handleCount(){\n    if(this.isPause==true){\n    this.count=this.count+1\n    }\n    else{\n      this.count=this.count-1\n    }\n  }\n\n  handleButton(){\n    this.isPause = !this.isPause\n  }\n}`.trim();\n\nconst toggle = `\n@Component({\n  selector: 'app-root',\n  template: '{{ toggle }}\n<button (click) = \"onToggle()\"> Toggle</button>\n    ',\n})\n\nexport class AppComponent {\n  toggle=false;\n\n  onToggle(){\n    this.toggle ? \"ON\" : \"OFF\";\n    this.toggle = !this.toggle\n  }\n}`.trim();\n\nconst keyInput = `\n@Component({\n  selector: 'app-root',\n  template: '\n  <input type = \"number\" min = \"0\" max = \"100\"\n  [value] = \"progress\">\n        ',\n      })\n\nexport class AppComponent {\n  constructor() { }\n  progress=0;\n}`.trim();\n\nconst ifConditions = `\n@Component({\n  selector: 'app-root',\n  template: '\n{{hoursOfDay}}<br/>\n    <button (click) = \"checkTime()\"> Check</button> <br/>\n{{msg}}\n',})\n\nexport class AppComponent {\n hoursOfDay = 9;\n msg=\"\"\n\n checkTime(){\n   this.msg = this.hoursOfDay <12 ? \"Good Morning\" : \"Keep on\";\n   this.hoursOfDay = this.hoursOfDay + 1;\n }\n}\n}`.trim();\n\nconst ifElse = `\n@Component({\n  selector: 'app-root',\n  template: '\n  <button (click)=\"getInfo()\">if</button>\n    <div *ngIf=\"isTrue; else elseblock\">\n      {{data}}\n    </div>\n  <ng-template #elseblock>\n    Else\n  </ng-template>\n  ',\n})\nexport class AppComponent {\n  data=\"If\";\n  isTrue=false\n\n  getInfo(){\n    this.isTrue = !this.isTrue\n  }\n}`.trim();\n\nconst ifElseThen = `\n@Component({\n  selector: 'app-root',\n  template: '\n  <button (click)=\"getInfo()\"> click</button>\n    <div *ngIf=\"isTrue; then thenblock else elseblock\"> {{data}}</div>\n    <ng-template #thenblock>\n      Then\n    </ng-template>\n    <ng-template #elseblock>\n      Else\n    </ng-template>\n  ',\n})\nexport class AppComponent {\n  data=\"If\";\n  isTrue=false\n\n  getInfo(){\n    this.isTrue = !this.isTrue\n  }\n}`.trim();\n\nconst switchCase = `\n@Component({\n  selector: 'app-root',\n  template: '\n  < select(change)=\"getValue($event)\" >\n      <option value=\"default\">Select</option>\n      <option value=\"laptop\">Laptop</option>\n      <option value=\"tv\">TV</option>\n      <option value=\"mobile\">Mobile</option>\n      <option value=\"machine\">Machine</option>\n    </select >\n\n  <div [ngSwitch] = \"selectedItems\">\n    <p *ngSwitchCase=\"'laptop'\"> Laptop</p>\n      <p *ngSwitchCase=\"'tv'\"> TV</p>\n        <p *ngSwitchCase=\"'mobile'\"> Mobile</p>\n          <p *ngSwitchCase=\"'machine'\"> Machine</p>\n    </div >\n  ',\n})\nexport class AppComponent {\n  selectedItems?: string;\n\n  getValue(e){\n    this.selectedItems = e.target.value\n  }\n}`.trim();\n\n\nconst pushSplice = `\n@Component({\n  selector: 'app-root',\n  template: '\n    <input type = \"text\" name = \"\" #uname><br/>\n    <button (click) = \"createUser(uname)\">Create</button>\n\n\n  <table>\n    <tr *ngFor=\"let user of users; let i=index\">\n    <td>{{user.name}}</td>\n    <button (click)=\"removeUser(i)\">X</button>\n      </tr>\n    </table>\n  '',\n})\nexport class AppComponent {\n  users = [];\n\n  createUser(uname){\n    this.users.push({\n      name:uname.value\n    })\n  }\n\n  removeUser(id){\n    this.users.splice(id, 1)\n  }\n}`.trim();\n\n\nclass Projection12 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Content projection</h3>\n              <ul>\n                <li>Is used to project content in a component.</li>\n                <li>Allows to insert a shadow DOM in our component.</li>\n                <li>In Angular, achieve content projection using <b>'ng-content'  '/ng-content' </b>.  You</li>\n              </ul>\n              <br/>\n\n              <ol>\n                <li>Single-slot content projection</li>\n                <li>Multi-slot content projection</li>\n                <li>Conditional content projection</li>\n              </ol>\n              <div style={titles}>\n                <PrismCode\n                  code={projection}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Parent-Child</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={parentChild}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Child-Parent</h3>\n              The @Output() decorator in a child component or directive allows data to flow from the child to the parent.\n              <br />\n              <br />\n              The Child Component exposes an EventEmitter Property. This Property is adorned with the @Output decorator. When Child\n              Component needs to communicate with the parent it raises the event. The Parent Component listens to that event and\n              reacts to it.\n              \n              <div style={titles}>\n                <PrismCode\n                  code={childParent}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Count Inc-Dec</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={counting}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Toggle</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={toggle}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Key-input</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={keyInput}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>If-Condition</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={ifConditions}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>If-Else</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={ifElse}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>If-Else-Then</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={ifElseThen}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Switch</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={switchCase}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Push Splice</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={pushSplice}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Projection12));\n"]},"metadata":{},"sourceType":"module"}