{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var image=\"\\nimport cv2\\nprint(\\\"Package cv2 imorted\\\");\\n\\nimg = cv2.imread(\\\"D:PythonMachin_LearningopenCVResourcesimgs.jpg\\\")\\ncv2.imshow(\\\"output\\\", img)\\ncv2.waitKey(0)\\n\".trim();var video=\"\\nimport cv2\\ncap = cv2.VideoCapture(\\\"Resources/test.mp4\\\")\\n\\nwhile True:\\n    success, img = cap.read();\\n    cv2.imshow(\\\"Video\\\", img)\\n    if cv2.waitKey(1) & 0xFF == ord('q'):\\n        break;\\n\".trim();var webcam=\"\\nimport cv2\\n\\ncap = cv2.VideoCapture(0)  //0 is default for laptop camra\\ncap.set(3,640)\\ncap.set(4,640)\\nimport cv2\\n\\ncap = cv2.VideoCapture(0)  //0 is default for laptop camra\\ncap.set(3,640)\\ncap.set(4,640)\\n\".trim();var gray=\"\\nimport cv2\\n\\nimg = cv2.imread(\\\"D:PythonMachin_LearningopenCVResourcesimgs.jpg\\\")\\nimgGray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\\n\\ncv2.imshow(\\\"Gray Image\\\", imgGray)\\ncv2.waitKey(0)\\n\".trim();var blur=\"\\nimport cv2\\n\\nimg = cv2.imread(\\\"D:PythonMachin_LearningopenCVResourcesimgs.jpg\\\")\\nimgBlur = cv2.GaussianBlur(img, (7,7),0)\\n\\ncv2.imshow(\\\"Blur Image\\\", imgBlur)\\ncv2.waitKey(0)\\n\".trim();var canny=\"\\nimport cv2\\n\\nimg = cv2.imread(\\\"D:PythonMachin_LearningopenCVResourcesimgs.jpg\\\")\\nimgCanny = cv2.Canny(img, 100,100)\\n\\ncv2.imshow(\\\"Canny Image\\\", imgCanny)\\ncv2.waitKey(0)\\n\".trim();var dialation=\"\\nimport cv2\\nimport numpy as np\\n\\nimg = cv2.imread(\\\"D:PythonMachin_LearningopenCVResourcesimgs.jpg\\\")\\nkernel = np.ones((5,5),np.uint8)\\n\\nimgCanny = cv2.Canny(img, 100,100)\\nimgDialation = cv2.dilate(imgCanny, kernel, iterations=1)\\n\\ncv2.imshow(\\\"Canny Image\\\", imgCanny)\\ncv2.imshow(\\\"Dialation Image\\\", imgDialation)\\ncv2.waitKey(0)\\n\".trim();var eroded=\"\\nimport cv2\\nimport numpy as np\\n\\nimg = cv2.imread(\\\"D:PythonMachin_LearningopenCVResourcesimgs.jpg\\\")\\nkernel = np.ones((5,5),np.uint8)\\n\\nimgCanny = cv2.Canny(img, 100,100)\\nimgDialation = cv2.dilate(imgCanny, kernel, iterations=1)\\nimgEroded = cv2.erode(imgDialation, kernel, iterations=1)\\n\\ncv2.imshow(\\\"Canny Image\\\", imgCanny)\\ncv2.imshow(\\\"Dialation Image\\\", imgDialation)\\ncv2.imshow(\\\"Eroded Image\\\", imgEroded)\\ncv2.waitKey(0)\\n\".trim();var resize=\"\\nimport cv2\\nimport numpy as np\\n\\nimg = cv2.imread(\\\"D:PythonMachin_LearningopenCVResourcesimgs.jpg\\\")\\nprint(img.shape)\\n\\nimgResize = cv2.resize(img, (300,200))\\n\\ncv2.imshow(\\\"Image\\\",img)\\ncv2.imshow(\\\"Resize\\\",imgResize)\\n\\ncv2.waitKey(0)\\n\".trim();var crop=\"\\nimport cv2\\nimport numpy as np\\n\\nimg = cv2.imread(\\\"D:PythonMachin_LearningopenCVResourcesimgs.jpg\\\")\\n\\nimgCropped = img[0:200,200:500]\\n\\ncv2.imshow(\\\"Image\\\",img)\\ncv2.imshow(\\\"Cropped\\\",imgCropped)\\n\\ncv2.waitKey(0)\\n\".trim();var shapes=\"\\nimport cv2\\nimport numpy as np\\n\\nimg = cv2.imread(\\\"D:PythonMachin_LearningopenCVResourcesimgs.jpg\\\")\\nimg = np.zeros((512,512,3),np.uint8)\\nprint(img)\\nimg[:]= 255,0,0\\n\\ncv2.imshow(\\\"Image\\\", img)\\ncv2.waitKey(0)\\n\".trim();var draw=\"\\nimport cv2\\nimport numpy as np\\n\\nimg = cv2.imread(\\\"D:PythonMachin_LearningopenCVResourcesimgs.jpg\\\")\\nimg = np.zeros((512,512,3),np.uint8)\\n\\ncv2.line(img,(0,0),(300,300),(0,255),3)\\n\\ncv2.imshow(\\\"Image\\\", img)\\ncv2.waitKey(0)\\n\".trim();var Prespective=\"\\nimport cv2\\nimport numpy as np\\n\\nimg = cv2.imread(\\\"D:PythonMachin_LearningopenCVResourcesimgs.jpg\\\")\\nwidth,height = 250,350\\npts1 = np.float32([[111, 219],[287, 188],[154, 482], [352, 440]])\\npts2 = np.float32([[0,0],[width,0],[0,height],[width,height]])\\nmatrix = cv2.getPerspectiveTransform(pts1, pts2)\\nimgOutput = cv2.warpPerspective(img,matrix,(width,height))\\n\\ncv2.imshow(\\\"Output\\\", imgOutput)\\ncv2.waitKey(0)\\n\".trim();var Capture=/*#__PURE__*/function(_Component){_inherits(Capture,_Component);function Capture(){_classCallCheck(this,Capture);return _possibleConstructorReturn(this,_getPrototypeOf(Capture).apply(this,arguments));}_createClass(Capture,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Capture image:\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:image,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Capture video\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:video,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"i\",null,\"To close video press 'q' on terminal\"),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Capture video use webcam:\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:webcam,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Basic function: Find Gray Img\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:gray,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Blur\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:blur,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Canny\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:canny,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Dialation\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:dialation,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Eroded: Opposite to Dialation\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:eroded,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Opencv Convention/Resize Image\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:resize,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Crop Image\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:crop,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Shapes and Texts:\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:shapes,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Line draw:\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:draw,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Earp Prespective:\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:Prespective,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return Capture;}(Component);export default withStyles(styles)(Capture);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/ml/deepMl/capture.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","image","trim","video","webcam","gray","blur","canny","dialation","eroded","resize","crop","shapes","draw","Prespective","Capture","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = {backgroundColor:'#F0F8FF', padding:'1px', fontSize:'16px'}\n\nconst styles = theme => ({\n  paper: {\n      margin: theme.spacing(1),\n      padding: theme.spacing(1)\n  },\n  smMargin: {\n      margin: theme.spacing(1)\n  },\n  actionDiv: {\n      textAlign: \"center\"\n  }\n})\n\n\nconst image = `\nimport cv2\nprint(\"Package cv2 imorted\");\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\ncv2.imshow(\"output\", img)\ncv2.waitKey(0)\n`.trim()\n\nconst video = `\nimport cv2\ncap = cv2.VideoCapture(\"Resources/test.mp4\")\n\nwhile True:\n    success, img = cap.read();\n    cv2.imshow(\"Video\", img)\n    if cv2.waitKey(1) & 0xFF == ord('q'):\n        break;\n`.trim()\n\nconst webcam = `\nimport cv2\n\ncap = cv2.VideoCapture(0)  //0 is default for laptop camra\ncap.set(3,640)\ncap.set(4,640)\nimport cv2\n\ncap = cv2.VideoCapture(0)  //0 is default for laptop camra\ncap.set(3,640)\ncap.set(4,640)\n`.trim()\n\nconst gray = `\nimport cv2\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nimgGray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n\ncv2.imshow(\"Gray Image\", imgGray)\ncv2.waitKey(0)\n`.trim()\n\nconst blur = `\nimport cv2\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nimgBlur = cv2.GaussianBlur(img, (7,7),0)\n\ncv2.imshow(\"Blur Image\", imgBlur)\ncv2.waitKey(0)\n`.trim()\n\nconst canny = `\nimport cv2\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nimgCanny = cv2.Canny(img, 100,100)\n\ncv2.imshow(\"Canny Image\", imgCanny)\ncv2.waitKey(0)\n`.trim()\n\nconst dialation = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nkernel = np.ones((5,5),np.uint8)\n\nimgCanny = cv2.Canny(img, 100,100)\nimgDialation = cv2.dilate(imgCanny, kernel, iterations=1)\n\ncv2.imshow(\"Canny Image\", imgCanny)\ncv2.imshow(\"Dialation Image\", imgDialation)\ncv2.waitKey(0)\n`.trim()\n\nconst eroded = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nkernel = np.ones((5,5),np.uint8)\n\nimgCanny = cv2.Canny(img, 100,100)\nimgDialation = cv2.dilate(imgCanny, kernel, iterations=1)\nimgEroded = cv2.erode(imgDialation, kernel, iterations=1)\n\ncv2.imshow(\"Canny Image\", imgCanny)\ncv2.imshow(\"Dialation Image\", imgDialation)\ncv2.imshow(\"Eroded Image\", imgEroded)\ncv2.waitKey(0)\n`.trim()\n\nconst resize = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nprint(img.shape)\n\nimgResize = cv2.resize(img, (300,200))\n\ncv2.imshow(\"Image\",img)\ncv2.imshow(\"Resize\",imgResize)\n\ncv2.waitKey(0)\n`.trim()\n\nconst crop = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\n\nimgCropped = img[0:200,200:500]\n\ncv2.imshow(\"Image\",img)\ncv2.imshow(\"Cropped\",imgCropped)\n\ncv2.waitKey(0)\n`.trim()\n\nconst shapes = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nimg = np.zeros((512,512,3),np.uint8)\nprint(img)\nimg[:]= 255,0,0\n\ncv2.imshow(\"Image\", img)\ncv2.waitKey(0)\n`.trim()\n\nconst draw = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nimg = np.zeros((512,512,3),np.uint8)\n\ncv2.line(img,(0,0),(300,300),(0,255),3)\n\ncv2.imshow(\"Image\", img)\ncv2.waitKey(0)\n`.trim()\n\nconst Prespective = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nwidth,height = 250,350\npts1 = np.float32([[111, 219],[287, 188],[154, 482], [352, 440]])\npts2 = np.float32([[0,0],[width,0],[0,height],[width,height]])\nmatrix = cv2.getPerspectiveTransform(pts1, pts2)\nimgOutput = cv2.warpPerspective(img,matrix,(width,height))\n\ncv2.imshow(\"Output\", imgOutput)\ncv2.waitKey(0)\n`.trim()\n\n\nclass Capture extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n            <Grid item xs={2}>\n                <Paper className={classes.paper}>\n                    <h4><Sidebar /></h4>\n                </Paper>\n            </Grid>\n<Grid item xs={10}>\n<Paper className={classes.paper}>\n<List>\n      <h3>Capture image:</h3>\n      <div style={titles}>\n      <PrismCode\n        code={image}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Capture video</h3>\n      <div style={titles}>\n      <PrismCode\n        code={video}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <i>To close video press 'q' on terminal</i>\n      <br/>\n      <br/>\n      <h3>Capture video use webcam:</h3>\n      <div style={titles}>\n      <PrismCode\n        code={webcam}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Basic function: Find Gray Img</h3>\n      <div style={titles}>\n      <PrismCode\n        code={gray}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Blur</h3>\n      <div style={titles}>\n      <PrismCode\n        code={blur}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Canny</h3>\n      <div style={titles}>\n      <PrismCode\n        code={canny}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Dialation</h3>\n      <div style={titles}>\n      <PrismCode\n        code={dialation}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Eroded: Opposite to Dialation</h3>\n      <div style={titles}>\n      <PrismCode\n        code={eroded}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Opencv Convention/Resize Image</h3>\n      <div style={titles}>\n      <PrismCode\n        code={resize}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Crop Image</h3>\n      <div style={titles}>\n      <PrismCode\n        code={crop}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Shapes and Texts:</h3>\n      <div style={titles}>\n      <PrismCode\n        code={shapes}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Line draw:</h3>\n      <div style={titles}>\n      <PrismCode\n        code={draw}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Earp Prespective:</h3>\n      <div style={titles}>\n      <PrismCode\n        code={Prespective}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      </List>\n      </Paper>\n      </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Capture));\n"]},"metadata":{},"sourceType":"module"}