{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/mern/projects/imageGallery.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst Gallery = `\nconst gallerySchema = new Schema({\n  name: { type: String, required: true },\n  description: { type: String, required: false },\n  \n  images: {\n    type: [String],\n    required: false,\n  },\n});\n\nmodule.exports = mongoose.model(\"galleries\", gallerySchema);\n`.trim();\nconst multer = `\nconst multer = require(\"multer\");\n\nconst storage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, \"./server/uploads\");\n  },\n  filename: (req, file, cb) => {\n    cb(null, ''$'{Date.now()}_'$'{file.originalname}');\n  },\n});\n\nconst fileFilter = (req, file, cb) => {\n  if (\n    file.mimetype === \"image/jpeg\" ||\n    file.mimetype === \"image/png\" ||\n    file.mimetype === \"image/jpg\"\n  ) {\n    cb(null, true);\n  } else {\n    cb({ message: \"Unsupported file format\" }, false);\n  }\n};\n\nconst upload = multer({\n  storage: storage,\n  limits: { fileSize: 1024 * 1024 },\n  fileFilter: fileFilter,\n});\n\nmodule.exports = upload;\n`.trim();\nconst gallerys = `\nconst Gallery = require(\"../models/Gallery\");\nconst router = require(\"express\").Router();\nconst upload = require(\"../middlewares/multer\");\nconst fs = require(\"fs\");\n\nrouter.get(\"/\", (req, res) => {\n  Gallery.find().exec((err, galleries) => {\n    if (err)\n      return res.json({\n        status: false,\n        message: \"Server errors\",\n        result: err,\n      });\n    return res.json({\n      status: false,\n      message: \"Data found\",\n      result: galleries,\n    });\n  });\n});\n\nrouter.post(\"/add\", (req, res) => {\n  const gallery = new Gallery(req.body);\n  gallery.save((err, newGallery) => {\n    if (err)\n      return res.json({\n        status: false,\n        message: \"Server errors\",\n        result: err,\n      });\n    return res.json({\n      status: true,\n      message: \"Gallery added\",\n      result: newGallery,\n    });\n  });\n});\n\nrouter.put(\"/upload/:galleryId\", upload.array(\"image\", 3), async (req, res) => {\n  const inputfiles = req.files;\n  const images = [];\n  inputfiles.map((file) => {\n    images.push(file.filename);\n  });\n  const galleryId = req.params.galleryId;\n\n  Gallery.findOneAndUpdate(\n    { _id: galleryId },\n    { $push: { images: images } },\n    { new: true },\n    function (err, data) {\n      if (err) {\n        res.status(500).json({\n          status: false,\n          message: \"Upload error\",\n          result: err,\n        });\n      } else {\n        res.status(200).json({\n          status: true,\n          message: \"Upload successfully!\",\n          result: data,\n        });\n      }\n    }\n  );\n});\n\nrouter.get(\"/detail/:galleryId\", (req, res) => {\n  const galleryId = req.params.galleryId;\n  Gallery.findOne({ _id: galleryId }, function (err, gallery) {\n    if (err) {\n      res.status(500).json({\n        status: false,\n        message: \"Get gallery error\",\n        result: err,\n      });\n    } else {\n      res.status(200).json({\n        status: true,\n        message: \"Get gallery successfully!\",\n        result: gallery,\n      });\n    }\n  });\n});\n\nrouter.put(\"/removeImage/:galleryId\", async (req, res) => {\n  const fileName = req.body.fileName;\n  console.log(\"~~~fileName: \", fileName);\n\n  const galleryId = req.params.galleryId;\n\n  Gallery.findOneAndUpdate(\n    { _id: galleryId },\n    { $pull: { images: fileName } },\n    { new: true },\n    function (err, data) {\n      if (err) {\n        res.status(500).json({\n          status: false,\n          message: \"Remove image error\",\n          result: err,\n        });\n      } else {\n        const path = \"server/uploads/\" + fileName;\n        fs.unlinkSync(path);\n        res.status(200).json({\n          status: true,\n          message: \"Remove image successfully!\",\n          result: data,\n        });\n      }\n    }\n  );\n});\n\nmodule.exports = router;\n`.trim();\nconst serverComp = `\nconst express = require(\"express\");\nvar path = require(\"path\");\nconst app = express();\nconst bodyParser = require(\"body-parser\");\nconst mongoose = require(\"mongoose\");\nconst cors = require(\"cors\");\n\napp.use(cors());\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(express.static(path.join(__dirname, \"uploads\")));\n\nvar URIstring = \"mongodb://localhost:27017/uploads\";\n\napp.use(\"/galleries\", require(\"./routes/gallery\"));\n\nmongoose.connect(URIstring, {\n  useFindAndModify: false,\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n});\n\napp.use(\"./uploads\", express.static(\"uploads\"));\n\nconst PORT = process.env.PORT || 5000;\nmodule.exports = app.listen(PORT, () => {\n  console.log(\"Server listening in port:\" + PORT);\n});\n`.trim();\nconst types = `\nexport const FETCH_ALBUMS = \"FETCH_ALBUMS\";\nexport const FETCH_ALBUM_DETAIL = \"FETCH_ALBUM_DETAIL\";\nexport const ADD_ALBUM = \"ADD_ALBUM\";\nexport const UPLOAD_IMAGE = \"UPLOAD_IMAGE\";\nexport const REMOVE_IMAGE = \"REMOVE_IMAGE\";\n`.trim();\nconst album = `\nimport axios from \"axios\";\nimport {\n  FETCH_ALBUMS,\n  FETCH_ALBUM_DETAIL,\n  ADD_ALBUM,\n  UPLOAD_IMAGE,\n  REMOVE_IMAGE,\n} from \"./types\";\n\nexport const fetchAlbums = () => {\n  const req = axios.get(\"/galleries\").then((res) => res.data);\n  return {\n    type: FETCH_ALBUMS,\n    payload: req,\n  };\n};\n\nexport const fetchAlbumDetail = (id) => {\n  const req = axios.get('/galleries/detail/'$'{id}').then((res) => res.data);\n  return {\n    type: FETCH_ALBUM_DETAIL,\n    payload: req,\n  };\n};\n\nexport const addAlbum = (data) => {\n  const req = axios.post(\"/galleries/add\", data).then((res) => res.data);\n  return {\n    type: ADD_ALBUM,\n    payload: req,\n  };\n};\n\nexport const uploadImages = (id, data, config) => {\n  const req = axios.put('/galleries/upload/'$'{id}', data, config)\n    .then((res) => res.data);\n  return {\n    type: UPLOAD_IMAGE,\n    payload: req,\n  };\n};\n\nexport const removeImage = (id, imageName) => {\n  const req = axios.put('/galleries/removeImage/'$'{id}', { fileName: imageName })\n    .then((res) => res.data);\n  return {\n    type: REMOVE_IMAGE,\n    payload: req,\n  };\n};\n`.trim();\nconst albumReducer = `\nimport * as ACTION_TYPES from \"../actions/types\";\n\nconst initialState = {\n  albumList: [],\n  albumDetail: {},\n  addedAlbum: {},\n};\nconst albumReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.FETCH_ALBUMS:\n      return {\n        albumList: [...action.payload.result],\n      };\n    case ACTION_TYPES.FETCH_ALBUM_DETAIL:\n      return {\n        albumDetail: action.payload.result,\n      };\n    case ACTION_TYPES.ADD_ALBUM:\n      return {\n        ...state,\n        addedAlbum: action.payload,\n      };\n    case ACTION_TYPES.UPLOAD_IMAGE:\n      return {\n        albumDetail: action.payload.result,\n      };\n    case ACTION_TYPES.REMOVE_IMAGE:\n      return {\n        albumDetail: action.payload.result,\n      };\n    default:\n      return state;\n  }\n};\nexport default albumReducer;\n`.trim();\nconst AddAlbum = `\nimport React, { useState, useEffect } from \"react\";\nimport { Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { addAlbum } from \"../actions/album\";\n\nfunction AddAlbum(props) {\n  const dispatch = useDispatch();\n  const [values, setvalues] = useState({});\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setvalues({\n      ...values,\n      [name]: value,\n    });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addAlbum(values)).then((res) => {\n      if (res.payload.status) {\n        // toast.success(res.payload.message);\n        console.log(\"~~~~data: \", res.payload.result._id);\n\n        props.history.push('/upload/'$'{res.payload.result._id}');\n      }\n    });\n  };\n  return (\n    <Fragment>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a href=\"/\">Albums</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            Add\n          </li>\n        </ol>\n      </nav>\n      <div className=\"card shadow-sm\">\n        <div className=\"card title p-2 bg-light\">\n          <h5>Add Album</h5>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Album Name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              className=\"form-control\"\n              placeholder=\"Enter album name\"\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Description</label>\n            <textarea\n              className=\"form-control\"\n              name=\"description\"\n              rows=\"3\"\n              onChange={handleInputChange}\n            ></textarea>\n          </div>\n          <div className=\"form-group\">\n            <button\n              type=\"button\"\n              onClick={handleSubmit}\n              className=\"btn btn-success\"\n            >\n              <i class=\"fas fa-plus\"></i> Save and next\n            </button>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default AddAlbum;\n`.trim();\nconst AlbumList = `\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { fetchAlbums } from \"../actions/album\";\n\nfunction AlbumList() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAlbums());\n  }, []);\n  const albumList = useSelector((state) => state.album.albumList);\n  return (\n    <div className=\"card shadow-sm\">\n      <div className=\"card-header\">\n        <h5>Album List</h5>\n      </div>\n      <div className=\"card-title p-4\">\n        <a className=\"btn btn-success\" href=\"/add\">\n          Add Album\n        </a>\n      </div>\n      <div className=\"card-body p-4\">\n        <table class=\"table border\">\n          <thead class=\"table-dark\">\n            <tr>\n              <td>No</td>\n              <td>Album Name</td>\n              <td>Description</td>\n              <td>Image Count</td>\n              <td>Actions</td>\n            </tr>\n          </thead>\n          <tbody>\n            {albumList.map((album, index) => (\n              <tr>\n                <th scope=\"row\">{index + 1}</th>\n                <td>{album.name}</td>\n                <td>{album.description}</td>\n                <td>{album.images.length}</td>\n                <td>\n                  <a class=\"btn btn-info\" href={'/upload/'$'{album._id}'}>\n                    <i class=\"fas fa-image\"></i>\n                  </a>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default AlbumList;\n`.trim();\nconst UploadImage = `\nimport React, { useState, useEffect } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { uploadImages, fetchAlbumDetail, removeImage } from \"../actions/album\";\n\nfunction UploadImage(props) {\n  const dispatch = useDispatch();\n  const albumId = props.match.params.id;\n  //   const [albumInfo, setAlbumInfo] = useState({});\n  const albumDetail = useSelector((state) => state.album.albumDetail);\n\n  useEffect(() => {\n    dispatch(fetchAlbumDetail(albumId));\n  }, []);\n\n  const onDrop = (files) => {\n    let formData = new FormData();\n    const config = {\n      header: { \"content-type\": \"multipart/form-data\" },\n    };\n    files.map((file, index) => {\n      formData.append(\"image\", file);\n    });\n\n    dispatch(uploadImages(albumId, formData, config)).then((res) => {\n      if (res.payload.status) {\n        toast.success(res.payload.message);\n      }\n    });\n  };\n\n  const handleDelete = (albumId, imageName) => {\n    dispatch(removeImage(albumId, imageName)).then((res) => {\n      if (res.payload.status) {\n        toast.success(res.payload.message);\n      }\n    });\n  };\n  return (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a href=\"/\">Albums</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            Upload\n          </li>\n        </ol>\n      </nav>\n      <div className=\"card shadow-sm\">\n        <div className=\"card-header\">\n          <h5>Upload Image for Album {albumDetail.name}</h5>\n        </div>\n        <div className=\"card-body\">\n          <Dropzone onDrop={onDrop}>\n            {({ getRootProps, getInputProps }) => (\n              <div\n                className=\"m-1\"\n                style={{\n                  width: \"350px\",\n                  height: \"240px\",\n                  border: \"1px solid lightgray\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n                {...getRootProps()}\n              >\n                <input {...getInputProps()} />\n                <p>Drag and drop files here or click to upload</p>\n              </div>\n            )}\n          </Dropzone>\n          <div className=\"row m-1\">\n            {albumDetail.images &&\n              albumDetail.images.map((image, index) => (\n                <div className=\"card col-md-3 mb-2\">\n                  <div className=\"card-header bg-white\">\n                    <span>{image}</span>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-danger float-end\"\n                      onClick={() => handleDelete(albumId, image)}\n                    >\n                      <i class=\"fas fa-backspace\"></i>\n                    </button>\n                  </div>\n                  <div className=\"card-body p-1\">\n                    <img\n                      style={{ width: \"100%\", maxHeight: \"180px\" }}\n                      class=\"img-thumbnail\"\n                      src={'http://localhost:5000/'$'{image}'}\n                    />\n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UploadImage;\n`.trim();\nconst AppComp = `\nimport React from \"react\";\nimport AlbumList from \"./components/AlbumList\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport AddAlbum from \"./components/AddAlbum\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport UploadImage from \"./components/UploadImage\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <ToastContainer />\n      <div className=\"container\">\n        <Route path=\"/\" exact component={AlbumList} />\n        <Route path=\"/add\" exact component={AddAlbum} />\n        <Route path=\"/upload/:id\" exact component={UploadImage} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n`.trim();\n\nclass ImageGallery extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }, \"1.Image Gallery\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617\n      },\n      __self: this\n    }, \"models/Gallery.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: Gallery,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629\n      },\n      __self: this\n    }, \"middlewares/multer.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: multer,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641\n      },\n      __self: this\n    }, \"routes/gallery.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: gallerys,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653\n      },\n      __self: this\n    }, \"server\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654\n      },\n      __self: this\n    }), \"Create a folder \\\"uploads\\\" with server.js file.\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: serverComp,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665\n      },\n      __self: this\n    }, \"Client\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666\n      },\n      __self: this\n    }, \"actions/types.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: types,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677\n      },\n      __self: this\n    }, \"actions/album.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: album,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689\n      },\n      __self: this\n    }, \"reducers/albumReducer.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: albumReducer,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701\n      },\n      __self: this\n    }, \"components/AddAlbum.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 702\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: AddAlbum,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713\n      },\n      __self: this\n    }, \"components/AlbumList.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: AlbumList,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725\n      },\n      __self: this\n    }, \"components/UploadImage.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: UploadImage,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737\n      },\n      __self: this\n    }, \"components/App.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: AppComp,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(ImageGallery);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/mern/projects/imageGallery.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","Gallery","trim","multer","gallerys","serverComp","types","album","albumReducer","AddAlbum","AlbumList","UploadImage","AppComp","ImageGallery","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst Gallery = `\nconst gallerySchema = new Schema({\n  name: { type: String, required: true },\n  description: { type: String, required: false },\n  \n  images: {\n    type: [String],\n    required: false,\n  },\n});\n\nmodule.exports = mongoose.model(\"galleries\", gallerySchema);\n`.trim();\n\nconst multer = `\nconst multer = require(\"multer\");\n\nconst storage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, \"./server/uploads\");\n  },\n  filename: (req, file, cb) => {\n    cb(null, ''$'{Date.now()}_'$'{file.originalname}');\n  },\n});\n\nconst fileFilter = (req, file, cb) => {\n  if (\n    file.mimetype === \"image/jpeg\" ||\n    file.mimetype === \"image/png\" ||\n    file.mimetype === \"image/jpg\"\n  ) {\n    cb(null, true);\n  } else {\n    cb({ message: \"Unsupported file format\" }, false);\n  }\n};\n\nconst upload = multer({\n  storage: storage,\n  limits: { fileSize: 1024 * 1024 },\n  fileFilter: fileFilter,\n});\n\nmodule.exports = upload;\n`.trim();\n\nconst gallerys = `\nconst Gallery = require(\"../models/Gallery\");\nconst router = require(\"express\").Router();\nconst upload = require(\"../middlewares/multer\");\nconst fs = require(\"fs\");\n\nrouter.get(\"/\", (req, res) => {\n  Gallery.find().exec((err, galleries) => {\n    if (err)\n      return res.json({\n        status: false,\n        message: \"Server errors\",\n        result: err,\n      });\n    return res.json({\n      status: false,\n      message: \"Data found\",\n      result: galleries,\n    });\n  });\n});\n\nrouter.post(\"/add\", (req, res) => {\n  const gallery = new Gallery(req.body);\n  gallery.save((err, newGallery) => {\n    if (err)\n      return res.json({\n        status: false,\n        message: \"Server errors\",\n        result: err,\n      });\n    return res.json({\n      status: true,\n      message: \"Gallery added\",\n      result: newGallery,\n    });\n  });\n});\n\nrouter.put(\"/upload/:galleryId\", upload.array(\"image\", 3), async (req, res) => {\n  const inputfiles = req.files;\n  const images = [];\n  inputfiles.map((file) => {\n    images.push(file.filename);\n  });\n  const galleryId = req.params.galleryId;\n\n  Gallery.findOneAndUpdate(\n    { _id: galleryId },\n    { $push: { images: images } },\n    { new: true },\n    function (err, data) {\n      if (err) {\n        res.status(500).json({\n          status: false,\n          message: \"Upload error\",\n          result: err,\n        });\n      } else {\n        res.status(200).json({\n          status: true,\n          message: \"Upload successfully!\",\n          result: data,\n        });\n      }\n    }\n  );\n});\n\nrouter.get(\"/detail/:galleryId\", (req, res) => {\n  const galleryId = req.params.galleryId;\n  Gallery.findOne({ _id: galleryId }, function (err, gallery) {\n    if (err) {\n      res.status(500).json({\n        status: false,\n        message: \"Get gallery error\",\n        result: err,\n      });\n    } else {\n      res.status(200).json({\n        status: true,\n        message: \"Get gallery successfully!\",\n        result: gallery,\n      });\n    }\n  });\n});\n\nrouter.put(\"/removeImage/:galleryId\", async (req, res) => {\n  const fileName = req.body.fileName;\n  console.log(\"~~~fileName: \", fileName);\n\n  const galleryId = req.params.galleryId;\n\n  Gallery.findOneAndUpdate(\n    { _id: galleryId },\n    { $pull: { images: fileName } },\n    { new: true },\n    function (err, data) {\n      if (err) {\n        res.status(500).json({\n          status: false,\n          message: \"Remove image error\",\n          result: err,\n        });\n      } else {\n        const path = \"server/uploads/\" + fileName;\n        fs.unlinkSync(path);\n        res.status(200).json({\n          status: true,\n          message: \"Remove image successfully!\",\n          result: data,\n        });\n      }\n    }\n  );\n});\n\nmodule.exports = router;\n`.trim();\n\nconst serverComp = `\nconst express = require(\"express\");\nvar path = require(\"path\");\nconst app = express();\nconst bodyParser = require(\"body-parser\");\nconst mongoose = require(\"mongoose\");\nconst cors = require(\"cors\");\n\napp.use(cors());\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(express.static(path.join(__dirname, \"uploads\")));\n\nvar URIstring = \"mongodb://localhost:27017/uploads\";\n\napp.use(\"/galleries\", require(\"./routes/gallery\"));\n\nmongoose.connect(URIstring, {\n  useFindAndModify: false,\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n});\n\napp.use(\"./uploads\", express.static(\"uploads\"));\n\nconst PORT = process.env.PORT || 5000;\nmodule.exports = app.listen(PORT, () => {\n  console.log(\"Server listening in port:\" + PORT);\n});\n`.trim();\n\nconst types = `\nexport const FETCH_ALBUMS = \"FETCH_ALBUMS\";\nexport const FETCH_ALBUM_DETAIL = \"FETCH_ALBUM_DETAIL\";\nexport const ADD_ALBUM = \"ADD_ALBUM\";\nexport const UPLOAD_IMAGE = \"UPLOAD_IMAGE\";\nexport const REMOVE_IMAGE = \"REMOVE_IMAGE\";\n`.trim();\n\nconst album = `\nimport axios from \"axios\";\nimport {\n  FETCH_ALBUMS,\n  FETCH_ALBUM_DETAIL,\n  ADD_ALBUM,\n  UPLOAD_IMAGE,\n  REMOVE_IMAGE,\n} from \"./types\";\n\nexport const fetchAlbums = () => {\n  const req = axios.get(\"/galleries\").then((res) => res.data);\n  return {\n    type: FETCH_ALBUMS,\n    payload: req,\n  };\n};\n\nexport const fetchAlbumDetail = (id) => {\n  const req = axios.get('/galleries/detail/'$'{id}').then((res) => res.data);\n  return {\n    type: FETCH_ALBUM_DETAIL,\n    payload: req,\n  };\n};\n\nexport const addAlbum = (data) => {\n  const req = axios.post(\"/galleries/add\", data).then((res) => res.data);\n  return {\n    type: ADD_ALBUM,\n    payload: req,\n  };\n};\n\nexport const uploadImages = (id, data, config) => {\n  const req = axios.put('/galleries/upload/'$'{id}', data, config)\n    .then((res) => res.data);\n  return {\n    type: UPLOAD_IMAGE,\n    payload: req,\n  };\n};\n\nexport const removeImage = (id, imageName) => {\n  const req = axios.put('/galleries/removeImage/'$'{id}', { fileName: imageName })\n    .then((res) => res.data);\n  return {\n    type: REMOVE_IMAGE,\n    payload: req,\n  };\n};\n`.trim();\n\nconst albumReducer = `\nimport * as ACTION_TYPES from \"../actions/types\";\n\nconst initialState = {\n  albumList: [],\n  albumDetail: {},\n  addedAlbum: {},\n};\nconst albumReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.FETCH_ALBUMS:\n      return {\n        albumList: [...action.payload.result],\n      };\n    case ACTION_TYPES.FETCH_ALBUM_DETAIL:\n      return {\n        albumDetail: action.payload.result,\n      };\n    case ACTION_TYPES.ADD_ALBUM:\n      return {\n        ...state,\n        addedAlbum: action.payload,\n      };\n    case ACTION_TYPES.UPLOAD_IMAGE:\n      return {\n        albumDetail: action.payload.result,\n      };\n    case ACTION_TYPES.REMOVE_IMAGE:\n      return {\n        albumDetail: action.payload.result,\n      };\n    default:\n      return state;\n  }\n};\nexport default albumReducer;\n`.trim();\n\nconst AddAlbum = `\nimport React, { useState, useEffect } from \"react\";\nimport { Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { addAlbum } from \"../actions/album\";\n\nfunction AddAlbum(props) {\n  const dispatch = useDispatch();\n  const [values, setvalues] = useState({});\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setvalues({\n      ...values,\n      [name]: value,\n    });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addAlbum(values)).then((res) => {\n      if (res.payload.status) {\n        // toast.success(res.payload.message);\n        console.log(\"~~~~data: \", res.payload.result._id);\n\n        props.history.push('/upload/'$'{res.payload.result._id}');\n      }\n    });\n  };\n  return (\n    <Fragment>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a href=\"/\">Albums</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            Add\n          </li>\n        </ol>\n      </nav>\n      <div className=\"card shadow-sm\">\n        <div className=\"card title p-2 bg-light\">\n          <h5>Add Album</h5>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Album Name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              className=\"form-control\"\n              placeholder=\"Enter album name\"\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Description</label>\n            <textarea\n              className=\"form-control\"\n              name=\"description\"\n              rows=\"3\"\n              onChange={handleInputChange}\n            ></textarea>\n          </div>\n          <div className=\"form-group\">\n            <button\n              type=\"button\"\n              onClick={handleSubmit}\n              className=\"btn btn-success\"\n            >\n              <i class=\"fas fa-plus\"></i> Save and next\n            </button>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default AddAlbum;\n`.trim();\n\nconst AlbumList = `\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { fetchAlbums } from \"../actions/album\";\n\nfunction AlbumList() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAlbums());\n  }, []);\n  const albumList = useSelector((state) => state.album.albumList);\n  return (\n    <div className=\"card shadow-sm\">\n      <div className=\"card-header\">\n        <h5>Album List</h5>\n      </div>\n      <div className=\"card-title p-4\">\n        <a className=\"btn btn-success\" href=\"/add\">\n          Add Album\n        </a>\n      </div>\n      <div className=\"card-body p-4\">\n        <table class=\"table border\">\n          <thead class=\"table-dark\">\n            <tr>\n              <td>No</td>\n              <td>Album Name</td>\n              <td>Description</td>\n              <td>Image Count</td>\n              <td>Actions</td>\n            </tr>\n          </thead>\n          <tbody>\n            {albumList.map((album, index) => (\n              <tr>\n                <th scope=\"row\">{index + 1}</th>\n                <td>{album.name}</td>\n                <td>{album.description}</td>\n                <td>{album.images.length}</td>\n                <td>\n                  <a class=\"btn btn-info\" href={'/upload/'$'{album._id}'}>\n                    <i class=\"fas fa-image\"></i>\n                  </a>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default AlbumList;\n`.trim();\n\nconst UploadImage = `\nimport React, { useState, useEffect } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { uploadImages, fetchAlbumDetail, removeImage } from \"../actions/album\";\n\nfunction UploadImage(props) {\n  const dispatch = useDispatch();\n  const albumId = props.match.params.id;\n  //   const [albumInfo, setAlbumInfo] = useState({});\n  const albumDetail = useSelector((state) => state.album.albumDetail);\n\n  useEffect(() => {\n    dispatch(fetchAlbumDetail(albumId));\n  }, []);\n\n  const onDrop = (files) => {\n    let formData = new FormData();\n    const config = {\n      header: { \"content-type\": \"multipart/form-data\" },\n    };\n    files.map((file, index) => {\n      formData.append(\"image\", file);\n    });\n\n    dispatch(uploadImages(albumId, formData, config)).then((res) => {\n      if (res.payload.status) {\n        toast.success(res.payload.message);\n      }\n    });\n  };\n\n  const handleDelete = (albumId, imageName) => {\n    dispatch(removeImage(albumId, imageName)).then((res) => {\n      if (res.payload.status) {\n        toast.success(res.payload.message);\n      }\n    });\n  };\n  return (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a href=\"/\">Albums</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            Upload\n          </li>\n        </ol>\n      </nav>\n      <div className=\"card shadow-sm\">\n        <div className=\"card-header\">\n          <h5>Upload Image for Album {albumDetail.name}</h5>\n        </div>\n        <div className=\"card-body\">\n          <Dropzone onDrop={onDrop}>\n            {({ getRootProps, getInputProps }) => (\n              <div\n                className=\"m-1\"\n                style={{\n                  width: \"350px\",\n                  height: \"240px\",\n                  border: \"1px solid lightgray\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n                {...getRootProps()}\n              >\n                <input {...getInputProps()} />\n                <p>Drag and drop files here or click to upload</p>\n              </div>\n            )}\n          </Dropzone>\n          <div className=\"row m-1\">\n            {albumDetail.images &&\n              albumDetail.images.map((image, index) => (\n                <div className=\"card col-md-3 mb-2\">\n                  <div className=\"card-header bg-white\">\n                    <span>{image}</span>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-danger float-end\"\n                      onClick={() => handleDelete(albumId, image)}\n                    >\n                      <i class=\"fas fa-backspace\"></i>\n                    </button>\n                  </div>\n                  <div className=\"card-body p-1\">\n                    <img\n                      style={{ width: \"100%\", maxHeight: \"180px\" }}\n                      class=\"img-thumbnail\"\n                      src={'http://localhost:5000/'$'{image}'}\n                    />\n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UploadImage;\n`.trim();\n\nconst AppComp = `\nimport React from \"react\";\nimport AlbumList from \"./components/AlbumList\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport AddAlbum from \"./components/AddAlbum\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport UploadImage from \"./components/UploadImage\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <ToastContainer />\n      <div className=\"container\">\n        <Route path=\"/\" exact component={AlbumList} />\n        <Route path=\"/add\" exact component={AddAlbum} />\n        <Route path=\"/upload/:id\" exact component={UploadImage} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n`.trim();\n\n\nclass ImageGallery extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1.Image Gallery</h3>\n              <b>models/Gallery.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={Gallery}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>middlewares/multer.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={multer}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>routes/gallery.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={gallerys}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>server</b>\n              <br />\n              Create a folder \"uploads\" with server.js file.\n              <div style={titles}>\n                <PrismCode\n                  code={serverComp}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Client</h3>\n              <b>actions/types.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={types}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>actions/album.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={album}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>reducers/albumReducer.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={albumReducer}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>components/AddAlbum.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={AddAlbum}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>components/AlbumList.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={AlbumList}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>components/UploadImage.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={UploadImage}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>components/App.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={AppComp}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(ImageGallery));\n"]},"metadata":{},"sourceType":"module"}