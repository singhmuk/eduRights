{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var thisKey=\"function bike() {\\n    console.log(this.name);\\n}\\n\\nvar name = \\\"Ninja\\\";\\nvar obj1 = { name: \\\"Pulsar\\\", bike: bike };\\n\\nbike();\\nobj1.bike();\\n\".trim();var thisBind=\"\\nfunction bike() {\\n  console.log(this.name);\\n }\\n\\n  var name = \\\"Ninja\\\";\\n  var obj = { name: \\\"Pulsar\\\" }\\n  \\n  bike.call(obj);\".trim();var bind_2=\"\\n //Bind in constructor\\nclass Student {\\n  constructor(fname, lname){\\n    this.fname = fname;\\n    this.lname = lname;\\n\\t\\t\\n    this.sayName = this.sayName.bind(this)\\n  }\\n\\n  sayName(){\\n    console.log(this.firstName)\\n  }\\n}\\n\\nvar muk = new Student('Muk', \\\"Sin\\\");\\nvar greetStu = muk.sayName;\\ngreetStu();\\n\\n\\n\\n//2\\nvar names = {\\n    fname:'Ritesh',\\n    lname:\\\"Singh\\\"\\n  }\\n\\n  let fullName = function(hometown, state){\\n  return console.log(this.fname,\\\"---\\\",this.lname,\\\"---\\\",hometown,\\\"---\\\",state)\\n}\\n\\n\\nvar names2 = {\\n    fname:'Nitesh',\\n    lname:'Singh'\\n  }\\n\\n  let printName = fullName.bind(names2, \\\"Ranchi\\\", \\\"Jharkhand\\\");\\n  console.log(printName);\\n  printName(); \".trim();var default_this=\"\\nvar obj = { \\n  name : \\\"ABC\\\", \\n  printFunc: function(){ \\n    return this.name;\\n    } \\n  } \\n       \\nvar objs = obj.printFunc();\\n\\nexport { objs }\".trim();var not_call=\"\\n  var obj = { \\n  name : \\\"ABC\\\", \\n  printFunc: function(){ \\n     document.write(this.name);} \\n     } \\n       \\n    var printFunc2= obj.printFunc; \\n    printFunc2();\".trim();var this_bind=\"\\n  var obj = { \\n  name : \\\"ABC\\\", \\n  printFunc: function(){ \\n     document.write(this.name);} \\n     } \\n       \\n    var printFunc2= obj.printFunc.bind(obj); \\n    printFunc2();\".trim();var calls=\"\\n    //1\\n    function foo(arg1, arg2){\\n      console.log(this.name)\\n      console.log(arg1)\\n      console.log(arg2)\\n    }\\n    \\n    foo.call({name:'Nitesh'}, \\\"ReactJs\\\", \\\"AngularJs\\\");\\n    \\n    \\n    //In call method after assign to varriable than this value lost its binding.\\n    \\n    var student = {\\n      name:\\\"Js\\\",\\n      jsMethod: function(){\\n        console.log(this.name)\\n      }\\n    }\\n    \\n    var greetStu = student.jsMethod;\\n    greetStu();\\t\\n    \\n    \\n    //But with bind method we can use this value.\\n    //In BInd we only set context of this.\\n    \\n    //2\\n    var student = {\\n      name:\\\"Js\\\",\\n      jsMethod: function(){\\n        console.log(this.name)\\n      }\\n    }\\n    \\n    var greetStu = student.jsMethod.bind({ name:'Hi' });\\n    greetStu();\\t\\n    \\n    \\n    //3\\n    var names = {\\n      fname:'Ritesh',\\n      lname:\\\"Singh\\\"\\n    }\\n    \\n    let fullName = function(hometown, state){\\n      return console.log(this.fname,\\\"---\\\",this.lname,\\\"---\\\",hometown,\\\"---\\\",state)\\n    }\\n    \\n    fullName.apply(names, [\\\"Ranchi\\\", \\\"Jharkhand\\\"]);\\n    \\n    \\n    var names2 = {\\n      fname:'Nitesh',\\n      lname:'Singh'\\n    }\\n    \\n    fullName.apply(names2, [\\\"Ranchi\\\"]);\\n    \".trim();var applys=\"\\nfunction foo(arg1, arg2){\\n  console.log(this.name)\\n  console.log(arg1)\\n  console.log(arg2)\\n}\\n\\nfoo.apply({name:'Nitesh'}, [\\\"ReactJs\\\", \\\"AngularJs\\\"]);\\n\\n\".trim();var borrowing=\"\\nvar names = {\\n    fname:'Ritesh',\\n    lname:\\\"Singh\\\",\\n    fullName:function(){\\n      return console.log(this.fname,\\\"---\\\",this.lname)\\n    }\\n  }\\n\\nvar names2 = {\\n    fname:'Nitesh',\\n    lname:'Singh'\\n  }\\n\\n//function borrowing\\nnames.fullName.call(names2);\\n\\n\\n//2\\nvar names = {\\n    fname:'Ritesh',\\n    lname:\\\"Singh\\\"\\n  }\\n\\nlet fullName = function(hometown, state){\\n  return console.log(this.fname,\\\"---\\\",this.lname,\\\"---\\\",hometown,\\\"---\\\",state)\\n}\\n\\nfullName.call(names, \\\"Ranchi\\\", \\\"Jharkhand\\\");\\n\\n\\nvar names2 = {\\n    fname:'Nitesh',\\n    lname:'Singh'\\n  }\\n\\nfullName.call(names2, \\\"Ranchi\\\");\\n\".trim();var Methods=/*#__PURE__*/function(_Component){_inherits(Methods,_Component);function Methods(){_classCallCheck(this,Methods);return _possibleConstructorReturn(this,_getPrototypeOf(Methods).apply(this,arguments));}_createClass(Methods,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"1.What is 'this' keyword in JavaScript?\"),React.createElement(\"ul\",null,React.createElement(\"li\",null,\"this keyword refers to an object, that object which is executing the current bit of javascript code.\"),React.createElement(\"li\",null,\"To understand this keyword, only we need to know how, when and from where the function is called, does not matter how and where function is declared/ defined.\")),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:thisKey,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"i\",null,\"The job of bike() function is printing the this.name . In case of obj1().bike(), \\u201CPulsar\\u201D gets printed and the reason behind this is function bike() gets called with the execution context as obj1 so this.name became obj1.name.\"),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Explicit and Fixed Binding of \\u201Cthis\\u201D keyword \"),React.createElement(\"br\",null),\"If we use call and apply method with calling function, both of those methods take as their first parameter as execution context. that is this binding.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:thisBind,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"ul\",null,React.createElement(\"li\",null,React.createElement(\"b\",null,\"Explicit binding: \"),\"If we invoke the function bike with call() method passing execution context object obj as first argument, then obj gets assigned to this object and it prints \\u201CPulsar\\u201D which is nothing but obj.name.\"),React.createElement(\"li\",null,React.createElement(\"b\",null,\"Fixed binding/Hard binding: \"),\"We can force the this object to be same always no matter from where and how it gets called.\")),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"2.bind()\"),React.createElement(\"ul\",null,React.createElement(\"li\",null,\"Creates a new function, when called.\"),React.createElement(\"li\",null,\"Returns a new function, when invoked, has its this sets to a specific value.\"),React.createElement(\"li\",null,\"Unlike the call() and apply() methods, the bind() method doesn\\u2019t immediately execute the function. It just returns the function.\"),React.createElement(\"li\",null,\"When a method an object is passed to another function as a callback, the this value is lost. That\\u2019s because bindExample() received the function bindExample.details separately from the bindExample object.\"),React.createElement(\"li\",null,\"The bind() method allows an object to borrow a method from another object without making a copy of that method.\"),React.createElement(\"li\",null,\"When we assign method to varryble than lost this binding bind set context of this.\"),React.createElement(\"li\",null,\"Bind method exactly same as the call method, Only diffrences instead of caling method, Bind method with the object and return the copy of that method.\")),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:bind_2,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"program to print the name which is called by this keyword.\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:default_this,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"i\",null,\"this keyword bind the name variable to the function. It is known as default binding.\"),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"No output is produced\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:not_call,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"i\",null,\"Here we made a new variable function printFunc2 which refers to the function printFunc() of object geeks. Here the binding of this is lost, so no output is produced.\"),React.createElement(\"br\",null),React.createElement(\"br\",null),\"To make sure that any binding of this is not to be lost, we are using Bind() method. By using bind() method we can set the context of this to a particular object. So we can use other variables also to call binded function.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:this_bind,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"i\",null,\"The bind() method creates a new function where this keyword refers to the parameter in the parenthesis in the above case obj. This way the bind() method enables calling a function with a specified this value.\"),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"3. call(), apply()\"),\"The call() method calls a function with a given this value and arguments provided individually.\",React.createElement(\"br\",null),React.createElement(\"br\",null),\"The main differences between bind() and call() is that the call() method:\",React.createElement(\"br\",null),React.createElement(\"ul\",null,React.createElement(\"li\",null,\"Accepts additional parameters as well\"),React.createElement(\"li\",null,\"The call() method does not make a copy of the function it is being called on.\"),React.createElement(\"li\",null,\"call() and apply() serve the exact same purpose. The only difference between how they work is that.\"),React.createElement(\"ul\",null,React.createElement(\"li\",null,\"call() expects all parameters to be passed in individually.\"),React.createElement(\"li\",null,\"apply() expects an array of all of our parameters.\"))),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Call: \"),\"This value depend from where to call it.\",React.createElement(\"br\",null),React.createElement(\"br\",null),\"call: accept two properties:\",React.createElement(\"ul\",null,React.createElement(\"li\",null,\"(i) what is context of this.\"),React.createElement(\"li\",null,\"(ii) Parameter.\")),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:calls,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Apply\"),React.createElement(\"br\",null),\"Pass Array as argument instead of parameter.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:applys,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"4. Borrowing\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:borrowing,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return Methods;}(Component);export default withStyles(styles)(Methods);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/javaScripts/deepJs/this.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","thisKey","trim","thisBind","bind_2","default_this","not_call","this_bind","calls","applys","borrowing","Methods","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst thisKey = `function bike() {\n    console.log(this.name);\n}\n\nvar name = \"Ninja\";\nvar obj1 = { name: \"Pulsar\", bike: bike };\n\nbike();\nobj1.bike();\n`.trim();\n\nconst thisBind = `\nfunction bike() {\n  console.log(this.name);\n }\n\n  var name = \"Ninja\";\n  var obj = { name: \"Pulsar\" }\n  \n  bike.call(obj);`.trim();\n\nconst bind_2 = `\n //Bind in constructor\nclass Student {\n  constructor(fname, lname){\n    this.fname = fname;\n    this.lname = lname;\n\t\t\n    this.sayName = this.sayName.bind(this)\n  }\n\n  sayName(){\n    console.log(this.firstName)\n  }\n}\n\nvar muk = new Student('Muk', \"Sin\");\nvar greetStu = muk.sayName;\ngreetStu();\n\n\n\n//2\nvar names = {\n    fname:'Ritesh',\n    lname:\"Singh\"\n  }\n\n  let fullName = function(hometown, state){\n  return console.log(this.fname,\"---\",this.lname,\"---\",hometown,\"---\",state)\n}\n\n\nvar names2 = {\n    fname:'Nitesh',\n    lname:'Singh'\n  }\n\n  let printName = fullName.bind(names2, \"Ranchi\", \"Jharkhand\");\n  console.log(printName);\n  printName(); `.trim()\n\nconst default_this = `\nvar obj = { \n  name : \"ABC\", \n  printFunc: function(){ \n    return this.name;\n    } \n  } \n       \nvar objs = obj.printFunc();\n\nexport { objs }`.trim()\n\nconst not_call = `\n  var obj = { \n  name : \"ABC\", \n  printFunc: function(){ \n     document.write(this.name);} \n     } \n       \n    var printFunc2= obj.printFunc; \n    printFunc2();`.trim()\n\nconst this_bind = `\n  var obj = { \n  name : \"ABC\", \n  printFunc: function(){ \n     document.write(this.name);} \n     } \n       \n    var printFunc2= obj.printFunc.bind(obj); \n    printFunc2();`.trim()\n\n\nconst calls = `\n    //1\n    function foo(arg1, arg2){\n      console.log(this.name)\n      console.log(arg1)\n      console.log(arg2)\n    }\n    \n    foo.call({name:'Nitesh'}, \"ReactJs\", \"AngularJs\");\n    \n    \n    //In call method after assign to varriable than this value lost its binding.\n    \n    var student = {\n      name:\"Js\",\n      jsMethod: function(){\n        console.log(this.name)\n      }\n    }\n    \n    var greetStu = student.jsMethod;\n    greetStu();\t\n    \n    \n    //But with bind method we can use this value.\n    //In BInd we only set context of this.\n    \n    //2\n    var student = {\n      name:\"Js\",\n      jsMethod: function(){\n        console.log(this.name)\n      }\n    }\n    \n    var greetStu = student.jsMethod.bind({ name:'Hi' });\n    greetStu();\t\n    \n    \n    //3\n    var names = {\n      fname:'Ritesh',\n      lname:\"Singh\"\n    }\n    \n    let fullName = function(hometown, state){\n      return console.log(this.fname,\"---\",this.lname,\"---\",hometown,\"---\",state)\n    }\n    \n    fullName.apply(names, [\"Ranchi\", \"Jharkhand\"]);\n    \n    \n    var names2 = {\n      fname:'Nitesh',\n      lname:'Singh'\n    }\n    \n    fullName.apply(names2, [\"Ranchi\"]);\n    `.trim();\n\nconst applys = `\nfunction foo(arg1, arg2){\n  console.log(this.name)\n  console.log(arg1)\n  console.log(arg2)\n}\n\nfoo.apply({name:'Nitesh'}, [\"ReactJs\", \"AngularJs\"]);\n\n`.trim();\n\n\nconst borrowing = `\nvar names = {\n    fname:'Ritesh',\n    lname:\"Singh\",\n    fullName:function(){\n      return console.log(this.fname,\"---\",this.lname)\n    }\n  }\n\nvar names2 = {\n    fname:'Nitesh',\n    lname:'Singh'\n  }\n\n//function borrowing\nnames.fullName.call(names2);\n\n\n//2\nvar names = {\n    fname:'Ritesh',\n    lname:\"Singh\"\n  }\n\nlet fullName = function(hometown, state){\n  return console.log(this.fname,\"---\",this.lname,\"---\",hometown,\"---\",state)\n}\n\nfullName.call(names, \"Ranchi\", \"Jharkhand\");\n\n\nvar names2 = {\n    fname:'Nitesh',\n    lname:'Singh'\n  }\n\nfullName.call(names2, \"Ranchi\");\n`.trim();\n\n\nclass Methods extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1.What is 'this' keyword in JavaScript?</h3>\n              <ul>\n                <li>this keyword refers to an object, that object which is executing the current bit of javascript code.</li>\n                <li>To understand this keyword, only we need to know how, when and from where the function is called,\n                  does not matter how and where function is declared/ defined.\n                </li>\n              </ul>\n\n              <div style={titles}>\n                <PrismCode\n                  code={thisKey}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <i>The job of bike() function is printing the this.name .\n                In case of obj1().bike(), “Pulsar” gets printed and the reason behind this is\n                function bike() gets called with the execution context\n                as obj1 so this.name became obj1.name.</i>\n              <br />\n              <br />\n\n              <b>Explicit and Fixed Binding of “this” keyword </b>\n              <br />\n              If we use call and apply method with calling function, both of those methods take as their first\n              parameter as execution context. that is this binding.\n              <div style={titles}>\n                <PrismCode\n                  code={thisBind}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <ul>\n                <li><b>Explicit binding: </b>If we invoke the function bike with call() method passing execution context\n                  object obj as first argument, then obj gets assigned to this object and it prints “Pulsar” which is\n                  nothing but obj.name.</li>\n                <li><b>Fixed binding/Hard binding: </b>We can force the this object to be same always no matter from\n                  where and how it gets called.</li>\n              </ul>\n              <br />\n\n              <h3>2.bind()</h3>\n              <ul>\n                <li>Creates a new function, when called.</li>\n                <li>Returns a new function, when invoked, has its this sets to a specific value.</li>\n                <li>Unlike the call() and apply() methods, the bind() method doesn’t immediately execute the function. It just\n                  returns the function.\n                </li>\n                <li>When a method an object is passed to another function as a callback, the this value is lost.\n                  That’s because bindExample() received the function bindExample.details separately from the bindExample object.\n                </li>\n                <li>The bind() method allows an object to borrow a method from another object without making a copy of that method.</li>\n                <li>When we assign method to varryble than lost this binding bind set context of this.</li>\n                <li>Bind method exactly same as the call method, Only diffrences instead of caling method, Bind method\n                  with the object and return the copy of that method.\n                </li>\n              </ul>\n              <br />\n\n              <div style={titles}>\n                <PrismCode\n                  code={bind_2}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>program to print the name which is called by this keyword.</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={default_this}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <i>this keyword bind the name variable to the function. It is known as default binding.</i>\n              <br />\n              <br />\n\n              <b>No output is produced</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={not_call}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <i>Here we made a new variable function printFunc2 which refers to the function\n                printFunc() of object geeks. Here the binding of this is lost, so no output is\n                produced.</i>\n              <br />\n              <br />\n              To make sure that any binding of this is not to be lost, we are using Bind() method.\n              By using bind() method we can set the context of this to a particular object. So we can use\n              other variables also to call binded function.\n              <div style={titles}>\n                <PrismCode\n                  code={this_bind}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <i>The bind() method creates a new function where this keyword refers to the parameter\n                in the parenthesis in the above case obj. This way the bind() method enables calling a\n                function with a specified this value.</i>\n              <br />\n\n              <h3>3. call(), apply()</h3>\n              The call() method calls a function with a given this value and arguments provided individually.\n              <br />\n              <br />\n              The main differences between bind() and call() is that the call() method:<br />\n              <ul>\n                <li>Accepts additional parameters as well</li>\n                <li>The call() method does not make a copy of the function it is being called on.</li>\n                <li>call() and apply() serve the exact same purpose. The only difference between how they work is that.</li>\n                <ul>\n                  <li>call() expects all parameters to be passed in individually.</li>\n                  <li>apply() expects an array of all of our parameters.</li>\n                </ul>\n              </ul>\n              <br />\n              <br />\n\n              <b>Call: </b>This value depend from where to call it.\n              <br />\n              <br />\n              call: accept two properties:\n              <ul>\n                <li>(i) what is context of this.</li>\n                <li>(ii) Parameter.</li>\n              </ul>\n\n              <div style={titles}>\n                <PrismCode\n                  code={calls}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>Apply</b>\n              <br />\n              Pass Array as argument instead of parameter.\n              <div style={titles}>\n                <PrismCode\n                  code={applys}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>4. Borrowing</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={borrowing}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Methods));\n"]},"metadata":{},"sourceType":"module"}