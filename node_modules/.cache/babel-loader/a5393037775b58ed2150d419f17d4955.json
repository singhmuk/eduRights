{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import\"../../ReactJs/styles.css\";import Sidebar from\"../sidebar\";import PrismCode from\"../../ReactJs/prismCode\";var titles={backgroundColor:\"#F0F8FF\",padding:\"1px\",fontSize:\"16px\"};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var pagination=\"\\n//pagination.component.ts.ts\\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-pagination',\\n  template: '\\n  < div >\\n  <div [ngClass] = \\\"currentPage === 1 && 'pagination__button--disabled'\\\"\\n    (click) = \\\"onFirstPage()\\\" >\\n    First\\n  </div >\\n  <div [ngClass] = \\\"currentPage === 1 && 'pagination__button--disabled'\\\"\\n    (click) = \\\"onPreviousPage()\\\" >\\n    Previous\\n  </div >\\n  <input (input) = \\\"onSetPage($event)\\\"[value] = \\\"currentPage\\\" > / <span>{{allPagesNumber}}</span >\\n    <div [ngClass] = \\\"currentPage === allPagesNumber && 'pagination__button--disabled'\\\"\\n      (click) = \\\"onNextPage()\\\" >\\n      Next\\n  </div >\\n  <div [ngClass] = \\\"currentPage === allPagesNumber && 'pagination__button--disabled'\\\"\\n    (click) = \\\"onLastPage()\\\" >\\n    Last\\n  </div >\\n</div >\\n  '})\\nexport class PaginationComponent {\\n  @Input() itemsPerPage: number;\\n  @Input() itemsNumber: number;\\n  @Input() allPagesNumber: number;\\n  @Output() changePage: EventEmitter<number> = new EventEmitter<number>();\\n  private _currentPage: number = 1;\\n\\nget currentPage(): number {\\n    return this._currentPage;\\n  }\\n\\n  set currentPage(page) {\\n    this._currentPage = page;\\n    this.changePage.emit(this.currentPage);\\n  }\\n\\n  onSetPage(event): void {\\n    this.currentPage = event.target.value;\\n  }\\n\\n  onFirstPage(): void {\\n    this.currentPage = 1;\\n  }\\n\\n  onLastPage(): void {\\n    this.currentPage = this.allPagesNumber;\\n  }\\n  onNextPage(): void {\\n    this.currentPage += 1;\\n  }\\n\\n  onPreviousPage(): void {\\n    this.currentPage -= 1;\\n  }\\n}\\n\\n\\n//data-list.component.ts\\n@Component({\\n  selector: 'app-data-list',\\n  template: '\\n  <p *ngFor=\\\"let item of postsData\\\">\\n    {{item.id}} - {{item.title}}\\n        </p>\\n  '})\\nexport class DataListComponent implements OnInit {\\n  @Input() postsData: any = [];\\n\\n  ngOnInit(): void {}\\n}\\n\\n\\n//app.component.ts\\ninterface IData {\\n  useId: number;\\n  id: number;\\n  title: string;\\n  body: string;\\n}\\n\\n@Component({\\n  selector: 'app-root',\\n  template: '\\n  <div>\\n  <h1>Angular Pagination</h1>\\n  <app-data-list [postsData] = \\\"displayedData\\\"></app-data - list>\\n  <app-pagination [allPagesNumber] = \\\"allPages\\\" (changePage) = \\\"onPageChange($event)\\\"></app - pagination>\\n</div >',\\n  })\\nexport class AppComponent  {\\n    fetchedData: IData[] = [];\\n  displayedData: IData[] = [];\\n  itemsPerPage: number = 10;\\n  allPages: number;\\n\\n  constructor(private http: HttpClient) {\\n    this.fetchData();\\n  }\\n\\n  fetchData(): void {\\n    const dataConfig$ = this.http.get('https://jsonplaceholder.typicode.com/posts');\\n    dataConfig$.subscribe((data: any) => {\\n        this.fetchedData = data;\\n        this.onPageChange();\\n        this.allPages = Math.ceil(this.fetchedData.length / this.itemsPerPage);\\n      }\\n    );\\n  }\\n\\n  onPageChange(page: number = 1): void {\\n    const startItem = (page - 1) * this.itemsPerPage;\\n    const endItem = page * this.itemsPerPage;\\n    this.displayedData = this.fetchedData.slice(startItem, endItem);\\n  }\\n}\\n\".trim();var scrollTop=\"\\n//html\\n<li *ngFor=\\\"let product of Images; let  j = index;\\\">\\n  <img [src] = \\\"product.image\\\">\\n</li >\\n<div (click) = \\\"scrollToTop()\\\">scrollToTop </div>\\n\\n\\nexport class AppComponent  {\\nscrollToTop(){\\n  document.body.scrollTop = document.documentElement.scrollTop = 0;\\n}\\n   Images = [\\n    {ID:1, image: 'https://material-components-web.appspot.com/images/photos/3x2/16.jpg'},\\n    {ID:2, image: 'https://material-components-web.appspot.com/images/photos/3x2/16.jpg'}\\n  ];\\n}\\n\".trim();var startRatings=\"\\n//html\\n<ul *ngFor=\\\"let star of stars\\\" style=\\\"display: inline-block\\\">\\n  <li (click) = \\\"countStar(star)\\\">\\n    <i class=\\\"fa fa-star\\\">start</i>\\n  </li> \\n</ul>\\n\\n\\nexport class AppComponent  {\\n    stars: number[] = [1, 2, 3, 4, 5];\\n    selectedValue: number;\\n\\n    countStar(star) {\\n      //store selected values\\n      this.selectedValue = star;\\n      console.log('Value of star', this.selectedValue);\\n    }\\n}\".trim();var Paginations=/*#__PURE__*/function(_Component){_inherits(Paginations,_Component);function Paginations(){_classCallCheck(this,Paginations);return _possibleConstructorReturn(this,_getPrototypeOf(Paginations).apply(this,arguments));}_createClass(Paginations,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"1. Paginations\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:pagination,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"2. Scroll-Top\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:scrollTop,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"3. Star Rating\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:startRatings,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null)))));}}]);return Paginations;}(Component);export default withStyles(styles)(Paginations);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/angularjsd/angular 12/paginations.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","pagination","trim","scrollTop","startRatings","Paginations","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAEA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,QAAY,CACzBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADkB,CAKzBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALe,CAQzBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARc,CAAZ,EAAf,CAaA,GAAMC,CAAAA,UAAU,CAAG,qiGA0HjBC,IA1HiB,EAAnB,CA4HA,GAAMC,CAAAA,SAAS,CAAG,8eAiBhBD,IAjBgB,EAAlB,CAmBA,GAAME,CAAAA,YAAY,CAAG,+aAkBlBF,IAlBkB,EAArB,C,GAoBMG,CAAAA,W,+SACgB,CAClBC,UAAU,CAAC,iBAAMxB,CAAAA,KAAK,CAACyB,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACb,KAA1B,EACE,8BACE,oBAAC,OAAD,MADF,CADF,CADF,CADF,CAQE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEa,OAAO,CAACb,KAA1B,EACE,oBAAC,IAAD,MACE,+CADF,CAEE,2BAAK,KAAK,CAAEN,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEY,UADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAFF,CASE,8BATF,CAWE,8CAXF,CAYE,2BAAK,KAAK,CAAEZ,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEc,SADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAZF,CAmBE,8BAnBF,CAqBE,+CArBF,CAsBE,2BAAK,KAAK,CAAEd,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEe,YADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAtBF,CA6BE,8BA7BF,CADF,CADF,CARF,CADF,CA8CD,C,yBApDuBvB,S,EAuD1B,cAAeI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBY,WAAnB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport \"../../ReactJs/styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../../ReactJs/prismCode\";\n\nconst titles = { backgroundColor: \"#F0F8FF\", padding: \"1px\", fontSize: \"16px\" };\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n});\n\nconst pagination = `\n//pagination.component.ts.ts\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-pagination',\n  template: '\n  < div >\n  <div [ngClass] = \"currentPage === 1 && 'pagination__button--disabled'\"\n    (click) = \"onFirstPage()\" >\n    First\n  </div >\n  <div [ngClass] = \"currentPage === 1 && 'pagination__button--disabled'\"\n    (click) = \"onPreviousPage()\" >\n    Previous\n  </div >\n  <input (input) = \"onSetPage($event)\"[value] = \"currentPage\" > / <span>{{allPagesNumber}}</span >\n    <div [ngClass] = \"currentPage === allPagesNumber && 'pagination__button--disabled'\"\n      (click) = \"onNextPage()\" >\n      Next\n  </div >\n  <div [ngClass] = \"currentPage === allPagesNumber && 'pagination__button--disabled'\"\n    (click) = \"onLastPage()\" >\n    Last\n  </div >\n</div >\n  '})\nexport class PaginationComponent {\n  @Input() itemsPerPage: number;\n  @Input() itemsNumber: number;\n  @Input() allPagesNumber: number;\n  @Output() changePage: EventEmitter<number> = new EventEmitter<number>();\n  private _currentPage: number = 1;\n\nget currentPage(): number {\n    return this._currentPage;\n  }\n\n  set currentPage(page) {\n    this._currentPage = page;\n    this.changePage.emit(this.currentPage);\n  }\n\n  onSetPage(event): void {\n    this.currentPage = event.target.value;\n  }\n\n  onFirstPage(): void {\n    this.currentPage = 1;\n  }\n\n  onLastPage(): void {\n    this.currentPage = this.allPagesNumber;\n  }\n  onNextPage(): void {\n    this.currentPage += 1;\n  }\n\n  onPreviousPage(): void {\n    this.currentPage -= 1;\n  }\n}\n\n\n//data-list.component.ts\n@Component({\n  selector: 'app-data-list',\n  template: '\n  <p *ngFor=\"let item of postsData\">\n    {{item.id}} - {{item.title}}\n        </p>\n  '})\nexport class DataListComponent implements OnInit {\n  @Input() postsData: any = [];\n\n  ngOnInit(): void {}\n}\n\n\n//app.component.ts\ninterface IData {\n  useId: number;\n  id: number;\n  title: string;\n  body: string;\n}\n\n@Component({\n  selector: 'app-root',\n  template: '\n  <div>\n  <h1>Angular Pagination</h1>\n  <app-data-list [postsData] = \"displayedData\"></app-data - list>\n  <app-pagination [allPagesNumber] = \"allPages\" (changePage) = \"onPageChange($event)\"></app - pagination>\n</div >',\n  })\nexport class AppComponent  {\n    fetchedData: IData[] = [];\n  displayedData: IData[] = [];\n  itemsPerPage: number = 10;\n  allPages: number;\n\n  constructor(private http: HttpClient) {\n    this.fetchData();\n  }\n\n  fetchData(): void {\n    const dataConfig$ = this.http.get('https://jsonplaceholder.typicode.com/posts');\n    dataConfig$.subscribe((data: any) => {\n        this.fetchedData = data;\n        this.onPageChange();\n        this.allPages = Math.ceil(this.fetchedData.length / this.itemsPerPage);\n      }\n    );\n  }\n\n  onPageChange(page: number = 1): void {\n    const startItem = (page - 1) * this.itemsPerPage;\n    const endItem = page * this.itemsPerPage;\n    this.displayedData = this.fetchedData.slice(startItem, endItem);\n  }\n}\n`.trim();\n\nconst scrollTop = `\n//html\n<li *ngFor=\"let product of Images; let  j = index;\">\n  <img [src] = \"product.image\">\n</li >\n<div (click) = \"scrollToTop()\">scrollToTop </div>\n\n\nexport class AppComponent  {\nscrollToTop(){\n  document.body.scrollTop = document.documentElement.scrollTop = 0;\n}\n   Images = [\n    {ID:1, image: 'https://material-components-web.appspot.com/images/photos/3x2/16.jpg'},\n    {ID:2, image: 'https://material-components-web.appspot.com/images/photos/3x2/16.jpg'}\n  ];\n}\n`.trim();\n\nconst startRatings = `\n//html\n<ul *ngFor=\"let star of stars\" style=\"display: inline-block\">\n  <li (click) = \"countStar(star)\">\n    <i class=\"fa fa-star\">start</i>\n  </li> \n</ul>\n\n\nexport class AppComponent  {\n    stars: number[] = [1, 2, 3, 4, 5];\n    selectedValue: number;\n\n    countStar(star) {\n      //store selected values\n      this.selectedValue = star;\n      console.log('Value of star', this.selectedValue);\n    }\n}`.trim();\n\nclass Paginations extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4>\n              <Sidebar />\n            </h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. Paginations</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={pagination}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>2. Scroll-Top</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={scrollTop}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>3. Star Rating</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={startRatings}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Paginations);\n"]},"metadata":{},"sourceType":"module"}