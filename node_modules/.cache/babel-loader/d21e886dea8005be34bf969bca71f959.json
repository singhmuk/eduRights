{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var flasks=\"\\nTo check python: cmd => python --version\\npy -m pip install flask\\nflask.__version__\\n\\npip install vertualenv or py -m venv env\\nactivate environment: (project name)envScriptsactivate \\npip install flask\\ncreated file set to flask: set FLASK_APP=app.py\\nflask run\\nnot required to run every time: set FLASK_DEBUG=1\\n\\n\\n//2\\npip install vertualenv or pip install virtualenvwrapper-win\\nvirtualenv env\\n.envScripts/activate.ps1\\npip install flask\\npython .app.py\\n\\nSet-ExecutionPolicy unrestricted\\n\\n\\n\".trim();var appy=\"from flask import Flask, render_template, flash, redirect, url_for, session, request, logging\\n#from data import Articles\\nfrom flask_mysqldb import MySQL\\nfrom wtforms import Form, StringField, TextAreaField, PasswordField, validators\\nfrom passlib.hash import sha256_crypt\\nfrom functools import wraps\\n\\napp = Flask(__name__)\\n\\n# Config MySQL\\napp.config['MYSQL_HOST'] = 'localhost'\\napp.config['MYSQL_USER'] = 'root'\\napp.config['MYSQL_PASSWORD'] = ''\\napp.config['MYSQL_DB'] = 'myflaskapp'\\napp.config['MYSQL_CURSORCLASS'] = 'DictCursor'\\n# init MYSQL\\nmysql = MySQL(app)\\n\\n#Articles = Articles()\\n\\n# Index\\n@app.route('/')\\ndef index():\\n    return render_template('home.html')\\n\\n\\n# About\\n@app.route('/about')\\ndef about():\\n    return render_template('about.html')\\n\\n\\n# Articles\\n@app.route('/articles')\\ndef articles():\\n    # Create cursor\\n    cur = mysql.connection.cursor()\\n\\n    # Get articles\\n    result = cur.execute(\\\"SELECT * FROM articles\\\")\\n\\n    articles = cur.fetchall()\\n\\n    if result > 0:\\n        return render_template('articles.html', articles=articles)\\n    else:\\n        msg = 'No Articles Found'\\n        return render_template('articles.html', msg=msg)\\n    # Close connection\\n    cur.close()\\n\\n\\n#Single Article\\n@app.route('/article/<string:id>/')\\ndef article(id):\\n    # Create cursor\\n    cur = mysql.connection.cursor()\\n\\n    # Get article\\n    result = cur.execute(\\\"SELECT * FROM articles WHERE id = %s\\\", [id])\\n\\n    article = cur.fetchone()\\n\\n    return render_template('article.html', article=article)\\n\\n\\n# Register Form Class\\nclass RegisterForm(Form):\\n    name = StringField('Name', [validators.Length(min=1, max=50)])\\n    username = StringField('Username', [validators.Length(min=4, max=25)])\\n    email = StringField('Email', [validators.Length(min=6, max=50)])\\n    password = PasswordField('Password', [\\n        validators.DataRequired(),\\n        validators.EqualTo('confirm', message='Passwords do not match')\\n    ])\\n    confirm = PasswordField('Confirm Password')\\n\\n\\n# User Register\\n@app.route('/register', methods=['GET', 'POST'])\\ndef register():\\n    form = RegisterForm(request.form)\\n    if request.method == 'POST' and form.validate():\\n        name = form.name.data\\n        email = form.email.data\\n        username = form.username.data\\n        password = sha256_crypt.encrypt(str(form.password.data))\\n\\n        # Create cursor\\n        cur = mysql.connection.cursor()\\n\\n        # Execute query\\n        cur.execute(\\\"INSERT INTO users(name, email, username, password) VALUES(%s, %s, %s, %s)\\\", (name, email, \\n                                        username, password))\\n\\n        # Commit to DB\\n        mysql.connection.commit()\\n\\n        # Close connection\\n        cur.close()\\n\\n        flash('You are now registered and can log in', 'success')\\n\\n        return redirect(url_for('login'))\\n    return render_template('register.html', form=form)\\n\\n\\n# User login\\n@app.route('/login', methods=['GET', 'POST'])\\ndef login():\\n    if request.method == 'POST':\\n        # Get Form Fields\\n        username = request.form['username']\\n        password_candidate = request.form['password']\\n\\n        # Create cursor\\n        cur = mysql.connection.cursor()\\n\\n        # Get user by username\\n        result = cur.execute(\\\"SELECT * FROM users WHERE username = %s\\\", [username])\\n\\n        if result > 0:\\n            # Get stored hash\\n            data = cur.fetchone()\\n            password = data['password']\\n\\n            # Compare Passwords\\n            if sha256_crypt.verify(password_candidate, password):\\n                # Passed\\n                session['logged_in'] = True\\n                session['username'] = username\\n\\n                flash('You are now logged in', 'success')\\n                return redirect(url_for('dashboard'))\\n            else:\\n                error = 'Invalid login'\\n                return render_template('login.html', error=error)\\n            # Close connection\\n            cur.close()\\n        else:\\n            error = 'Username not found'\\n            return render_template('login.html', error=error)\\n\\n    return render_template('login.html')\\n\\n# Check if user logged in\\ndef is_logged_in(f):\\n    @wraps(f)\\n    def wrap(*args, **kwargs):\\n        if 'logged_in' in session:\\n            return f(*args, **kwargs)\\n        else:\\n            flash('Unauthorized, Please login', 'danger')\\n            return redirect(url_for('login'))\\n    return wrap\\n\\n# Logout\\n@app.route('/logout')\\n@is_logged_in\\ndef logout():\\n    session.clear()\\n    flash('You are now logged out', 'success')\\n    return redirect(url_for('login'))\\n\\n# Dashboard\\n@app.route('/dashboard')\\n@is_logged_in\\ndef dashboard():\\n    # Create cursor\\n    cur = mysql.connection.cursor()\\n\\n    # Get articles\\n    #result = cur.execute(\\\"SELECT * FROM articles\\\")\\n    # Show articles only from the user logged in \\n    result = cur.execute(\\\"SELECT * FROM articles WHERE author = %s\\\", [session['username']])\\n\\n    articles = cur.fetchall()\\n\\n    if result > 0:\\n        return render_template('dashboard.html', articles=articles)\\n    else:\\n        msg = 'No Articles Found'\\n        return render_template('dashboard.html', msg=msg)\\n    # Close connection\\n    cur.close()\\n\\n# Article Form Class\\nclass ArticleForm(Form):\\n    title = StringField('Title', [validators.Length(min=1, max=200)])\\n    body = TextAreaField('Body', [validators.Length(min=30)])\\n\\n# Add Article\\n@app.route('/add_article', methods=['GET', 'POST'])\\n@is_logged_in\\ndef add_article():\\n    form = ArticleForm(request.form)\\n    if request.method == 'POST' and form.validate():\\n        title = form.title.data\\n        body = form.body.data\\n\\n        # Create Cursor\\n        cur = mysql.connection.cursor()\\n\\n        # Execute\\n        cur.execute(\\\"INSERT INTO articles(title, body, author) VALUES(%s, %s, %s)\\\",(title, body, session['username']))\\n\\n        # Commit to DB\\n        mysql.connection.commit()\\n\\n        #Close connection\\n        cur.close()\\n\\n        flash('Article Created', 'success')\\n\\n        return redirect(url_for('dashboard'))\\n\\n    return render_template('add_article.html', form=form)\\n\\n\\n# Edit Article\\n@app.route('/edit_article/<string:id>', methods=['GET', 'POST'])\\n@is_logged_in\\ndef edit_article(id):\\n    # Create cursor\\n    cur = mysql.connection.cursor()\\n\\n    # Get article by id\\n    result = cur.execute(\\\"SELECT * FROM articles WHERE id = %s\\\", [id])\\n\\n    article = cur.fetchone()\\n    cur.close()\\n    # Get form\\n    form = ArticleForm(request.form)\\n\\n    # Populate article form fields\\n    form.title.data = article['title']\\n    form.body.data = article['body']\\n\\n    if request.method == 'POST' and form.validate():\\n        title = request.form['title']\\n        body = request.form['body']\\n\\n        # Create Cursor\\n        cur = mysql.connection.cursor()\\n        app.logger.info(title)\\n        # Execute\\n        cur.execute (\\\"UPDATE articles SET title=%s, body=%s WHERE id=%s\\\",(title, body, id))\\n        # Commit to DB\\n        mysql.connection.commit()\\n\\n        #Close connection\\n        cur.close()\\n\\n        flash('Article Updated', 'success')\\n\\n        return redirect(url_for('dashboard'))\\n\\n    return render_template('edit_article.html', form=form)\\n\\n# Delete Article\\n@app.route('/delete_article/<string:id>', methods=['POST'])\\n@is_logged_in\\ndef delete_article(id):\\n    # Create cursor\\n    cur = mysql.connection.cursor()\\n\\n    # Execute\\n    cur.execute(\\\"DELETE FROM articles WHERE id = %s\\\", [id])\\n\\n    # Commit to DB\\n    mysql.connection.commit()\\n\\n    #Close connection\\n    cur.close()\\n\\n    flash('Article Deleted', 'success')\\n\\n    return redirect(url_for('dashboard'))\\n\\nif __name__ == '__main__':\\n    app.secret_key='secret123'\\n    app.run(debug=True)\\n\".trim();var about=\"\\n{% extends 'layout.html' %}\\n\\n{% block body %}\\n  <h1>About Us</h1>\\n  <p>Lorem culpa qui officia deserunt mollit anim id est laborum.</p>\\n{% endblock %}\\n\".trim();var article=\"\\n{% extends 'layout.html' %}\\n\\n{% block body %}\\n  <h1>Add Article</h1>\\n  {% from \\\"includes/_formhelpers.html\\\" import render_field %}\\n  <form method=\\\"POST\\\" action=\\\"\\\">\\n    <div class=\\\"form-group\\\">\\n      {{ render_field(form.title, class_=\\\"form-control\\\") }}\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      {{ render_field(form.body, class_=\\\"form-control\\\", id=\\\"editor\\\") }}\\n    </div>\\n    <p><input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Submit\\\">\\n  </form>\\n{% endblock %}\\n\".trim();var articles=\"\\n{% extends 'layout.html' %}\\n\\n{% block body %}\\n  <h1>{{article.title}}</h1>\\n  <small>Written by {{article.author}} on {{article.create_date}}</small>\\n  <hr>\\n  <div>\\n    {{article.body | safe}}\\n  </div>\\n{% endblock %}\\n\".trim();var articless=\"\\n{% extends 'layout.html' %}\\n\\n{% block body %}\\n  <h1>Articles</h1>\\n  <ul class=\\\"list-group\\\">\\n    {% for article in articles %}\\n      <li class=\\\"list-group-item\\\"><a href=\\\"article/{{article.id}}\\\">{{article.title}}</a></li>\\n    {% endfor %}\\n  </ul>\\n{% endblock %}\\n\".trim();var dashboard=\"\\n{% extends 'layout.html' %}\\n\\n{% block body %}\\n  <h1>Dashboard <small> Welcome {{session.username}}</small></h1>\\n  <a class=\\\"btn btn-success\\\" href=\\\"/add_article\\\"> Add Article</a>\\n  <hr>\\n  <table class=\\\"table table-striped\\\">\\n    <tr>\\n      <th>ID</th>\\n      <th>Title</th>\\n      <th>Author</th>\\n      <th>Date</th>\\n      <th></th>\\n      <th></th>\\n    </tr>\\n    {% for article in articles %}\\n      <tr>\\n        <td>{{article.id}}</td>\\n        <td>{{article.title}}</td>\\n        <td>{{article.author}}</td>\\n        <td>{{article.create_date}}</td>\\n        <td><a href=\\\"edit_article/{{article.id}}\\\" class=\\\"btn btn-default pull-right\\\">Edit</a></td>\\n        <td>\\n          <form action=\\\"{{url_for('delete_article', id=article.id)}}\\\" method=\\\"post\\\">\\n            <input type=\\\"hidden\\\" name=\\\"_method\\\" value=\\\"DELETE\\\">\\n            <input type=\\\"submit\\\" value=\\\"Delete\\\" class=\\\"btn btn-danger\\\">\\n          </form>\\n        </td>\\n      </tr>\\n    {% endfor %}\\n  </table>\\n{% endblock %}\\n\".trim();var edit=\"\\n{% extends 'layout.html' %}\\n\\n{% block body %}\\n  <h1>Edit Article</h1>\\n  {% from \\\"includes/_formhelpers.html\\\" import render_field %}\\n  <form method=\\\"POST\\\" action=\\\"\\\">\\n    <div class=\\\"form-group\\\">\\n      {{ render_field(form.title, class_=\\\"form-control\\\") }}\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      {{ render_field(form.body, class_=\\\"form-control\\\", id=\\\"editor\\\") }}\\n    </div>\\n    <p><input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Submit\\\">\\n  </form>\\n{% endblock %}\\n\".trim();var home=\"\\n{% extends 'layout.html' %}\\n\\n{% block body %}\\n  <div class=\\\"jumbotron text-center\\\">\\n    <h1>Welcome To FlaskApp</h1>\\n    <p class=\\\"lead\\\">This application YouTube series</p>\\n    {% if session.logged_in == NULL %}\\n      <a href=\\\"/register\\\" class=\\\"btn btn-primary btn-lg\\\">Register</a>\\n      <a href=\\\"/login\\\" class=\\\"btn btn-success btn-lg\\\">Login</a>\\n    {% endif %}\\n  </div>\\n{% endblock %}\\n\".trim();var layout=\"\\n<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\\\"utf-8\\\">\\n    <title>MyFlaskApp</title>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\\\">\\n  </head>\\n  <body>\\n    {% include 'includes/_navbar.html' %}\\n    <div class=\\\"container\\\">\\n      {% include 'includes/_messages.html' %}\\n      {% block body %}{% endblock %}\\n    </div>\\n\\n    <script src=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\\\"></script>\\n    <script src=\\\"//cdn.ckeditor.com/4.6.2/basic/ckeditor.js\\\"></script>\\n    <script type=\\\"text/javascript\\\">\\n      CKEDITOR.replace('editor')\\n    </script>\\n  </body>\\n</html>\\n\".trim();var login=\"\\n{% extends 'layout.html' %}\\n\\n{% block body %}\\n  <h1>Login</h1>\\n  <form action=\\\"\\\" method=\\\"POST\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>Username</label>\\n      <input type=\\\"text\\\" name=\\\"username\\\" class=\\\"form-control\\\" value={{request.form.username}}>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Password</label>\\n      <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" value={{request.form.password}}>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n  </form>\\n{% endblock %}\\n\".trim();var register=\"\\n{% extends 'layout.html' %}\\n\\n{% block body %}\\n  <h1>Register</h1>\\n  {% from \\\"includes/_formhelpers.html\\\" import render_field %}\\n  <form method=\\\"POST\\\" action=\\\"\\\">\\n    <div class=\\\"form-group\\\">\\n      {{render_field(form.name, class_=\\\"form-control\\\")}}\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      {{render_field(form.email, class_=\\\"form-control\\\")}}\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      {{render_field(form.username, class_=\\\"form-control\\\")}}\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      {{render_field(form.password, class_=\\\"form-control\\\")}}\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      {{render_field(form.confirm, class_=\\\"form-control\\\")}}\\n    </div>\\n    <p><input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\"></p>\\n  </form>\\n{% endblock %}\\n\".trim();var formhelpers=\"\\n{% macro render_field(field) %}\\n  {{ field.label }}\\n  {{ field(**kwargs)|safe }}\\n  {% if field.errors %}\\n    {% for error in field.errors %}\\n      <span class=\\\"help-inline\\\">{{ error }}</span>\\n    {% endfor %}\\n  {% endif %}\\n{% endmacro %}\\n\".trim();var messages=\"\\n{% with messages = get_flashed_messages(with_categories=true) %}\\n  {% if messages %}\\n    {% for category, message in messages %}\\n      <div class=\\\"alert alert-{{ category }}\\\">{{ message }}</div>\\n    {% endfor %}\\n  {% endif %}\\n{% endwith %}\\n\\n{% if error %}\\n  <div class=\\\"alert alert-danger\\\">{{error}}</div>\\n{% endif %}\\n\\n{% if msg %}\\n  <div class=\\\"alert alert-success\\\">{{msg}}</div>\\n{% endif %}\\n\".trim();var navbar=\"\\n<nav class=\\\"navbar navbar-default\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"navbar-header\\\">\\n          <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" \\n                        aria-expanded=\\\"false\\\" aria-controls=\\\"navbar\\\">\\n            <span class=\\\"sr-only\\\">Toggle navigation</span>\\n            <span class=\\\"icon-bar\\\"></span>\\n            <span class=\\\"icon-bar\\\"></span>\\n            <span class=\\\"icon-bar\\\"></span>\\n          </button>\\n          <a class=\\\"navbar-brand\\\" href=\\\"#\\\">MyFlaskApp</a>\\n        </div>\\n        <div id=\\\"navbar\\\" class=\\\"collapse navbar-collapse\\\">\\n          <ul class=\\\"nav navbar-nav\\\">\\n            <li><a href=\\\"/\\\">Home</a></li>\\n            <li><a href=\\\"/about\\\">About</a></li>\\n            <li><a href=\\\"/articles\\\">Articles</a></li>\\n          </ul>\\n\\n          <ul class=\\\"nav navbar-nav navbar-right\\\">\\n            {% if session.logged_in %}\\n              <li><a href=\\\"/dashboard\\\">Dashboard</a></li>\\n              <li><a href=\\\"/logout\\\">Logout</a></li>\\n            {% else %}\\n              <li><a href=\\\"/register\\\">Register</a></li>\\n              <li><a href=\\\"/login\\\">Login</a></li>\\n            {% endif %}\\n\\n          </ul>\\n        </div><!--/.nav-collapse -->\\n      </div>\\n    </nav>\\n\".trim();var FlaskSignUp=/*#__PURE__*/function(_Component){_inherits(FlaskSignUp,_Component);function FlaskSignUp(){_classCallCheck(this,FlaskSignUp);return _possibleConstructorReturn(this,_getPrototypeOf(FlaskSignUp).apply(this,arguments));}_createClass(FlaskSignUp,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"SetUp\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:flasks,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"app.py\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:appy,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"templates/about.html\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:about,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"templates/add_article.html\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:article,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"templates/article.html\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:articles,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"templates/articles.html\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:articless,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"templates/dashboard.html\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:dashboard,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"templates/edit_article.html\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:edit,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"templates/home.html\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:home,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"templates/layout.html\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:layout,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"templates/login.html\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:login,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"templates/register.html\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:register,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"templates/includes/_formhelpers.html\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:formhelpers,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"templates/includes/_messages.html\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:messages,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"templates/includes/_navbar.html\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:navbar,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return FlaskSignUp;}(Component);export default withStyles(styles)(FlaskSignUp);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/pythone/deeppy/flask_signUp.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","flasks","trim","appy","about","article","articles","articless","dashboard","edit","home","layout","login","register","formhelpers","messages","navbar","FlaskSignUp","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst flasks = `\nTo check python: cmd => python --version\npy -m pip install flask\nflask.__version__\n\npip install vertualenv or py -m venv env\nactivate environment: (project name)env\\Scripts\\activate \npip install flask\ncreated file set to flask: set FLASK_APP=app.py\nflask run\nnot required to run every time: set FLASK_DEBUG=1\n\n\n//2\npip install vertualenv or pip install virtualenvwrapper-win\nvirtualenv env\n.\\env\\Scripts/activate.ps1\npip install flask\npython .\\app.py\n\nSet-ExecutionPolicy unrestricted\n\n\n`.trim();\n\nconst appy = `from flask import Flask, render_template, flash, redirect, url_for, session, request, logging\n#from data import Articles\nfrom flask_mysqldb import MySQL\nfrom wtforms import Form, StringField, TextAreaField, PasswordField, validators\nfrom passlib.hash import sha256_crypt\nfrom functools import wraps\n\napp = Flask(__name__)\n\n# Config MySQL\napp.config['MYSQL_HOST'] = 'localhost'\napp.config['MYSQL_USER'] = 'root'\napp.config['MYSQL_PASSWORD'] = ''\napp.config['MYSQL_DB'] = 'myflaskapp'\napp.config['MYSQL_CURSORCLASS'] = 'DictCursor'\n# init MYSQL\nmysql = MySQL(app)\n\n#Articles = Articles()\n\n# Index\n@app.route('/')\ndef index():\n    return render_template('home.html')\n\n\n# About\n@app.route('/about')\ndef about():\n    return render_template('about.html')\n\n\n# Articles\n@app.route('/articles')\ndef articles():\n    # Create cursor\n    cur = mysql.connection.cursor()\n\n    # Get articles\n    result = cur.execute(\"SELECT * FROM articles\")\n\n    articles = cur.fetchall()\n\n    if result > 0:\n        return render_template('articles.html', articles=articles)\n    else:\n        msg = 'No Articles Found'\n        return render_template('articles.html', msg=msg)\n    # Close connection\n    cur.close()\n\n\n#Single Article\n@app.route('/article/<string:id>/')\ndef article(id):\n    # Create cursor\n    cur = mysql.connection.cursor()\n\n    # Get article\n    result = cur.execute(\"SELECT * FROM articles WHERE id = %s\", [id])\n\n    article = cur.fetchone()\n\n    return render_template('article.html', article=article)\n\n\n# Register Form Class\nclass RegisterForm(Form):\n    name = StringField('Name', [validators.Length(min=1, max=50)])\n    username = StringField('Username', [validators.Length(min=4, max=25)])\n    email = StringField('Email', [validators.Length(min=6, max=50)])\n    password = PasswordField('Password', [\n        validators.DataRequired(),\n        validators.EqualTo('confirm', message='Passwords do not match')\n    ])\n    confirm = PasswordField('Confirm Password')\n\n\n# User Register\n@app.route('/register', methods=['GET', 'POST'])\ndef register():\n    form = RegisterForm(request.form)\n    if request.method == 'POST' and form.validate():\n        name = form.name.data\n        email = form.email.data\n        username = form.username.data\n        password = sha256_crypt.encrypt(str(form.password.data))\n\n        # Create cursor\n        cur = mysql.connection.cursor()\n\n        # Execute query\n        cur.execute(\"INSERT INTO users(name, email, username, password) VALUES(%s, %s, %s, %s)\", (name, email, \n                                        username, password))\n\n        # Commit to DB\n        mysql.connection.commit()\n\n        # Close connection\n        cur.close()\n\n        flash('You are now registered and can log in', 'success')\n\n        return redirect(url_for('login'))\n    return render_template('register.html', form=form)\n\n\n# User login\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    if request.method == 'POST':\n        # Get Form Fields\n        username = request.form['username']\n        password_candidate = request.form['password']\n\n        # Create cursor\n        cur = mysql.connection.cursor()\n\n        # Get user by username\n        result = cur.execute(\"SELECT * FROM users WHERE username = %s\", [username])\n\n        if result > 0:\n            # Get stored hash\n            data = cur.fetchone()\n            password = data['password']\n\n            # Compare Passwords\n            if sha256_crypt.verify(password_candidate, password):\n                # Passed\n                session['logged_in'] = True\n                session['username'] = username\n\n                flash('You are now logged in', 'success')\n                return redirect(url_for('dashboard'))\n            else:\n                error = 'Invalid login'\n                return render_template('login.html', error=error)\n            # Close connection\n            cur.close()\n        else:\n            error = 'Username not found'\n            return render_template('login.html', error=error)\n\n    return render_template('login.html')\n\n# Check if user logged in\ndef is_logged_in(f):\n    @wraps(f)\n    def wrap(*args, **kwargs):\n        if 'logged_in' in session:\n            return f(*args, **kwargs)\n        else:\n            flash('Unauthorized, Please login', 'danger')\n            return redirect(url_for('login'))\n    return wrap\n\n# Logout\n@app.route('/logout')\n@is_logged_in\ndef logout():\n    session.clear()\n    flash('You are now logged out', 'success')\n    return redirect(url_for('login'))\n\n# Dashboard\n@app.route('/dashboard')\n@is_logged_in\ndef dashboard():\n    # Create cursor\n    cur = mysql.connection.cursor()\n\n    # Get articles\n    #result = cur.execute(\"SELECT * FROM articles\")\n    # Show articles only from the user logged in \n    result = cur.execute(\"SELECT * FROM articles WHERE author = %s\", [session['username']])\n\n    articles = cur.fetchall()\n\n    if result > 0:\n        return render_template('dashboard.html', articles=articles)\n    else:\n        msg = 'No Articles Found'\n        return render_template('dashboard.html', msg=msg)\n    # Close connection\n    cur.close()\n\n# Article Form Class\nclass ArticleForm(Form):\n    title = StringField('Title', [validators.Length(min=1, max=200)])\n    body = TextAreaField('Body', [validators.Length(min=30)])\n\n# Add Article\n@app.route('/add_article', methods=['GET', 'POST'])\n@is_logged_in\ndef add_article():\n    form = ArticleForm(request.form)\n    if request.method == 'POST' and form.validate():\n        title = form.title.data\n        body = form.body.data\n\n        # Create Cursor\n        cur = mysql.connection.cursor()\n\n        # Execute\n        cur.execute(\"INSERT INTO articles(title, body, author) VALUES(%s, %s, %s)\",(title, body, session['username']))\n\n        # Commit to DB\n        mysql.connection.commit()\n\n        #Close connection\n        cur.close()\n\n        flash('Article Created', 'success')\n\n        return redirect(url_for('dashboard'))\n\n    return render_template('add_article.html', form=form)\n\n\n# Edit Article\n@app.route('/edit_article/<string:id>', methods=['GET', 'POST'])\n@is_logged_in\ndef edit_article(id):\n    # Create cursor\n    cur = mysql.connection.cursor()\n\n    # Get article by id\n    result = cur.execute(\"SELECT * FROM articles WHERE id = %s\", [id])\n\n    article = cur.fetchone()\n    cur.close()\n    # Get form\n    form = ArticleForm(request.form)\n\n    # Populate article form fields\n    form.title.data = article['title']\n    form.body.data = article['body']\n\n    if request.method == 'POST' and form.validate():\n        title = request.form['title']\n        body = request.form['body']\n\n        # Create Cursor\n        cur = mysql.connection.cursor()\n        app.logger.info(title)\n        # Execute\n        cur.execute (\"UPDATE articles SET title=%s, body=%s WHERE id=%s\",(title, body, id))\n        # Commit to DB\n        mysql.connection.commit()\n\n        #Close connection\n        cur.close()\n\n        flash('Article Updated', 'success')\n\n        return redirect(url_for('dashboard'))\n\n    return render_template('edit_article.html', form=form)\n\n# Delete Article\n@app.route('/delete_article/<string:id>', methods=['POST'])\n@is_logged_in\ndef delete_article(id):\n    # Create cursor\n    cur = mysql.connection.cursor()\n\n    # Execute\n    cur.execute(\"DELETE FROM articles WHERE id = %s\", [id])\n\n    # Commit to DB\n    mysql.connection.commit()\n\n    #Close connection\n    cur.close()\n\n    flash('Article Deleted', 'success')\n\n    return redirect(url_for('dashboard'))\n\nif __name__ == '__main__':\n    app.secret_key='secret123'\n    app.run(debug=True)\n`.trim();\n\nconst about = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>About Us</h1>\n  <p>Lorem culpa qui officia deserunt mollit anim id est laborum.</p>\n{% endblock %}\n`.trim();\n\nconst article = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Add Article</h1>\n  {% from \"includes/_formhelpers.html\" import render_field %}\n  <form method=\"POST\" action=\"\">\n    <div class=\"form-group\">\n      {{ render_field(form.title, class_=\"form-control\") }}\n    </div>\n    <div class=\"form-group\">\n      {{ render_field(form.body, class_=\"form-control\", id=\"editor\") }}\n    </div>\n    <p><input class=\"btn btn-primary\" type=\"submit\" value=\"Submit\">\n  </form>\n{% endblock %}\n`.trim();\n\nconst articles = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>{{article.title}}</h1>\n  <small>Written by {{article.author}} on {{article.create_date}}</small>\n  <hr>\n  <div>\n    {{article.body | safe}}\n  </div>\n{% endblock %}\n`.trim();\n\nconst articless = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Articles</h1>\n  <ul class=\"list-group\">\n    {% for article in articles %}\n      <li class=\"list-group-item\"><a href=\"article/{{article.id}}\">{{article.title}}</a></li>\n    {% endfor %}\n  </ul>\n{% endblock %}\n`.trim();\n\nconst dashboard = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Dashboard <small> Welcome {{session.username}}</small></h1>\n  <a class=\"btn btn-success\" href=\"/add_article\"> Add Article</a>\n  <hr>\n  <table class=\"table table-striped\">\n    <tr>\n      <th>ID</th>\n      <th>Title</th>\n      <th>Author</th>\n      <th>Date</th>\n      <th></th>\n      <th></th>\n    </tr>\n    {% for article in articles %}\n      <tr>\n        <td>{{article.id}}</td>\n        <td>{{article.title}}</td>\n        <td>{{article.author}}</td>\n        <td>{{article.create_date}}</td>\n        <td><a href=\"edit_article/{{article.id}}\" class=\"btn btn-default pull-right\">Edit</a></td>\n        <td>\n          <form action=\"{{url_for('delete_article', id=article.id)}}\" method=\"post\">\n            <input type=\"hidden\" name=\"_method\" value=\"DELETE\">\n            <input type=\"submit\" value=\"Delete\" class=\"btn btn-danger\">\n          </form>\n        </td>\n      </tr>\n    {% endfor %}\n  </table>\n{% endblock %}\n`.trim();\n\nconst edit = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Edit Article</h1>\n  {% from \"includes/_formhelpers.html\" import render_field %}\n  <form method=\"POST\" action=\"\">\n    <div class=\"form-group\">\n      {{ render_field(form.title, class_=\"form-control\") }}\n    </div>\n    <div class=\"form-group\">\n      {{ render_field(form.body, class_=\"form-control\", id=\"editor\") }}\n    </div>\n    <p><input class=\"btn btn-primary\" type=\"submit\" value=\"Submit\">\n  </form>\n{% endblock %}\n`.trim();\n\nconst home = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <div class=\"jumbotron text-center\">\n    <h1>Welcome To FlaskApp</h1>\n    <p class=\"lead\">This application YouTube series</p>\n    {% if session.logged_in == NULL %}\n      <a href=\"/register\" class=\"btn btn-primary btn-lg\">Register</a>\n      <a href=\"/login\" class=\"btn btn-success btn-lg\">Login</a>\n    {% endif %}\n  </div>\n{% endblock %}\n`.trim();\n\nconst layout = `\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>MyFlaskApp</title>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n  </head>\n  <body>\n    {% include 'includes/_navbar.html' %}\n    <div class=\"container\">\n      {% include 'includes/_messages.html' %}\n      {% block body %}{% endblock %}\n    </div>\n\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n    <script src=\"//cdn.ckeditor.com/4.6.2/basic/ckeditor.js\"></script>\n    <script type=\"text/javascript\">\n      CKEDITOR.replace('editor')\n    </script>\n  </body>\n</html>\n`.trim();\n\nconst login = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Login</h1>\n  <form action=\"\" method=\"POST\">\n    <div class=\"form-group\">\n      <label>Username</label>\n      <input type=\"text\" name=\"username\" class=\"form-control\" value={{request.form.username}}>\n    </div>\n    <div class=\"form-group\">\n      <label>Password</label>\n      <input type=\"password\" name=\"password\" class=\"form-control\" value={{request.form.password}}>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n  </form>\n{% endblock %}\n`.trim();\n\nconst register = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Register</h1>\n  {% from \"includes/_formhelpers.html\" import render_field %}\n  <form method=\"POST\" action=\"\">\n    <div class=\"form-group\">\n      {{render_field(form.name, class_=\"form-control\")}}\n    </div>\n    <div class=\"form-group\">\n      {{render_field(form.email, class_=\"form-control\")}}\n    </div>\n    <div class=\"form-group\">\n      {{render_field(form.username, class_=\"form-control\")}}\n    </div>\n    <div class=\"form-group\">\n      {{render_field(form.password, class_=\"form-control\")}}\n    </div>\n    <div class=\"form-group\">\n      {{render_field(form.confirm, class_=\"form-control\")}}\n    </div>\n    <p><input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\"></p>\n  </form>\n{% endblock %}\n`.trim();\n\nconst formhelpers = `\n{% macro render_field(field) %}\n  {{ field.label }}\n  {{ field(**kwargs)|safe }}\n  {% if field.errors %}\n    {% for error in field.errors %}\n      <span class=\"help-inline\">{{ error }}</span>\n    {% endfor %}\n  {% endif %}\n{% endmacro %}\n`.trim();\n\nconst messages = `\n{% with messages = get_flashed_messages(with_categories=true) %}\n  {% if messages %}\n    {% for category, message in messages %}\n      <div class=\"alert alert-{{ category }}\">{{ message }}</div>\n    {% endfor %}\n  {% endif %}\n{% endwith %}\n\n{% if error %}\n  <div class=\"alert alert-danger\">{{error}}</div>\n{% endif %}\n\n{% if msg %}\n  <div class=\"alert alert-success\">{{msg}}</div>\n{% endif %}\n`.trim();\n\nconst navbar = `\n<nav class=\"navbar navbar-default\">\n      <div class=\"container\">\n        <div class=\"navbar-header\">\n          <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" \n                        aria-expanded=\"false\" aria-controls=\"navbar\">\n            <span class=\"sr-only\">Toggle navigation</span>\n            <span class=\"icon-bar\"></span>\n            <span class=\"icon-bar\"></span>\n            <span class=\"icon-bar\"></span>\n          </button>\n          <a class=\"navbar-brand\" href=\"#\">MyFlaskApp</a>\n        </div>\n        <div id=\"navbar\" class=\"collapse navbar-collapse\">\n          <ul class=\"nav navbar-nav\">\n            <li><a href=\"/\">Home</a></li>\n            <li><a href=\"/about\">About</a></li>\n            <li><a href=\"/articles\">Articles</a></li>\n          </ul>\n\n          <ul class=\"nav navbar-nav navbar-right\">\n            {% if session.logged_in %}\n              <li><a href=\"/dashboard\">Dashboard</a></li>\n              <li><a href=\"/logout\">Logout</a></li>\n            {% else %}\n              <li><a href=\"/register\">Register</a></li>\n              <li><a href=\"/login\">Login</a></li>\n            {% endif %}\n\n          </ul>\n        </div><!--/.nav-collapse -->\n      </div>\n    </nav>\n`.trim();\n\n\nclass FlaskSignUp extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>SetUp</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={flasks}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>app.py</b>\n              <div style={titles}>\n                <PrismCode\n                  code={appy}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/about.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={about}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n\n              <b>templates/add_article.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={article}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n\n              <b>templates/article.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={articles}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/articles.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={articless}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/dashboard.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={dashboard}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/edit_article.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={edit}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/home.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={home}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/layout.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={layout}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/login.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={login}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/register.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={register}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/includes/_formhelpers.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={formhelpers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/includes/_messages.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={messages}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/includes/_navbar.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={navbar}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(FlaskSignUp));\n"]},"metadata":{},"sourceType":"module"}