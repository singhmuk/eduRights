{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var curd=\"\\n//app.module.ts: import { FormsModule } from '@angular/forms';\\n\\n//app.component.ts\\nexport class AppComponent  {\\n  name = 'Angular';\\n  newEmployeeClick=false\\n  empl=[\\n    {id:1, name:'a', positions:'a'},\\n    {id:2, name:'b', positions:'a'},\\n    {id:3, name:'c', positions:'a'},\\n  ];\\n\\n  constructor(){}\\n  ngOnInit(){}\\n\\n  model:any={};\\n  model2:any={}\\n\\n  addEmployee(){\\n    this.empl.push(this.model);\\n    this.model={}\\n  }\\n\\n  saveButton(){\\n    this.newEmployeeClick=!this.newEmployeeClick;\\n  }\\n\\n  deleteEmployee(i){\\n    this.empl.splice(i)\\n  }\\n\\n  myValue;\\n  editEmployee(editEmpl){\\n    this.model2.name = this.empl[editEmpl].name;\\n    this.model2.positions = this.empl[editEmpl].positions\\n    this.myValue = editEmpl;\\n\\n  }\\n\\n  updateEmpl(){\\n    let editEmpl = this.myValue;\\n    for(let i=0; i<this.empl.length; i++){\\n      if(i == editEmpl){\\n        this.empl[i] = this.model2;\\n        console.log('ss', this.model2)\\n        this.model2 = {};\\n      }\\n    }\\n  }\\n}\\n\\n\\n\\n//app.component.html\\n<p>Add Employee</p>\\n<div (click)=\\\"saveButton()\\\">add</div>\\n<div *ngIf=\\\"newEmployeeClick\\\">\\n  <form>\\n    <input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"model.name\\\" >\\n    <input type=\\\"text\\\" id=\\\"positions\\\" name=\\\"positions\\\" [(ngModel)]=\\\"model.positions\\\" >\\n\\n    <button type=\\\"submit\\\" (click)=\\\"addEmployee()\\\">Save</button>\\n  </form>\\n</div>\\n\\n<div *ngFor=\\\"let empls of empl; let i = index\\\">\\n  {{empls.name}}\\n  {{empls.positions}}\\n<div>\\n  <button (click)=\\\"editEmployee(i)\\\">E</button>\\n  <button (click)=\\\"deleteEmployee(i)\\\">X</button>\\n</div>\\n</div>\\n\\n<p>Edit Employee</p>\\n<form>\\n    <input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"model2.name\\\">\\n    <input type=\\\"text\\\" id=\\\"positions\\\" name=\\\"positions\\\" [(ngModel)]=\\\"model2.positions\\\">\\n  <button type=\\\"submit\\\" (click)=\\\"updateEmpl()\\\">Update</button>\\n</form>\".trim();var AngularCurd12=/*#__PURE__*/function(_Component){_inherits(AngularCurd12,_Component);function AngularCurd12(){_classCallCheck(this,AngularCurd12);return _possibleConstructorReturn(this,_getPrototypeOf(AngularCurd12).apply(this,arguments));}_createClass(AngularCurd12,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Curd\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:curd,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return AngularCurd12;}(Component);export default withStyles(styles)(AngularCurd12);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/angularjsd/angular 12/angularCurd.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","curd","trim","AngularCurd12","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAGA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADgB,CAKvBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALa,CAQvBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARY,CAAL,EAApB,CAcA,GAAMC,CAAAA,IAAI,CAAG,+3DAgFJC,IAhFI,EAAb,C,GAoFMC,CAAAA,a,yTACgB,CAClBC,UAAU,CAAC,iBAAMtB,CAAAA,KAAK,CAACuB,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACX,KAA1B,EACE,8BAAI,oBAAC,OAAD,MAAJ,CADF,CADF,CADF,CAME,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEW,OAAO,CAACX,KAA1B,EACE,oBAAC,IAAD,MACE,qCADF,CAEE,2BAAK,KAAK,CAAEN,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEY,IADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAFF,CADF,CADF,CANF,CADF,CAuBD,C,2BA7ByBpB,S,EAgC5B,cAAgBI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBU,aAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst curd = `\n//app.module.ts: import { FormsModule } from '@angular/forms';\n\n//app.component.ts\nexport class AppComponent  {\n  name = 'Angular';\n  newEmployeeClick=false\n  empl=[\n    {id:1, name:'a', positions:'a'},\n    {id:2, name:'b', positions:'a'},\n    {id:3, name:'c', positions:'a'},\n  ];\n\n  constructor(){}\n  ngOnInit(){}\n\n  model:any={};\n  model2:any={}\n\n  addEmployee(){\n    this.empl.push(this.model);\n    this.model={}\n  }\n\n  saveButton(){\n    this.newEmployeeClick=!this.newEmployeeClick;\n  }\n\n  deleteEmployee(i){\n    this.empl.splice(i)\n  }\n\n  myValue;\n  editEmployee(editEmpl){\n    this.model2.name = this.empl[editEmpl].name;\n    this.model2.positions = this.empl[editEmpl].positions\n    this.myValue = editEmpl;\n\n  }\n\n  updateEmpl(){\n    let editEmpl = this.myValue;\n    for(let i=0; i<this.empl.length; i++){\n      if(i == editEmpl){\n        this.empl[i] = this.model2;\n        console.log('ss', this.model2)\n        this.model2 = {};\n      }\n    }\n  }\n}\n\n\n\n//app.component.html\n<p>Add Employee</p>\n<div (click)=\"saveButton()\">add</div>\n<div *ngIf=\"newEmployeeClick\">\n  <form>\n    <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"model.name\" >\n    <input type=\"text\" id=\"positions\" name=\"positions\" [(ngModel)]=\"model.positions\" >\n\n    <button type=\"submit\" (click)=\"addEmployee()\">Save</button>\n  </form>\n</div>\n\n<div *ngFor=\"let empls of empl; let i = index\">\n  {{empls.name}}\n  {{empls.positions}}\n<div>\n  <button (click)=\"editEmployee(i)\">E</button>\n  <button (click)=\"deleteEmployee(i)\">X</button>\n</div>\n</div>\n\n<p>Edit Employee</p>\n<form>\n    <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"model2.name\">\n    <input type=\"text\" id=\"positions\" name=\"positions\" [(ngModel)]=\"model2.positions\">\n  <button type=\"submit\" (click)=\"updateEmpl()\">Update</button>\n</form>`.trim();\n\n\n\nclass AngularCurd12 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Curd</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={curd}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(AngularCurd12));\n"]},"metadata":{},"sourceType":"module"}