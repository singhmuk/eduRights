{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var actions=\"\\nimport React, { useEffect, useRef } from \\\"react\\\";\\nimport { connect } from \\\"react-redux\\\";\\nimport { getLists, filterContact, clearFilter } from \\\"./actions/actions\\\";\\n\\nconst App = ({ lists: { listVal, loading, filter }, getLists, filterContact, clearFilter }) => {\\n  const text = useRef(\\\"\\\");\\n  useEffect(() => {\\n    getLists();\\n  }, [getLists]);\\n\\n  const onChange = (e) => {\\n    if (text.current.value !== \\\"\\\") {\\n      filterContact(e.target.value);\\n    } else {\\n      clearFilter();\\n    }\\n  };\\n\\n  return (\\n    <>\\n      <input ref={text} type=\\\"text\\\" onChange={onChange} />\\n      <div>\\n        {loading ? (\\n          \\\"oops\\\"\\n        ) : filter ? (\\n          <div>\\n            {filter.map((items) => (\\n              <ul>\\n                <li>{items.name}</li>\\n                <li>{items.email}</li>\\n                <li>{items.phone}</li>\\n              </ul>\\n            ))}\\n          </div>\\n        ) : (\\n          <div>\\n            {listVal.map((list) => (\\n              <div>{list.name}</div>\\n            ))}\\n          </div>\\n        )}\\n      </div>\\n    </>\\n  );\\n};\\n\\nconst mapStateToProps = (state) => ({\\n  lists: state.lists,\\n});\\n\\nexport default connect(mapStateToProps, { getLists, filterContact, clearFilter })(App);\".trim();var reducers=\"\\nimport {\\n  GET_LISTS,\\n  LISTS_ERROR,\\n  FILTER_LISTS,\\n  CLEAR_FILTER,\\n} from \\\"../actions/types\\\";\\n\\nconst initialState = {\\n  listVal: [],\\n  current: null,\\n  filter: null,\\n  loading: true,\\n  error: {},\\n};\\n\\nexport default function (state = initialState, action) {\\n  const { type, payload } = action;\\n\\n  switch (type) {\\n    case GET_LISTS:\\n      return {\\n        ...state,\\n        listVal: payload,\\n        loading: false,\\n      };\\n\\n    case LISTS_ERROR:\\n      return {\\n        ...state,\\n        error: payload,\\n        loading: false,\\n      };\\n\\n    case FILTER_LISTS:\\n      return {\\n        ...state,\\n        filter: state.listVal.filter((contact) => {\\n          const regex = new RegExp(''$'{payload}', \\\"gi\\\");\\n\\n          return (\\n            contact.name.match(regex) ||\\n            contact.email.match(regex) ||\\n            contact.phone.match(regex)\\n          );\\n        }),\\n        loading: false,\\n      };\\n\\n    case CLEAR_FILTER:\\n      return {\\n        ...state,\\n        filter: null,\\n        loading: false,\\n      };\\n\\n    default:\\n      return state;\\n  }\\n}\".trim();var components=\"\\nimport axios from \\\"axios\\\";\\nimport {\\n  LISTS_ERROR,\\n  GET_LISTS,\\n  FILTER_LISTS,\\n  CLEAR_FILTER,\\n} from \\\"./types\\\";\\n\\nexport const getLists = () => async (dispatch) => {\\n  try {\\n    const res = await axios.get(\\\"https://jsonplaceholder.typicode.com/users\\\");\\n    dispatch({ type: GET_LISTS, payload: res.data });\\n  } catch (err) {\\n    dispatch({\\n      type: LISTS_ERROR,\\n      payload: { msg: err.response.statusText, status: err.response.status },\\n    });\\n  }\\n};\\n\\nexport const filterContact = (text) => (dispatch) => {\\n  dispatch({ type: FILTER_LISTS, payload: text });\\n};\\n\\nexport const clearFilter = () => (dispatch) => {\\n  dispatch({ type: CLEAR_FILTER });\\n};\\n\".trim();var ReactRedux=/*#__PURE__*/function(_Component){_inherits(ReactRedux,_Component);function ReactRedux(){_classCallCheck(this,ReactRedux);return _possibleConstructorReturn(this,_getPrototypeOf(ReactRedux).apply(this,arguments));}_createClass(ReactRedux,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Filter\"),React.createElement(\"b\",null,\"Components\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:actions,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Reducers\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:reducers,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Actions\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:components,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return ReactRedux;}(Component);export default withStyles(styles)(ReactRedux);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/Redux/deep/react_redux.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","actions","trim","reducers","components","ReactRedux","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAGA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADgB,CAKvBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALa,CAQvBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARY,CAAL,EAApB,CAaA,GAAMC,CAAAA,OAAO,CAAG,iwCAmDyEC,IAnDzE,EAAhB,CAqDA,GAAMC,CAAAA,QAAQ,CAAG,omCA2DdD,IA3Dc,EAAjB,CA6DA,GAAME,CAAAA,UAAU,CAAG,wrBA4BjBF,IA5BiB,EAAnB,C,GA+BMG,CAAAA,U,0SACgB,CAClBC,UAAU,CAAC,iBAAMxB,CAAAA,KAAK,CAACyB,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACb,KAA1B,EACE,8BAAI,oBAAC,OAAD,MAAJ,CADF,CADF,CADF,CAME,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEa,OAAO,CAACb,KAA1B,EACE,oBAAC,IAAD,MACE,uCADF,CAEE,0CAFF,CAGE,2BAAK,KAAK,CAAEN,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEY,OADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAHF,CAUE,8BAVF,CAWE,8BAXF,CAYE,wCAZF,CAaE,2BAAK,KAAK,CAAEZ,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEc,QADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAbF,CAoBE,8BApBF,CAqBE,8BArBF,CAsBE,uCAtBF,CAuBE,2BAAK,KAAK,CAAEd,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEe,UADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAvBF,CADF,CADF,CANF,CADF,CA4CD,C,wBAlDsBvB,S,EAqDzB,cAAgBI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBY,UAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst actions = `\nimport React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getLists, filterContact, clearFilter } from \"./actions/actions\";\n\nconst App = ({ lists: { listVal, loading, filter }, getLists, filterContact, clearFilter }) => {\n  const text = useRef(\"\");\n  useEffect(() => {\n    getLists();\n  }, [getLists]);\n\n  const onChange = (e) => {\n    if (text.current.value !== \"\") {\n      filterContact(e.target.value);\n    } else {\n      clearFilter();\n    }\n  };\n\n  return (\n    <>\n      <input ref={text} type=\"text\" onChange={onChange} />\n      <div>\n        {loading ? (\n          \"oops\"\n        ) : filter ? (\n          <div>\n            {filter.map((items) => (\n              <ul>\n                <li>{items.name}</li>\n                <li>{items.email}</li>\n                <li>{items.phone}</li>\n              </ul>\n            ))}\n          </div>\n        ) : (\n          <div>\n            {listVal.map((list) => (\n              <div>{list.name}</div>\n            ))}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  lists: state.lists,\n});\n\nexport default connect(mapStateToProps, { getLists, filterContact, clearFilter })(App);`.trim();\n\nconst reducers = `\nimport {\n  GET_LISTS,\n  LISTS_ERROR,\n  FILTER_LISTS,\n  CLEAR_FILTER,\n} from \"../actions/types\";\n\nconst initialState = {\n  listVal: [],\n  current: null,\n  filter: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_LISTS:\n      return {\n        ...state,\n        listVal: payload,\n        loading: false,\n      };\n\n    case LISTS_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n\n    case FILTER_LISTS:\n      return {\n        ...state,\n        filter: state.listVal.filter((contact) => {\n          const regex = new RegExp(''$'{payload}', \"gi\");\n\n          return (\n            contact.name.match(regex) ||\n            contact.email.match(regex) ||\n            contact.phone.match(regex)\n          );\n        }),\n        loading: false,\n      };\n\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filter: null,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}`.trim();\n\nconst components = `\nimport axios from \"axios\";\nimport {\n  LISTS_ERROR,\n  GET_LISTS,\n  FILTER_LISTS,\n  CLEAR_FILTER,\n} from \"./types\";\n\nexport const getLists = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    dispatch({ type: GET_LISTS, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: LISTS_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const filterContact = (text) => (dispatch) => {\n  dispatch({ type: FILTER_LISTS, payload: text });\n};\n\nexport const clearFilter = () => (dispatch) => {\n  dispatch({ type: CLEAR_FILTER });\n};\n`.trim();\n\n\nclass ReactRedux extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Filter</h3>\n              <b>Components</b>\n              <div style={titles}>\n                <PrismCode\n                  code={actions}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>Reducers</b>\n              <div style={titles}>\n                <PrismCode\n                  code={reducers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>Actions</b>\n              <div style={titles}>\n                <PrismCode\n                  code={components}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(ReactRedux));"]},"metadata":{},"sourceType":"module"}