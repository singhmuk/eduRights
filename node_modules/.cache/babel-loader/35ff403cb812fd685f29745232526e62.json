{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/nodeJs/nodeDeep/e_acco_veri.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst schems = `\nconst userSchema = new Schems({\n  name:{type:String, trim:true, required: true, max: 64},\n  email:{type:String, trim:true, required: true, unique: true, lowercase: true},\n  password:{type:String, required: true}\n}, {timestamps: true})\n\nmodule.exports = mongoose.model('User', userSchema);`.trim();\nconst auths = `\nconst User = require('../models/user');\nconst jwt = require('jsonwebtoken');\n\nconst mailgun = require('mailgun-js');\nconst DOMAIN = 'sandboxf26a5c38b52e4da68cd059e6c4d2daba.mailgun.org';\nconst mg = mailgun({apiKey: process.env.MAILGUN_APIKEY, domain: DOMAIN});\n\n//create user without email account activation\nexports.signup = (req, res) => {\nconst { name, email, password } = req.body;\n\nUser.findOne({email}).exec((err, user) => {\n    if(user){\n        return res.status(400).json({error:\"User with this email is already exist\"});\n    }\n\nconst token = jwt.sign({name, email, password}, process.env.JWT_ACC_ACTIVATE, { expiresIn: '20m'});\n\nconst data = {\n    from: 'noreply@hello.com',\n    to: email,\n    subject: 'Account Activation Link',\n    html: '\n    <h2>Please click on given link to activate you account</h2>\n    <p>'$;{process.env.CLIENT_URL}/authentication/activate/'$'{token}'\n};\nmg.messages().send(data, function(error, body) {\n    if(error){\n        return res.json({error: error.message})\n    }\n    return res.json({message: 'email has been sent, Kindly activate your account'})\n    console.log(body)\n        });\n    })\n}\n\n\nexports.activateAccount = (req, res) => {\n    const { token } = req.body;\n    if(token){\n        jwt.verify(token, process.env.JWT_ACC_ACTIVATE, function(err, decodedToken){\n            if(err){\n                return res.status(400).json({error: 'Incorrect or Expired link'})\n            }\n\n            const { name, email, password } = decodedToken;\n            User.findOne({email}).exec((err, user) => {\n                if(user){\n                    return res.status(400).json({error:\"User with this email is already exist\"});\n                }\n        \n                let newUser = new User({name, email, password});\n                newUser.save((err, success) => {\n                    if(err){\n                        return res.status(400).json({error: 'error activating account'})\n                    }\n                    res.json({message: \"SignUp Success\"})\n                })\n            })\n        })\n    }\n    else{\n        return res.json({error: 'Something goes wrong!'})\n    }\n}`.trim();\nconst routes = `\nconst { signup, activateAccount } = require('../controllers/auth');\n\nrouter.post('/signup', signup);\nrouter.post('/email-activate', activateAccount);\n\nmodule.exports = router;`.trim();\nconst servers = `\nrequire(\"./config/db\");\nconst authRoutes = require('./routes/auth');`.trim();\n\nclass EmailAcco extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Email_Account_Verification\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"models/user.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: schems,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"controllers/auth.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: auths,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"routes/auth.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: routes,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"server.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: servers,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(EmailAcco);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/nodeJs/nodeDeep/e_acco_veri.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","schems","trim","auths","routes","servers","EmailAcco","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst schems = `\nconst userSchema = new Schems({\n  name:{type:String, trim:true, required: true, max: 64},\n  email:{type:String, trim:true, required: true, unique: true, lowercase: true},\n  password:{type:String, required: true}\n}, {timestamps: true})\n\nmodule.exports = mongoose.model('User', userSchema);`.trim();\n\nconst auths = `\nconst User = require('../models/user');\nconst jwt = require('jsonwebtoken');\n\nconst mailgun = require('mailgun-js');\nconst DOMAIN = 'sandboxf26a5c38b52e4da68cd059e6c4d2daba.mailgun.org';\nconst mg = mailgun({apiKey: process.env.MAILGUN_APIKEY, domain: DOMAIN});\n\n//create user without email account activation\nexports.signup = (req, res) => {\nconst { name, email, password } = req.body;\n\nUser.findOne({email}).exec((err, user) => {\n    if(user){\n        return res.status(400).json({error:\"User with this email is already exist\"});\n    }\n\nconst token = jwt.sign({name, email, password}, process.env.JWT_ACC_ACTIVATE, { expiresIn: '20m'});\n\nconst data = {\n    from: 'noreply@hello.com',\n    to: email,\n    subject: 'Account Activation Link',\n    html: '\n    <h2>Please click on given link to activate you account</h2>\n    <p>'$;{process.env.CLIENT_URL}/authentication/activate/'$'{token}'\n};\nmg.messages().send(data, function(error, body) {\n    if(error){\n        return res.json({error: error.message})\n    }\n    return res.json({message: 'email has been sent, Kindly activate your account'})\n    console.log(body)\n        });\n    })\n}\n\n\nexports.activateAccount = (req, res) => {\n    const { token } = req.body;\n    if(token){\n        jwt.verify(token, process.env.JWT_ACC_ACTIVATE, function(err, decodedToken){\n            if(err){\n                return res.status(400).json({error: 'Incorrect or Expired link'})\n            }\n\n            const { name, email, password } = decodedToken;\n            User.findOne({email}).exec((err, user) => {\n                if(user){\n                    return res.status(400).json({error:\"User with this email is already exist\"});\n                }\n        \n                let newUser = new User({name, email, password});\n                newUser.save((err, success) => {\n                    if(err){\n                        return res.status(400).json({error: 'error activating account'})\n                    }\n                    res.json({message: \"SignUp Success\"})\n                })\n            })\n        })\n    }\n    else{\n        return res.json({error: 'Something goes wrong!'})\n    }\n}`.trim();\n\nconst routes = `\nconst { signup, activateAccount } = require('../controllers/auth');\n\nrouter.post('/signup', signup);\nrouter.post('/email-activate', activateAccount);\n\nmodule.exports = router;`.trim();\n\nconst servers = `\nrequire(\"./config/db\");\nconst authRoutes = require('./routes/auth');`.trim();\n\n\nclass EmailAcco extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Email_Account_Verification</h3>\n              <b>models/user.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={schems}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>controllers/auth.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={auths}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>routes/auth.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={routes}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>server.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={servers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(EmailAcco));\n"]},"metadata":{},"sourceType":"module"}