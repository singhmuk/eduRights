{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var schems=\"\\nconst userSchema = new Schems({\\n  name:{type:String, trim:true, required: true, max: 64},\\n  email:{type:String, trim:true, required: true, unique: true, lowercase: true},\\n  password:{type:String, required: true}\\n}, {timestamps: true})\\n\\nmodule.exports = mongoose.model('User', userSchema);\".trim();var auths=\"\\nconst User = require('../models/user');\\nconst jwt = require('jsonwebtoken');\\n\\nconst mailgun = require('mailgun-js');\\nconst DOMAIN = 'sandboxf26a5c38b52e4da68cd059e6c4d2daba.mailgun.org';\\nconst mg = mailgun({apiKey: process.env.MAILGUN_APIKEY, domain: DOMAIN});\\n\\n//create user without email account activation\\nexports.signup = (req, res) => {\\nconst { name, email, password } = req.body;\\n\\nUser.findOne({email}).exec((err, user) => {\\n    if(user){\\n        return res.status(400).json({error:\\\"User with this email is already exist\\\"});\\n    }\\n\\nconst token = jwt.sign({name, email, password}, process.env.JWT_ACC_ACTIVATE, { expiresIn: '20m'});\\n\\nconst data = {\\n    from: 'noreply@hello.com',\\n    to: email,\\n    subject: 'Account Activation Link',\\n    html: '\\n    <h2>Please click on given link to activate you account</h2>\\n    <p>'$;{process.env.CLIENT_URL}/authentication/activate/'$'{token}'\\n};\\nmg.messages().send(data, function(error, body) {\\n    if(error){\\n        return res.json({error: error.message})\\n    }\\n    return res.json({message: 'email has been sent, Kindly activate your account'})\\n    console.log(body)\\n        });\\n    })\\n}\\n\\n\\nexports.activateAccount = (req, res) => {\\n    const { token } = req.body;\\n    if(token){\\n        jwt.verify(token, process.env.JWT_ACC_ACTIVATE, function(err, decodedToken){\\n            if(err){\\n                return res.status(400).json({error: 'Incorrect or Expired link'})\\n            }\\n\\n            const { name, email, password } = decodedToken;\\n            User.findOne({email}).exec((err, user) => {\\n                if(user){\\n                    return res.status(400).json({error:\\\"User with this email is already exist\\\"});\\n                }\\n        \\n                let newUser = new User({name, email, password});\\n                newUser.save((err, success) => {\\n                    if(err){\\n                        return res.status(400).json({error: 'error activating account'})\\n                    }\\n                    res.json({message: \\\"SignUp Success\\\"})\\n                })\\n            })\\n        })\\n    }\\n    else{\\n        return res.json({error: 'Something goes wrong!'})\\n    }\\n}\".trim();var routes=\"\\nconst { signup, activateAccount } = require('../controllers/auth');\\n\\nrouter.post('/signup', signup);\\nrouter.post('/email-activate', activateAccount);\\n\\nmodule.exports = router;\".trim();var servers=\"\\nrequire(\\\"./config/db\\\");\\nconst authRoutes = require('./routes/auth');\".trim();var EmailAcco=/*#__PURE__*/function(_Component){_inherits(EmailAcco,_Component);function EmailAcco(){_classCallCheck(this,EmailAcco);return _possibleConstructorReturn(this,_getPrototypeOf(EmailAcco).apply(this,arguments));}_createClass(EmailAcco,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Email_Account_Verification\"),React.createElement(\"b\",null,\"models/user.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:schems,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"controllers/auth.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:auths,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"routes/auth.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:routes,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"server.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:servers,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return EmailAcco;}(Component);export default withStyles(styles)(EmailAcco);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/nodeJs/nodeDeep/e_acco_veri.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","schems","trim","auths","routes","servers","EmailAcco","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst schems = `\nconst userSchema = new Schems({\n  name:{type:String, trim:true, required: true, max: 64},\n  email:{type:String, trim:true, required: true, unique: true, lowercase: true},\n  password:{type:String, required: true}\n}, {timestamps: true})\n\nmodule.exports = mongoose.model('User', userSchema);`.trim();\n\nconst auths = `\nconst User = require('../models/user');\nconst jwt = require('jsonwebtoken');\n\nconst mailgun = require('mailgun-js');\nconst DOMAIN = 'sandboxf26a5c38b52e4da68cd059e6c4d2daba.mailgun.org';\nconst mg = mailgun({apiKey: process.env.MAILGUN_APIKEY, domain: DOMAIN});\n\n//create user without email account activation\nexports.signup = (req, res) => {\nconst { name, email, password } = req.body;\n\nUser.findOne({email}).exec((err, user) => {\n    if(user){\n        return res.status(400).json({error:\"User with this email is already exist\"});\n    }\n\nconst token = jwt.sign({name, email, password}, process.env.JWT_ACC_ACTIVATE, { expiresIn: '20m'});\n\nconst data = {\n    from: 'noreply@hello.com',\n    to: email,\n    subject: 'Account Activation Link',\n    html: '\n    <h2>Please click on given link to activate you account</h2>\n    <p>'$;{process.env.CLIENT_URL}/authentication/activate/'$'{token}'\n};\nmg.messages().send(data, function(error, body) {\n    if(error){\n        return res.json({error: error.message})\n    }\n    return res.json({message: 'email has been sent, Kindly activate your account'})\n    console.log(body)\n        });\n    })\n}\n\n\nexports.activateAccount = (req, res) => {\n    const { token } = req.body;\n    if(token){\n        jwt.verify(token, process.env.JWT_ACC_ACTIVATE, function(err, decodedToken){\n            if(err){\n                return res.status(400).json({error: 'Incorrect or Expired link'})\n            }\n\n            const { name, email, password } = decodedToken;\n            User.findOne({email}).exec((err, user) => {\n                if(user){\n                    return res.status(400).json({error:\"User with this email is already exist\"});\n                }\n        \n                let newUser = new User({name, email, password});\n                newUser.save((err, success) => {\n                    if(err){\n                        return res.status(400).json({error: 'error activating account'})\n                    }\n                    res.json({message: \"SignUp Success\"})\n                })\n            })\n        })\n    }\n    else{\n        return res.json({error: 'Something goes wrong!'})\n    }\n}`.trim();\n\nconst routes = `\nconst { signup, activateAccount } = require('../controllers/auth');\n\nrouter.post('/signup', signup);\nrouter.post('/email-activate', activateAccount);\n\nmodule.exports = router;`.trim();\n\nconst servers = `\nrequire(\"./config/db\");\nconst authRoutes = require('./routes/auth');`.trim();\n\n\nclass EmailAcco extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Email_Account_Verification</h3>\n              <b>models/user.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={schems}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>controllers/auth.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={auths}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>routes/auth.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={routes}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>server.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={servers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(EmailAcco));\n"]},"metadata":{},"sourceType":"module"}