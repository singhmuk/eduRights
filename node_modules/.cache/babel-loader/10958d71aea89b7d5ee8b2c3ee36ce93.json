{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/Redux/deep/react_redux.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst actions = `\nimport React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getLists, filterContact, clearFilter } from \"./actions/actions\";\n\nconst App = ({ lists: { listVal, loading, filter }, getLists, filterContact, clearFilter }) => {\n  const text = useRef(\"\");\n  useEffect(() => {\n    getLists();\n  }, [getLists]);\n\n  const onChange = (e) => {\n    if (text.current.value !== \"\") {\n      filterContact(e.target.value);\n    } else {\n      clearFilter();\n    }\n  };\n\n  return (\n    <>\n      <input ref={text} type=\"text\" onChange={onChange} />\n      <div>\n        {loading ? (\n          \"oops\"\n        ) : filter ? (\n          <div>\n            {filter.map((items) => (\n              <ul>\n                <li>{items.name}</li>\n                <li>{items.email}</li>\n                <li>{items.phone}</li>\n              </ul>\n            ))}\n          </div>\n        ) : (\n          <div>\n            {listVal.map((list) => (\n              <div>{list.name}</div>\n            ))}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  lists: state.lists,\n});\n\nexport default connect(mapStateToProps, { getLists, filterContact, clearFilter })(App);`.trim();\nconst reducers = `\nimport {\n  GET_LISTS,\n  LISTS_ERROR,\n  FILTER_LISTS,\n  CLEAR_FILTER,\n} from \"../actions/types\";\n\nconst initialState = {\n  listVal: [],\n  current: null,\n  filter: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_LISTS:\n      return {\n        ...state,\n        listVal: payload,\n        loading: false,\n      };\n\n    case LISTS_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n\n    case FILTER_LISTS:\n      return {\n        ...state,\n        filter: state.listVal.filter((contact) => {\n          const regex = new RegExp(''$'{payload}', \"gi\");\n\n          return (\n            contact.name.match(regex) ||\n            contact.email.match(regex) ||\n            contact.phone.match(regex)\n          );\n        }),\n        loading: false,\n      };\n\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filter: null,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}`.trim();\nconst components = `\nimport axios from \"axios\";\nimport {\n  LISTS_ERROR,\n  GET_LISTS,\n  FILTER_LISTS,\n  CLEAR_FILTER,\n} from \"./types\";\n\nexport const getLists = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    dispatch({ type: GET_LISTS, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: LISTS_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const filterContact = (text) => (dispatch) => {\n  dispatch({ type: FILTER_LISTS, payload: text });\n};\n\nexport const clearFilter = () => (dispatch) => {\n  dispatch({ type: CLEAR_FILTER });\n};\n`.trim();\n\nclass ReactRedux extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Filter\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Components\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: actions,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Reducers\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: reducers,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Actions\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: components,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(ReactRedux);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/Redux/deep/react_redux.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","actions","trim","reducers","components","ReactRedux","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst actions = `\nimport React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getLists, filterContact, clearFilter } from \"./actions/actions\";\n\nconst App = ({ lists: { listVal, loading, filter }, getLists, filterContact, clearFilter }) => {\n  const text = useRef(\"\");\n  useEffect(() => {\n    getLists();\n  }, [getLists]);\n\n  const onChange = (e) => {\n    if (text.current.value !== \"\") {\n      filterContact(e.target.value);\n    } else {\n      clearFilter();\n    }\n  };\n\n  return (\n    <>\n      <input ref={text} type=\"text\" onChange={onChange} />\n      <div>\n        {loading ? (\n          \"oops\"\n        ) : filter ? (\n          <div>\n            {filter.map((items) => (\n              <ul>\n                <li>{items.name}</li>\n                <li>{items.email}</li>\n                <li>{items.phone}</li>\n              </ul>\n            ))}\n          </div>\n        ) : (\n          <div>\n            {listVal.map((list) => (\n              <div>{list.name}</div>\n            ))}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  lists: state.lists,\n});\n\nexport default connect(mapStateToProps, { getLists, filterContact, clearFilter })(App);`.trim();\n\nconst reducers = `\nimport {\n  GET_LISTS,\n  LISTS_ERROR,\n  FILTER_LISTS,\n  CLEAR_FILTER,\n} from \"../actions/types\";\n\nconst initialState = {\n  listVal: [],\n  current: null,\n  filter: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_LISTS:\n      return {\n        ...state,\n        listVal: payload,\n        loading: false,\n      };\n\n    case LISTS_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n\n    case FILTER_LISTS:\n      return {\n        ...state,\n        filter: state.listVal.filter((contact) => {\n          const regex = new RegExp(''$'{payload}', \"gi\");\n\n          return (\n            contact.name.match(regex) ||\n            contact.email.match(regex) ||\n            contact.phone.match(regex)\n          );\n        }),\n        loading: false,\n      };\n\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filter: null,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}`.trim();\n\nconst components = `\nimport axios from \"axios\";\nimport {\n  LISTS_ERROR,\n  GET_LISTS,\n  FILTER_LISTS,\n  CLEAR_FILTER,\n} from \"./types\";\n\nexport const getLists = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    dispatch({ type: GET_LISTS, payload: res.data });\n  } catch (err) {\n    dispatch({\n      type: LISTS_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const filterContact = (text) => (dispatch) => {\n  dispatch({ type: FILTER_LISTS, payload: text });\n};\n\nexport const clearFilter = () => (dispatch) => {\n  dispatch({ type: CLEAR_FILTER });\n};\n`.trim();\n\n\nclass ReactRedux extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Filter</h3>\n              <b>Components</b>\n              <div style={titles}>\n                <PrismCode\n                  code={actions}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>Reducers</b>\n              <div style={titles}>\n                <PrismCode\n                  code={reducers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>Actions</b>\n              <div style={titles}>\n                <PrismCode\n                  code={components}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(ReactRedux));"]},"metadata":{},"sourceType":"module"}