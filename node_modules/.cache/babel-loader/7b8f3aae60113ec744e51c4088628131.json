{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/Redux/deep/reduxMethods.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst reactAdd = `\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst initialState = [\n  { id: 1, aim: \"Success\" },\n  { id: 2, aim: \"Advanced\" },\n  { id: 3, aim: \"Properly\" },\n];\n\nconst App = () => {\n  const [list, setList] = useState(initialState);\n  const [aim, setName] = useState(\"\");\n\n  const handleChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleAdd = () => {\n    const newItem = list.concat({ aim, id: uuidv4() });\n    setList(newItem);\n    console.log(newItem);\n    setName(\"\");\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={aim} onChange={handleChange} />\n      <button type=\"submit\" onClick={handleAdd}>\n        Add\n      </button>\n      {list.map((val) => (\n        <div>{val.aim}</div>\n      ))}\n    </div>\n  );\n};\n`.trim();\nconst reduxAdd = `\n//App.js\nimport { connect } from \"react-redux\";\nimport { addFun } from \"./actions/dataActions\";\n\nconst App = (props) => {\n  const [name, setName] = useState(\"\");\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setName(e.target.value);\n  };\n\n  const handleAdd = () => {\n    const newItem = name;\n    props.addFun(newItem);\n    setName(\"\");\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={name} onChange={handleChange} />\n      <button type=\"submit\" onClick={handleAdd}>\n        Add\n      </button>\n      {props.data.map((val) => (\n        <div>{val.name}</div>\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n});\n\nconst mapDispatchToProps = {\n  addFun,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n//reducers/data.js\nconst initialState = [\n  { id: 1, name: \"Mukesh\" },\n  { id: 2, name: \"Rakesh\" },\n  { id: 3, name: \"Niketh\" },\n];\n\nexport default (state = initialState, action) => {\n  console.log(\"props.list\", state);\n  const { type, payload } = action;\n  switch (type) {\n    case ADD:\n      return [...state, { name: payload }];\n\n    default:\n      return state;\n  }\n};\n\n\n\n//actions/dataActions.js\nexport const addFun = (payload) => {\n  return {\n    type: ADD,\n    payload: payload,\n  };\n};\n`.trim();\nconst reactDelete = `\nconst initialState = [\n  { id: 1, name: \"Success\" },\n  { id: 2, name: \"Advanced\" },\n  { id: 3, name: \"Properly\" },\n];\n\nconst App = () => {\n  const [list, setList] = useState(initialState);\n\n  const handleRemoveItem = (id) => {\n    const deleteItems = list.filter((item) => item.id !== id);\n    setList(deleteItems);\n  };\n\n  return (\n    <div>\n      {list.map((val) => (\n        <div>\n          {val.name}\n          <button onClick={() => handleRemoveItem(val.id)}>X</button>\n        </div>\n      ))}\n    </div>\n  );\n};`.trim();\nconst reduxDelete = `\n//App.js\nimport { deletFun } from \"./actions/dataActions\";\n\nconst App = (props) => {\n  const handleRemoveItem = (id) => {\n    props.deletFun(id);\n  };\n\n  return (\n    <div>\n      {props.data.map((val) => (\n        <div>\n          {val.name}\n          <button onClick={() => handleRemoveItem(val.id)}>X</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.dataVal,\n});\n\nconst mapDispatchToProps = {\n  deletFun,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n//reducers/dataReducers.js\nconst initialState = [\n  { id: 1, name: \"Mukesh\" },\n  { id: 2, name: \"Rakesh\" },\n  { id: 3, name: \"Niketh\" },\n];\n\nexport default (state = initialState, action) => {\n  console.log(\"props.list\", state);\n  const { type, payload } = action;\n  switch (type) {\n    case DELETE_DATA:\n      state = state.filter((x) => x.id !== payload);\n      return state;\n    default:\n      return state;\n  }\n};\n\n\n\n//actions/dataActions.js\nexport const deletFun = (id) => {\n  return {\n    type: DELETE_DATA,\n    payload: id,\n  };\n};\n`.trim();\nconst reduxEdit = `\n//App.js\nimport Forms from \"./components/form\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./actions/transactionActions\";\nimport { bindActionCreators } from \"redux\";\n\nconst App = (props) => {\n  const handleEdit = (index) => {\n    props.updateTransactionIndex(index);\n  };\n\n  return (\n    <div>\n      <Forms />\n      <table>\n        <tbody>\n          {props.list.map((item, index) => {\n            return (\n              <tr key={index}>\n                <td>{item.bAccountNo}</td>\n                <td>{item.amount}</td>\n                <td>\n                  <button onClick={() => handleEdit(index)}>Edit</button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    list: state.list,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      updateTransactionIndex: actions.updateIndex,\n    },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n//components/form.js\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/transactionActions\";\nimport { bindActionCreators } from \"redux\";\n\nclass Forms extends Component {\n  state = {};\n\n  returnStateObject() {\n    if (this.props.currentIndex == -1)\n      return {\n        bAccountNo: \"\",\n        bName: \"\",\n      };\n    else return this.props.list[this.props.currentIndex];\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.currentIndex != this.props.currentIndex ||\n      prevProps.list.length != this.props.list.length\n    ) {\n      this.setState({ ...this.returnStateObject() });\n    }\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.props.currentIndex == -1) this.props.insertTransaction(this.state);\n    else this.props.updateTransaction(this.state);\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n        <input\n          name=\"bAccountNo\"\n          onChange={this.handleInputChange}\n          value={this.state.bAccountNo}\n        />\n        <br />\n\n        <input\n          name=\"amount\"\n          onChange={this.handleInputChange}\n          value={this.state.amount}\n        />\n        <br />\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    list: state.list,\n    currentIndex: state.currentIndex,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      insertTransaction: actions.insert,\n      updateTransaction: actions.update,\n    },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Forms);\n`.trim();\nconst actions = `\n//reducers/transactionReducer.js\nexport const transactionReducer = (state, action) => {\n  var list = JSON.parse(localStorage.getItem(\"transactions\"));\n  switch (action.type) {\n    case \"INSERT\":\n      list.push(action.payload);\n      localStorage.setItem(\"transactions\", JSON.stringify(list));\n      return { list, currentIndex: -1 };\n    case \"UPDATE\":\n      list[state.currentIndex] = action.payload;\n      localStorage.setItem(\"transactions\", JSON.stringify(list));\n      return { list, currentIndex: -1 };\n\n    case \"UPDATE-INDEX\":\n      return { list, currentIndex: action.payload };\n\n    case \"DELETE\":\n      list.splice(action.payload, 1);\n      localStorage.setItem(\"transactions\", JSON.stringify(list));\n      return { list, currentIndex: -1 };\n    default:\n      return state;\n  }\n};\n\nexport default transactionReducer;\n\n\n\n\n//actions/transactionActions.js\nexport const insert = data => {\n  return {\n      type: 'INSERT',\n      payload: data\n  }\n}\n\nexport const update = data => {\n  return {\n      type: 'UPDATE',\n      payload: data\n  }\n}\n\nexport const Delete = id => {\n  return {\n      type: 'DELETE',\n      payload: id\n  }\n}\n\nexport const updateIndex = index => {\n  return {\n      type: 'UPDATE-INDEX',\n      payload: index\n  }\n}\n`.trim();\n\nclass ReduxMethods extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, \"Add(React)\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: reactAdd,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, \"Add(Redux)\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: reduxAdd,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, \"Delete(React)\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: reactDelete,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, \"Delete(Redux)\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: reduxDelete,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, \"Edit(Redux)\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: reduxEdit,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, \"actions\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: actions,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(ReduxMethods);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/Redux/deep/reduxMethods.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","reactAdd","trim","reduxAdd","reactDelete","reduxDelete","reduxEdit","actions","ReduxMethods","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst reactAdd = `\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst initialState = [\n  { id: 1, aim: \"Success\" },\n  { id: 2, aim: \"Advanced\" },\n  { id: 3, aim: \"Properly\" },\n];\n\nconst App = () => {\n  const [list, setList] = useState(initialState);\n  const [aim, setName] = useState(\"\");\n\n  const handleChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleAdd = () => {\n    const newItem = list.concat({ aim, id: uuidv4() });\n    setList(newItem);\n    console.log(newItem);\n    setName(\"\");\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={aim} onChange={handleChange} />\n      <button type=\"submit\" onClick={handleAdd}>\n        Add\n      </button>\n      {list.map((val) => (\n        <div>{val.aim}</div>\n      ))}\n    </div>\n  );\n};\n`.trim();\n\nconst reduxAdd = `\n//App.js\nimport { connect } from \"react-redux\";\nimport { addFun } from \"./actions/dataActions\";\n\nconst App = (props) => {\n  const [name, setName] = useState(\"\");\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setName(e.target.value);\n  };\n\n  const handleAdd = () => {\n    const newItem = name;\n    props.addFun(newItem);\n    setName(\"\");\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={name} onChange={handleChange} />\n      <button type=\"submit\" onClick={handleAdd}>\n        Add\n      </button>\n      {props.data.map((val) => (\n        <div>{val.name}</div>\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n});\n\nconst mapDispatchToProps = {\n  addFun,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n//reducers/data.js\nconst initialState = [\n  { id: 1, name: \"Mukesh\" },\n  { id: 2, name: \"Rakesh\" },\n  { id: 3, name: \"Niketh\" },\n];\n\nexport default (state = initialState, action) => {\n  console.log(\"props.list\", state);\n  const { type, payload } = action;\n  switch (type) {\n    case ADD:\n      return [...state, { name: payload }];\n\n    default:\n      return state;\n  }\n};\n\n\n\n//actions/dataActions.js\nexport const addFun = (payload) => {\n  return {\n    type: ADD,\n    payload: payload,\n  };\n};\n`.trim();\n\nconst reactDelete = `\nconst initialState = [\n  { id: 1, name: \"Success\" },\n  { id: 2, name: \"Advanced\" },\n  { id: 3, name: \"Properly\" },\n];\n\nconst App = () => {\n  const [list, setList] = useState(initialState);\n\n  const handleRemoveItem = (id) => {\n    const deleteItems = list.filter((item) => item.id !== id);\n    setList(deleteItems);\n  };\n\n  return (\n    <div>\n      {list.map((val) => (\n        <div>\n          {val.name}\n          <button onClick={() => handleRemoveItem(val.id)}>X</button>\n        </div>\n      ))}\n    </div>\n  );\n};`.trim();\n\nconst reduxDelete = `\n//App.js\nimport { deletFun } from \"./actions/dataActions\";\n\nconst App = (props) => {\n  const handleRemoveItem = (id) => {\n    props.deletFun(id);\n  };\n\n  return (\n    <div>\n      {props.data.map((val) => (\n        <div>\n          {val.name}\n          <button onClick={() => handleRemoveItem(val.id)}>X</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.dataVal,\n});\n\nconst mapDispatchToProps = {\n  deletFun,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n//reducers/dataReducers.js\nconst initialState = [\n  { id: 1, name: \"Mukesh\" },\n  { id: 2, name: \"Rakesh\" },\n  { id: 3, name: \"Niketh\" },\n];\n\nexport default (state = initialState, action) => {\n  console.log(\"props.list\", state);\n  const { type, payload } = action;\n  switch (type) {\n    case DELETE_DATA:\n      state = state.filter((x) => x.id !== payload);\n      return state;\n    default:\n      return state;\n  }\n};\n\n\n\n//actions/dataActions.js\nexport const deletFun = (id) => {\n  return {\n    type: DELETE_DATA,\n    payload: id,\n  };\n};\n`.trim();\n\nconst reduxEdit = `\n//App.js\nimport Forms from \"./components/form\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./actions/transactionActions\";\nimport { bindActionCreators } from \"redux\";\n\nconst App = (props) => {\n  const handleEdit = (index) => {\n    props.updateTransactionIndex(index);\n  };\n\n  return (\n    <div>\n      <Forms />\n      <table>\n        <tbody>\n          {props.list.map((item, index) => {\n            return (\n              <tr key={index}>\n                <td>{item.bAccountNo}</td>\n                <td>{item.amount}</td>\n                <td>\n                  <button onClick={() => handleEdit(index)}>Edit</button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    list: state.list,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      updateTransactionIndex: actions.updateIndex,\n    },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n//components/form.js\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/transactionActions\";\nimport { bindActionCreators } from \"redux\";\n\nclass Forms extends Component {\n  state = {};\n\n  returnStateObject() {\n    if (this.props.currentIndex == -1)\n      return {\n        bAccountNo: \"\",\n        bName: \"\",\n      };\n    else return this.props.list[this.props.currentIndex];\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.currentIndex != this.props.currentIndex ||\n      prevProps.list.length != this.props.list.length\n    ) {\n      this.setState({ ...this.returnStateObject() });\n    }\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.props.currentIndex == -1) this.props.insertTransaction(this.state);\n    else this.props.updateTransaction(this.state);\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n        <input\n          name=\"bAccountNo\"\n          onChange={this.handleInputChange}\n          value={this.state.bAccountNo}\n        />\n        <br />\n\n        <input\n          name=\"amount\"\n          onChange={this.handleInputChange}\n          value={this.state.amount}\n        />\n        <br />\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    list: state.list,\n    currentIndex: state.currentIndex,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      insertTransaction: actions.insert,\n      updateTransaction: actions.update,\n    },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Forms);\n`.trim();\n\nconst actions = `\n//reducers/transactionReducer.js\nexport const transactionReducer = (state, action) => {\n  var list = JSON.parse(localStorage.getItem(\"transactions\"));\n  switch (action.type) {\n    case \"INSERT\":\n      list.push(action.payload);\n      localStorage.setItem(\"transactions\", JSON.stringify(list));\n      return { list, currentIndex: -1 };\n    case \"UPDATE\":\n      list[state.currentIndex] = action.payload;\n      localStorage.setItem(\"transactions\", JSON.stringify(list));\n      return { list, currentIndex: -1 };\n\n    case \"UPDATE-INDEX\":\n      return { list, currentIndex: action.payload };\n\n    case \"DELETE\":\n      list.splice(action.payload, 1);\n      localStorage.setItem(\"transactions\", JSON.stringify(list));\n      return { list, currentIndex: -1 };\n    default:\n      return state;\n  }\n};\n\nexport default transactionReducer;\n\n\n\n\n//actions/transactionActions.js\nexport const insert = data => {\n  return {\n      type: 'INSERT',\n      payload: data\n  }\n}\n\nexport const update = data => {\n  return {\n      type: 'UPDATE',\n      payload: data\n  }\n}\n\nexport const Delete = id => {\n  return {\n      type: 'DELETE',\n      payload: id\n  }\n}\n\nexport const updateIndex = index => {\n  return {\n      type: 'UPDATE-INDEX',\n      payload: index\n  }\n}\n`.trim();\n\n\nclass ReduxMethods extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h2>Add(React)</h2>\n              <div style={titles}>\n                <PrismCode\n                  code={reactAdd}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Add(Redux)</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={reduxAdd}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>Delete(React)</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={reactDelete}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Delete(Redux)</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={reduxDelete}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Edit(Redux)</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={reduxEdit}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>actions</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={actions}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(ReduxMethods));"]},"metadata":{},"sourceType":"module"}