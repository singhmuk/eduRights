{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';import NeuralKeras from'../../../assets/AI/Slide1.PNG';import Fashion from'../../../assets/AI/fashion_neural_net.png';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var redesign={height:200,width:500};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var childsFile=\"\\nimport keras\\nimport numpy as np\\nimport matplotlib.pyplot as plt\\n%matplotlib inline\\n\\nkeras.backend.backend()                                                         #Using TensorFlow backend.\\n\\nfm = keras.datasets.fashion_mnist\\n(X_train, y_train), (X_test, y_test) = fm.load_data()\\nX_train[0]\\n\\nplt.matshow(X_train[0])\\n\".trim();var training=\"\\nX_train = X_train/255\\nX_test = X_test/255\\n\".trim();var sequential=\"\\nfrom keras.models import Sequential\\nfrom keras.layers import Flatten, Dense, Activation\\n\\nmodel = Sequential()\\nmodel.add(Flatten(input_shape=[28, 28]))\\nmodel.add(Dense(100, activation=\\\"relu\\\"))\\nmodel.add(Dense(10, activation=\\\"softmax\\\"))\\n\\nmodel.summary()\\n\\nmodel.compile(loss=\\\"sparse_categorical_crossentropy\\\",  optimizer=\\\"adam\\\", metrics=[\\\"accuracy\\\"])\\n              \\nmodel.fit(X_train, y_train)\\nmodel.evaluate(X_test, y_test)\\nplt.matshow(X_test[0])\\nyp = model.predict(X_test)\\nnp.argmax(yp[0])\\n\\nclass_labels = [\\\"T-shirt/top\\\",\\\"Trouser\\\",\\\"Pullover\\\",\\\"Dress\\\",\\\"Coat\\\",\\\"Sandal\\\",\\\"Shirt\\\",\\\"Sneaker\\\",\\\"Bag\\\",\\\"Ankle boot\\\"]\\n\\nclass_labels[np.argmax(yp[0])]\\n\".trim();// const pipes = ``.trim();\nvar NeyralNetwork=/*#__PURE__*/function(_Component){_inherits(NeyralNetwork,_Component);function NeyralNetwork(){_classCallCheck(this,NeyralNetwork);return _possibleConstructorReturn(this,_getPrototypeOf(NeyralNetwork).apply(this,arguments));}_createClass(NeyralNetwork,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Build our first neural network in Keras for image classification problem\"),React.createElement(\"b\",null,\"We will use keras fashion MNIST dataset. This consist of 60000 28X28 pixel images and 10000 test images, these images are classified in one of the 10 categories shown below\"),React.createElement(\"br\",null),React.createElement(\"img\",{src:NeuralKeras,alt:\"Theata\",className:\"responsive2\",style:redesign}),React.createElement(\"br\",null),React.createElement(\"br\",null),\"Each image is 28 x 28 pixel in dimension.\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:childsFile,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Normalize training data before training the neural net\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:training,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Now build the Sequential Model and add layers into it\"),React.createElement(\"img\",{src:Fashion,alt:\"Theata\",className:\"responsive2\",style:redesign}),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:sequential,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return NeyralNetwork;}(Component);export default withStyles(styles)(NeyralNetwork);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/angularjs/deepAngularjs/neural.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","NeuralKeras","Fashion","titles","backgroundColor","padding","fontSize","redesign","height","width","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","childsFile","trim","training","sequential","NeyralNetwork","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\nimport NeuralKeras from '../../../assets/AI/Slide1.PNG'\nimport Fashion from '../../../assets/AI/fashion_neural_net.png'\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst redesign = {\n  height: 200,\n  width: 500\n}\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst childsFile = `\nimport keras\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nkeras.backend.backend()                                                         #Using TensorFlow backend.\n\nfm = keras.datasets.fashion_mnist\n(X_train, y_train), (X_test, y_test) = fm.load_data()\nX_train[0]\n\nplt.matshow(X_train[0])\n`.trim();\n\nconst training = `\nX_train = X_train/255\nX_test = X_test/255\n`.trim();\n\nconst sequential = `\nfrom keras.models import Sequential\nfrom keras.layers import Flatten, Dense, Activation\n\nmodel = Sequential()\nmodel.add(Flatten(input_shape=[28, 28]))\nmodel.add(Dense(100, activation=\"relu\"))\nmodel.add(Dense(10, activation=\"softmax\"))\n\nmodel.summary()\n\nmodel.compile(loss=\"sparse_categorical_crossentropy\",  optimizer=\"adam\", metrics=[\"accuracy\"])\n              \nmodel.fit(X_train, y_train)\nmodel.evaluate(X_test, y_test)\nplt.matshow(X_test[0])\nyp = model.predict(X_test)\nnp.argmax(yp[0])\n\nclass_labels = [\"T-shirt/top\",\"Trouser\",\"Pullover\",\"Dress\",\"Coat\",\"Sandal\",\"Shirt\",\"Sneaker\",\"Bag\",\"Ankle boot\"]\n\nclass_labels[np.argmax(yp[0])]\n`.trim();\n\n// const pipes = ``.trim();\n\n\nclass NeyralNetwork extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Build our first neural network in Keras for image classification problem</h3>\n              <b>We will use keras fashion MNIST dataset. This consist of 60000 28X28 pixel images and 10000 test images, these images are classified in one of the 10 categories shown below</b>\n              <br />\n              <img src={NeuralKeras} alt=\"Theata\" className=\"responsive2\" style={redesign} />\n              <br />\n              <br />\n              Each image is 28 x 28 pixel in dimension.\n              <br />\n              <br />\n\n              <div style={titles}>\n                <PrismCode\n                  code={childsFile}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Normalize training data before training the neural net</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={training}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Now build the Sequential Model and add layers into it</h3>\n              <img src={Fashion} alt=\"Theata\" className=\"responsive2\" style={redesign} />\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={sequential}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              {/* <br />\n\n              <h3></h3>\n              <div style={titles}>\n                <PrismCode\n                  code={childsFile}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div> */}\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\n\nexport default (withStyles(styles)(NeyralNetwork));\n"]},"metadata":{},"sourceType":"module"}