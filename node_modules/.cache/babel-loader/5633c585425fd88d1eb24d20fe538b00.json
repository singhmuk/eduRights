{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/angularjsd/deepAngularjs/scope.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst scope = `\n//app.js\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n    $scope.name = \"John Doe\";\n});\n\n\n//index.html\n  <body ng-controller=\"myCtrl\">\n    <input ng-model=\"name\">\n    <h1>My name is {{name}}</h1>\n  </body>\n`.trim();\n\nclass Scope extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Scope\"), \"The scope is the binding part between the HTML (view) and the JavaScript (controller).\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), \"The scope is an object with the available properties and methods.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), \"The scope is available for both the view and the controller.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), \"When adding properties to the $scope object in the controller, the view (HTML) gets access to these properties.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), \"In the view, you do not use the prefix $scope, you just refer to a property name\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"If we consider an AngularJS application to consist of:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), \"View, which is the HTML.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), \"Model, which is the data available for the current view.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), \"Controller, which is the JavaScript function that makes/changes/removes/controls the data.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), \"Then the scope is the Model.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), \"The scope is a JavaScript object with properties and methods, which are available for both the view and the controller.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), \"All applications have a $rootScope which is the scope created on the HTML element that contains the ng-app directive.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), \"The rootScope is available in the entire application.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), \"If a variable has the same name in both the current scope and in the rootScope, the application uses the one in the current scope.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), \"A variable named \\\"color\\\" exists in both the controller's scope and in the rootScope:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Inpute text show on UI\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: scope,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(Scope);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/angularjsd/deepAngularjs/scope.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","scope","trim","Scope","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = {backgroundColor:'#F0F8FF', padding:'1px', fontSize:'16px'}\n\nconst styles = theme => ({\n  paper: {\n      margin: theme.spacing(1),\n      padding: theme.spacing(1)\n  },\n  smMargin: {\n      margin: theme.spacing(1)\n  },\n  actionDiv: {\n      textAlign: \"center\"\n  }\n})\n\nconst scope = `\n//app.js\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n    $scope.name = \"John Doe\";\n});\n\n\n//index.html\n  <body ng-controller=\"myCtrl\">\n    <input ng-model=\"name\">\n    <h1>My name is {{name}}</h1>\n  </body>\n`.trim()\n\n\nclass Scope extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n            <Grid item xs={2}>\n                <Paper className={classes.paper}>\n                    <h4><Sidebar /></h4>\n                </Paper>\n            </Grid>\n<Grid item xs={10}>\n<Paper className={classes.paper}>\n<List>\n      <h3>Scope</h3>\n      The scope is the binding part between the HTML (view) and the JavaScript (controller).\n<br/>\nThe scope is an object with the available properties and methods.\n<br/>\nThe scope is available for both the view and the controller.\n<br/>\nWhen adding properties to the $scope object in the controller, the view (HTML) gets access to these properties.\n<br/>\nIn the view, you do not use the prefix $scope, you just refer to a property name\n<br/>\n<br/>\n<b>If we consider an AngularJS application to consist of:</b>\n<br/>\nView, which is the HTML.<br/>\nModel, which is the data available for the current view.<br/>\nController, which is the JavaScript function that makes/changes/removes/controls the data.<br/>\nThen the scope is the Model.<br/>\n<br/>\n\nThe scope is a JavaScript object with properties and methods, which are available for both the view and the controller.\n<br/>\n<br/>\nAll applications have a $rootScope which is the scope created on the HTML element that contains the ng-app directive.\n<br/>\nThe rootScope is available in the entire application.\n<br/>\nIf a variable has the same name in both the current scope and in the rootScope, the application uses the one in the current scope.\n<br/>\n<br/>\nA variable named \"color\" exists in both the controller's scope and in the rootScope:\n<br/>\n<br/>\n      <h3>Inpute text show on UI</h3>\n      <div style={titles}>\n      <PrismCode\n        code={scope}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n     </div>\n      </List>\n      </Paper>\n      </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Scope));\n"]},"metadata":{},"sourceType":"module"}