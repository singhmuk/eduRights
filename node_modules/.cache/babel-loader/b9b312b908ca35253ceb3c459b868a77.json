{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/hackeRank.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst operators = `\nfunction solve(meal_cost, tip_percent, tax_percent) {\n\n  let total_cost;\n  total_cost =  meal_cost + meal_cost * tip_percent/100 + meal_cost * tax_percent/100;\n  console.log(Math.round(total_cost));\n}\n\nfunction main() {\n  const meal_cost = parseFloat(10.20);\n\n  const tip_percent = parseInt(10, 10);\n\n  const tax_percent = parseInt(10, 10);\n\n  solve(meal_cost, tip_percent, tax_percent);\n}\nmain();`.trim();\nconst Review = `\nfunction processData(input) {\n  var myArray = input.split(\"\\n\");                                    //Splitting string between each newline into myArray values.\n                                                                      //input is: \"2\\nHacker\\nRank\". myArray = [[2], [\"Hacker\"], [\"Rank\"]], [[0], [1], [2]]\n  var evenChar = \"\";\n  var oddChar = \"\";\n\n  for (var i = 1; i= myArray; i++){                                   //Starting from 1 (Hacker) to length of array.\n      for (var j = 0; j -myArray[i]; j++) {\n          if (j%2 == 0) {\n              evenChar += myArray[i][j];                              //Therefore, add value to evenChar string.\n          } else {\n              oddChar += myArray[i][j];                               //If odd, add value to oddChar string.\n          }\n      }\n      console.log(evenChar + \" \" + oddChar);\n      evenChar = \"\";\n      oddChar = \"\";\n  }\n}\n\nprocessData('Hacker Rank')`.trim();\nconst arrays = `\nfunction main() {\n  const n = parseInt(readLine(), 10);\n\n  const arr = readLine().split(' ').map(arrTemp => parseInt(arrTemp, 10));\n\n  console.log(arr.reverse().join(' '));\n}\n\nmain();\n\n\n//2\nfunction main2() {\n  const n = parseInt(readLine(), 10);\n\n  const arr = readLine().split(' ').map(arrTemp => parseInt(arrTemp, 10));\n\n  const reverseArray = (array) => {\n      let temp = null;\n      const length = array.length;\n      \n      for (let i = 0; i < length / 2; i++){\n          temp = array[i];\n          array[i] = array[length - 1 - i];\n          array[length - 1 - i] = temp;\n      }\n\n      return array;\n  }\n  console.log(reverseArray(arr).join(' '));\n}\n\n\nmain2();`.trim();\nconst Dictionaries = `\nfunction main() {\n  var n = parseInt(10);\n\n  pbookname = [];\n  pbooknums = [];\n  query = [];\n  \n  for (i=0; i<n; i++) {\n       pbook = [];\n       pbook = 'readLine'.split(' ');\n       pbookname.push(pbook[0])\n       pbooknums.push(pbook[1]);  \n  }\n  \n  for (j=i; j<n*2; j++) {\n      if ('readLine' != \"\") {\n          query = 'readLine'; \n          pos = pbookname.indexOf(query);\n          if (pos < 0) {\n              console.log(\"Not found\");\n          } else {\n              console.log(query +\"=\"+ pbooknums[pos]);\n          }\n      } else {\n          break;\n      }\n  }\n  \n  /*\n  console.log(\"Names \" + pbookname);\n  console.log(\"Numbers \" + pbooknums);\n  console.log(\"Queries \" + query);\n  */\n}\nmain();`.trim();\nconst Recursions = `\nfunction factorial(n) {\n  return (!+n) ? 1 : n * factorial(n - 1);\n}\n\nfactorial(4);\n\n\n//2\nlet memoization = [0, 1];\n\nconst factorial2 = (n) => {\n  (typeof memoization[n] !== 'number') && (\n      memoization[n] = (n - 1) > 0 ? n * factorial(n - 1) : 1 \n  );\n\n  return memoization[n];\n}\n\n\nfactorial2(4);`.trim();\nconst Binary = `\nfunction main() {\n  let n = parseInt(10, 10);\n  let values = [];\n\n  while (+n != 0) {\n      values.push(n % 2);\n\n      n = Math.floor(n / 2);\n  }\n\n  let { result } = values.reduce((target, item, index) => {\n      item\n          ? target['accumulator']++\n          : (target['accumulator'] = 0);\n\n      target['accumulator'] > target['result'] && (target['result'] = target['accumulator']);\n\n      return target;\n  }, { accumulator: 0, result: 0 });\n\n  console.log(result);\n}\n\nmain();\n\n\n//2\nfunction main2() {\n  const n = parseInt(10, 10);\n  let result = 0;\n\n  const temp = n.toString(2).split('').reduce((target, num) => {\n      let value = Number(num) > 0 ? Number(target) + Number(num) : (\n          result = target > result ? target : result,\n          0\n      );\n\n      return value;\n\n  }, 0);\n\n  console.log(result - temp > 0 ? result : temp)\n}\n\nmain2();\n\n\n//3\nfunction main3() {\n  const n = parseInt(10, 10);\n  const array = n.toString(2).split('');\n  let max = 0;\n  let cur = 0;\n\n  for (let i = 0, itotal = array.length; i < itotal; i++) {\n      if (array[i] == 1) {\n          cur++;\n      } else if (array[i] == 0) {\n          if (cur > max) {\n              max = cur;\n          }\n          cur = 0;\n      }\n  }\n\n  if (cur > max) {\n      max = cur;\n  }\n  \n  console.log(max);\n}\n\nmain3();`.trim();\nconst tdArrays = `\nfunction main() {\n  let arr = Array(6);\n\n  for (let i = 0; i < 6; i++) {\n    arr[i] = 'readLine'\n      .split(\" \")\n      .map((arrTemp) => parseInt(arrTemp, 10));\n  }\n\n  let sumArr = [];\n  for (let i = 0; i < arr.length - 2; i++) {\n    for (let j = 0; j < arr[i].length - 2; j++) {\n      let sum = 0;\n      sum = arr[i][j] + arr[i][j + 1] + arr[i][j + 2] \n            + arr[i + 1][j + 1] \n            + arr[i + 2][j] + arr[i + 2][j + 1] + arr[i + 2][j + 2];\n      sumArr.push(sum);\n    }\n  }\n  console.log(Math.max(...sumArr));\n  return;\n}\n\nmain();\n\n\n//2\nfunction main2() {\n  let arr = [];\n  for(arr_i = 0; arr_i < 6; arr_i++){\n     arr[arr_i] = 'readLine'.split(' ');\n     arr[arr_i] = arr[arr_i].map(Number);\n  }\n\n  //totalSum initializes at -63 because that is lowest possible outcome for any hourglass.\n  //-9 -9 -9\n  //   -9\n  //-9 -9 -9 = -63    \n  let totalSum = -63;\n  for (let i=0; i < arr.length-2; i++) {\n      for (let j=0, curSum = 0; j < arr[i].length-2; j++) {\n          //                  //i=0; j=0     i=0; j=1    i=0; j=2    i=0; j=3\n          curSum = arr[i][j] +     //arr[0][0]    arr[0][1]   arr[0][2]   arr[0][3]\n                   arr[i][j+1] +   //arr[0][1]    arr[0][2]   arr[0][3]   arr[0][4]\n                   arr[i][j+2] +   //arr[0][2]    arr[0][3]   arr[0][4]   arr[0][5]\n                   arr[i+1][j+1] + //arr[1][1]    arr[1][2]   arr[1][3]   arr[1][4]\n                   arr[i+2][j] +   //arr[2][0]    arr[2][1]   arr[2][2]   arr[2][3]\n                   arr[i+2][j+1] + //arr[2][1]    arr[2][2]   arr[2][3]   arr[2][4]\n                   arr[i+2][j+2];  //arr[2][2]    arr[2][3]   arr[2][4]   arr[2][5]\n          if (curSum > totalSum) { //We're checking for MAX hourglass value, so if curSum is greater, set that one.\n              totalSum = curSum;\n          }\n      }\n  }\n  console.log(totalSum);\n}\n\nmain2();`.trim();\nconst Inheritance = `\nconsole.clear();\nclass Person{\n  constructor(firstName, lastName, id) {\n    this.firstName = firstName;\n\t\tthis.lastName = lastName;\n\t\tthis.id = id;\n  }\n\tprintPerson() {\n    console.log('Name: '$'{this.firstName} '$'{this.lastName}, ID: '$'{this.id}');\n  }\n}\n\nclass Student extends Person{\n  constructor(firstName, lastName, id, scores){\n    super(firstName, lastName, id);\n    this.grade = this.calcGrade(scores)\n  }\n  printPerson() {\n    super.printPerson();\n    console.log('Grade: '$'{this.grade}');\n  }\n  calcGrade(scores) {\n    let avg = scores.reduce((prev, curr, i, arr)=>{\n      return ( (prev + curr) /arr.length )\n    }, 0);\n    if(avg>=40 &&  avg<55) return 'D';\n    else if(avg>=55 &&  avg<70) return 'P';\n    else if(avg>=70 &&  avg<80) return 'A';\n    else if(avg>=80 &&  avg<90) return 'E';\n    else if(avg>=90 &&  avg<=100) return 'O';\n  }\n}\n\nlet ivan = new Student('Ivan', 'Ivanov', '222', [80, 90, 100]);\nivan.printPerson();`.trim();\nconst Abstract = `\n// class Book{\n//     constructor(title, author, price) {\n//       this.title = title;\n//           this.author = author;\n//           this.price = price;\n//     }\n//     display() {\n//       console.log('Name: '$'{this.title} '$'{this.author}, ID: '$'{this.price}');\n//     }\n//   }\n\nclass MyBook extends Book {\n    constructor(title, author, price) {\n        super(title, author);\n\n        this.price = price;\n    }\n\n    display() {\n        console.log('Title: '$'{this.title}\\nAuthor: '$'{this.author}\\nPrice: '$'{this.price}');\n    }\n}\n`.trim();\nconst Scope = `\nlet input = \"3\\n1 2 5\";\nconst difference = () => {\n  const result = input.split('\\n')[1].split(' ').reduce(\n    (target, el) => {\n      let { min, max } = target;\n\n      target[\"min\"] = el > min ? el : min;\n      target[\"max\"] = el < max ? el : max;\n\n      return target;\n    },\n    { min: -999, max: 999 }\n  );\n\n  console.log(Math.abs(result[\"max\"] - result[\"min\"]));\n};\n\ndifference();\n\n\n//2\nlet input = \"3\\n1 2 5\";\n\nfunction difference2(input) {\n  const split = input.split(\"\\n\");\n  const length = +split[0];\n  const array = split[1].split(\" \");\n  console.log(array, length);\n  let maximum = 0;\n  let result = 0;\n  \n  array.forEach(value1 => {\n    array.forEach(value2 =>{\n      result = Math.abs(value1-value2);\n      if(result > maximum) {\n        maximum = result;\n      }\n    })\n  });\n  console.log(maximum);\n}\n\nconsole.log(input);\n\ndifference2(input);`.trim();\nconst Linked = `\nfunction LinkedList() {\n  this.head = null;\n  this.tail = null;\n}\n\nfunction Node(value, next, prev) {\n  this.value = value;\n  this.next = next;\n  this.prev = prev;\n}\n\n\n\nLinkedList.prototype.addToHead = function(value) {\n  var newNode = new Node(value, this.head, null);\n  \n  if (this.head) this.head.prev = newNode;\n  else this.tail = newNode;\n\n  this.head = newNode;\n};\n\nLinkedList.prototype.addToTail = function(value) {\n  var newNode = new Node(value, null, this.tail);\n  \n  if (this.tail) this.tail.next = newNode;\n  else this.head = newNode;\n  \n  this.tail = newNode;\n};\n\nLinkedList.prototype.removeFromHead = function() {\n  if (!this.head) return null;                                                    // empty list, return null\n\n  var value = this.head.value;\n  this.head = this.head.next;                                                     // update head pointer to new head\n  \n  if (this.head) this.head.prev = null;\n  else this.tail = null;                                                          // linked list is empty\n\n  return value;\n};\n\nLinkedList.prototype.removeFromTail = function() {\n  if (!this.tail) return null;\n  \n  var value = this.tail.value;\n  \n  this.tail = this.tail.prev;\n  \n  if (this.tail) this.tail.next = null;\n  else this.head = null;\n  \n  return value;\n}\n\nLinkedList.prototype.search = function(searchValue) {\n  var currentNode = this.head;\n  \n  while (currentNode) {\n    if (currentNode.value === searchValue) return currentNode;\n    currentNode = currentNode.next;\n  }\n  return null;\n}\n\nLinkedList.prototype.indexOf = function(searchValue) {\n  var currentNode = this.head;\n  var currentIndex = 0;\n  var indexes = [];\n  \n  while (currentNode) {\n    if (currentNode.value === searchValue) indexes.push(currentIndex);\n    currentNode = currentNode.next;\n    currentIndex++;\n  }\n  return indexes;\n}\n\n\nvar ll = new LinkedList();\n\nll.addToHead(10);\nll.addToTail(15);\nll.addToTail(99);\nll.addToTail(105);\nll.addToTail(40);\nll.addToTail(20);\nll.removeFromTail();\n\nconsole.log('LOG: linked list object');\nconsole.log(ll);                                                              // should show head 10 and tail as node 40\nconsole.log('LOG: search for node with 99');\nconsole.log(ll.search(99));                                                   // should show node object with value 99\nconsole.log('LOG: find indexOf node with 99');\nconsole.log(ll.indexOf(99));                                                  // should log [2]\n`.trim();\nconst Interfaces = `\nclass AdvancedArithmetic {\n  divisor(n) {\n    return n || 0;\n  };\n}\n\nclass Calculator extends AdvancedArithmetic {\n  constructor(props) {\n    super(props);\n\n    this.divisor = this.divisorSum.bind(this);\n  }\n\n  divisorSum(n) {\n    return Array(n).fill(0).reduce((target, item, index) => {\n      !(n % (index + 1)) && (target += (index + 1)) ;\n\n      return target;\n    }, 0);\n  }\n}\n\nfunction Solution () {\n  const n = 6;\n\n  const myCalculator = new Calculator();\n\n  let sum = myCalculator.divisor(n);\n\n  console.log(\"I implemented: AdvancedArithmetic\\n\" + sum); \n}\n\nSolution();`.trim();\nconst Generics = ``.trim();\n\nclass HackeRank extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }, \"1. Operators\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: operators,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571\n      },\n      __self: this\n    }, \"2. Let's Review\"), \"Ie: \\\"Hacker\\\" and  \\\"Rank\\\" becomes:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572\n      },\n      __self: this\n    }), \"\\\"Hce akr\\\" even values - odd values [H, a, c, k, e, r] equals [0, 1, 2, 3, 4, 5]\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    }), \"\\\"Rn ak\\\" even values - odd values [R, a, n, k] equals [0, 1, 2, 3]\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: Review,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584\n      },\n      __self: this\n    }, \"3. Arrays\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: arrays,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594\n      },\n      __self: this\n    }, \"4. Dictionaries and Maps\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: Dictionaries,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, \"5. Recursion\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: Recursions,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }, \"6. Binary Numbers\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: Binary,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624\n      },\n      __self: this\n    }, \"7. 2D Arrays\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: tdArrays,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634\n      },\n      __self: this\n    }, \"8. Inheritance\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: Inheritance,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644\n      },\n      __self: this\n    }, \"9. Abstract Classes\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: Abstract,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654\n      },\n      __self: this\n    }, \"10. Scope\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: Scope,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664\n      },\n      __self: this\n    }, \"11. Linked List\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: Linked,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674\n      },\n      __self: this\n    }, \"12. Interfaces\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: Interfaces,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684\n      },\n      __self: this\n    }, \"13. Generics\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: Generics,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(HackeRank);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/hackeRank.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","operators","trim","Review","arrays","Dictionaries","Recursions","Binary","tdArrays","Inheritance","Abstract","Scope","Linked","Interfaces","Generics","HackeRank","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst operators = `\nfunction solve(meal_cost, tip_percent, tax_percent) {\n\n  let total_cost;\n  total_cost =  meal_cost + meal_cost * tip_percent/100 + meal_cost * tax_percent/100;\n  console.log(Math.round(total_cost));\n}\n\nfunction main() {\n  const meal_cost = parseFloat(10.20);\n\n  const tip_percent = parseInt(10, 10);\n\n  const tax_percent = parseInt(10, 10);\n\n  solve(meal_cost, tip_percent, tax_percent);\n}\nmain();`.trim();\n\nconst Review = `\nfunction processData(input) {\n  var myArray = input.split(\"\\n\");                                    //Splitting string between each newline into myArray values.\n                                                                      //input is: \"2\\nHacker\\nRank\". myArray = [[2], [\"Hacker\"], [\"Rank\"]], [[0], [1], [2]]\n  var evenChar = \"\";\n  var oddChar = \"\";\n\n  for (var i = 1; i= myArray; i++){                                   //Starting from 1 (Hacker) to length of array.\n      for (var j = 0; j -myArray[i]; j++) {\n          if (j%2 == 0) {\n              evenChar += myArray[i][j];                              //Therefore, add value to evenChar string.\n          } else {\n              oddChar += myArray[i][j];                               //If odd, add value to oddChar string.\n          }\n      }\n      console.log(evenChar + \" \" + oddChar);\n      evenChar = \"\";\n      oddChar = \"\";\n  }\n}\n\nprocessData('Hacker Rank')`.trim();\n\nconst arrays = `\nfunction main() {\n  const n = parseInt(readLine(), 10);\n\n  const arr = readLine().split(' ').map(arrTemp => parseInt(arrTemp, 10));\n\n  console.log(arr.reverse().join(' '));\n}\n\nmain();\n\n\n//2\nfunction main2() {\n  const n = parseInt(readLine(), 10);\n\n  const arr = readLine().split(' ').map(arrTemp => parseInt(arrTemp, 10));\n\n  const reverseArray = (array) => {\n      let temp = null;\n      const length = array.length;\n      \n      for (let i = 0; i < length / 2; i++){\n          temp = array[i];\n          array[i] = array[length - 1 - i];\n          array[length - 1 - i] = temp;\n      }\n\n      return array;\n  }\n  console.log(reverseArray(arr).join(' '));\n}\n\n\nmain2();`.trim();\n\nconst Dictionaries = `\nfunction main() {\n  var n = parseInt(10);\n\n  pbookname = [];\n  pbooknums = [];\n  query = [];\n  \n  for (i=0; i<n; i++) {\n       pbook = [];\n       pbook = 'readLine'.split(' ');\n       pbookname.push(pbook[0])\n       pbooknums.push(pbook[1]);  \n  }\n  \n  for (j=i; j<n*2; j++) {\n      if ('readLine' != \"\") {\n          query = 'readLine'; \n          pos = pbookname.indexOf(query);\n          if (pos < 0) {\n              console.log(\"Not found\");\n          } else {\n              console.log(query +\"=\"+ pbooknums[pos]);\n          }\n      } else {\n          break;\n      }\n  }\n  \n  /*\n  console.log(\"Names \" + pbookname);\n  console.log(\"Numbers \" + pbooknums);\n  console.log(\"Queries \" + query);\n  */\n}\nmain();`.trim();\n\nconst Recursions = `\nfunction factorial(n) {\n  return (!+n) ? 1 : n * factorial(n - 1);\n}\n\nfactorial(4);\n\n\n//2\nlet memoization = [0, 1];\n\nconst factorial2 = (n) => {\n  (typeof memoization[n] !== 'number') && (\n      memoization[n] = (n - 1) > 0 ? n * factorial(n - 1) : 1 \n  );\n\n  return memoization[n];\n}\n\n\nfactorial2(4);`.trim();\n\nconst Binary = `\nfunction main() {\n  let n = parseInt(10, 10);\n  let values = [];\n\n  while (+n != 0) {\n      values.push(n % 2);\n\n      n = Math.floor(n / 2);\n  }\n\n  let { result } = values.reduce((target, item, index) => {\n      item\n          ? target['accumulator']++\n          : (target['accumulator'] = 0);\n\n      target['accumulator'] > target['result'] && (target['result'] = target['accumulator']);\n\n      return target;\n  }, { accumulator: 0, result: 0 });\n\n  console.log(result);\n}\n\nmain();\n\n\n//2\nfunction main2() {\n  const n = parseInt(10, 10);\n  let result = 0;\n\n  const temp = n.toString(2).split('').reduce((target, num) => {\n      let value = Number(num) > 0 ? Number(target) + Number(num) : (\n          result = target > result ? target : result,\n          0\n      );\n\n      return value;\n\n  }, 0);\n\n  console.log(result - temp > 0 ? result : temp)\n}\n\nmain2();\n\n\n//3\nfunction main3() {\n  const n = parseInt(10, 10);\n  const array = n.toString(2).split('');\n  let max = 0;\n  let cur = 0;\n\n  for (let i = 0, itotal = array.length; i < itotal; i++) {\n      if (array[i] == 1) {\n          cur++;\n      } else if (array[i] == 0) {\n          if (cur > max) {\n              max = cur;\n          }\n          cur = 0;\n      }\n  }\n\n  if (cur > max) {\n      max = cur;\n  }\n  \n  console.log(max);\n}\n\nmain3();`.trim();\n\nconst tdArrays = `\nfunction main() {\n  let arr = Array(6);\n\n  for (let i = 0; i < 6; i++) {\n    arr[i] = 'readLine'\n      .split(\" \")\n      .map((arrTemp) => parseInt(arrTemp, 10));\n  }\n\n  let sumArr = [];\n  for (let i = 0; i < arr.length - 2; i++) {\n    for (let j = 0; j < arr[i].length - 2; j++) {\n      let sum = 0;\n      sum = arr[i][j] + arr[i][j + 1] + arr[i][j + 2] \n            + arr[i + 1][j + 1] \n            + arr[i + 2][j] + arr[i + 2][j + 1] + arr[i + 2][j + 2];\n      sumArr.push(sum);\n    }\n  }\n  console.log(Math.max(...sumArr));\n  return;\n}\n\nmain();\n\n\n//2\nfunction main2() {\n  let arr = [];\n  for(arr_i = 0; arr_i < 6; arr_i++){\n     arr[arr_i] = 'readLine'.split(' ');\n     arr[arr_i] = arr[arr_i].map(Number);\n  }\n\n  //totalSum initializes at -63 because that is lowest possible outcome for any hourglass.\n  //-9 -9 -9\n  //   -9\n  //-9 -9 -9 = -63    \n  let totalSum = -63;\n  for (let i=0; i < arr.length-2; i++) {\n      for (let j=0, curSum = 0; j < arr[i].length-2; j++) {\n          //                  //i=0; j=0     i=0; j=1    i=0; j=2    i=0; j=3\n          curSum = arr[i][j] +     //arr[0][0]    arr[0][1]   arr[0][2]   arr[0][3]\n                   arr[i][j+1] +   //arr[0][1]    arr[0][2]   arr[0][3]   arr[0][4]\n                   arr[i][j+2] +   //arr[0][2]    arr[0][3]   arr[0][4]   arr[0][5]\n                   arr[i+1][j+1] + //arr[1][1]    arr[1][2]   arr[1][3]   arr[1][4]\n                   arr[i+2][j] +   //arr[2][0]    arr[2][1]   arr[2][2]   arr[2][3]\n                   arr[i+2][j+1] + //arr[2][1]    arr[2][2]   arr[2][3]   arr[2][4]\n                   arr[i+2][j+2];  //arr[2][2]    arr[2][3]   arr[2][4]   arr[2][5]\n          if (curSum > totalSum) { //We're checking for MAX hourglass value, so if curSum is greater, set that one.\n              totalSum = curSum;\n          }\n      }\n  }\n  console.log(totalSum);\n}\n\nmain2();`.trim();\n\nconst Inheritance = `\nconsole.clear();\nclass Person{\n  constructor(firstName, lastName, id) {\n    this.firstName = firstName;\n\t\tthis.lastName = lastName;\n\t\tthis.id = id;\n  }\n\tprintPerson() {\n    console.log('Name: '$'{this.firstName} '$'{this.lastName}, ID: '$'{this.id}');\n  }\n}\n\nclass Student extends Person{\n  constructor(firstName, lastName, id, scores){\n    super(firstName, lastName, id);\n    this.grade = this.calcGrade(scores)\n  }\n  printPerson() {\n    super.printPerson();\n    console.log('Grade: '$'{this.grade}');\n  }\n  calcGrade(scores) {\n    let avg = scores.reduce((prev, curr, i, arr)=>{\n      return ( (prev + curr) /arr.length )\n    }, 0);\n    if(avg>=40 &&  avg<55) return 'D';\n    else if(avg>=55 &&  avg<70) return 'P';\n    else if(avg>=70 &&  avg<80) return 'A';\n    else if(avg>=80 &&  avg<90) return 'E';\n    else if(avg>=90 &&  avg<=100) return 'O';\n  }\n}\n\nlet ivan = new Student('Ivan', 'Ivanov', '222', [80, 90, 100]);\nivan.printPerson();`.trim();\n\nconst Abstract = `\n// class Book{\n//     constructor(title, author, price) {\n//       this.title = title;\n//           this.author = author;\n//           this.price = price;\n//     }\n//     display() {\n//       console.log('Name: '$'{this.title} '$'{this.author}, ID: '$'{this.price}');\n//     }\n//   }\n\nclass MyBook extends Book {\n    constructor(title, author, price) {\n        super(title, author);\n\n        this.price = price;\n    }\n\n    display() {\n        console.log('Title: '$'{this.title}\\nAuthor: '$'{this.author}\\nPrice: '$'{this.price}');\n    }\n}\n`.trim();\n\nconst Scope = `\nlet input = \"3\\n1 2 5\";\nconst difference = () => {\n  const result = input.split('\\n')[1].split(' ').reduce(\n    (target, el) => {\n      let { min, max } = target;\n\n      target[\"min\"] = el > min ? el : min;\n      target[\"max\"] = el < max ? el : max;\n\n      return target;\n    },\n    { min: -999, max: 999 }\n  );\n\n  console.log(Math.abs(result[\"max\"] - result[\"min\"]));\n};\n\ndifference();\n\n\n//2\nlet input = \"3\\n1 2 5\";\n\nfunction difference2(input) {\n  const split = input.split(\"\\n\");\n  const length = +split[0];\n  const array = split[1].split(\" \");\n  console.log(array, length);\n  let maximum = 0;\n  let result = 0;\n  \n  array.forEach(value1 => {\n    array.forEach(value2 =>{\n      result = Math.abs(value1-value2);\n      if(result > maximum) {\n        maximum = result;\n      }\n    })\n  });\n  console.log(maximum);\n}\n\nconsole.log(input);\n\ndifference2(input);`.trim();\n\nconst Linked = `\nfunction LinkedList() {\n  this.head = null;\n  this.tail = null;\n}\n\nfunction Node(value, next, prev) {\n  this.value = value;\n  this.next = next;\n  this.prev = prev;\n}\n\n\n\nLinkedList.prototype.addToHead = function(value) {\n  var newNode = new Node(value, this.head, null);\n  \n  if (this.head) this.head.prev = newNode;\n  else this.tail = newNode;\n\n  this.head = newNode;\n};\n\nLinkedList.prototype.addToTail = function(value) {\n  var newNode = new Node(value, null, this.tail);\n  \n  if (this.tail) this.tail.next = newNode;\n  else this.head = newNode;\n  \n  this.tail = newNode;\n};\n\nLinkedList.prototype.removeFromHead = function() {\n  if (!this.head) return null;                                                    // empty list, return null\n\n  var value = this.head.value;\n  this.head = this.head.next;                                                     // update head pointer to new head\n  \n  if (this.head) this.head.prev = null;\n  else this.tail = null;                                                          // linked list is empty\n\n  return value;\n};\n\nLinkedList.prototype.removeFromTail = function() {\n  if (!this.tail) return null;\n  \n  var value = this.tail.value;\n  \n  this.tail = this.tail.prev;\n  \n  if (this.tail) this.tail.next = null;\n  else this.head = null;\n  \n  return value;\n}\n\nLinkedList.prototype.search = function(searchValue) {\n  var currentNode = this.head;\n  \n  while (currentNode) {\n    if (currentNode.value === searchValue) return currentNode;\n    currentNode = currentNode.next;\n  }\n  return null;\n}\n\nLinkedList.prototype.indexOf = function(searchValue) {\n  var currentNode = this.head;\n  var currentIndex = 0;\n  var indexes = [];\n  \n  while (currentNode) {\n    if (currentNode.value === searchValue) indexes.push(currentIndex);\n    currentNode = currentNode.next;\n    currentIndex++;\n  }\n  return indexes;\n}\n\n\nvar ll = new LinkedList();\n\nll.addToHead(10);\nll.addToTail(15);\nll.addToTail(99);\nll.addToTail(105);\nll.addToTail(40);\nll.addToTail(20);\nll.removeFromTail();\n\nconsole.log('LOG: linked list object');\nconsole.log(ll);                                                              // should show head 10 and tail as node 40\nconsole.log('LOG: search for node with 99');\nconsole.log(ll.search(99));                                                   // should show node object with value 99\nconsole.log('LOG: find indexOf node with 99');\nconsole.log(ll.indexOf(99));                                                  // should log [2]\n`.trim();\n\nconst Interfaces = `\nclass AdvancedArithmetic {\n  divisor(n) {\n    return n || 0;\n  };\n}\n\nclass Calculator extends AdvancedArithmetic {\n  constructor(props) {\n    super(props);\n\n    this.divisor = this.divisorSum.bind(this);\n  }\n\n  divisorSum(n) {\n    return Array(n).fill(0).reduce((target, item, index) => {\n      !(n % (index + 1)) && (target += (index + 1)) ;\n\n      return target;\n    }, 0);\n  }\n}\n\nfunction Solution () {\n  const n = 6;\n\n  const myCalculator = new Calculator();\n\n  let sum = myCalculator.divisor(n);\n\n  console.log(\"I implemented: AdvancedArithmetic\\n\" + sum); \n}\n\nSolution();`.trim();\n\nconst Generics = ``.trim();\n\n\n\nclass HackeRank extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. Operators</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={operators}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>2. Let's Review</h3>\n              Ie: \"Hacker\" and  \"Rank\" becomes:<br />\n              \"Hce akr\" even values - odd values [H, a, c, k, e, r] equals [0, 1, 2, 3, 4, 5]<br />\n              \"Rn ak\" even values - odd values [R, a, n, k] equals [0, 1, 2, 3]<br /><br />\n              <div style={titles}>\n                <PrismCode\n                  code={Review}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>3. Arrays</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={arrays}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>4. Dictionaries and Maps</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Dictionaries}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>5. Recursion</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Recursions}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>6. Binary Numbers</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Binary}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>7. 2D Arrays</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={tdArrays}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>8. Inheritance</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Inheritance}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>9. Abstract Classes</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Abstract}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>10. Scope</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Scope}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>11. Linked List</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Linked}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>12. Interfaces</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Interfaces}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>13. Generics</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Generics}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(HackeRank));\n"]},"metadata":{},"sourceType":"module"}