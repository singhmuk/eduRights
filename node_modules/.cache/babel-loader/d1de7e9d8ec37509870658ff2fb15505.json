{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/nodeJs/nodeDeep/serverSide.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst crypto = `var crypto = require('crypto');\nvar mykey = crypto.createCipher('aes-128-cbc', 'mypassword');\nvar mystr = mykey.update('abc', 'utf8', 'hex')\n\nmystr += mykey.update.final('hex');\n`.trim();\nconst deCrypto = `var crypto = require('crypto');\nvar mykey = crypto.createDecipher('aes-128-cbc', 'mypassword');\nvar mystr = mykey.update('34feb914c099df25794bf9ccb85bea72', 'hex', 'utf8')\n\nmystr += mykey.update.final('utf8');\n`.trim();\nconst dgram = `(i) var dgram = require('dgram');\nvar s = dgram.createSocket('udp4');\n  s.on('message', function(msg, rinfo) {\n  console.log('I got this message: ' + msg);\n  });\n  \ns.bind(8080);`.trim();\nconst dgram_2 = `(ii) var dgram = require('dgram');\n  var s = dgram.createSocket('udp4');\n  s.send(Buffer.from('abc'), 8080, 'localhost');\n`.trim();\nconst dns = `var dns = require('dns');\n    var w3 = dns.lookup('www.w3schools.com', function (err, addresses, family) {\n     console.log(addresses);\n    });\n`.trim();\nconst querystring = `var querystring = require('querystring');\n  var q = querystring.parse('year=2017&month=february');\n  console.log(q.year);`.trim();\nconst GettingInPut = `const command = process.argv[2]\nif (command === 'add') {\n   console.log('Adding note!')\n }\n else if (command === 'remove') {\n   console.log('Removing note!')\n }\n`.trim();\nconst tls = `var tls = require('tls');`.trim();\nconst tty = ` url - The URL module provides a way of parsing the URL string.\nvar http = require('http');\nvar url = require('url');\nhttp.createServer(function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/plain'});\n  var q = url.parse(req.url, true);\n  res.write(q.href);\n  res.end();\n}).listen(8080);\n`.trim();\nconst util = `var util = require('util');\nvar txt = 'Congratulate %s on his %dth birthday!';\nvar result = util.format(txt, 'Linus', 6);\n\nconsole.log(result);\n`.trim();\nconst vm = `var vm = require('vm');\nvar myObj = { name: 'John', age: 38 };\nvm.createContext(myObj);\nvm.runInContext('age += 1;', myObj);\n\nconsole.log(myObj);\n`.trim();\nconst Write = `const fs = require('fs')\nfs.writeFileSync('notes.txt', 'I live in Philadelphia')\n`.trim();\nconst Delete = `const path='D:\\Concepts\\NodeJs\\demo\\text.txt';\nconsole.log(fs.unlinkSync(path))\n`.trim();\nconst appendFile = `var fs = require('fs');\nfs.appendFile('mynewfile1.txt', 'Hello content!', function (err) {\n if (err) throw err;\n   console.log('Saved!');\n});`.trim();\nconst open = `var fs = require('fs');\nfs.open('mynewfile2.txt', 'w', function (err, file) {\n if (err) throw err;\n   console.log('Saved!');\n});\n`.trim();\nconst writeFile = `var fs = require('fs');\nfs.writeFile('mynewfile3.txt', 'Hello content!', function (err) {\n if (err) throw err;\n   console.log('Saved!');\n});\n`.trim();\nconst Rename = `var fs = require('fs');\nfs.rename('mynewfile1.txt', 'myrenamedfile.txt', function (err) {\n   if (err) throw err;\n   console.log('File Renamed!');\n});\n`.trim();\n\nclass ServerSide extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"crypto\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"To handle OpenSSL cryptographic functions The crypto module provides a way of handling encrypted data.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"(i) Encrypt the text 'abc'\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: crypto,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), \"console.log(mystr);\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), \"o/p - 34feb914c099df25794bf9ccb85bea72\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"(ii) Decrypt back to 'abc'\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: deCrypto,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), \"console.log(mystr);\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), \"o/p - abc\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"dgram\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), \"Provides implementation of UDP datagram sockets It can be used to send messages from one computer/server to another.\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: dgram,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"dgram_2\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: dgram_2,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), \"When initiating the second file, the first Command window will now look like this:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), \"o/p - I got this message: abc\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"dns - To do DNS lookups and name resolution functions\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: dns,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }), \"o/p - 192.229.133.221\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), \"getServers() - Returns an array containing all IP addresses belonging to the current server\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), \"lookup() - Looks up a hostname. A callback function contains information about the hostname,\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), \"including it's IP address\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), \"lookupService() - Looks up a address and port. A callback function contains information about the address, such as the hostname\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), \"resolve() - Returns an array of record types belonging to the specified hostname\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), \"resolve4() - Looks up an IPv4 address. The callback function includes an array of IPv4 addresses\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), \"resolve6() - Looks up an IPv6 address. The callback function includes an array of IPv6 addresses\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), \"resolveTxt() - Looks up text query records for the specified hostname.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), \"reverse() - Reverses an IP address into an array of hostnames\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), \"setServers() - Sets the IP addresses of the servers\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"querystring\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"To handle URL query strings. The Query String module provides a way of parsing the URL query string.\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: querystring,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), \"o/p - 2018\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), \"escape() - Returns an escaped querystring\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), \"parse() - Parses the querystring and returns an object\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), \"stringify() - Stringifies an object, and returns a query string\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }), \"unescape() -\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), \"``              \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"Getting Input from Users\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: GettingInPut,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), \"$ node server.js add\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"tls\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), \"To implement TLS and SSL protocols\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), \"The TLS module provides a way of implementing TLS (Transport Layer Security) and SSL (Secure Socket Layer).\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), \"connect() - Returns a Socket object\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), \"createSecureContext() - Creates an object containing security details\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), \"createServer() -Creates a Server object\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), \"getCiphers() - Returns an array containing the supported SSL ciphers\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: tls,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \". tty - Provides classes used by a text terminal\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: tty,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }), \"o/p - default.htm\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), \"url.format() - Returns a formatted URL string\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), \"url.parse() - Returns a URL object\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), \"url.resolve() - Resolves a URL\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"util - The Util module provides access to some utility functions\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: util,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }), \"o/p - Congratulate Linus on his 6th birthday!\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }), \"debuglog() - Writes debug messages to the error object\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }), \"deprecate() - Marks the specified function as deprecated\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), \"format() - Formats the specified string, using the specified arguments\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }), \"inherits() - Inherits methods from one function into another\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }), \"inspect() - Inspects the specified object and returns the object as a string\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"vm\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }), \"The VM module provides a way of executing JavaScript on a virtual machine, almost like eval() in JavaScript.\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: vm,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(ServerSide);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/nodeJs/nodeDeep/serverSide.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","crypto","trim","deCrypto","dgram","dgram_2","dns","querystring","GettingInPut","tls","tty","util","vm","Write","Delete","appendFile","open","writeFile","Rename","ServerSide","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst crypto = `var crypto = require('crypto');\nvar mykey = crypto.createCipher('aes-128-cbc', 'mypassword');\nvar mystr = mykey.update('abc', 'utf8', 'hex')\n\nmystr += mykey.update.final('hex');\n`.trim()\n\nconst deCrypto = `var crypto = require('crypto');\nvar mykey = crypto.createDecipher('aes-128-cbc', 'mypassword');\nvar mystr = mykey.update('34feb914c099df25794bf9ccb85bea72', 'hex', 'utf8')\n\nmystr += mykey.update.final('utf8');\n`.trim()\n\nconst dgram = `(i) var dgram = require('dgram');\nvar s = dgram.createSocket('udp4');\n  s.on('message', function(msg, rinfo) {\n  console.log('I got this message: ' + msg);\n  });\n  \ns.bind(8080);`.trim()\n\nconst dgram_2 = `(ii) var dgram = require('dgram');\n  var s = dgram.createSocket('udp4');\n  s.send(Buffer.from('abc'), 8080, 'localhost');\n`.trim()\n\nconst dns = `var dns = require('dns');\n    var w3 = dns.lookup('www.w3schools.com', function (err, addresses, family) {\n     console.log(addresses);\n    });\n`.trim()\n\nconst querystring = `var querystring = require('querystring');\n  var q = querystring.parse('year=2017&month=february');\n  console.log(q.year);`.trim()\n\nconst GettingInPut = `const command = process.argv[2]\nif (command === 'add') {\n   console.log('Adding note!')\n }\n else if (command === 'remove') {\n   console.log('Removing note!')\n }\n`.trim()\n\nconst tls = `var tls = require('tls');`.trim()\n\nconst tty = ` url - The URL module provides a way of parsing the URL string.\nvar http = require('http');\nvar url = require('url');\nhttp.createServer(function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/plain'});\n  var q = url.parse(req.url, true);\n  res.write(q.href);\n  res.end();\n}).listen(8080);\n`.trim()\n\nconst util = `var util = require('util');\nvar txt = 'Congratulate %s on his %dth birthday!';\nvar result = util.format(txt, 'Linus', 6);\n\nconsole.log(result);\n`.trim()\n\nconst vm = `var vm = require('vm');\nvar myObj = { name: 'John', age: 38 };\nvm.createContext(myObj);\nvm.runInContext('age += 1;', myObj);\n\nconsole.log(myObj);\n`.trim()\n\n\n\nconst Write = `const fs = require('fs')\nfs.writeFileSync('notes.txt', 'I live in Philadelphia')\n`.trim()\n\nconst Delete = `const path='D:\\Concepts\\NodeJs\\demo\\text.txt';\nconsole.log(fs.unlinkSync(path))\n`.trim()\n\nconst appendFile = `var fs = require('fs');\nfs.appendFile('mynewfile1.txt', 'Hello content!', function (err) {\n if (err) throw err;\n   console.log('Saved!');\n});`.trim()\n\nconst open = `var fs = require('fs');\nfs.open('mynewfile2.txt', 'w', function (err, file) {\n if (err) throw err;\n   console.log('Saved!');\n});\n`.trim()\n\nconst writeFile = `var fs = require('fs');\nfs.writeFile('mynewfile3.txt', 'Hello content!', function (err) {\n if (err) throw err;\n   console.log('Saved!');\n});\n`.trim()\n\nconst Rename = `var fs = require('fs');\nfs.rename('mynewfile1.txt', 'myrenamedfile.txt', function (err) {\n   if (err) throw err;\n   console.log('File Renamed!');\n});\n`.trim()\n\n\nclass ServerSide extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <b>crypto</b>\n              <br />\n              <i>To handle OpenSSL cryptographic functions\n                The crypto module provides a way of handling encrypted data.</i>\n              <br />\n              <b>(i) Encrypt the text 'abc'</b>\n              <div style={titles}>\n                <PrismCode\n                  code={crypto}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              console.log(mystr);\n              <br />\n              o/p - 34feb914c099df25794bf9ccb85bea72\n              <br />\n              <br />\n              <b>(ii) Decrypt back to 'abc'</b>\n              <div style={titles}>\n                <PrismCode\n                  code={deCrypto}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              console.log(mystr);\n              <br />\n              o/p - abc\n              <br />\n              <br />\n              <b>dgram</b>\n              <br />\n              Provides implementation of UDP datagram sockets\n              It can be used to send messages from one computer/server to another.\n              <div style={titles}>\n                <PrismCode\n                  code={dgram}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>dgram_2</b>\n              <div style={titles}>\n                <PrismCode\n                  code={dgram_2}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              When initiating the second file, the first Command window will now look like this:\n              <br />\n              o/p - I got this message: abc\n              <br />\n              <br />\n              <b>dns - To do DNS lookups and name resolution functions</b>\n              <div style={titles}>\n                <PrismCode\n                  code={dns}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              o/p - 192.229.133.221\n              <br />\n              getServers() - Returns an array containing all IP addresses belonging to the current server\n              <br />lookup() - Looks up a hostname. A callback function contains information about the hostname,\n              <br />including it's IP address\n              <br />lookupService() - Looks up a address and port. A callback function contains information about\n              the address, such as the hostname\n              <br />resolve() - Returns an array of record types belonging to the specified hostname\n              <br />resolve4() - Looks up an IPv4 address. The callback function includes an array of IPv4 addresses\n              <br />resolve6() - Looks up an IPv6 address. The callback function includes an array of IPv6 addresses\n              <br />resolveTxt() - Looks up text query records for the specified hostname.\n              <br />reverse() - Reverses an IP address into an array of hostnames\n              <br />setServers() - Sets the IP addresses of the servers\n              <br />\n              <br />\n              <b>querystring</b>\n              <br />\n              <i>To handle URL query strings. The Query String module provides a way of parsing\n                the URL query string.</i>\n              <div style={titles}>\n                <PrismCode\n                  code={querystring}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              o/p - 2018\n              <br />\n              escape() - Returns an escaped querystring<br />\n              parse() - Parses the querystring and returns an object<br />\n              stringify() - Stringifies an object, and returns a query string<br />\n              unescape() -\n              <br />\n              <br />\n\n              ``              <b>Getting Input from Users</b>\n              <div style={titles}>\n                <PrismCode\n                  code={GettingInPut}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              $ node server.js add\n              <br />\n              <br />\n\n              <b>tls</b>\n              <br />\n              To implement TLS and SSL protocols<br />\n              The TLS module provides a way of implementing TLS (Transport Layer Security) and SSL (Secure\n              Socket Layer).<br />\n              connect() - Returns a Socket object<br />\n              createSecureContext() - Creates an object containing security details<br />\n              createServer() -Creates a Server object<br />\n              getCiphers() - Returns an array containing the supported SSL ciphers<br />\n              <div style={titles}>\n                <PrismCode\n                  code={tls}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>. tty - Provides classes used by a text terminal</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={tty}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              o/p - default.htm\n              <br />\n              url.format() - Returns a formatted URL string<br />\n              url.parse() - Returns a URL object<br />\n              url.resolve() - Resolves a URL\n              <br />\n              <br />\n              <b>util - The Util module provides access to some utility functions</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={util}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              o/p - Congratulate Linus on his 6th birthday!<br />\n              debuglog() - Writes debug messages to the error object<br />\n              deprecate() - Marks the specified function as deprecated<br />\n              format() - Formats the specified string, using the specified arguments<br />\n              inherits() - Inherits methods from one function into another<br />\n              inspect() - Inspects the specified object and returns the object as a string\n              <br />\n              <br />\n              <b>vm</b>\n              <br />\n              The VM module provides a way of executing JavaScript on a virtual machine, almost like\n              eval() in JavaScript.\n\n              <div style={titles}>\n                <PrismCode\n                  code={vm}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(ServerSide));\n"]},"metadata":{},"sourceType":"module"}