{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../ReactJs/styles.css';import Sidebar from'./sidebar';import PrismCode from'../ReactJs/prismCode';import Browser from'../../assets/css1.PNG';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var shallowOnly=\"\\ntest(\\\"shallow\\\", () => {\\n  class Bar extends React.Component {\\n    state = {\\n      value: 0\\n    };\\n\\n    componentDidMount() {\\n      this.setState({\\n        value: 1\\n      });\\n    }\\n\\n    render() {\\n      return (\\n        <div>\\n          <div className=\\\"in-bar\\\">{this.state.value}</div>\\n        </div>\\n      );\\n    }\\n  }\\n\\n  function Foo() {\\n    return (\\n      <div>\\n        <Bar />\\n      </div>\\n    );\\n  }\\n\\n  const wrapper = shallow(<Foo />);\\n\\n  expect(wrapper.find(\\\".in-bar\\\")).toHaveLength(0);\\n  expect(wrapper.find(Bar)).toHaveLength(1);\\n\\n  const barWithLifecycle = wrapper.find(Bar).shallow();\\n  expect(barWithLifecycle.find(\\\".in-bar\\\")).toHaveLength(1);\\n  expect(barWithLifecycle.find(\\\".in-bar\\\").text()).toBe(\\\"1\\\");\\n\\n  const barWithoutLifecycle = wrapper.find(Bar).shallow({\\n    disableLifecycleMethods: true\\n  });\\n  expect(barWithoutLifecycle.find(\\\".in-bar\\\")).toHaveLength(1);\\n  expect(barWithoutLifecycle.find(\\\".in-bar\\\").text()).toBe(\\\"0\\\");\\n});\\n\\ntest(\\\"dive\\\", () => {\\n  function Bar() {\\n    return (\\n      <div>\\n        <div className=\\\"in-bar\\\" />\\n      </div>\\n    );\\n  }\\n\\n  function Foo() {\\n    return (\\n      <div>\\n        <Bar />\\n      </div>\\n    );\\n  }\\n\\n  const wrapper = shallow(<Foo />);\\n  expect(wrapper.find(\\\".in-bar\\\")).toHaveLength(0);\\n  expect(wrapper.find(Bar)).toHaveLength(1);\\n  expect(\\n    wrapper\\n      .find(Bar)\\n      .dive()\\n      .find(\\\".in-bar\\\")\\n  ).toHaveLength(1);\\n});\\n\".trim();var fullDomOnly=\"\\nimport { mount } from \\\"enzyme\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\ntest(\\\"detach()\\\", () => {\\n  function CustomComponent(props) {\\n    return <div>Custom Component</div>;\\n  }\\n\\n  document.body.innerHTML = '<div id=\\\"root\\\"></div>';\\n  const attachHere = document.getElementById(\\\"root\\\");\\n\\n  const wrapper = mount(<CustomComponent></CustomComponent>, {\\n    attachTo: attachHere\\n  });\\n\\n  expect(document.body.innerHTML).toMatchInlineSnapshot(\\n    '\\\"<div id=\\\\\\\"root\\\\\\\"><div>Custom Component</div></div>\\\"'\\n  );\\n\\n  wrapper.detach();\\n\\n  expect(document.body.innerHTML).toMatchInlineSnapshot(\\n    '\\\"<div id=\\\\\\\"root\\\\\\\"></div>\\\"'\\n  );\\n});\\n\\ntest(\\\"getDOMNode()\\\", () => {\\n  const wrapper = mount(<div className=\\\"foo\\\"></div>);\\n  const domNode = wrapper.getDOMNode();\\n  expect(domNode).toHaveProperty(\\\"className\\\");\\n});\\n\\ntest(\\\"mount() and unmount()\\\", () => {\\n  const willMount = jest.fn();\\n  const didMount = jest.fn();\\n  const willUnmount = jest.fn();\\n\\n  class Foo extends React.Component {\\n    constructor(props) {\\n      super(props);\\n      this.componentWillUnmount = willUnmount;\\n      this.componentWillMount = willMount;\\n      this.componentDidMount = didMount;\\n    }\\n\\n    render() {\\n      const { id } = this.props;\\n      return <div className={id}>{id}</div>;\\n    }\\n  }\\n\\n  Foo.propTypes = {\\n    id: PropTypes.string.isRequired\\n  };\\n\\n  const wrapper = mount(<Foo id=\\\"foo\\\" />);\\n\\n  expect(willMount).toHaveBeenCalled();\\n  expect(didMount).toHaveBeenCalled();\\n  expect(willUnmount).not.toHaveBeenCalled();\\n\\n  wrapper.unmount();\\n  expect(willMount).toHaveBeenCalledTimes(1);\\n  expect(didMount).toHaveBeenCalledTimes(1);\\n  expect(willUnmount).toHaveBeenCalledTimes(1);\\n\\n  wrapper.mount();\\n  expect(willMount).toHaveBeenCalledTimes(2);\\n  expect(didMount).toHaveBeenCalledTimes(2);\\n  expect(willUnmount).toHaveBeenCalledTimes(1);\\n});\\n\\ntest(\\\"ref(refName)\\\", () => {\\n  class Foo extends React.Component {\\n    render() {\\n      return (\\n        <div>\\n          <span ref=\\\"firstRef\\\">First</span>\\n          <span ref=\\\"secondRef\\\">Second</span>\\n          <span ref=\\\"thirdRef\\\">Third</span>\\n        </div>\\n      );\\n    }\\n  }\\n\\n  const wrapper = mount(<Foo />);\\n  expect(wrapper.ref(\\\"secondRef\\\").innerHTML).toBe(\\\"Second\\\");\\n});\\n\".trim();var Enzymes3=/*#__PURE__*/function(_Component){_inherits(Enzymes3,_Component);function Enzymes3(){_classCallCheck(this,Enzymes3);return _possibleConstructorReturn(this,_getPrototypeOf(Enzymes3).apply(this,arguments));}_createClass(Enzymes3,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"7-shallow-only-methods\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:shallowOnly,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"8-full-dom-only-methods\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:fullDomOnly,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return Enzymes3;}(Component);export default withStyles(styles)(Enzymes3);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/css/enzyme3.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","Browser","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","shallowOnly","trim","fullDomOnly","Enzymes3","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,uBAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,sBAAtB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CAGA,GAAMC,CAAAA,MAAM,CAAG,CAACC,eAAe,CAAC,SAAjB,CAA4BC,OAAO,CAAC,KAApC,CAA2CC,QAAQ,CAAC,MAApD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,KAAK,CAAE,CACHC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADL,CAEHN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFN,CADgB,CAKvBC,QAAQ,CAAE,CACNF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADF,CALa,CAQvBE,SAAS,CAAE,CACPC,SAAS,CAAE,QADJ,CARY,CAAL,EAApB,CAeA,GAAMC,CAAAA,WAAW,CAAG,o9CAyElBC,IAzEkB,EAApB,CA2EA,GAAMC,CAAAA,WAAW,CAAG,qxEAyFlBD,IAzFkB,EAApB,C,GA6FME,CAAAA,Q,gSACgB,CAClBC,UAAU,CAAC,iBAAMxB,CAAAA,KAAK,CAACyB,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACM,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACI,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACZ,KAA1B,EACI,8BAAI,oBAAC,OAAD,MAAJ,CADJ,CADJ,CADN,CAMF,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACA,oBAAC,KAAD,EAAO,SAAS,CAAEY,OAAO,CAACZ,KAA1B,EACA,oBAAC,IAAD,MACE,uDADF,CAEE,2BAAK,KAAK,CAAEN,MAAZ,EACA,oBAAC,SAAD,EACE,IAAI,CAAEY,WADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADA,CAFF,CASE,8BATF,CAWE,wDAXF,CAYE,2BAAK,KAAK,CAAEZ,MAAZ,EACA,oBAAC,SAAD,EACE,IAAI,CAAEc,WADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADA,CAZF,CADA,CADA,CANE,CADF,CAiCD,C,sBAvCoBvB,S,EA0CvB,cAAgBI,CAAAA,UAAU,CAACS,MAAD,CAAV,CAAmBW,QAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../ReactJs/styles.css'\nimport Sidebar from './sidebar';\nimport PrismCode from '../ReactJs/prismCode';\n\nimport Browser from '../../assets/css1.PNG';\n\n\nconst titles = {backgroundColor:'#F0F8FF', padding:'1px', fontSize:'16px'}\n\nconst styles = theme => ({\n  paper: {\n      margin: theme.spacing(1),\n      padding: theme.spacing(1)\n  },\n  smMargin: {\n      margin: theme.spacing(1)\n  },\n  actionDiv: {\n      textAlign: \"center\"\n  }\n})\n\n\n\nconst shallowOnly = `\ntest(\"shallow\", () => {\n  class Bar extends React.Component {\n    state = {\n      value: 0\n    };\n\n    componentDidMount() {\n      this.setState({\n        value: 1\n      });\n    }\n\n    render() {\n      return (\n        <div>\n          <div className=\"in-bar\">{this.state.value}</div>\n        </div>\n      );\n    }\n  }\n\n  function Foo() {\n    return (\n      <div>\n        <Bar />\n      </div>\n    );\n  }\n\n  const wrapper = shallow(<Foo />);\n\n  expect(wrapper.find(\".in-bar\")).toHaveLength(0);\n  expect(wrapper.find(Bar)).toHaveLength(1);\n\n  const barWithLifecycle = wrapper.find(Bar).shallow();\n  expect(barWithLifecycle.find(\".in-bar\")).toHaveLength(1);\n  expect(barWithLifecycle.find(\".in-bar\").text()).toBe(\"1\");\n\n  const barWithoutLifecycle = wrapper.find(Bar).shallow({\n    disableLifecycleMethods: true\n  });\n  expect(barWithoutLifecycle.find(\".in-bar\")).toHaveLength(1);\n  expect(barWithoutLifecycle.find(\".in-bar\").text()).toBe(\"0\");\n});\n\ntest(\"dive\", () => {\n  function Bar() {\n    return (\n      <div>\n        <div className=\"in-bar\" />\n      </div>\n    );\n  }\n\n  function Foo() {\n    return (\n      <div>\n        <Bar />\n      </div>\n    );\n  }\n\n  const wrapper = shallow(<Foo />);\n  expect(wrapper.find(\".in-bar\")).toHaveLength(0);\n  expect(wrapper.find(Bar)).toHaveLength(1);\n  expect(\n    wrapper\n      .find(Bar)\n      .dive()\n      .find(\".in-bar\")\n  ).toHaveLength(1);\n});\n`.trim();\n\nconst fullDomOnly = `\nimport { mount } from \"enzyme\";\nimport PropTypes from \"prop-types\";\n\ntest(\"detach()\", () => {\n  function CustomComponent(props) {\n    return <div>Custom Component</div>;\n  }\n\n  document.body.innerHTML = '<div id=\"root\"></div>';\n  const attachHere = document.getElementById(\"root\");\n\n  const wrapper = mount(<CustomComponent></CustomComponent>, {\n    attachTo: attachHere\n  });\n\n  expect(document.body.innerHTML).toMatchInlineSnapshot(\n    '\"<div id=\\\\\"root\\\\\"><div>Custom Component</div></div>\"'\n  );\n\n  wrapper.detach();\n\n  expect(document.body.innerHTML).toMatchInlineSnapshot(\n    '\"<div id=\\\\\"root\\\\\"></div>\"'\n  );\n});\n\ntest(\"getDOMNode()\", () => {\n  const wrapper = mount(<div className=\"foo\"></div>);\n  const domNode = wrapper.getDOMNode();\n  expect(domNode).toHaveProperty(\"className\");\n});\n\ntest(\"mount() and unmount()\", () => {\n  const willMount = jest.fn();\n  const didMount = jest.fn();\n  const willUnmount = jest.fn();\n\n  class Foo extends React.Component {\n    constructor(props) {\n      super(props);\n      this.componentWillUnmount = willUnmount;\n      this.componentWillMount = willMount;\n      this.componentDidMount = didMount;\n    }\n\n    render() {\n      const { id } = this.props;\n      return <div className={id}>{id}</div>;\n    }\n  }\n\n  Foo.propTypes = {\n    id: PropTypes.string.isRequired\n  };\n\n  const wrapper = mount(<Foo id=\"foo\" />);\n\n  expect(willMount).toHaveBeenCalled();\n  expect(didMount).toHaveBeenCalled();\n  expect(willUnmount).not.toHaveBeenCalled();\n\n  wrapper.unmount();\n  expect(willMount).toHaveBeenCalledTimes(1);\n  expect(didMount).toHaveBeenCalledTimes(1);\n  expect(willUnmount).toHaveBeenCalledTimes(1);\n\n  wrapper.mount();\n  expect(willMount).toHaveBeenCalledTimes(2);\n  expect(didMount).toHaveBeenCalledTimes(2);\n  expect(willUnmount).toHaveBeenCalledTimes(1);\n});\n\ntest(\"ref(refName)\", () => {\n  class Foo extends React.Component {\n    render() {\n      return (\n        <div>\n          <span ref=\"firstRef\">First</span>\n          <span ref=\"secondRef\">Second</span>\n          <span ref=\"thirdRef\">Third</span>\n        </div>\n      );\n    }\n  }\n\n  const wrapper = mount(<Foo />);\n  expect(wrapper.ref(\"secondRef\").innerHTML).toBe(\"Second\");\n});\n`.trim();\n\n\n\nclass Enzymes3 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n            <Grid item xs={2}>\n                <Paper className={classes.paper}>\n                    <h4><Sidebar /></h4>\n                </Paper>\n            </Grid>\n    <Grid item xs={10}>\n    <Paper className={classes.paper}>\n    <List>\n      <h3>7-shallow-only-methods</h3>\n      <div style={titles}>\n      <PrismCode\n        code={shallowOnly}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      \n      <h3>8-full-dom-only-methods</h3>\n      <div style={titles}>\n      <PrismCode\n        code={fullDomOnly}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      </List>\n      </Paper>\n      </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Enzymes3));\n"]},"metadata":{},"sourceType":"module"}