{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var modules=\"\\nconst express = require('express');\\nconst app = express();\\nconst ejs = require('ejs');\\nconst Nexmo = require('nexmo');\\nconst socketio = require('socket.io');\\n\\n// Init Nexmo\\nconst nexmo = new Nexmo({\\n  apiKey: 'YOURAPIKEY',\\n  apiSecret: 'YOURAPISECRET'\\n}, { debug: true });\\n\\n// Template engine setup\\napp.set('view engine', 'html');\\napp.engine('html', ejs.renderFile);\\n\\n// Public folder setup\\napp.use(express.static(__dirname + '/public'));\\napp.use(express.json());\\napp.use(express.urlencoded({ extended: true }));\\n\\n// Index route\\napp.get('/', (req, res) => {\\n  res.render('index');\\n});\\n\\n// Catch form submit\\napp.post('/', (req, res) => {\\n  // res.send(req.body);\\n  const { number, text } = req.body;\\n\\n  nexmo.message.sendSms(\\n    'YOURVURTUALNUMBER', number, text, { type: 'unicode' },\\n    (err, responseData) => {\\n      if(err) {\\n        console.log(err);\\n      } else {\\n        const { messages } = responseData;\\n        const { ['message-id']: id, ['to']: number, ['error-text']: error  } = messages[0];\\n        console.dir(responseData);\\n        // Get data from response\\n        const data = {\\n          id,\\n          number,\\n          error\\n        };\\n\\n        // Emit to the client\\n        io.emit('smsStatus', data);\\n      }\\n    }\\n  );\\n});\\n\\n\\nconst port = 5000;\\nconst server = app.listen(port, () => console.log('Server started on port.'));\\n\\n// Connect to socket.io\\nconst io = socketio(server);\\nio.on('connection', (socket) => {\\n  console.log('Connected');\\n  io.on('disconnect', () => {\\n    console.log('Disconnected');\\n  })\\n});\\n\".trim();var views=\"\\n<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n  <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\">\\n  <link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/skeleton/2.0.4/skeleton.css\\\" />\\n  <title>Node SMS Texting</title>\\n</head>\\n<body>\\n  <div class=\\\"container\\\">\\n    <h2>Send SMS Message</h2>\\n    <input type=\\\"tel\\\" name=\\\"number\\\" id=\\\"number\\\" placeholder=\\\"Enter Phone Number...\\\">\\n    <input type=\\\"text\\\" name=\\\"msg\\\" id=\\\"msg\\\" placeholder=\\\"Enter Text Message...\\\">\\n    <select name=\\\"schedule\\\" id=\\\"schedule\\\">\\n      <option value=\\\"0\\\">Schedule time to send a message</option>\\n      <option value=\\\"1\\\">After 1 minutes</option>\\n      <option value=\\\"3\\\">After 3 minutes</option>\\n      <option value=\\\"5\\\">After 5 minutes</option>\\n    </select>\\n    <input type=\\\"button\\\" id=\\\"button\\\" value=\\\"Send Text\\\" class=\\\"button button-primary\\\">\\n    <p class=\\\"response\\\"></p>\\n  </div>\\n\\n  <script src=\\\"/socket.io/socket.io.js\\\"></script>\\n  <script src=\\\"js/main.js\\\"></script>\\n</body>\\n</html>\".trim();var Nodetext=/*#__PURE__*/function(_Component){_inherits(Nodetext,_Component);function Nodetext(){_classCallCheck(this,Nodetext);return _possibleConstructorReturn(this,_getPrototypeOf(Nodetext).apply(this,arguments));}_createClass(Nodetext,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Nodetext App\"),React.createElement(\"b\",null,\"server.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:modules,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"views/index.html\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:views,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return Nodetext;}(Component);export default withStyles(styles)(Nodetext);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/nodeJs/nodeDeep/nodetext.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","modules","trim","views","Nodetext","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAGA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADgB,CAKvBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALa,CAQvBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARY,CAAL,EAApB,CAcA,GAAMC,CAAAA,OAAO,CAAG,skDAmEdC,IAnEc,EAAhB,CAqEA,GAAMC,CAAAA,KAAK,CAAG,koCA4BLD,IA5BK,EAAd,C,GA+BME,CAAAA,Q,gSACgB,CAClBC,UAAU,CAAC,iBAAMvB,CAAAA,KAAK,CAACwB,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACZ,KAA1B,EACE,8BAAI,oBAAC,OAAD,MAAJ,CADF,CADF,CADF,CAME,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEY,OAAO,CAACZ,KAA1B,EACE,oBAAC,IAAD,MACE,6CADF,CAEE,yCAFF,CAGE,2BAAK,KAAK,CAAEN,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEY,OADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAHF,CAUE,8BAVF,CAWE,8BAXF,CAaE,gDAbF,CAcE,2BAAK,KAAK,CAAEZ,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEc,KADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAdF,CADF,CADF,CANF,CADF,CAmCD,C,sBAzCoBtB,S,EA4CvB,cAAgBI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBW,QAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst modules = `\nconst express = require('express');\nconst app = express();\nconst ejs = require('ejs');\nconst Nexmo = require('nexmo');\nconst socketio = require('socket.io');\n\n// Init Nexmo\nconst nexmo = new Nexmo({\n  apiKey: 'YOURAPIKEY',\n  apiSecret: 'YOURAPISECRET'\n}, { debug: true });\n\n// Template engine setup\napp.set('view engine', 'html');\napp.engine('html', ejs.renderFile);\n\n// Public folder setup\napp.use(express.static(__dirname + '/public'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\n// Index route\napp.get('/', (req, res) => {\n  res.render('index');\n});\n\n// Catch form submit\napp.post('/', (req, res) => {\n  // res.send(req.body);\n  const { number, text } = req.body;\n\n  nexmo.message.sendSms(\n    'YOURVURTUALNUMBER', number, text, { type: 'unicode' },\n    (err, responseData) => {\n      if(err) {\n        console.log(err);\n      } else {\n        const { messages } = responseData;\n        const { ['message-id']: id, ['to']: number, ['error-text']: error  } = messages[0];\n        console.dir(responseData);\n        // Get data from response\n        const data = {\n          id,\n          number,\n          error\n        };\n\n        // Emit to the client\n        io.emit('smsStatus', data);\n      }\n    }\n  );\n});\n\n\nconst port = 5000;\nconst server = app.listen(port, () => console.log('Server started on port.'));\n\n// Connect to socket.io\nconst io = socketio(server);\nio.on('connection', (socket) => {\n  console.log('Connected');\n  io.on('disconnect', () => {\n    console.log('Disconnected');\n  })\n});\n`.trim();\n\nconst views = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/skeleton/2.0.4/skeleton.css\" />\n  <title>Node SMS Texting</title>\n</head>\n<body>\n  <div class=\"container\">\n    <h2>Send SMS Message</h2>\n    <input type=\"tel\" name=\"number\" id=\"number\" placeholder=\"Enter Phone Number...\">\n    <input type=\"text\" name=\"msg\" id=\"msg\" placeholder=\"Enter Text Message...\">\n    <select name=\"schedule\" id=\"schedule\">\n      <option value=\"0\">Schedule time to send a message</option>\n      <option value=\"1\">After 1 minutes</option>\n      <option value=\"3\">After 3 minutes</option>\n      <option value=\"5\">After 5 minutes</option>\n    </select>\n    <input type=\"button\" id=\"button\" value=\"Send Text\" class=\"button button-primary\">\n    <p class=\"response\"></p>\n  </div>\n\n  <script src=\"/socket.io/socket.io.js\"></script>\n  <script src=\"js/main.js\"></script>\n</body>\n</html>`.trim();\n\n\nclass Nodetext extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Nodetext App</h3>\n              <b>server.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={modules}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>views/index.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={views}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Nodetext));\n"]},"metadata":{},"sourceType":"module"}