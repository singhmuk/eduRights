{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var sendControllers=\"\\nconst nodemailer = require('nodemailer');\\nconst sgMail = require('@sendgrid/mail');\\n\\nconst sendEmailEthereal = async (req, res) => {\\n  let testAccount = await nodemailer.createTestAccount();\\n\\n  const transporter = nodemailer.createTransport({\\n    host: 'smtp.ethereal.email',\\n    port: 587,\\n    auth: {\\n      user: 'marlene.legros@ethereal.email',\\n      pass: 'va4q5BKKtry7aq58Gv',\\n    },\\n  });\\n\\n  let info = await transporter.sendMail({\\n    from: '\\\"Coding Addict\\\" <codingaddict@gmail.com>',\\n    to: 'bar@example.com',\\n    subject: 'Hello',\\n    html: '<h2>Sending Emails with Node.js</h2>',\\n  });\\n\\n  res.json(info);\\n};\\n\\nconst sendEmail = async (req, res) => {\\n  sgMail.setApiKey(process.env.SENDGRID_API_KEY);\\n  const msg = {\\n    to: 'learncode@mail.com', // Change to your recipient\\n    from: 'learncodetutorial@gmail.com', // Change to your verified sender\\n    subject: 'Sending with SendGrid is Fun',\\n    text: 'and easy to do anywhere, even with Node.js',\\n    html: '<strong>and easy to do anywhere, even with Node.js</strong>',\\n  };\\n  const info = await sgMail.send(msg);\\n  res.json(info);\\n};\\n\\nmodule.exports = sendEmail;\\n\".trim();var server=\"\\nrequire('dotenv').config();\\nrequire('express-async-errors');\\nconst dbCon = require('./db/db');\\nconst sendEmail = require('./controllers/sendEmail');\\nconst notFoundMiddleware = require('./middleware/not-found');\\nconst errorHandlerMiddleware = require('./middleware/error-handler');\\n\\n\\ndbCon;\\napp.get('/send', sendEmail);\\n\\napp.use(notFoundMiddleware);\\napp.use(errorHandlerMiddleware);\\n\".trim();var SendEmail=/*#__PURE__*/function(_Component){_inherits(SendEmail,_Component);function SendEmail(){_classCallCheck(this,SendEmail);return _possibleConstructorReturn(this,_getPrototypeOf(SendEmail).apply(this,arguments));}_createClass(SendEmail,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Send Email\"),React.createElement(\"b\",null,\"controllers/sendEmail.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:sendControllers,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"server.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:server,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return SendEmail;}(Component);export default withStyles(styles)(SendEmail);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/nodeJs/nodeDeep/sendEmail.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","sendControllers","trim","server","SendEmail","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAGA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADgB,CAKvBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALa,CAQvBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARY,CAAL,EAApB,CAcA,GAAMC,CAAAA,eAAe,CAAG,qpCAwCtBC,IAxCsB,EAAxB,CA0CA,GAAMC,CAAAA,MAAM,CAAG,gZAcbD,IAda,EAAf,C,GAiBME,CAAAA,S,qSACgB,CAClBC,UAAU,CAAC,iBAAMvB,CAAAA,KAAK,CAACwB,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACZ,KAA1B,EACE,8BAAI,oBAAC,OAAD,MAAJ,CADF,CADF,CADF,CAME,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEY,OAAO,CAACZ,KAA1B,EACE,oBAAC,IAAD,MACE,2CADF,CAEE,wDAFF,CAGE,2BAAK,KAAK,CAAEN,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEY,eADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAHF,CAUE,8BAVF,CAWE,8BAXF,CAaE,yCAbF,CAcE,2BAAK,KAAK,CAAEZ,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEc,MADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAdF,CADF,CADF,CANF,CADF,CAmCD,C,uBAzCqBtB,S,EA4CxB,cAAgBI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBW,SAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst sendControllers = `\nconst nodemailer = require('nodemailer');\nconst sgMail = require('@sendgrid/mail');\n\nconst sendEmailEthereal = async (req, res) => {\n  let testAccount = await nodemailer.createTestAccount();\n\n  const transporter = nodemailer.createTransport({\n    host: 'smtp.ethereal.email',\n    port: 587,\n    auth: {\n      user: 'marlene.legros@ethereal.email',\n      pass: 'va4q5BKKtry7aq58Gv',\n    },\n  });\n\n  let info = await transporter.sendMail({\n    from: '\"Coding Addict\" <codingaddict@gmail.com>',\n    to: 'bar@example.com',\n    subject: 'Hello',\n    html: '<h2>Sending Emails with Node.js</h2>',\n  });\n\n  res.json(info);\n};\n\nconst sendEmail = async (req, res) => {\n  sgMail.setApiKey(process.env.SENDGRID_API_KEY);\n  const msg = {\n    to: 'learncode@mail.com', // Change to your recipient\n    from: 'learncodetutorial@gmail.com', // Change to your verified sender\n    subject: 'Sending with SendGrid is Fun',\n    text: 'and easy to do anywhere, even with Node.js',\n    html: '<strong>and easy to do anywhere, even with Node.js</strong>',\n  };\n  const info = await sgMail.send(msg);\n  res.json(info);\n};\n\nmodule.exports = sendEmail;\n`.trim();\n\nconst server = `\nrequire('dotenv').config();\nrequire('express-async-errors');\nconst dbCon = require('./db/db');\nconst sendEmail = require('./controllers/sendEmail');\nconst notFoundMiddleware = require('./middleware/not-found');\nconst errorHandlerMiddleware = require('./middleware/error-handler');\n\n\ndbCon;\napp.get('/send', sendEmail);\n\napp.use(notFoundMiddleware);\napp.use(errorHandlerMiddleware);\n`.trim();\n\n\nclass SendEmail extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Send Email</h3>\n              <b>controllers/sendEmail.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={sendControllers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>server.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={server}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(SendEmail));\n"]},"metadata":{},"sourceType":"module"}