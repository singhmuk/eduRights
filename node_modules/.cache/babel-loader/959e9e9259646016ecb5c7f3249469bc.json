{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../styles.css';import Sidebar from'../sidebar';import PrismCode from'../prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var multiState=\"\\nconst Score = () => {\\n  const [teamScores, setTeamScores] = useState({\\n    currentScore: 0,\\n    totalScore: 308,\\n    totalOvers: 1,\\n    netRunRate: 6.5,\\n    netRunRate2: 6.0,\\n  });\\n\\n  const [seconds, setSeconds] = useState(0);\\n  const [isActive, setIsActive] = useState(false);\\n  const [balls, setBalls] = useState(6);\\n  const [overs, setOvers] = useState(['0', '1', '2', '3', '4', '5', '6', 'wk', 'wd', 'nb'])\\n\\n  const toggle = () => {\\n    setIsActive(!isActive);\\n  }\\n  \\n  // const handleCount = () => {\\n  //   if (balls >= 1) {\\n  //     setBalls([balls - 1, teamScores.isPlay=true])\\n  //   }\\n  // }\\n\\n  useEffect(() => {\\n    let interval = null;\\n    if (isActive && seconds <= 3) {\\n      interval = setInterval(() => {\\n        setSeconds(seconds => seconds + 1);\\n        if(balls>0){\\n          setBalls(balls - 1);\\n          setOvers([...overs, {\\n          id: overs.length,\\n          values: overs[Math.floor(Math.random() * overs.length)]+\\\"\\\"\\n          }])\\n        }\\n      }, 1000);\\n    } \\n    else if (seconds === 4) {\\n      setSeconds(0);\\n    }\\n    \\n    return () => clearInterval(interval);\\n  }, [isActive, seconds, overs]);\\n  \\n  \\n  const lastScore = overs[Math.floor(Math.random() * overs.length)];\\n\\n  return (\\n    <div>\\n      <div>\\n        <h3>Total Score: {teamScores.totalScore}</h3>\\n        <p>Total Overs: {teamScores.totalOvers}</p>\\n        <p>Current Run Rate: {teamScores.netRunRate2}</p>\\n        <b>Remaining Balls: {balls}</b>\\n      </div>\\n\\n        <button\\n          className={''$'{ isActive ?\\\"active\\\": \\\"inactive\\\"}'} onClick={toggle}>\\n          {isActive ? \\\"Pause\\\" : \\\"Start\\\"}\\n        </button>\\n    </div>\\n  )\\n}\\n\".trim();var useReducers=\"\\nimport { useCallback, useState, useEffect } from \\\"react\\\";\\n\\n\\nfunction Child({ returnComment }) {\\n  useEffect(() => {\\n  }, [returnComment]);\\n\\n  return <div>{returnComment(\\\"Pedro\\\")}</div>;\\n}\\n\\nexport default function CallBackTutorial() {\\n  const [toggle, setToggle] = useState(false);\\n  const [data, setData] = useState(\\\"Yo, pls sub to the channel!\\\");\\n\\n  const returnComment = useCallback(\\n    (name) => {\\n      return data + name;\\n    },\\n    [data]\\n  );\\n\\n  return (\\n    <div className=\\\"App\\\">\\n      <Child returnComment={returnComment} />\\n\\n      <button\\n        onClick={() => {\\n          setToggle(!toggle);\\n        }}\\n      >\\n        {\\\" \\\"}\\n        Toggle\\n      </button>\\n      {toggle && <h1> toggle </h1>}\\n    </div>\\n  );\\n}\\n\".trim();var UseImperativeHandles=\"\\nimport React, { forwardRef, useImperativeHandle, useState, useRef } from \\\"react\\\";\\n\\n\\nconst Button = forwardRef((props, ref) => {\\n  const [toggle, setToggle] = useState(false);\\n\\n  useImperativeHandle(ref, () => ({\\n    alterToggle() {\\n      setToggle(!toggle);\\n    },\\n  }));\\n  return (\\n    <>\\n      <button>Button From Child</button>\\n      {toggle && <span>Toggle</span>}\\n    </>\\n  );\\n});\\n\\nfunction ImperativeHandle() {\\n  const buttonRef = useRef(null);\\n  return (\\n    <div>\\n      <button\\n        onClick={() => {\\n          buttonRef.current.alterToggle();\\n        }}\\n      >\\n        Button From Parent\\n      </button>\\n      <Button ref={buttonRef} />\\n    </div>\\n  );\\n}\\n\\nexport default ImperativeHandle;\\n\".trim();var UseLayoutEffects=\"\\nimport { useLayoutEffect, useEffect, useRef } from \\\"react\\\";\\n\\nfunction LayoutEffectTutorial() {\\n  const inputRef = useRef(null);\\n\\n  useLayoutEffect(() => {\\n    console.log(inputRef.current.value);\\n  }, []);\\n\\n  useEffect(() => {\\n    inputRef.current.value = \\\"HELLO\\\";\\n  }, []);\\n\\n  return (\\n    <div className=\\\"App\\\">\\n      <input ref={inputRef} value=\\\"PEDRO\\\" style={{ width: 400, height: 60 }} />\\n    </div>\\n  );\\n}\".trim();var UseReducers=/*#__PURE__*/function(_Component){_inherits(UseReducers,_Component);function UseReducers(){_classCallCheck(this,UseReducers);return _possibleConstructorReturn(this,_getPrototypeOf(UseReducers).apply(this,arguments));}_createClass(UseReducers,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"1. MultiState\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:multiState,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"2. useCallback\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:useReducers,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"3. UseImperativeHandle\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:UseImperativeHandles,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"4. UseLayoutEffect\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:UseLayoutEffects,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return UseReducers;}(Component);export default withStyles(styles)(UseReducers);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/useStates.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","multiState","trim","useReducers","UseImperativeHandles","UseLayoutEffects","UseReducers","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst multiState = `\nconst Score = () => {\n  const [teamScores, setTeamScores] = useState({\n    currentScore: 0,\n    totalScore: 308,\n    totalOvers: 1,\n    netRunRate: 6.5,\n    netRunRate2: 6.0,\n  });\n\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [balls, setBalls] = useState(6);\n  const [overs, setOvers] = useState(['0', '1', '2', '3', '4', '5', '6', 'wk', 'wd', 'nb'])\n\n  const toggle = () => {\n    setIsActive(!isActive);\n  }\n  \n  // const handleCount = () => {\n  //   if (balls >= 1) {\n  //     setBalls([balls - 1, teamScores.isPlay=true])\n  //   }\n  // }\n\n  useEffect(() => {\n    let interval = null;\n    if (isActive && seconds <= 3) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds + 1);\n        if(balls>0){\n          setBalls(balls - 1);\n          setOvers([...overs, {\n          id: overs.length,\n          values: overs[Math.floor(Math.random() * overs.length)]+\"\"\n          }])\n        }\n      }, 1000);\n    } \n    else if (seconds === 4) {\n      setSeconds(0);\n    }\n    \n    return () => clearInterval(interval);\n  }, [isActive, seconds, overs]);\n  \n  \n  const lastScore = overs[Math.floor(Math.random() * overs.length)];\n\n  return (\n    <div>\n      <div>\n        <h3>Total Score: {teamScores.totalScore}</h3>\n        <p>Total Overs: {teamScores.totalOvers}</p>\n        <p>Current Run Rate: {teamScores.netRunRate2}</p>\n        <b>Remaining Balls: {balls}</b>\n      </div>\n\n        <button\n          className={''$'{ isActive ?\"active\": \"inactive\"}'} onClick={toggle}>\n          {isActive ? \"Pause\" : \"Start\"}\n        </button>\n    </div>\n  )\n}\n`.trim();\n\nconst useReducers = `\nimport { useCallback, useState, useEffect } from \"react\";\n\n\nfunction Child({ returnComment }) {\n  useEffect(() => {\n  }, [returnComment]);\n\n  return <div>{returnComment(\"Pedro\")}</div>;\n}\n\nexport default function CallBackTutorial() {\n  const [toggle, setToggle] = useState(false);\n  const [data, setData] = useState(\"Yo, pls sub to the channel!\");\n\n  const returnComment = useCallback(\n    (name) => {\n      return data + name;\n    },\n    [data]\n  );\n\n  return (\n    <div className=\"App\">\n      <Child returnComment={returnComment} />\n\n      <button\n        onClick={() => {\n          setToggle(!toggle);\n        }}\n      >\n        {\" \"}\n        Toggle\n      </button>\n      {toggle && <h1> toggle </h1>}\n    </div>\n  );\n}\n`.trim();\n\nconst UseImperativeHandles = `\nimport React, { forwardRef, useImperativeHandle, useState, useRef } from \"react\";\n\n\nconst Button = forwardRef((props, ref) => {\n  const [toggle, setToggle] = useState(false);\n\n  useImperativeHandle(ref, () => ({\n    alterToggle() {\n      setToggle(!toggle);\n    },\n  }));\n  return (\n    <>\n      <button>Button From Child</button>\n      {toggle && <span>Toggle</span>}\n    </>\n  );\n});\n\nfunction ImperativeHandle() {\n  const buttonRef = useRef(null);\n  return (\n    <div>\n      <button\n        onClick={() => {\n          buttonRef.current.alterToggle();\n        }}\n      >\n        Button From Parent\n      </button>\n      <Button ref={buttonRef} />\n    </div>\n  );\n}\n\nexport default ImperativeHandle;\n`.trim();\n\nconst UseLayoutEffects = `\nimport { useLayoutEffect, useEffect, useRef } from \"react\";\n\nfunction LayoutEffectTutorial() {\n  const inputRef = useRef(null);\n\n  useLayoutEffect(() => {\n    console.log(inputRef.current.value);\n  }, []);\n\n  useEffect(() => {\n    inputRef.current.value = \"HELLO\";\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <input ref={inputRef} value=\"PEDRO\" style={{ width: 400, height: 60 }} />\n    </div>\n  );\n}`.trim();\n\nclass UseReducers extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. MultiState</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={multiState}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>2. useCallback</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={useReducers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>3. UseImperativeHandle</b>\n              <div style={titles}>\n                <PrismCode\n                  code={UseImperativeHandles}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>4. UseLayoutEffect</b>\n              <div style={titles}>\n                <PrismCode\n                  code={UseLayoutEffects}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(UseReducers));\n"]},"metadata":{},"sourceType":"module"}