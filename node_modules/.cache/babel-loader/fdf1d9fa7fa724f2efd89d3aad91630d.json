{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/javaScripts/deepJs/logic2.js\";\nimport React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport \"../../ReactJs/styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../../ReactJs/prismCode\";\nconst titles = {\n  backgroundColor: \"#F0F8FF\",\n  padding: \"1px\",\n  fontSize: \"16px\"\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst insersonSort = `\nfunction fun() {\n  const arr = [3, 5, 1, 9, 6, 2, 1, -1];\n  const hashSet = new Set(arr);\n  const result = [...hashSet].sort((a, b) => a - b);\n  console.log(result);\n}\n\nfun();\n`.trim();\nconst mergSort = `\nfunction removeDup() {\n  const arr = [1, 2, 3, 4, 3,2,1];\n  const hash = {};\n  const result = [];\n  \n  for (let i = 0; i < arr.length; i++) {\n    if (hash[arr[i]]) {\n      hash[arr[i]]++;\n    } else {\n      hash[arr[i]] = 1;\n    }\n  }\n  \n  for (let i = 0; i < arr.length; i++) {\n    if (hash[arr[i]] === 1) {\n      result.push(arr[i]);\n    }\n  }\n  \n  console.log(result);\n}\n\nremoveDup();\n`.trim();\nconst quicksort = `\nfunction uniqueWords(arr) {\n  if (arr.length === 0) {\n    return [];\n  }\n\n  const currentWord = arr[0];\n  const remainingWords = arr.slice(1);\n  const uniqueRemainingWords = uniqueWords(remainingWords);\n\n  if (!uniqueRemainingWords.includes(currentWord)) {\n    return [currentWord, ...uniqueRemainingWords];\n  }\n\n  return uniqueRemainingWords;\n}\n\nfunction removeDup() {\n  const arr = [1, 2, 3, 4, 3, 2, 1, 0];\n  const uniqueArr = uniqueWords(arr);\n\n  console.log(uniqueArr);\n}\n\nremoveDup();\n`.trim();\nconst selectionSort = `\nfunction sorts(arr) {\n  if (arr.length <= 1) return arr;\n\n  const pivot = arr[Math.floor(Math.random() * arr.length)];\n  const left = [], equal = [], right = [];\n\n  for (let num of arr) {\n    if (num < pivot) {\n      left.push(num);\n    } else if (num === pivot) {\n      equal.push(num);\n    } else {\n      right.push(num);\n    }\n  }\n\n  return [...sorts(left), ...equal, ...sorts(right)];\n}\n\nconst arr = [0, 9, 8, 7, 6];\nconsole.log(sorts(arr));\n`.trim();\nconst Permutations = `\nfunction combiSum(arr, num) {\n  const result = [];\n  const sum = new Set();\n\n  for (let i = 0; i < arr.length; i++) {\n    const ele = num - arr[i];\n    if (sum.has(ele)) {\n      result.push([arr[i], ele]);\n    }\n    sum.add(arr[i]);\n  }\n\n  console.log(result);\n}\n\ncombiSum([2, 1, 4, 3, 5], 7);\n`.trim();\nconst amount = `\nfunction getCount() {\n  var str = 'appleo';\n  var hash = {};\n\n  for (var i = 0; i < str.length; i++) {\n    var char = str[i].toLowerCase();\n    if ('aeiou'.includes(char)) {\n      if (hash[char]) {\n        hash[char]++;\n      } else {\n        hash[char] = 1;\n      }\n    }\n  }\n\n  var obj = new Map(Object.entries(hash));\n  console.log(obj);\n}\n\ngetCount();\n`.trim();\nconst armstrong = `function fun(num) {\n  const newnum = num.toString().split('');\n  const hash = newnum.reduce((sum, digit) => {\n    const cube = Math.pow(parseInt(digit), newnum.length);\n    return sum + cube;\n  }, 0);\n\n  if (hash === num) {\n    return { type: 'Armstrong', hash: hash };\n  } else {\n    return { type: 'Not Armstrong', hash: hash };\n  }\n}\n\nconst hash = fun(153);\nconsole.log(hash); `.trim();\nconst satisfy = `\n`.trim();\nconst generates = `\n`.trim();\n\nclass Logic2 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"1. Armstrong Number\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: armstrong,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"5. Combination Sum.\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: Permutations,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"6. Occurence of vowel.\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: amount,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"7. Sort an Array\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: insersonSort,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"8. Unique Character\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: mergSort,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"9. Remove Duplicate words Recursion\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: quicksort,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"10. Sort Recursion\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: selectionSort,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"11.\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: satisfy,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"12. \"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: generates,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(Logic2);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/javaScripts/deepJs/logic2.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","insersonSort","trim","mergSort","quicksort","selectionSort","Permutations","amount","armstrong","satisfy","generates","Logic2","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport \"../../ReactJs/styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../../ReactJs/prismCode\";\n\nconst titles = { backgroundColor: \"#F0F8FF\", padding: \"1px\", fontSize: \"16px\" };\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n});\n\n\nconst insersonSort = `\nfunction fun() {\n  const arr = [3, 5, 1, 9, 6, 2, 1, -1];\n  const hashSet = new Set(arr);\n  const result = [...hashSet].sort((a, b) => a - b);\n  console.log(result);\n}\n\nfun();\n`.trim();\n\nconst mergSort = `\nfunction removeDup() {\n  const arr = [1, 2, 3, 4, 3,2,1];\n  const hash = {};\n  const result = [];\n  \n  for (let i = 0; i < arr.length; i++) {\n    if (hash[arr[i]]) {\n      hash[arr[i]]++;\n    } else {\n      hash[arr[i]] = 1;\n    }\n  }\n  \n  for (let i = 0; i < arr.length; i++) {\n    if (hash[arr[i]] === 1) {\n      result.push(arr[i]);\n    }\n  }\n  \n  console.log(result);\n}\n\nremoveDup();\n`.trim();\n\nconst quicksort = `\nfunction uniqueWords(arr) {\n  if (arr.length === 0) {\n    return [];\n  }\n\n  const currentWord = arr[0];\n  const remainingWords = arr.slice(1);\n  const uniqueRemainingWords = uniqueWords(remainingWords);\n\n  if (!uniqueRemainingWords.includes(currentWord)) {\n    return [currentWord, ...uniqueRemainingWords];\n  }\n\n  return uniqueRemainingWords;\n}\n\nfunction removeDup() {\n  const arr = [1, 2, 3, 4, 3, 2, 1, 0];\n  const uniqueArr = uniqueWords(arr);\n\n  console.log(uniqueArr);\n}\n\nremoveDup();\n`.trim();\n\nconst selectionSort = `\nfunction sorts(arr) {\n  if (arr.length <= 1) return arr;\n\n  const pivot = arr[Math.floor(Math.random() * arr.length)];\n  const left = [], equal = [], right = [];\n\n  for (let num of arr) {\n    if (num < pivot) {\n      left.push(num);\n    } else if (num === pivot) {\n      equal.push(num);\n    } else {\n      right.push(num);\n    }\n  }\n\n  return [...sorts(left), ...equal, ...sorts(right)];\n}\n\nconst arr = [0, 9, 8, 7, 6];\nconsole.log(sorts(arr));\n`.trim();\n\nconst Permutations = `\nfunction combiSum(arr, num) {\n  const result = [];\n  const sum = new Set();\n\n  for (let i = 0; i < arr.length; i++) {\n    const ele = num - arr[i];\n    if (sum.has(ele)) {\n      result.push([arr[i], ele]);\n    }\n    sum.add(arr[i]);\n  }\n\n  console.log(result);\n}\n\ncombiSum([2, 1, 4, 3, 5], 7);\n`.trim();\n\nconst amount = `\nfunction getCount() {\n  var str = 'appleo';\n  var hash = {};\n\n  for (var i = 0; i < str.length; i++) {\n    var char = str[i].toLowerCase();\n    if ('aeiou'.includes(char)) {\n      if (hash[char]) {\n        hash[char]++;\n      } else {\n        hash[char] = 1;\n      }\n    }\n  }\n\n  var obj = new Map(Object.entries(hash));\n  console.log(obj);\n}\n\ngetCount();\n`.trim();\n\nconst armstrong = `function fun(num) {\n  const newnum = num.toString().split('');\n  const hash = newnum.reduce((sum, digit) => {\n    const cube = Math.pow(parseInt(digit), newnum.length);\n    return sum + cube;\n  }, 0);\n\n  if (hash === num) {\n    return { type: 'Armstrong', hash: hash };\n  } else {\n    return { type: 'Not Armstrong', hash: hash };\n  }\n}\n\nconst hash = fun(153);\nconsole.log(hash); `.trim(); \n\nconst satisfy = `\n`.trim();\n\nconst generates = `\n`.trim();\n\nclass Logic2 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4>\n              <Sidebar />\n            </h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. Armstrong Number</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={armstrong}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>5. Combination Sum.</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Permutations}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>6. Occurence of vowel.</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={amount}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>7. Sort an Array</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={insersonSort}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>8. Unique Character</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={mergSort}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>9. Remove Duplicate words Recursion</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={quicksort}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>10. Sort Recursion</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={selectionSort}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>11.</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={satisfy}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>12. </h3>\n              <div style={titles}>\n                <PrismCode\n                  code={generates}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Logic2);\n"]},"metadata":{},"sourceType":"module"}