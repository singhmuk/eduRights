{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/pythone/deeppy/tkinter.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst button = `\nimport tkinter as tk\n\nr = tk.Tk()\nr.title('Counting Seconds')\nbutton = tk.Button(r, text='Stop', width=25, command=r.destroy)\nbutton.pack()\nr.mainloop()\n\n\n#\nfrom tkinter import *\n\nroot = Tk()\nframe = Frame(root)\nframe.pack()\nbottomframe = Frame(root)\nbottomframe.pack(side=BOTTOM)\nredbutton = Button(frame, text='Red', fg='red')\nredbutton.pack(side=LEFT)\ngreenbutton = Button(frame, text='Brown', fg='brown')\ngreenbutton.pack(side=LEFT)\nbluebutton = Button(frame, text='Blue', fg='blue')\nbluebutton.pack(side=LEFT)\nblackbutton = Button(bottomframe, text='Black', fg='black')\nblackbutton.pack(side=BOTTOM)\nroot.mainloop()`.trim();\nconst checkbox = `\nfrom tkinter import *\nmaster = Tk()\nvar1 = IntVar()\nCheckbutton(master, text='male', variable=var1).grid(row=0, sticky=W)\nvar2 = IntVar()\nCheckbutton(master, text='female', variable=var2).grid(row=1, sticky=W)\nmainloop()`.trim();\nconst inputField = `\n\nfrom tkinter import *\nmaster = Tk()\nLabel(master, text='First Name').grid(row=0)\nLabel(master, text='Last Name').grid(row=1)\ne1 = Entry(master)\ne2 = Entry(master)\ne1.grid(row=0, column=1)\ne2.grid(row=1, column=1)\nmainloop()\n\n\n# Display text\nfrom tkinter import *\nroot = Tk()\nw = Label(root, text='GeeksForGeeks.org!')\nw.pack()\nroot.mainloop()\n\n\n# Number\nfrom tkinter import *\nmaster = Tk()\nw = Spinbox(master, from_ = 0, to = 10)\nw.pack()\nmainloop()`.trim();\nconst menus = `\nfrom tkinter import *\n\nroot = Tk()\nmenu = Menu(root)\nroot.config(menu=menu)\nfilemenu = Menu(menu)\nmenu.add_cascade(label='File', menu=filemenu)\nfilemenu.add_command(label='New')\nfilemenu.add_command(label='Open...')\nfilemenu.add_separator()\nfilemenu.add_command(label='Exit', command=root.quit)\nhelpmenu = Menu(menu)\nmenu.add_cascade(label='Help', menu=helpmenu)\nhelpmenu.add_command(label='About')\nmainloop()`.trim();\nconst radio = `\nfrom tkinter import *\nroot = Tk()\nv = IntVar()\nRadiobutton(root, text='GfG', variable=v, value=1).pack(anchor=W)\nRadiobutton(root, text='MIT', variable=v, value=2).pack(anchor=W)\nmainloop()`.trim();\nconst scale = `\nfrom tkinter import *\nmaster = Tk()\nw = Scale(master, from_=0, to=42)\nw.pack()\nw = Scale(master, from_=0, to=200, orient=HORIZONTAL)\nw.pack()\nmainloop()`.trim();\n\nclass Tkinter extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"What do you understand by Tkinter?\"), \"Tkinter is an in-built Python module that is used to create GUI applications. It is Python\\u2019s standard toolkit for GUI development.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), \"Python provides various options for developing GUIs. Most important are listed below.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Tkinter \\u2212\"), \" Tkinter is the Python interface to the Tk GUI toolkit shipped with Python.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"wxPython \\u2212\"), \" Is an open-source Python interface for wxWindows.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"JPython \\u2212\"), \" Is a Python port for Java which gives Python scripts seamless access to Java class libraries on the local machine\")), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"1. Button\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: button,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"2. Checkbox\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: checkbox,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"3. Input Fields\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: inputField,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"4. Menu\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: menus,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"5. Radio\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: radio,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"6. Scale\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: scale,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(Tkinter);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/pythone/deeppy/tkinter.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","button","trim","checkbox","inputField","menus","radio","scale","Tkinter","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst button = `\nimport tkinter as tk\n\nr = tk.Tk()\nr.title('Counting Seconds')\nbutton = tk.Button(r, text='Stop', width=25, command=r.destroy)\nbutton.pack()\nr.mainloop()\n\n\n#\nfrom tkinter import *\n\nroot = Tk()\nframe = Frame(root)\nframe.pack()\nbottomframe = Frame(root)\nbottomframe.pack(side=BOTTOM)\nredbutton = Button(frame, text='Red', fg='red')\nredbutton.pack(side=LEFT)\ngreenbutton = Button(frame, text='Brown', fg='brown')\ngreenbutton.pack(side=LEFT)\nbluebutton = Button(frame, text='Blue', fg='blue')\nbluebutton.pack(side=LEFT)\nblackbutton = Button(bottomframe, text='Black', fg='black')\nblackbutton.pack(side=BOTTOM)\nroot.mainloop()`.trim();\n\nconst checkbox = `\nfrom tkinter import *\nmaster = Tk()\nvar1 = IntVar()\nCheckbutton(master, text='male', variable=var1).grid(row=0, sticky=W)\nvar2 = IntVar()\nCheckbutton(master, text='female', variable=var2).grid(row=1, sticky=W)\nmainloop()`.trim();\n\nconst inputField = `\n\nfrom tkinter import *\nmaster = Tk()\nLabel(master, text='First Name').grid(row=0)\nLabel(master, text='Last Name').grid(row=1)\ne1 = Entry(master)\ne2 = Entry(master)\ne1.grid(row=0, column=1)\ne2.grid(row=1, column=1)\nmainloop()\n\n\n# Display text\nfrom tkinter import *\nroot = Tk()\nw = Label(root, text='GeeksForGeeks.org!')\nw.pack()\nroot.mainloop()\n\n\n# Number\nfrom tkinter import *\nmaster = Tk()\nw = Spinbox(master, from_ = 0, to = 10)\nw.pack()\nmainloop()`.trim();\n\nconst menus = `\nfrom tkinter import *\n\nroot = Tk()\nmenu = Menu(root)\nroot.config(menu=menu)\nfilemenu = Menu(menu)\nmenu.add_cascade(label='File', menu=filemenu)\nfilemenu.add_command(label='New')\nfilemenu.add_command(label='Open...')\nfilemenu.add_separator()\nfilemenu.add_command(label='Exit', command=root.quit)\nhelpmenu = Menu(menu)\nmenu.add_cascade(label='Help', menu=helpmenu)\nhelpmenu.add_command(label='About')\nmainloop()`.trim();\n\nconst radio = `\nfrom tkinter import *\nroot = Tk()\nv = IntVar()\nRadiobutton(root, text='GfG', variable=v, value=1).pack(anchor=W)\nRadiobutton(root, text='MIT', variable=v, value=2).pack(anchor=W)\nmainloop()`.trim();\n\nconst scale = `\nfrom tkinter import *\nmaster = Tk()\nw = Scale(master, from_=0, to=42)\nw.pack()\nw = Scale(master, from_=0, to=200, orient=HORIZONTAL)\nw.pack()\nmainloop()`.trim();\n\n\nclass Tkinter extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>What do you understand by Tkinter?</h3>\n              Tkinter is an in-built Python module that is used to create GUI applications. It is Python’s standard toolkit for GUI development.\n              <br />\n              <br />\n              Python provides various options for developing GUIs. Most important are listed below.\n              <br />\n              <ul>\n                <li><b>Tkinter −</b> Tkinter is the Python interface to the Tk GUI toolkit shipped with Python.</li>\n                <li><b>wxPython −</b> Is an open-source Python interface for wxWindows.</li>\n                <li><b>JPython −</b> Is a Python port for Java which gives Python scripts seamless access to Java class libraries on the local machine</li>\n              </ul>\n\n              <h3>1. Button</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={button}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>2. Checkbox</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={checkbox}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>3. Input Fields</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={inputField}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>4. Menu</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={menus}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>5. Radio</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={radio}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>6. Scale</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={scale}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Tkinter));\n"]},"metadata":{},"sourceType":"module"}