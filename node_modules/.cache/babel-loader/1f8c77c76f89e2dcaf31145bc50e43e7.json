{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var counters=\"\\n//App.js\\nimport React from \\\"react\\\";\\nimport { connect } from \\\"react-redux\\\";\\nimport { increment, decrement, reset } from \\\"./actions/actions\\\";\\n\\nconst App = ({ count, onDecrement, onIncrement, onReset }) => (\\n  <div>\\n    {console.log(count)}\\n    <p>Count: {count}</p>\\n    <button onClick={onDecrement}>-</button>\\n    <button onClick={onReset}>Reset</button>\\n    <button onClick={onIncrement}>+</button>\\n  </div>\\n);\\n\\nconst mapStateToProps = (state) => ({\\n  count: state.count,\\n});\\n\\nconst mapDispatchToProps = (dispatch) => {\\n  return {\\n    onIncrement: () => {\\n      dispatch(increment());\\n    },\\n    onDecrement: () => {\\n      dispatch(decrement());\\n    },\\n    onReset: () => {\\n      dispatch(reset());\\n    },\\n  };\\n};\\n\\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\\n\\n\\n\\n//actions/types.js\\nexport const INCREMENT = \\\"INCREMENT\\\";\\nexport const DECREMENT = \\\"DECREMENT\\\";\\nexport const RESET = \\\"RESET\\\";\\n\\n\\n\\n//actions/actions.js\\nimport { INCREMENT, DECREMENT, RESET } from \\\"./types\\\";\\n\\nexport function increment() {\\n  return {\\n    type: INCREMENT,\\n  };\\n}\\n\\nexport function decrement() {\\n  return {\\n    type: DECREMENT,\\n  };\\n}\\n\\nexport function reset() {\\n  return {\\n    type: RESET,\\n  };\\n}\\n\\n\\n\\n//reducers/index.js\\nimport { INCREMENT, DECREMENT, RESET } from \\\"../actions/types\\\";\\n\\nconst initialState = {\\n  count: 0,\\n};\\n\\nexport default (state = initialState, action) => {\\n  switch (action.type) {\\n    case INCREMENT:\\n      return {\\n        count: state.count + 1,\\n      };\\n    case DECREMENT:\\n      return {\\n        count: state.count - 1,\\n      };\\n    case RESET:\\n      return {\\n        count: (state.count = 0),\\n      };\\n    default:\\n      return state;\\n  }\\n};\\n\\n\\n\\n//index.js\\nimport React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom\\\";\\nimport { Provider } from \\\"react-redux\\\";\\nimport App from \\\"./App\\\";\\nimport store from \\\"./store\\\";\\n\\nReactDOM.render(\\n  <Provider store={store}>\\n    <App />\\n  </Provider>,\\n  document.getElementById(\\\"root\\\")\\n);\\n\\n\\n//store.js\\nimport { createStore, applyMiddleware, compose } from \\\"redux\\\";\\nimport rootReducer from \\\"./reducers/index\\\";\\nimport thunk from \\\"redux-thunk\\\";\\n\\nconst store = createStore(\\n  rootReducer, \\n  compose(applyMiddleware(thunk))\\n  );\\n\\nexport default store;\\n\".trim();var dropdawn=\"\\n//store.js\\nimport { compose, createStore, applyMiddleware } from 'redux'\\nimport createSagaMiddleware from \\\"redux-saga\\\";\\n\\nimport rootReducer from './reducers'\\n\\nconst sagaMiddleware = createSagaMiddleware();\\n\\nconst store = createStore(\\n  rootReducer,\\n  compose(applyMiddleware(sagaMiddleware))\\n)\\n\\nexport default store;\\n\\n\\n//components/addPlayer.js\\nimport React, { Component, useState } from 'react';\\n\\n\\nclass AddPlayer extends Component {\\n  state = {\\n    playerName: this.props.playerName,\\n    selectPlayer: this.props.selectPlayer,\\n    selectTeam: this.props.selectTeam\\n  }\\n\\n  handleChange = (e) => {\\n    this.setState({ [e.target.name]: e.target.value })\\n  }\\n\\n  handleSubmit = (e) => {\\n    e.preventDefault();\\n    this.props.onAddPlayer(this.state);\\n    this.setState({\\n      playerName: '',\\n      selectPlayer: '',\\n      selectTeam: ''\\n    });\\n  }\\n\\n  render() {\\n    const { classes } = this.props;\\n    return (\\n      <div>\\n        <form onSubmit={this.handleSubmit}>\\n          Select Team\\n          <div>\\n            <select className=\\\"selectFields\\\"\\n              type=\\\"text\\\"\\n              name=\\\"teamName\\\"\\n              id=\\\"inputTodoPriority\\\"\\n              value={this.state.teamName}\\n              onChange={this.handleChange}\\n            >\\n              <option>Select</option>\\n              <option>Team A</option>\\n              <option>Team B</option>\\n            </select>\\n          </div>\\n\\n          <br />\\n          Enter Player Name\\n          <div>\\n            <input className=\\\"input-text\\\"\\n              name=\\\"playerName\\\"\\n              type=\\\"text\\\"\\n              value={this.state.playerName}\\n              onChange={this.handleChange}\\n              placeholder=\\\"Enter Name\\\"\\n              />\\n          </div>\\n\\n          <br />\\n          <div>\\n          Select Player Type:\\n            <select className=\\\"selectFields\\\"\\n              type=\\\"text\\\"\\n              name=\\\"playerType\\\"\\n              id=\\\"inputTodoResponsible\\\"\\n              value={this.state.playerType}\\n              onChange={this.handleChange}\\n            >\\n              <option>Select</option>\\n              <option>B</option>\\n              <option>Blw</option>\\n            </select><br />\\n          </div>\\n\\n          <div>\\n            <button variant=\\\"contained\\\"  type=\\\"submit\\\"\\n            >Submit</button>\\n          </div>\\n        </form>\\n      </div>\\n    )\\n  }\\n}\\n\\n\\nexport default AddPlayer;\\n\\n\\n\\n//components/lists.js\\n//Lists component is root module.\\n\\nimport React, { Component } from 'react';\\nimport { connect } from 'react-redux';\\nimport AddPlayer from './addPlayer'\\n\\n\\nclass Lists extends Component {\\n  state = {\\n    playerName:this.props.playerName\\n  };\\n\\n  handleAdd = (addPlayers) => {\\n    this.setState({ playerName: [...this.state.playerName, addPlayers] });\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        Add Player\\n         <AddPlayer onAddPlayer={this.handleAdd} />\\n          Team A\\n          {this.state.playerName.map((player, index) =>\\n            <div key={index}>\\n              {\\n                (player.teamName === 'Team A') ?\\n                  <div>{player.playerName} ({player.playerType})</div>\\n                : ''\\n              }\\n            </div>\\n          )}\\n\\n        <div>\\n          Team B\\n              {this.state.playerName.map((player, index) => {\\n                return (\\n                    <div key={index}>\\n                      {\\n                          (player.teamName === 'Team B') ?\\n                          <div>{player.playerName} ({player.playerType})</div>\\n                          : ''\\n                      }\\n                    </div>\\n                  )\\n              })}\\n            </div>\\n        </div>\\n    );\\n  }\\n}\\n\\n\\nconst mapStateToProps = (state) => ({\\n  playerName: state.addTeamsObj\\n})\\n\\n\\nexport default connect(mapStateToProps, null)(Lists);\\n\\n\\n\\n//reducers/addTeams.js\\n// import { v4 as uuidv4 } from 'uuid';\\n\\n\\nconst initalState = [\\n  {\\n    id: 1,\\n    playerName: \\\"Virat Kohali\\\",\\n    playerType: \\\"B\\\",\\n    teamName: \\\"Team A\\\",\\n  },\\n  {\\n    id: 2,\\n    playerName: \\\"Axar Patel\\\",\\n    playerType: \\\"Blw\\\",\\n    teamName: \\\"Team B\\\",\\n  }\\n];;\\n\\nconst addTeams = (state = initalState, action) => {\\n  const { type, payload } = action;\\n\\n  switch (type) {\\n    case \\\"CREATE_PLAYER\\\":\\n      return [...state, {\\n        playerName: payload.playerName,\\n        playerType: payload.playerType,\\n        teamName: \\\"\\\",\\n        playerList: [],\\n      }];\\n\\n    default:\\n      return state;\\n  }\\n};\".trim();var toggle=\"\\n//App.js\\nimport { toggleFun } from \\\"./actions/toggleAction\\\";\\n\\nconst App = (props) => {\\n  return (\\n    <div>\\n      {props.data ? \\\"Show\\\" : \\\"Hide\\\"}\\n      <button onClick={props.onToggle}>Toggle</button>\\n    </div>\\n  );\\n};\\n\\nconst mapStateToProps = (state) => ({\\n  data: state.data.toggle,\\n});\\n\\nconst mapDispatchToProps = (dispatch) => {\\n  return {\\n    onToggle: () => {\\n      dispatch(toggleFun());\\n    },\\n  };\\n};\\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\\n\\n\\n//reducers/toggleReducers.js\\nimport { TOGGLES } from \\\"../actions/types\\\";\\n\\nconst initialState = {\\n  toggle: true,\\n};\\n\\nexport default (state = initialState, action) => {\\n  const { type, payload } = action;\\n  console.log(\\\"reducers\\\", state.toggle);\\n  switch (type) {\\n    case TOGGLES:\\n      return {\\n        ...state,\\n        toggle: !state.toggle,\\n      };\\n\\n    default:\\n      return state;\\n  }\\n};\\n\\n\\n\\n//actions/types.js\\nexport const TOGGLES = \\\"TOGGLES\\\";\\n\\n\\n\\n//actions/toggleAction.js\\nimport { TOGGLES } from \\\"./types\\\";\\n\\nexport const toggleFun = () => {\\n  return {\\n    type: TOGGLES,\\n    payload: null,\\n  };\\n};\\n\".trim();var CountersRedux=/*#__PURE__*/function(_Component){_inherits(CountersRedux,_Component);function CountersRedux(){_classCallCheck(this,CountersRedux);return _possibleConstructorReturn(this,_getPrototypeOf(CountersRedux).apply(this,arguments));}_createClass(CountersRedux,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Counter\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:counters,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Dropdawn\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:dropdawn,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Toggle\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:toggle,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return CountersRedux;}(Component);export default withStyles(styles)(CountersRedux);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/Redux/deep/counter.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","counters","trim","dropdawn","toggle","CountersRedux","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAGA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADgB,CAKvBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALa,CAQvBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARY,CAAL,EAApB,CAaA,GAAMC,CAAAA,QAAQ,CAAG,ozEA0HfC,IA1He,EAAjB,CA4HA,GAAMC,CAAAA,QAAQ,CAAG,wiJAyMbD,IAzMa,EAAjB,CA2MA,GAAME,CAAAA,MAAM,CAAG,+oCAiEbF,IAjEa,EAAf,C,GAqEMG,CAAAA,a,yTACgB,CAClBC,UAAU,CAAC,iBAAMxB,CAAAA,KAAK,CAACyB,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACb,KAA1B,EACE,8BAAI,oBAAC,OAAD,MAAJ,CADF,CADF,CADF,CAME,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEa,OAAO,CAACb,KAA1B,EACE,oBAAC,IAAD,MACE,wCADF,CAEE,2BAAK,KAAK,CAAEN,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEY,QADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAFF,CASE,8BATF,CAUE,yCAVF,CAWE,2BAAK,KAAK,CAAEZ,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEc,QADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAXF,CAkBE,8BAlBF,CAmBE,8BAnBF,CAoBE,sCApBF,CAqBE,2BAAK,KAAK,CAAEd,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEe,MADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CArBF,CADF,CADF,CANF,CADF,CA0CD,C,2BAhDyBvB,S,EAmD5B,cAAgBI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBY,aAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst counters = `\n//App.js\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { increment, decrement, reset } from \"./actions/actions\";\n\nconst App = ({ count, onDecrement, onIncrement, onReset }) => (\n  <div>\n    {console.log(count)}\n    <p>Count: {count}</p>\n    <button onClick={onDecrement}>-</button>\n    <button onClick={onReset}>Reset</button>\n    <button onClick={onIncrement}>+</button>\n  </div>\n);\n\nconst mapStateToProps = (state) => ({\n  count: state.count,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIncrement: () => {\n      dispatch(increment());\n    },\n    onDecrement: () => {\n      dispatch(decrement());\n    },\n    onReset: () => {\n      dispatch(reset());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n//actions/types.js\nexport const INCREMENT = \"INCREMENT\";\nexport const DECREMENT = \"DECREMENT\";\nexport const RESET = \"RESET\";\n\n\n\n//actions/actions.js\nimport { INCREMENT, DECREMENT, RESET } from \"./types\";\n\nexport function increment() {\n  return {\n    type: INCREMENT,\n  };\n}\n\nexport function decrement() {\n  return {\n    type: DECREMENT,\n  };\n}\n\nexport function reset() {\n  return {\n    type: RESET,\n  };\n}\n\n\n\n//reducers/index.js\nimport { INCREMENT, DECREMENT, RESET } from \"../actions/types\";\n\nconst initialState = {\n  count: 0,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      return {\n        count: state.count + 1,\n      };\n    case DECREMENT:\n      return {\n        count: state.count - 1,\n      };\n    case RESET:\n      return {\n        count: (state.count = 0),\n      };\n    default:\n      return state;\n  }\n};\n\n\n\n//index.js\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n\n//store.js\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(\n  rootReducer, \n  compose(applyMiddleware(thunk))\n  );\n\nexport default store;\n`.trim();\n\nconst dropdawn = `\n//store.js\nimport { compose, createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducer from './reducers'\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  compose(applyMiddleware(sagaMiddleware))\n)\n\nexport default store;\n\n\n//components/addPlayer.js\nimport React, { Component, useState } from 'react';\n\n\nclass AddPlayer extends Component {\n  state = {\n    playerName: this.props.playerName,\n    selectPlayer: this.props.selectPlayer,\n    selectTeam: this.props.selectTeam\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onAddPlayer(this.state);\n    this.setState({\n      playerName: '',\n      selectPlayer: '',\n      selectTeam: ''\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          Select Team\n          <div>\n            <select className=\"selectFields\"\n              type=\"text\"\n              name=\"teamName\"\n              id=\"inputTodoPriority\"\n              value={this.state.teamName}\n              onChange={this.handleChange}\n            >\n              <option>Select</option>\n              <option>Team A</option>\n              <option>Team B</option>\n            </select>\n          </div>\n\n          <br />\n          Enter Player Name\n          <div>\n            <input className=\"input-text\"\n              name=\"playerName\"\n              type=\"text\"\n              value={this.state.playerName}\n              onChange={this.handleChange}\n              placeholder=\"Enter Name\"\n              />\n          </div>\n\n          <br />\n          <div>\n          Select Player Type:\n            <select className=\"selectFields\"\n              type=\"text\"\n              name=\"playerType\"\n              id=\"inputTodoResponsible\"\n              value={this.state.playerType}\n              onChange={this.handleChange}\n            >\n              <option>Select</option>\n              <option>B</option>\n              <option>Blw</option>\n            </select><br />\n          </div>\n\n          <div>\n            <button variant=\"contained\"  type=\"submit\"\n            >Submit</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\n\nexport default AddPlayer;\n\n\n\n//components/lists.js\n//Lists component is root module.\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport AddPlayer from './addPlayer'\n\n\nclass Lists extends Component {\n  state = {\n    playerName:this.props.playerName\n  };\n\n  handleAdd = (addPlayers) => {\n    this.setState({ playerName: [...this.state.playerName, addPlayers] });\n  }\n\n  render() {\n    return (\n      <div>\n        Add Player\n         <AddPlayer onAddPlayer={this.handleAdd} />\n          Team A\n          {this.state.playerName.map((player, index) =>\n            <div key={index}>\n              {\n                (player.teamName === 'Team A') ?\n                  <div>{player.playerName} ({player.playerType})</div>\n                : ''\n              }\n            </div>\n          )}\n\n        <div>\n          Team B\n              {this.state.playerName.map((player, index) => {\n                return (\n                    <div key={index}>\n                      {\n                          (player.teamName === 'Team B') ?\n                          <div>{player.playerName} ({player.playerType})</div>\n                          : ''\n                      }\n                    </div>\n                  )\n              })}\n            </div>\n        </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => ({\n  playerName: state.addTeamsObj\n})\n\n\nexport default connect(mapStateToProps, null)(Lists);\n\n\n\n//reducers/addTeams.js\n// import { v4 as uuidv4 } from 'uuid';\n\n\nconst initalState = [\n  {\n    id: 1,\n    playerName: \"Virat Kohali\",\n    playerType: \"B\",\n    teamName: \"Team A\",\n  },\n  {\n    id: 2,\n    playerName: \"Axar Patel\",\n    playerType: \"Blw\",\n    teamName: \"Team B\",\n  }\n];;\n\nconst addTeams = (state = initalState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case \"CREATE_PLAYER\":\n      return [...state, {\n        playerName: payload.playerName,\n        playerType: payload.playerType,\n        teamName: \"\",\n        playerList: [],\n      }];\n\n    default:\n      return state;\n  }\n};`.trim();\n\nconst toggle = `\n//App.js\nimport { toggleFun } from \"./actions/toggleAction\";\n\nconst App = (props) => {\n  return (\n    <div>\n      {props.data ? \"Show\" : \"Hide\"}\n      <button onClick={props.onToggle}>Toggle</button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data.toggle,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onToggle: () => {\n      dispatch(toggleFun());\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n//reducers/toggleReducers.js\nimport { TOGGLES } from \"../actions/types\";\n\nconst initialState = {\n  toggle: true,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  console.log(\"reducers\", state.toggle);\n  switch (type) {\n    case TOGGLES:\n      return {\n        ...state,\n        toggle: !state.toggle,\n      };\n\n    default:\n      return state;\n  }\n};\n\n\n\n//actions/types.js\nexport const TOGGLES = \"TOGGLES\";\n\n\n\n//actions/toggleAction.js\nimport { TOGGLES } from \"./types\";\n\nexport const toggleFun = () => {\n  return {\n    type: TOGGLES,\n    payload: null,\n  };\n};\n`.trim();\n\n\n\nclass CountersRedux extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Counter</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={counters}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Dropdawn</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={dropdawn}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>Toggle</b>\n              <div style={titles}>\n                <PrismCode\n                  code={toggle}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(CountersRedux));\n"]},"metadata":{},"sourceType":"module"}