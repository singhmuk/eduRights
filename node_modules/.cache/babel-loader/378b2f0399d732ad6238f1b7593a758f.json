{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var app=\"\\n//app.js\\nvar app = angular.module('myApp', []);\\napp.controller('validateCtrl', validateCtrl);\\n  \\n  function validateCtrl($scope) {\\n      $scope.user = 'John Doe';\\n      $scope.email = 'john.doe@gmail.com';\\n  }\\n  \\n  \\n//indes.html\\n  <body ng-controller=\\\"validateCtrl\\\">\\n    <form name=\\\"myForm\\\" novalidate>\\n    <p>Username:<br>\\n    <input type=\\\"text\\\" name=\\\"user\\\" ng-model=\\\"user\\\" required>\\n        <span style=\\\"color:red\\\" ng-show=\\\"myForm.user.$dirty && myForm.user.$invalid\\\">\\n        <span ng-show=\\\"myForm.user.$error.required\\\">Username is required.</span>\\n        </span>\\n    </p>\\n    \\n    <p>Email:<br>\\n    <input type=\\\"email\\\" name=\\\"email\\\" ng-model=\\\"email\\\" required>\\n        <span style=\\\"color:red\\\" ng-show=\\\"myForm.email.$dirty && myForm.email.$invalid\\\">\\n        <span ng-show=\\\"myForm.email.$error.required\\\">Email is required.</span>\\n        <span ng-show=\\\"myForm.email.$error.email\\\">Invalid email address.</span>\\n        </span>\\n    </p>\\n    \\n    <p>\\n        <input type=\\\"submit\\\"\\n        ng-disabled=\\\"myForm.user.$dirty && myForm.user.$invalid ||  \\n        myForm.email.$dirty && myForm.email.$invalid\\\">\\n    </p>\\n    \\n    </form>\\n  </body>\\n  \".trim();var Validations=/*#__PURE__*/function(_Component){_inherits(Validations,_Component);function Validations(){_classCallCheck(this,Validations);return _possibleConstructorReturn(this,_getPrototypeOf(Validations).apply(this,arguments));}_createClass(Validations,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Validation\"),\"Form State and Input State\",React.createElement(\"br\",null),\"AngularJS is constantly updating the state of both the form and the input fields.\",React.createElement(\"br\",null),React.createElement(\"br\",null),\"Input fields have the following states:\",React.createElement(\"br\",null),React.createElement(\"br\",null),\"$untouched The field has not been touched yet\",React.createElement(\"br\",null),\"$touched The field has been touched\",React.createElement(\"br\",null),\"$pristine The field has not been modified yet\",React.createElement(\"br\",null),\"$dirty The field has been modified\",React.createElement(\"br\",null),\"$invalid The field content is not valid\",React.createElement(\"br\",null),\"$valid The field content is valid\",React.createElement(\"br\",null),\"They are all properties of the input field, and are either true or false.\",React.createElement(\"br\",null),React.createElement(\"br\",null),\"Forms have the following states:\",React.createElement(\"br\",null),React.createElement(\"br\",null),\"$pristine No fields have been modified yet\",React.createElement(\"br\",null),\"$dirty One or more have been modified\",React.createElement(\"br\",null),\"$invalid The form content is not valid\",React.createElement(\"br\",null),\"$valid The form content is valid\",React.createElement(\"br\",null),\"$submitted The form is submitted\",React.createElement(\"br\",null),\"They are all properties of the form, and are either true or false.\",React.createElement(\"br\",null),React.createElement(\"b\",null,\"app.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:app,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return Validations;}(Component);export default withStyles(styles)(Validations);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/angularjsd/deepAngularjs/validations.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","app","trim","Validations","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAGA,GAAMC,CAAAA,MAAM,CAAG,CAACC,eAAe,CAAC,SAAjB,CAA4BC,OAAO,CAAC,KAApC,CAA2CC,QAAQ,CAAC,MAApD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,KAAK,CAAE,CACHC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADL,CAEHN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFN,CADgB,CAKvBC,QAAQ,CAAE,CACNF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADF,CALa,CAQvBE,SAAS,CAAE,CACPC,SAAS,CAAE,QADJ,CARY,CAAL,EAApB,CAcA,GAAMC,CAAAA,GAAG,CAAG,+rCAqCRC,IArCQ,EAAZ,C,GAwCMC,CAAAA,W,+SACgB,CAClBC,UAAU,CAAC,iBAAMtB,CAAAA,KAAK,CAACuB,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACM,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACI,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACX,KAA1B,EACI,8BAAI,oBAAC,OAAD,MAAJ,CADJ,CADJ,CADN,CAMN,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACA,oBAAC,KAAD,EAAO,SAAS,CAAEW,OAAO,CAACX,KAA1B,EACA,oBAAC,IAAD,MACM,2CADN,8BAEgC,8BAFhC,qFAIA,8BAJA,CAKA,8BALA,2CAOA,8BAPA,CAQA,8BARA,iDAS6C,8BAT7C,uCAUmC,8BAVnC,iDAW6C,8BAX7C,sCAYkC,8BAZlC,2CAauC,8BAbvC,qCAciC,8BAdjC,6EAeyE,8BAfzE,CAgBA,8BAhBA,oCAiBgC,8BAjBhC,CAkBA,8BAlBA,8CAmB0C,8BAnB1C,yCAoBqC,8BApBrC,0CAqBsC,8BArBtC,oCAsBgC,8BAtBhC,oCAuBgC,8BAvBhC,sEAyBA,8BAzBA,CA0BM,sCA1BN,CA2BM,2BAAK,KAAK,CAAEN,MAAZ,EACA,oBAAC,SAAD,EACE,IAAI,CAAEY,GADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADA,CA3BN,CADA,CADA,CANM,CADF,CAgDD,C,yBAtDuBpB,S,EAyD1B,cAAgBI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBU,WAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = {backgroundColor:'#F0F8FF', padding:'1px', fontSize:'16px'}\n\nconst styles = theme => ({\n  paper: {\n      margin: theme.spacing(1),\n      padding: theme.spacing(1)\n  },\n  smMargin: {\n      margin: theme.spacing(1)\n  },\n  actionDiv: {\n      textAlign: \"center\"\n  }\n})\n\n\nconst app = `\n//app.js\nvar app = angular.module('myApp', []);\napp.controller('validateCtrl', validateCtrl);\n  \n  function validateCtrl($scope) {\n      $scope.user = 'John Doe';\n      $scope.email = 'john.doe@gmail.com';\n  }\n  \n  \n//indes.html\n  <body ng-controller=\"validateCtrl\">\n    <form name=\"myForm\" novalidate>\n    <p>Username:<br>\n    <input type=\"text\" name=\"user\" ng-model=\"user\" required>\n        <span style=\"color:red\" ng-show=\"myForm.user.$dirty && myForm.user.$invalid\">\n        <span ng-show=\"myForm.user.$error.required\">Username is required.</span>\n        </span>\n    </p>\n    \n    <p>Email:<br>\n    <input type=\"email\" name=\"email\" ng-model=\"email\" required>\n        <span style=\"color:red\" ng-show=\"myForm.email.$dirty && myForm.email.$invalid\">\n        <span ng-show=\"myForm.email.$error.required\">Email is required.</span>\n        <span ng-show=\"myForm.email.$error.email\">Invalid email address.</span>\n        </span>\n    </p>\n    \n    <p>\n        <input type=\"submit\"\n        ng-disabled=\"myForm.user.$dirty && myForm.user.$invalid ||  \n        myForm.email.$dirty && myForm.email.$invalid\">\n    </p>\n    \n    </form>\n  </body>\n  `.trim()\n\n\nclass Validations extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n            <Grid item xs={2}>\n                <Paper className={classes.paper}>\n                    <h4><Sidebar /></h4>\n                </Paper>\n            </Grid>\n<Grid item xs={10}>\n<Paper className={classes.paper}>\n<List>\n      <h3>Validation</h3>\n      Form State and Input State<br/>\nAngularJS is constantly updating the state of both the form and the input fields.\n<br/>\n<br/>\nInput fields have the following states:\n<br/>\n<br/>\n$untouched The field has not been touched yet<br/>\n$touched The field has been touched<br/>\n$pristine The field has not been modified yet<br/>\n$dirty The field has been modified<br/>\n$invalid The field content is not valid<br/>\n$valid The field content is valid<br/>\nThey are all properties of the input field, and are either true or false.<br/>\n<br/>\nForms have the following states:<br/>\n<br/>\n$pristine No fields have been modified yet<br/>\n$dirty One or more have been modified<br/>\n$invalid The form content is not valid<br/>\n$valid The form content is valid<br/>\n$submitted The form is submitted<br/>\nThey are all properties of the form, and are either true or false.\n<br/>\n      <b>app.js</b>\n      <div style={titles}>\n      <PrismCode\n        code={app}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      </List>\n      </Paper>\n      </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Validations));\n"]},"metadata":{},"sourceType":"module"}