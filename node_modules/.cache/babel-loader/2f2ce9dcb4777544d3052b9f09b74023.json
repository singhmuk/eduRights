{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var headersSent=\"\\napp.get('/', function (req, res) {\\n  console.dir(res.headersSent)                                                            // false\\n  res.send('OK')\\n  console.dir(res.headersSent)                                                            // true\\n})\\n\".trim();var append=\"\\nres.append('Link', ['<http://localhost/>', '<http://localhost:3000/>'])\\nres.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly')\\nres.append('Warning', '199 Miscellaneous warning')\\n\".trim();var sendFile=\"\\napp.get('/file/:name', function (req, res, next) {\\n  var options = {\\n    root: path.join(__dirname, 'public'),\\n    dotfiles: 'deny',\\n    headers: {\\n      'x-timestamp': Date.now(),\\n      'x-sent': true\\n    }\\n  }\\n\\n  var fileName = req.params.name\\n  res.sendFile(fileName, options, function (err) {\\n    if (err) {\\n      next(err)\\n    } else {\\n      console.log('Sent:', fileName)\\n    }\\n  })\\n})\\n\".trim();var resType=\"\\nres.type('.html')\\n// => 'text/html'\\n\\nres.type('html')\\n// => 'text/html'\\n\\nres.type('json')\\n// => 'application/json'\\n\\nres.type('application/json')\\n// => 'application/json'\\nres.type('png')\\n\".trim();var reqApp=\"app.get('/viewdirectory', require('./mymiddleware.js'))\".trim();var baseUrl=\"\\nvar greet = express.Router()\\n\\ngreet.get('/jp', function (req, res) {\\n  console.log(req.baseUrl)                                                            // greet\\n  res.send('Konichiwa!')\\n})\\n\\napp.use('/greet', greet)                                                  // load the router on '/greet'\\n\".trim();var reqBody=\"\\nvar express = require('express')\\n\\nvar app = express()\\n\\napp.use(express.json())                                                 // for parsing application/json.\\napp.use(express.urlencoded({ extended: true }))               // for parsing application/x-www-form-urlencoded.\\n\\napp.post('/profile', function (req, res, next) {\\n  console.log(req.body)\\n  res.json(req.body)\\n})\".trim();var reqCookies=\"console.dir(req.cookies.name)\".trim();var hostname=\"console.dir(req.hostname)\".trim();var ResDocs=/*#__PURE__*/function(_Component){_inherits(ResDocs,_Component);function ResDocs(){_classCallCheck(this,ResDocs);return _possibleConstructorReturn(this,_getPrototypeOf(ResDocs).apply(this,arguments));}_createClass(ResDocs,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Response\"),React.createElement(\"p\",null,\"The res object represents the HTTP response that an Express app sends when it gets an HTTP request.\"),React.createElement(\"b\",null,\"res.headersSent: \"),\"Boolean property that indicates if the app sent HTTP headers for the response.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:headersSent,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"res.append(field [, value]):\"),React.createElement(\"p\",null,\"Appends the specified value to the HTTP response header field. If the header is not already set, it creates the header with the specified value. The value parameter can be a string or an array.\"),React.createElement(\"b\",null,\"N: \"),\"calling res.set() after res.append() will reset the previously-set header value.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:append,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"i\",null,\"Sets the HTTP response Content-Disposition header field to \\u201Cattachment\\u201D. If a filename is given, then it sets the Content-Type based on the extension name via res.type(), and sets the Content-Disposition \\u201Cfilename=\\u201D parameter.\"),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"res.sendFile(path [, options] [, fn]):\"),React.createElement(\"p\",null,\"Transfers the file at the given path. Sets the Content-Type response HTTP header field based on the filename\\u2019s extension. Unless the root option is set in the options object, path must be an absolute path to the file.\"),React.createElement(\"b\",null,\"Property: \"),\"maxAge, root, lastModified, headers, dotfiles, acceptRanges, cacheControl, immutable.\",React.createElement(\"p\",null,\"The method invokes the callback function fn(err) when the transfer is complete or when an error occurs. If the callback function is specified and an error occurs, the callback function must explicitly handle the response process either by ending the request-response cycle, or by passing control to the next route.\"),\"Example of using res.sendFile with all its arguments.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:sendFile,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"res.type(type):\"),React.createElement(\"p\",null,\"Sets the Content-Type HTTP header to the MIME type as determined by mime.lookup() for the specified type. If type contains the \\u201C/\\u201D character, then it sets the Content-Type to type.\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:resType,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Request\"),React.createElement(\"p\",null,\"The req object represents the HTTP request and has properties for the request query string, parameters, body, HTTP headers, and so on.\"),React.createElement(\"b\",null,\"req.app: \"),\"Property holds a reference to the instance of the Express application that is using the middleware.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:reqApp,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"baseUrl:\"),React.createElement(\"p\",null,\"The URL path on which a router instance was mounted.\"),React.createElement(\"p\",null,\"The req.baseUrl property is similar to the mountpath property of the app object, except app.mountpath returns the matched path pattern(s).\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:baseUrl,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"req.body:\"),\"Contains key-value pairs of data submitted in the request body. By default, it is undefined, and is populated when you use body-parsing middleware such as express.json() or express.urlencoded().\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:reqBody,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"req.cookies:\"),React.createElement(\"p\",null,\"When using cookie-parser middleware, this property is an object that contains cookies sent by the request. If the request contains no cookies, it defaults to \",\".\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:reqCookies,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"i\",null,\"If the cookie has been signed, you have to use req.signedCookies.\"),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"req.hostname:\"),React.createElement(\"p\",null,\"Contains the hostname derived from the Host HTTP header.\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:hostname,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return ResDocs;}(Component);export default withStyles(styles)(ResDocs);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/express/deepExpress/resDocs.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","headersSent","trim","append","sendFile","resType","reqApp","baseUrl","reqBody","reqCookies","hostname","ResDocs","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst headersSent = `\napp.get('/', function (req, res) {\n  console.dir(res.headersSent)                                                            // false\n  res.send('OK')\n  console.dir(res.headersSent)                                                            // true\n})\n`.trim();\n\nconst append = `\nres.append('Link', ['<http://localhost/>', '<http://localhost:3000/>'])\nres.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly')\nres.append('Warning', '199 Miscellaneous warning')\n`.trim();\n\nconst sendFile = `\napp.get('/file/:name', function (req, res, next) {\n  var options = {\n    root: path.join(__dirname, 'public'),\n    dotfiles: 'deny',\n    headers: {\n      'x-timestamp': Date.now(),\n      'x-sent': true\n    }\n  }\n\n  var fileName = req.params.name\n  res.sendFile(fileName, options, function (err) {\n    if (err) {\n      next(err)\n    } else {\n      console.log('Sent:', fileName)\n    }\n  })\n})\n`.trim();\n\nconst resType = `\nres.type('.html')\n// => 'text/html'\n\nres.type('html')\n// => 'text/html'\n\nres.type('json')\n// => 'application/json'\n\nres.type('application/json')\n// => 'application/json'\nres.type('png')\n`.trim();\n\nconst reqApp = `app.get('/viewdirectory', require('./mymiddleware.js'))`.trim();\n\nconst baseUrl = `\nvar greet = express.Router()\n\ngreet.get('/jp', function (req, res) {\n  console.log(req.baseUrl)                                                            // greet\n  res.send('Konichiwa!')\n})\n\napp.use('/greet', greet)                                                  // load the router on '/greet'\n`.trim();\n\nconst reqBody = `\nvar express = require('express')\n\nvar app = express()\n\napp.use(express.json())                                                 // for parsing application/json.\napp.use(express.urlencoded({ extended: true }))               // for parsing application/x-www-form-urlencoded.\n\napp.post('/profile', function (req, res, next) {\n  console.log(req.body)\n  res.json(req.body)\n})`.trim();\n\nconst reqCookies = `console.dir(req.cookies.name)`.trim();\n\nconst hostname = `console.dir(req.hostname)`.trim();\n\nclass ResDocs extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Response</h3>\n              <p>\n                The res object represents the HTTP response that an Express app sends when it gets an HTTP request.\n              </p>\n              <b>res.headersSent: </b>Boolean property that indicates if the app sent HTTP headers for the response.\n              <div style={titles}>\n                <PrismCode\n                  code={headersSent}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>res.append(field [, value]):</h3>\n              <p>\n                Appends the specified value to the HTTP response header field. If the header is not already set,\n                it creates the header with the specified value. The value parameter can be a string or an array.\n              </p>\n              <b>N: </b>calling res.set() after res.append() will reset the previously-set header value.\n              <div style={titles}>\n                <PrismCode\n                  code={append}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <i>\n                Sets the HTTP response Content-Disposition header field to “attachment”. If a filename is given,\n                then it sets the Content-Type based on the extension name via res.type(), and sets the\n                Content-Disposition “filename=” parameter.\n              </i>\n              <br />\n\n              <h3>res.sendFile(path [, options] [, fn]):</h3>\n              <p>\n                Transfers the file at the given path. Sets the Content-Type response HTTP header field based on\n                the filename’s extension. Unless the root option is set in the options object, path must be an\n                absolute path to the file.\n              </p>\n              <b>Property: </b>maxAge, root, lastModified, headers, dotfiles, acceptRanges, cacheControl, immutable.\n              <p>\n                The method invokes the callback function fn(err) when the transfer is complete or when an error\n                occurs. If the callback function is specified and an error occurs, the callback function must\n                explicitly handle the response process either by ending the request-response cycle, or by passing\n                control to the next route.\n              </p>\n              Example of using res.sendFile with all its arguments.\n              <div style={titles}>\n                <PrismCode\n                  code={sendFile}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>res.type(type):</h3>\n              <p>\n                Sets the Content-Type HTTP header to the MIME type as determined by mime.lookup() for the\n                specified type. If type contains the “/” character, then it sets the Content-Type to type.\n              </p>\n              <div style={titles}>\n                <PrismCode\n                  code={resType}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Request</h3>\n              <p>\n                The req object represents the HTTP request and has properties for the request query string,\n                parameters, body, HTTP headers, and so on.\n              </p>\n              <b>req.app: </b>Property holds a reference to the instance of the Express application that is\n              using the middleware.\n              <div style={titles}>\n                <PrismCode\n                  code={reqApp}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>baseUrl:</h3>\n              <p>\n                The URL path on which a router instance was mounted.\n              </p>\n              <p>\n                The req.baseUrl property is similar to the mountpath property of the app object, except\n                app.mountpath returns the matched path pattern(s).\n              </p>\n              <div style={titles}>\n                <PrismCode\n                  code={baseUrl}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>req.body:</h3>\n              Contains key-value pairs of data submitted in the request body. By default, it is undefined, and is populated when\n              you use body-parsing middleware such as express.json() or express.urlencoded().\n              <div style={titles}>\n                <PrismCode\n                  code={reqBody}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>req.cookies:</h3>\n              <p>\n                When using cookie-parser middleware, this property is an object that contains cookies sent by the\n                request. If the request contains no cookies, it defaults to { }.\n              </p>\n              <div style={titles}>\n                <PrismCode\n                  code={reqCookies}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <i>If the cookie has been signed, you have to use req.signedCookies.</i>\n              <br />\n\n              <h3>req.hostname:</h3>\n              <p>Contains the hostname derived from the Host HTTP header.</p>\n              <div style={titles}>\n                <PrismCode\n                  code={hostname}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(ResDocs));\n"]},"metadata":{},"sourceType":"module"}