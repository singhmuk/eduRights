{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/javaScripts/deepJs/logic2.js\";\nimport React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport \"../../ReactJs/styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../../ReactJs/prismCode\";\nconst titles = {\n  backgroundColor: \"#F0F8FF\",\n  padding: \"1px\",\n  fontSize: \"16px\"\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst insersonSort = `\nfunction fun() {\n  const arr = [3, 5, 1, 9, 6, 2, 1, -1];\n  const hashSet = new Set(arr);\n  const result = [...hashSet].sort((a, b) => a - b);\n  console.log(result);\n}\n\nfun();\n`.trim();\nconst mergSort = `\n`.trim();\nconst quicksort = `\n`.trim();\nconst selectionSort = `\n`.trim();\nconst Permutations = `\n`.trim();\nconst amount = `\n`.trim();\nconst armstrong = `function fun(num) {\n  const newnum = num.toString().split('');\n  const hash = newnum.reduce((sum, digit) => {\n    const cube = Math.pow(parseInt(digit), newnum.length);\n    return sum + cube;\n  }, 0);\n\n  if (hash === num) {\n    return { type: 'Armstrong', hash: hash };\n  } else {\n    return { type: 'Not Armstrong', hash: hash };\n  }\n}\n\nconst hash = fun(153);\nconsole.log(hash); `.trim();\nconst satisfy = `\nfunction isEven(num) {\n  return num % 2 === 0;\n}\n\nfunction isPrime(num) {\n  if (num < 2) {\n    return false;\n  }\n  for (let i = 2; i <= Math.sqrt(num); i++) {\n    if (num % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Function to loop through an array and check if n elements satisfy the condition function\nfunction some(array, n, isCheck) {\n  let count = 0;\n  for (let i = 0; i < array.length; i++) {\n    if (isCheck(array[i])) {\n      count++;\n    }\n    if (count === n) {\n      return true;\n    }\n  }\n  return false;\n}\n\nconsole.log(some([2, 4, 6], 3, isEven)); // true\nconsole.log(some([2, 3, 4], 3, isEven)); // false\nconsole.log(some([2, 3, 11], 4, isPrime)); // false\nconsole.log(some([2, 3, 5, 9], 3, isPrime)); // true`.trim();\nconst generates = `\nfunction fibbo() {\n  let a = 0;\n  let b = 1;\n\n  return function() {\n    const result = a;\n    const next = a + b;\n    a = b;\n    b = next;\n    return result;\n  };\n}\n\nlet obj = fibbo();\nconsole.log(obj()); // 0\nconsole.log(obj()); // 1\nconsole.log(obj()); // 1\nconsole.log(obj()); // 2\nconsole.log(obj()); // 3\nconsole.log(obj()); // 5\nconsole.log(obj()); // 8\n`.trim();\n\nclass Logic2 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"1. Armstrong Number\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: armstrong,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"5. Permutations\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: Permutations,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"6. Given an amount of money, return the minimum number of coins needed to make that change.\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: amount,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"7. Sort an Array\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: insersonSort,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"8. Merg Sort\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: mergSort,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"9. Quick Sort\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: quicksort,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"10. Selection Sort\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: selectionSort,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"11. Write a function which loops through an array and checks if n of the elements of the array satisfy the condition function that is passed\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Write the some function and isEven and isPrime functions\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"console.log(some([2,4,6], 3, isEven)) // should print true\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"console.log(some([2,3,4], 3, isEven)) // should print false\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"console.log(some([2,3,11], 4, isPrime)) // should print false\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"console.log(some([2,3,5,9], 3, isPrime)) // should print true\")), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: satisfy,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"12. Write a function whch returns a function that generates fibonacci numbers. Don't use generators.\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: generates,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(Logic2);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/javaScripts/deepJs/logic2.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","insersonSort","trim","mergSort","quicksort","selectionSort","Permutations","amount","armstrong","satisfy","generates","Logic2","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport \"../../ReactJs/styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../../ReactJs/prismCode\";\n\nconst titles = { backgroundColor: \"#F0F8FF\", padding: \"1px\", fontSize: \"16px\" };\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n});\n\n\nconst insersonSort = `\nfunction fun() {\n  const arr = [3, 5, 1, 9, 6, 2, 1, -1];\n  const hashSet = new Set(arr);\n  const result = [...hashSet].sort((a, b) => a - b);\n  console.log(result);\n}\n\nfun();\n`.trim();\n\nconst mergSort = `\n`.trim();\n\nconst quicksort = `\n`.trim();\n\nconst selectionSort = `\n`.trim();\n\nconst Permutations = `\n`.trim();\n\nconst amount = `\n`.trim();\n\nconst armstrong = `function fun(num) {\n  const newnum = num.toString().split('');\n  const hash = newnum.reduce((sum, digit) => {\n    const cube = Math.pow(parseInt(digit), newnum.length);\n    return sum + cube;\n  }, 0);\n\n  if (hash === num) {\n    return { type: 'Armstrong', hash: hash };\n  } else {\n    return { type: 'Not Armstrong', hash: hash };\n  }\n}\n\nconst hash = fun(153);\nconsole.log(hash); `.trim(); \n\nconst satisfy = `\nfunction isEven(num) {\n  return num % 2 === 0;\n}\n\nfunction isPrime(num) {\n  if (num < 2) {\n    return false;\n  }\n  for (let i = 2; i <= Math.sqrt(num); i++) {\n    if (num % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Function to loop through an array and check if n elements satisfy the condition function\nfunction some(array, n, isCheck) {\n  let count = 0;\n  for (let i = 0; i < array.length; i++) {\n    if (isCheck(array[i])) {\n      count++;\n    }\n    if (count === n) {\n      return true;\n    }\n  }\n  return false;\n}\n\nconsole.log(some([2, 4, 6], 3, isEven)); // true\nconsole.log(some([2, 3, 4], 3, isEven)); // false\nconsole.log(some([2, 3, 11], 4, isPrime)); // false\nconsole.log(some([2, 3, 5, 9], 3, isPrime)); // true`.trim();\n\nconst generates = `\nfunction fibbo() {\n  let a = 0;\n  let b = 1;\n\n  return function() {\n    const result = a;\n    const next = a + b;\n    a = b;\n    b = next;\n    return result;\n  };\n}\n\nlet obj = fibbo();\nconsole.log(obj()); // 0\nconsole.log(obj()); // 1\nconsole.log(obj()); // 1\nconsole.log(obj()); // 2\nconsole.log(obj()); // 3\nconsole.log(obj()); // 5\nconsole.log(obj()); // 8\n`.trim();\n\nclass Logic2 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4>\n              <Sidebar />\n            </h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. Armstrong Number</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={armstrong}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>5. Permutations</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Permutations}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <b>\n                6. Given an amount of money, return the minimum number of coins\n                needed to make that change.\n              </b>\n              <div style={titles}>\n                <PrismCode\n                  code={amount}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>7. Sort an Array</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={insersonSort}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>8. Merg Sort</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={mergSort}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>9. Quick Sort</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={quicksort}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>10. Selection Sort</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={selectionSort}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br/>\n\n              <b>11. Write a function which loops through an array and checks if n of the elements\n                of the array satisfy the condition function that is passed</b>\n                <br/>\n                <br/>\n                <i>Write the some function and isEven and isPrime functions</i>\n                <br/>\n                <br/>\n                <ul>\n                  <li>console.log(some([2,4,6], 3, isEven)) // should print true</li>\n                  <li>console.log(some([2,3,4], 3, isEven)) // should print false</li>\n                  <li>console.log(some([2,3,11], 4, isPrime)) // should print false</li>\n                  <li>console.log(some([2,3,5,9], 3, isPrime)) // should print true</li>\n                </ul>\n              <div style={titles}>\n                <PrismCode\n                  code={satisfy}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>12. Write a function whch returns a function that generates fibonacci numbers.\nDon't use generators.</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={generates}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Logic2);\n"]},"metadata":{},"sourceType":"module"}