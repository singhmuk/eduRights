{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/Redux/deep/reduxCurd.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst reducers = `\n//reducers/data.js\nconst initialState = [\n  { id: 1, title: \"mukesh\", last:'kumar' },\n  { id: 2, title: \"niketh\", last:'kumar' },\n  { id: 3, title: \"subham\", last:'kumar' },\n  { id: 4, title: \"sanya\", last:'kumari' },\n]\n\n\nexport default function(state = initialState, action){\n  const {type, payload} = action;\n  console.log('actions',action)\n  \n  switch (action.type) {\n    case \"ADD_POST\":\n      return state.concat([action.data]);\n      \n    case \"DELETE_POST\":\n      return state.filter(post => post.id !== action.id);\n      \n    case \"EDIT_POST\":\n      return state.map(post =>\n        post.id === action.id ? { ...post, editing: !post.editing } : post\n      );\n      \n    case \"UPDATE\":\n      return state.map(post => {\n        if (post.id === action.id) {\n          return {\n            ...post,\n            title: action.data.newTitle,\n            message: action.data.newMessage,\n            editing: !post.editing\n          };\n        } else return post;\n      });\n    default:\n      return state;\n  }\n}`.trim();\nconst comps = `\n//components/post.js\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Post extends Component {\n  handleEdit = () => {\n    this.props.dispatch({\n      type: \"EDIT_POST\",\n      id: this.props.post.id\n    })\n  }\n  \n  handleDelete = () => {\n    this.props.dispatch({\n      type: \"DELETE_POST\",\n      id: this.props.post.id\n    })\n  }\n  \n  render() {\n    return (\n      <div>\n        <h2>{this.props.post.title}</h2>\n        <p>{this.props.post.message}</p>\n        <button onClick={this.handleEdit}>Edit</button>\n        <button onClick={this.handleDelete}>Delete</button>\n      </div>\n    );\n  }\n}\n\nexport default connect()(Post);\n\n\n//components/editComponent.js\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass EditComponent extends Component {\n  handleEdit = e => {\n    e.preventDefault();\n    const newTitle = this.getTitle.value;\n    const newMessage = this.getMessage.value;\n    const data = {\n      newTitle,\n      newMessage\n    };\n    this.props.dispatch({ type: \"UPDATE\", id: this.props.post.id, data: data });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleEdit}>\n          <input type=\"text\" ref={input => (this.getTitle = input)} defaultValue={this.props.post.title} />\n          <br />\n          <textarea rows=\"5\" ref={input => (this.getMessage = input)} defaultValue={this.props.post.message} cols=\"28\" />\n          <br />\n          <button>Update</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect()(EditComponent);\n\n\n\n//components/App.js\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport EditComponent from \"./editComponent\";\nimport Post from \"./post\";\n\nclass App extends Component {\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const title = this.getTitle.value;\n    const message = this.getMessage.value;\n    const data = {\n      id: new Date(),\n      title,\n      message,\n      editing: false\n    };\n\n    this.props.dispatch({\n      type: \"ADD_POST\",\n      data\n    });\n    this.getTitle.value = \"\";\n    this.getMessage.value = \"\";\n  };\n  \n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" ref={input => (this.getTitle = input)} />\n          <br />\n          <textarea ref={input => (this.getMessage = input)} rows=\"5\" cols=\"28\" />\n          <button>Post</button>\n        </form>\n      \n        {this.props.posts.map(post => (\n          <div key={post.id}>\n            {post.editing ? (\n              <EditComponent post={post} key={post.id} />\n            ) : (\n              <Post key={post.id} post={post} />\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n    posts: state.obj\n});\n\nexport default connect(mapStateToProps)(App);\n`.trim();\n\nclass ReduxCurd extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Reducers\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: reducers,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Components\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: comps,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(ReduxCurd);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/Redux/deep/reduxCurd.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","reducers","trim","comps","ReduxCurd","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst reducers = `\n//reducers/data.js\nconst initialState = [\n  { id: 1, title: \"mukesh\", last:'kumar' },\n  { id: 2, title: \"niketh\", last:'kumar' },\n  { id: 3, title: \"subham\", last:'kumar' },\n  { id: 4, title: \"sanya\", last:'kumari' },\n]\n\n\nexport default function(state = initialState, action){\n  const {type, payload} = action;\n  console.log('actions',action)\n  \n  switch (action.type) {\n    case \"ADD_POST\":\n      return state.concat([action.data]);\n      \n    case \"DELETE_POST\":\n      return state.filter(post => post.id !== action.id);\n      \n    case \"EDIT_POST\":\n      return state.map(post =>\n        post.id === action.id ? { ...post, editing: !post.editing } : post\n      );\n      \n    case \"UPDATE\":\n      return state.map(post => {\n        if (post.id === action.id) {\n          return {\n            ...post,\n            title: action.data.newTitle,\n            message: action.data.newMessage,\n            editing: !post.editing\n          };\n        } else return post;\n      });\n    default:\n      return state;\n  }\n}`.trim();\n\nconst comps = `\n//components/post.js\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Post extends Component {\n  handleEdit = () => {\n    this.props.dispatch({\n      type: \"EDIT_POST\",\n      id: this.props.post.id\n    })\n  }\n  \n  handleDelete = () => {\n    this.props.dispatch({\n      type: \"DELETE_POST\",\n      id: this.props.post.id\n    })\n  }\n  \n  render() {\n    return (\n      <div>\n        <h2>{this.props.post.title}</h2>\n        <p>{this.props.post.message}</p>\n        <button onClick={this.handleEdit}>Edit</button>\n        <button onClick={this.handleDelete}>Delete</button>\n      </div>\n    );\n  }\n}\n\nexport default connect()(Post);\n\n\n//components/editComponent.js\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass EditComponent extends Component {\n  handleEdit = e => {\n    e.preventDefault();\n    const newTitle = this.getTitle.value;\n    const newMessage = this.getMessage.value;\n    const data = {\n      newTitle,\n      newMessage\n    };\n    this.props.dispatch({ type: \"UPDATE\", id: this.props.post.id, data: data });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleEdit}>\n          <input type=\"text\" ref={input => (this.getTitle = input)} defaultValue={this.props.post.title} />\n          <br />\n          <textarea rows=\"5\" ref={input => (this.getMessage = input)} defaultValue={this.props.post.message} cols=\"28\" />\n          <br />\n          <button>Update</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect()(EditComponent);\n\n\n\n//components/App.js\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport EditComponent from \"./editComponent\";\nimport Post from \"./post\";\n\nclass App extends Component {\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const title = this.getTitle.value;\n    const message = this.getMessage.value;\n    const data = {\n      id: new Date(),\n      title,\n      message,\n      editing: false\n    };\n\n    this.props.dispatch({\n      type: \"ADD_POST\",\n      data\n    });\n    this.getTitle.value = \"\";\n    this.getMessage.value = \"\";\n  };\n  \n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" ref={input => (this.getTitle = input)} />\n          <br />\n          <textarea ref={input => (this.getMessage = input)} rows=\"5\" cols=\"28\" />\n          <button>Post</button>\n        </form>\n      \n        {this.props.posts.map(post => (\n          <div key={post.id}>\n            {post.editing ? (\n              <EditComponent post={post} key={post.id} />\n            ) : (\n              <Post key={post.id} post={post} />\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n    posts: state.obj\n});\n\nexport default connect(mapStateToProps)(App);\n`.trim();\n\n\nclass ReduxCurd extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Reducers</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={reducers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Components</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={comps}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(ReduxCurd));\n"]},"metadata":{},"sourceType":"module"}