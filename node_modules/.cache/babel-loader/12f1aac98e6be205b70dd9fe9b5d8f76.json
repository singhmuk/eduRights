{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var crypto=\"var crypto = require('crypto');\\nvar mykey = crypto.createCipher('aes-128-cbc', 'mypassword');\\nvar mystr = mykey.update('abc', 'utf8', 'hex')\\n\\nmystr += mykey.update.final('hex');\\n\".trim();var deCrypto=\"var crypto = require('crypto');\\nvar mykey = crypto.createDecipher('aes-128-cbc', 'mypassword');\\nvar mystr = mykey.update('34feb914c099df25794bf9ccb85bea72', 'hex', 'utf8')\\n\\nmystr += mykey.update.final('utf8');\\n\".trim();var dgram=\"(i) var dgram = require('dgram');\\nvar s = dgram.createSocket('udp4');\\n  s.on('message', function(msg, rinfo) {\\n  console.log('I got this message: ' + msg);\\n  });\\n  \\ns.bind(8080);\".trim();var dgram_2=\"(ii) var dgram = require('dgram');\\n  var s = dgram.createSocket('udp4');\\n  s.send(Buffer.from('abc'), 8080, 'localhost');\\n\".trim();var dns=\"var dns = require('dns');\\n    var w3 = dns.lookup('www.w3schools.com', function (err, addresses, family) {\\n     console.log(addresses);\\n    });\\n\".trim();var querystring=\"var querystring = require('querystring');\\n  var q = querystring.parse('year=2017&month=february');\\n  console.log(q.year);\".trim();var GettingInPut=\"const command = process.argv[2]\\nif (command === 'add') {\\n   console.log('Adding note!')\\n }\\n else if (command === 'remove') {\\n   console.log('Removing note!')\\n }\\n\".trim();var tls=\"var tls = require('tls');\".trim();var tty=\" url - The URL module provides a way of parsing the URL string.\\nvar http = require('http');\\nvar url = require('url');\\nhttp.createServer(function (req, res) {\\n  res.writeHead(200, {'Content-Type': 'text/plain'});\\n  var q = url.parse(req.url, true);\\n  res.write(q.href);\\n  res.end();\\n}).listen(8080);\\n\".trim();var util=\"var util = require('util');\\nvar txt = 'Congratulate %s on his %dth birthday!';\\nvar result = util.format(txt, 'Linus', 6);\\n\\nconsole.log(result);\\n\".trim();var vm=\"var vm = require('vm');\\nvar myObj = { name: 'John', age: 38 };\\nvm.createContext(myObj);\\nvm.runInContext('age += 1;', myObj);\\n\\nconsole.log(myObj);\\n\".trim();var Write=\"const fs = require('fs')\\nfs.writeFileSync('notes.txt', 'I live in Philadelphia')\\n\".trim();var Delete=\"const path='D:ConceptsNodeJsdemo\\text.txt';\\nconsole.log(fs.unlinkSync(path))\\n\".trim();var appendFile=\"var fs = require('fs');\\nfs.appendFile('mynewfile1.txt', 'Hello content!', function (err) {\\n if (err) throw err;\\n   console.log('Saved!');\\n});\".trim();var open=\"var fs = require('fs');\\nfs.open('mynewfile2.txt', 'w', function (err, file) {\\n if (err) throw err;\\n   console.log('Saved!');\\n});\\n\".trim();var writeFile=\"var fs = require('fs');\\nfs.writeFile('mynewfile3.txt', 'Hello content!', function (err) {\\n if (err) throw err;\\n   console.log('Saved!');\\n});\\n\".trim();var Rename=\"var fs = require('fs');\\nfs.rename('mynewfile1.txt', 'myrenamedfile.txt', function (err) {\\n   if (err) throw err;\\n   console.log('File Renamed!');\\n});\\n\".trim();var ServerSide=/*#__PURE__*/function(_Component){_inherits(ServerSide,_Component);function ServerSide(){_classCallCheck(this,ServerSide);return _possibleConstructorReturn(this,_getPrototypeOf(ServerSide).apply(this,arguments));}_createClass(ServerSide,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"b\",null,\"crypto\"),React.createElement(\"br\",null),React.createElement(\"i\",null,\"To handle OpenSSL cryptographic functions The crypto module provides a way of handling encrypted data.\"),React.createElement(\"br\",null),React.createElement(\"b\",null,\"(i) Encrypt the text 'abc'\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:crypto,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),\"console.log(mystr);\",React.createElement(\"br\",null),\"o/p - 34feb914c099df25794bf9ccb85bea72\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"(ii) Decrypt back to 'abc'\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:deCrypto,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),\"console.log(mystr);\",React.createElement(\"br\",null),\"o/p - abc\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"dgram\"),React.createElement(\"br\",null),\"Provides implementation of UDP datagram sockets It can be used to send messages from one computer/server to another.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:dgram,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"dgram_2\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:dgram_2,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),\"When initiating the second file, the first Command window will now look like this:\",React.createElement(\"br\",null),\"o/p - I got this message: abc\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"dns - To do DNS lookups and name resolution functions\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:dns,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),\"o/p - 192.229.133.221\",React.createElement(\"br\",null),\"getServers() - Returns an array containing all IP addresses belonging to the current server\",React.createElement(\"br\",null),\"lookup() - Looks up a hostname. A callback function contains information about the hostname,\",React.createElement(\"br\",null),\"including it's IP address\",React.createElement(\"br\",null),\"lookupService() - Looks up a address and port. A callback function contains information about the address, such as the hostname\",React.createElement(\"br\",null),\"resolve() - Returns an array of record types belonging to the specified hostname\",React.createElement(\"br\",null),\"resolve4() - Looks up an IPv4 address. The callback function includes an array of IPv4 addresses\",React.createElement(\"br\",null),\"resolve6() - Looks up an IPv6 address. The callback function includes an array of IPv6 addresses\",React.createElement(\"br\",null),\"resolveTxt() - Looks up text query records for the specified hostname.\",React.createElement(\"br\",null),\"reverse() - Reverses an IP address into an array of hostnames\",React.createElement(\"br\",null),\"setServers() - Sets the IP addresses of the servers\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"querystring\"),React.createElement(\"br\",null),React.createElement(\"i\",null,\"To handle URL query strings. The Query String module provides a way of parsing the URL query string.\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:querystring,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),\"o/p - 2018\",React.createElement(\"br\",null),\"escape() - Returns an escaped querystring\",React.createElement(\"br\",null),\"parse() - Parses the querystring and returns an object\",React.createElement(\"br\",null),\"stringify() - Stringifies an object, and returns a query string\",React.createElement(\"br\",null),\"unescape() -\",React.createElement(\"br\",null),React.createElement(\"br\",null),\"``              \",React.createElement(\"b\",null,\"Getting Input from Users\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:GettingInPut,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),\"$ node server.js add\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"tls\"),React.createElement(\"br\",null),\"To implement TLS and SSL protocols\",React.createElement(\"br\",null),\"The TLS module provides a way of implementing TLS (Transport Layer Security) and SSL (Secure Socket Layer).\",React.createElement(\"br\",null),\"connect() - Returns a Socket object\",React.createElement(\"br\",null),\"createSecureContext() - Creates an object containing security details\",React.createElement(\"br\",null),\"createServer() -Creates a Server object\",React.createElement(\"br\",null),\"getCiphers() - Returns an array containing the supported SSL ciphers\",React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:tls,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\". tty - Provides classes used by a text terminal\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:tty,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),\"o/p - default.htm\",React.createElement(\"br\",null),\"url.format() - Returns a formatted URL string\",React.createElement(\"br\",null),\"url.parse() - Returns a URL object\",React.createElement(\"br\",null),\"url.resolve() - Resolves a URL\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"util - The Util module provides access to some utility functions\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:util,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),\"o/p - Congratulate Linus on his 6th birthday!\",React.createElement(\"br\",null),\"debuglog() - Writes debug messages to the error object\",React.createElement(\"br\",null),\"deprecate() - Marks the specified function as deprecated\",React.createElement(\"br\",null),\"format() - Formats the specified string, using the specified arguments\",React.createElement(\"br\",null),\"inherits() - Inherits methods from one function into another\",React.createElement(\"br\",null),\"inspect() - Inspects the specified object and returns the object as a string\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"vm\"),React.createElement(\"br\",null),\"The VM module provides a way of executing JavaScript on a virtual machine, almost like eval() in JavaScript.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:vm,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return ServerSide;}(Component);export default withStyles(styles)(ServerSide);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/nodeJs/nodeDeep/serverSide.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","crypto","trim","deCrypto","dgram","dgram_2","dns","querystring","GettingInPut","tls","tty","util","vm","Write","Delete","appendFile","open","writeFile","Rename","ServerSide","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst crypto = `var crypto = require('crypto');\nvar mykey = crypto.createCipher('aes-128-cbc', 'mypassword');\nvar mystr = mykey.update('abc', 'utf8', 'hex')\n\nmystr += mykey.update.final('hex');\n`.trim()\n\nconst deCrypto = `var crypto = require('crypto');\nvar mykey = crypto.createDecipher('aes-128-cbc', 'mypassword');\nvar mystr = mykey.update('34feb914c099df25794bf9ccb85bea72', 'hex', 'utf8')\n\nmystr += mykey.update.final('utf8');\n`.trim()\n\nconst dgram = `(i) var dgram = require('dgram');\nvar s = dgram.createSocket('udp4');\n  s.on('message', function(msg, rinfo) {\n  console.log('I got this message: ' + msg);\n  });\n  \ns.bind(8080);`.trim()\n\nconst dgram_2 = `(ii) var dgram = require('dgram');\n  var s = dgram.createSocket('udp4');\n  s.send(Buffer.from('abc'), 8080, 'localhost');\n`.trim()\n\nconst dns = `var dns = require('dns');\n    var w3 = dns.lookup('www.w3schools.com', function (err, addresses, family) {\n     console.log(addresses);\n    });\n`.trim()\n\nconst querystring = `var querystring = require('querystring');\n  var q = querystring.parse('year=2017&month=february');\n  console.log(q.year);`.trim()\n\nconst GettingInPut = `const command = process.argv[2]\nif (command === 'add') {\n   console.log('Adding note!')\n }\n else if (command === 'remove') {\n   console.log('Removing note!')\n }\n`.trim()\n\nconst tls = `var tls = require('tls');`.trim()\n\nconst tty = ` url - The URL module provides a way of parsing the URL string.\nvar http = require('http');\nvar url = require('url');\nhttp.createServer(function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/plain'});\n  var q = url.parse(req.url, true);\n  res.write(q.href);\n  res.end();\n}).listen(8080);\n`.trim()\n\nconst util = `var util = require('util');\nvar txt = 'Congratulate %s on his %dth birthday!';\nvar result = util.format(txt, 'Linus', 6);\n\nconsole.log(result);\n`.trim()\n\nconst vm = `var vm = require('vm');\nvar myObj = { name: 'John', age: 38 };\nvm.createContext(myObj);\nvm.runInContext('age += 1;', myObj);\n\nconsole.log(myObj);\n`.trim()\n\n\n\nconst Write = `const fs = require('fs')\nfs.writeFileSync('notes.txt', 'I live in Philadelphia')\n`.trim()\n\nconst Delete = `const path='D:\\Concepts\\NodeJs\\demo\\text.txt';\nconsole.log(fs.unlinkSync(path))\n`.trim()\n\nconst appendFile = `var fs = require('fs');\nfs.appendFile('mynewfile1.txt', 'Hello content!', function (err) {\n if (err) throw err;\n   console.log('Saved!');\n});`.trim()\n\nconst open = `var fs = require('fs');\nfs.open('mynewfile2.txt', 'w', function (err, file) {\n if (err) throw err;\n   console.log('Saved!');\n});\n`.trim()\n\nconst writeFile = `var fs = require('fs');\nfs.writeFile('mynewfile3.txt', 'Hello content!', function (err) {\n if (err) throw err;\n   console.log('Saved!');\n});\n`.trim()\n\nconst Rename = `var fs = require('fs');\nfs.rename('mynewfile1.txt', 'myrenamedfile.txt', function (err) {\n   if (err) throw err;\n   console.log('File Renamed!');\n});\n`.trim()\n\n\nclass ServerSide extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <b>crypto</b>\n              <br />\n              <i>To handle OpenSSL cryptographic functions\n                The crypto module provides a way of handling encrypted data.</i>\n              <br />\n              <b>(i) Encrypt the text 'abc'</b>\n              <div style={titles}>\n                <PrismCode\n                  code={crypto}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              console.log(mystr);\n              <br />\n              o/p - 34feb914c099df25794bf9ccb85bea72\n              <br />\n              <br />\n              <b>(ii) Decrypt back to 'abc'</b>\n              <div style={titles}>\n                <PrismCode\n                  code={deCrypto}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              console.log(mystr);\n              <br />\n              o/p - abc\n              <br />\n              <br />\n              <b>dgram</b>\n              <br />\n              Provides implementation of UDP datagram sockets\n              It can be used to send messages from one computer/server to another.\n              <div style={titles}>\n                <PrismCode\n                  code={dgram}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>dgram_2</b>\n              <div style={titles}>\n                <PrismCode\n                  code={dgram_2}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              When initiating the second file, the first Command window will now look like this:\n              <br />\n              o/p - I got this message: abc\n              <br />\n              <br />\n              <b>dns - To do DNS lookups and name resolution functions</b>\n              <div style={titles}>\n                <PrismCode\n                  code={dns}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              o/p - 192.229.133.221\n              <br />\n              getServers() - Returns an array containing all IP addresses belonging to the current server\n              <br />lookup() - Looks up a hostname. A callback function contains information about the hostname,\n              <br />including it's IP address\n              <br />lookupService() - Looks up a address and port. A callback function contains information about\n              the address, such as the hostname\n              <br />resolve() - Returns an array of record types belonging to the specified hostname\n              <br />resolve4() - Looks up an IPv4 address. The callback function includes an array of IPv4 addresses\n              <br />resolve6() - Looks up an IPv6 address. The callback function includes an array of IPv6 addresses\n              <br />resolveTxt() - Looks up text query records for the specified hostname.\n              <br />reverse() - Reverses an IP address into an array of hostnames\n              <br />setServers() - Sets the IP addresses of the servers\n              <br />\n              <br />\n              <b>querystring</b>\n              <br />\n              <i>To handle URL query strings. The Query String module provides a way of parsing\n                the URL query string.</i>\n              <div style={titles}>\n                <PrismCode\n                  code={querystring}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              o/p - 2018\n              <br />\n              escape() - Returns an escaped querystring<br />\n              parse() - Parses the querystring and returns an object<br />\n              stringify() - Stringifies an object, and returns a query string<br />\n              unescape() -\n              <br />\n              <br />\n\n              ``              <b>Getting Input from Users</b>\n              <div style={titles}>\n                <PrismCode\n                  code={GettingInPut}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              $ node server.js add\n              <br />\n              <br />\n\n              <b>tls</b>\n              <br />\n              To implement TLS and SSL protocols<br />\n              The TLS module provides a way of implementing TLS (Transport Layer Security) and SSL (Secure\n              Socket Layer).<br />\n              connect() - Returns a Socket object<br />\n              createSecureContext() - Creates an object containing security details<br />\n              createServer() -Creates a Server object<br />\n              getCiphers() - Returns an array containing the supported SSL ciphers<br />\n              <div style={titles}>\n                <PrismCode\n                  code={tls}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>. tty - Provides classes used by a text terminal</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={tty}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              o/p - default.htm\n              <br />\n              url.format() - Returns a formatted URL string<br />\n              url.parse() - Returns a URL object<br />\n              url.resolve() - Resolves a URL\n              <br />\n              <br />\n              <b>util - The Util module provides access to some utility functions</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={util}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              o/p - Congratulate Linus on his 6th birthday!<br />\n              debuglog() - Writes debug messages to the error object<br />\n              deprecate() - Marks the specified function as deprecated<br />\n              format() - Formats the specified string, using the specified arguments<br />\n              inherits() - Inherits methods from one function into another<br />\n              inspect() - Inspects the specified object and returns the object as a string\n              <br />\n              <br />\n              <b>vm</b>\n              <br />\n              The VM module provides a way of executing JavaScript on a virtual machine, almost like\n              eval() in JavaScript.\n\n              <div style={titles}>\n                <PrismCode\n                  code={vm}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(ServerSide));\n"]},"metadata":{},"sourceType":"module"}