{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var reactShareSimplified=\"\\nimport {\\n  FacebookShareButton,\\n  GooglePlusShareButton,\\n  TwitterShareButton,\\n  WhatsappShareButton,\\n  EmailShareButton,\\n  FacebookIcon,\\n  TwitterIcon,\\n  GooglePlusIcon,\\n  EmailIcon,\\n  WhatsappIcon\\n} from \\\"react-share\\\";\\n\\n\\nclass ReactShareSimplified extends Component {\\n  render() {\\n    const { url, title, facebook, googlePlus, twitter, whatsapp, email, addClass, Previewemail } = this.props;\\n    let { facebookClass, twitterClass, googlePlusClass, whatsappClass, emailClass } = this.props || \\\"shareIcon\\\";\\n\\n    let iconSize = 32;\\n    if (this.props.iconSize !== undefined) { iconSize = this.props.iconSize }\\n\\n    return (\\n      <span className={addClass}>\\n        {facebook && (<FacebookShareButton url={url} quote={title} className={facebookClass}>\\n          <FacebookIcon size={iconSize} round />\\n        </FacebookShareButton>)}\\n\\n        {googlePlus && (<GooglePlusShareButton url={url} quote={title}  className={googlePlusClass}>\\n          <GooglePlusIcon size={iconSize} round />\\n        </GooglePlusShareButton>)}\\n\\n        {twitter && (<TwitterShareButton url={url} quote={title} style={{ outline: 'none' }} className={twitterClass}>\\n          <TwitterIcon size={iconSize} round />\\n        </TwitterShareButton>)}\\n\\n        {whatsapp && (<WhatsappShareButton url={url} quote={title} style={{ outline: 'none' }} className={whatsappClass}>\\n          <WhatsappIcon size={iconSize} round />\\n        </WhatsappShareButton>)}\\n\\n        {email && (<EmailShareButton url={url} quote={title} style={{ outline: 'none' }} className={emailClass}>\\n          <EmailIcon size={iconSize} round />\\n        </EmailShareButton>)}\\n        {Previewemail && (<EmailShareButton url={url} quote={title} style={{ outline: 'none' }} className={emailClass}>\\n          <EmailIcon size={iconSize} round />\\n        </EmailShareButton>)}\\n      </span>\\n    );\\n  }\\n}\".trim();var app=\"\\n//App.js\\nimport ReactShareSimplified from './dist/ReactShareSimplified'\\nimport './App.css';\\n\\nclass App extends Component {\\n  render() {\\n    const url = \\\"https://www.github.com\\\";\\n    const title = \\\"React share simplified\\\";\\n    return (\\n      <div className=\\\"App\\\">\\n        <div className=\\\"align-inline\\\" style={{marginTop:'10px'}}>\\n          <span className=\\\"share-title\\\">Share: </span>\\n          <ReactShareSimplified\\n            url={url}\\n            title={title}\\n            facebook={true}\\n            facebookClass=\\\"iconStyle\\\"\\n            googlePlus={true}\\n            googlePlusClass=\\\"iconStyle\\\"\\n            twitter={true}\\n            twitterClass=\\\"iconStyle\\\"\\n            email={true}\\n            emailClass=\\\"iconStyle\\\"\\n            whatsapp={true}\\n            whatsappClass=\\\"iconStyle\\\"\\n            iconSize={32}\\n            addClass=\\\"align-inline\\\"\\n          />\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\n\\n\\n//App.css\\n.share-title {\\n  justify-content: center;\\n  align-self: center;\\n  font-size: 17px;\\n  font-family: \\\"Nunito\\\";\\n  font-weight: 500;\\n  margin-right: 5px;\\n}\\n.align-inline {\\n  display: flex;\\n  flex: 1;\\n  flex-direction: row;\\n}\\n.iconStyle {\\n    margin: 0 5px 5px;\\n    cursor: pointer;\\n}\\n\".trim();var server=\"\\nconst cors = require('cors');\\nconst express = require('express');\\n\\n//Secret key\\nconst stripe = require('stripe')('sk_test_51He1P4Jz7nbfLVoYjEiuLJJXUkw3yFMOLRXLm8Ons2fnzuwfo\\n               FLzCyncHIubREzUs60yiDPNvSxZltanq41RyLEi00vKugjwhC');\\nconst uuid = require('uuid');\\n\\nconst app = express();\\n\\napp.use(express.json())\\napp.use(cors())\\n\\napp.get('/', (req, res) => {\\n    res.send('It is working')\\n})\\n\\napp.post('/payment', (req, res) => {\\n    const { product, token } = req.body;\\n    console.log('Products', product);\\n    console.log('Price', product.price);\\n    const idempontencyKey = uuid()\\n\\n    return stripe.customers.create({\\n        email: token.email,\\n        source: token.id\\n    }).then(customer => {\\n        stripe.charges.create({\\n            amount: product.price * 100,\\n            currency: 'usd',\\n            customer: customer.id,\\n            receipt_email: token.email,\\n            description: 'Purchase of product.name',\\n            shipping: {\\n                name: token.card.name,\\n                address: {\\n                    country: token.card.address_country\\n                }\\n            }\\n        }, { idempontencyKey })\\n    })\\n        .then(result => res.status(200).json(result))\\n        .catch(err => console.log(err))\\n})\\n\\n\\napp.listen(5000, () => console.log('Started on port 5000'))\".trim();var clientApp=\"\\nimport React, { useState } from 'react';\\nimport StripeCheckout from 'react-stripe-checkout';\\n\\nfunction App() {\\n\\n  const [product, setProduct] = useState({\\n    name: \\\"Reactjs\\\",\\n    price: 10,\\n    productBy: 'Facebook'\\n  })\\n\\n  const makePayment = token => {\\n    const body = {\\n      token,\\n      product\\n    }\\n    const header = {\\n      \\\"Content-Type\\\": \\\"application/json\\\"\\n    }\\n\\n    return fetch('http://localhost:5000/payment', {\\n    method: 'POST',\\n      header,\\n      body: JSON.stringify(body)\\n    }).then(res => {\\n        console.log('Response', res)\\n        const { status } = res;\\n        console.log('Status', status)\\n      })\\n  .catch(err => console.log(err))\\n  }\\n\\nreturn (\\n  <div className=\\\"App\\\">\\n    Stripe\\n    <StripeCheckout\\n      //Publishable key\\n      // stripeKey={process.env.REACT_APP_KEY}\\n      stripeKey=\\\"pk_test_51He1P4Jz7nbfLVoYDBP7q8kVxEZLjLd34krGafVPawZ4PIkziUVjrOyzePVtXM3rkRoo04sV\\n                 fvFjBuRZehSWy8Xu00kIVA41KE\\\"\\n      token={makePayment}\\n      amount={product.price * 100}\\n      name=\\\"Reactjs\\\"\\n      shippingAddress\\n      billingAddress\\n    />\\n  </div>\\n);\\n}\\n\".trim();var ReactShare=/*#__PURE__*/function(_Component){_inherits(ReactShare,_Component);function ReactShare(){_classCallCheck(this,ReactShare);return _possibleConstructorReturn(this,_getPrototypeOf(ReactShare).apply(this,arguments));}_createClass(ReactShare,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"React Share\"),React.createElement(\"b\",null,\"dist/ReactShareSimplified.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:reactShareSimplified,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"App.js\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:app,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Stripe\"),React.createElement(\"b\",null,\"server.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:server,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Client\"),React.createElement(\"b\",null,\"App.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:clientApp,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return ReactShare;}(Component);export default withStyles(styles)(ReactShare);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/mern/projects/react_share.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","reactShareSimplified","trim","app","server","clientApp","ReactShare","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst reactShareSimplified = `\nimport {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n  EmailShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  GooglePlusIcon,\n  EmailIcon,\n  WhatsappIcon\n} from \"react-share\";\n\n\nclass ReactShareSimplified extends Component {\n  render() {\n    const { url, title, facebook, googlePlus, twitter, whatsapp, email, addClass, Previewemail } = this.props;\n    let { facebookClass, twitterClass, googlePlusClass, whatsappClass, emailClass } = this.props || \"shareIcon\";\n\n    let iconSize = 32;\n    if (this.props.iconSize !== undefined) { iconSize = this.props.iconSize }\n\n    return (\n      <span className={addClass}>\n        {facebook && (<FacebookShareButton url={url} quote={title} className={facebookClass}>\n          <FacebookIcon size={iconSize} round />\n        </FacebookShareButton>)}\n\n        {googlePlus && (<GooglePlusShareButton url={url} quote={title}  className={googlePlusClass}>\n          <GooglePlusIcon size={iconSize} round />\n        </GooglePlusShareButton>)}\n\n        {twitter && (<TwitterShareButton url={url} quote={title} style={{ outline: 'none' }} className={twitterClass}>\n          <TwitterIcon size={iconSize} round />\n        </TwitterShareButton>)}\n\n        {whatsapp && (<WhatsappShareButton url={url} quote={title} style={{ outline: 'none' }} className={whatsappClass}>\n          <WhatsappIcon size={iconSize} round />\n        </WhatsappShareButton>)}\n\n        {email && (<EmailShareButton url={url} quote={title} style={{ outline: 'none' }} className={emailClass}>\n          <EmailIcon size={iconSize} round />\n        </EmailShareButton>)}\n        {Previewemail && (<EmailShareButton url={url} quote={title} style={{ outline: 'none' }} className={emailClass}>\n          <EmailIcon size={iconSize} round />\n        </EmailShareButton>)}\n      </span>\n    );\n  }\n}`.trim();\n\nconst app = `\n//App.js\nimport ReactShareSimplified from './dist/ReactShareSimplified'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    const url = \"https://www.github.com\";\n    const title = \"React share simplified\";\n    return (\n      <div className=\"App\">\n        <div className=\"align-inline\" style={{marginTop:'10px'}}>\n          <span className=\"share-title\">Share: </span>\n          <ReactShareSimplified\n            url={url}\n            title={title}\n            facebook={true}\n            facebookClass=\"iconStyle\"\n            googlePlus={true}\n            googlePlusClass=\"iconStyle\"\n            twitter={true}\n            twitterClass=\"iconStyle\"\n            email={true}\n            emailClass=\"iconStyle\"\n            whatsapp={true}\n            whatsappClass=\"iconStyle\"\n            iconSize={32}\n            addClass=\"align-inline\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n//App.css\n.share-title {\n  justify-content: center;\n  align-self: center;\n  font-size: 17px;\n  font-family: \"Nunito\";\n  font-weight: 500;\n  margin-right: 5px;\n}\n.align-inline {\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n}\n.iconStyle {\n    margin: 0 5px 5px;\n    cursor: pointer;\n}\n`.trim();\n\nconst server = `\nconst cors = require('cors');\nconst express = require('express');\n\n//Secret key\nconst stripe = require('stripe')('sk_test_51He1P4Jz7nbfLVoYjEiuLJJXUkw3yFMOLRXLm8Ons2fnzuwfo\n               FLzCyncHIubREzUs60yiDPNvSxZltanq41RyLEi00vKugjwhC');\nconst uuid = require('uuid');\n\nconst app = express();\n\napp.use(express.json())\napp.use(cors())\n\napp.get('/', (req, res) => {\n    res.send('It is working')\n})\n\napp.post('/payment', (req, res) => {\n    const { product, token } = req.body;\n    console.log('Products', product);\n    console.log('Price', product.price);\n    const idempontencyKey = uuid()\n\n    return stripe.customers.create({\n        email: token.email,\n        source: token.id\n    }).then(customer => {\n        stripe.charges.create({\n            amount: product.price * 100,\n            currency: 'usd',\n            customer: customer.id,\n            receipt_email: token.email,\n            description: 'Purchase of product.name',\n            shipping: {\n                name: token.card.name,\n                address: {\n                    country: token.card.address_country\n                }\n            }\n        }, { idempontencyKey })\n    })\n        .then(result => res.status(200).json(result))\n        .catch(err => console.log(err))\n})\n\n\napp.listen(5000, () => console.log('Started on port 5000'))`.trim();\n\nconst clientApp = `\nimport React, { useState } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\n\nfunction App() {\n\n  const [product, setProduct] = useState({\n    name: \"Reactjs\",\n    price: 10,\n    productBy: 'Facebook'\n  })\n\n  const makePayment = token => {\n    const body = {\n      token,\n      product\n    }\n    const header = {\n      \"Content-Type\": \"application/json\"\n    }\n\n    return fetch('http://localhost:5000/payment', {\n    method: 'POST',\n      header,\n      body: JSON.stringify(body)\n    }).then(res => {\n        console.log('Response', res)\n        const { status } = res;\n        console.log('Status', status)\n      })\n  .catch(err => console.log(err))\n  }\n\nreturn (\n  <div className=\"App\">\n    Stripe\n    <StripeCheckout\n      //Publishable key\n      // stripeKey={process.env.REACT_APP_KEY}\n      stripeKey=\"pk_test_51He1P4Jz7nbfLVoYDBP7q8kVxEZLjLd34krGafVPawZ4PIkziUVjrOyzePVtXM3rkRoo04sV\n                 fvFjBuRZehSWy8Xu00kIVA41KE\"\n      token={makePayment}\n      amount={product.price * 100}\n      name=\"Reactjs\"\n      shippingAddress\n      billingAddress\n    />\n  </div>\n);\n}\n`.trim();\n\n\nclass ReactShare extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>React Share</h3>\n              <b>dist/ReactShareSimplified.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={reactShareSimplified}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>App.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={app}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Stripe</h3>\n              <b>server.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={server}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Client</h3>\n              <b>App.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={clientApp}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(ReactShare));\n"]},"metadata":{},"sourceType":"module"}