{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var reducers=\"\\n//reducers/data.js\\nconst initialState = [\\n  { id: 1, title: \\\"mukesh\\\", last:'kumar' },\\n  { id: 2, title: \\\"niketh\\\", last:'kumar' },\\n  { id: 3, title: \\\"subham\\\", last:'kumar' },\\n  { id: 4, title: \\\"sanya\\\", last:'kumari' },\\n]\\n\\n\\nexport default function(state = initialState, action){\\n  const {type, payload} = action;\\n  console.log('actions',action)\\n  \\n  switch (action.type) {\\n    case \\\"ADD_POST\\\":\\n      return state.concat([action.data]);\\n      \\n    case \\\"DELETE_POST\\\":\\n      return state.filter(post => post.id !== action.id);\\n      \\n    case \\\"EDIT_POST\\\":\\n      return state.map(post =>\\n        post.id === action.id ? { ...post, editing: !post.editing } : post\\n      );\\n      \\n    case \\\"UPDATE\\\":\\n      return state.map(post => {\\n        if (post.id === action.id) {\\n          return {\\n            ...post,\\n            title: action.data.newTitle,\\n            message: action.data.newMessage,\\n            editing: !post.editing\\n          };\\n        } else return post;\\n      });\\n    default:\\n      return state;\\n  }\\n}\".trim();var comps=\"\\n//components/post.js\\nimport React, { Component } from \\\"react\\\";\\nimport { connect } from \\\"react-redux\\\";\\n\\nclass Post extends Component {\\n  handleEdit = () => {\\n    this.props.dispatch({\\n      type: \\\"EDIT_POST\\\",\\n      id: this.props.post.id\\n    })\\n  }\\n  \\n  handleDelete = () => {\\n    this.props.dispatch({\\n      type: \\\"DELETE_POST\\\",\\n      id: this.props.post.id\\n    })\\n  }\\n  \\n  render() {\\n    return (\\n      <div>\\n        <h2>{this.props.post.title}</h2>\\n        <p>{this.props.post.message}</p>\\n        <button onClick={this.handleEdit}>Edit</button>\\n        <button onClick={this.handleDelete}>Delete</button>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default connect()(Post);\\n\\n\\n//components/editComponent.js\\nimport React, { Component } from \\\"react\\\";\\nimport { connect } from \\\"react-redux\\\";\\n\\nclass EditComponent extends Component {\\n  handleEdit = e => {\\n    e.preventDefault();\\n    const newTitle = this.getTitle.value;\\n    const newMessage = this.getMessage.value;\\n    const data = {\\n      newTitle,\\n      newMessage\\n    };\\n    this.props.dispatch({ type: \\\"UPDATE\\\", id: this.props.post.id, data: data });\\n  };\\n\\n  render() {\\n    return (\\n      <div>\\n        <form onSubmit={this.handleEdit}>\\n          <input type=\\\"text\\\" ref={input => (this.getTitle = input)} defaultValue={this.props.post.title} />\\n          <br />\\n          <textarea rows=\\\"5\\\" ref={input => (this.getMessage = input)} defaultValue={this.props.post.message} cols=\\\"28\\\" />\\n          <br />\\n          <button>Update</button>\\n        </form>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default connect()(EditComponent);\\n\\n\\n\\n//components/App.js\\nimport React, { Component } from \\\"react\\\";\\nimport { connect } from \\\"react-redux\\\";\\nimport EditComponent from \\\"./editComponent\\\";\\nimport Post from \\\"./post\\\";\\n\\nclass App extends Component {\\n  handleSubmit = e => {\\n    e.preventDefault();\\n\\n    const title = this.getTitle.value;\\n    const message = this.getMessage.value;\\n    const data = {\\n      id: new Date(),\\n      title,\\n      message,\\n      editing: false\\n    };\\n\\n    this.props.dispatch({\\n      type: \\\"ADD_POST\\\",\\n      data\\n    });\\n    this.getTitle.value = \\\"\\\";\\n    this.getMessage.value = \\\"\\\";\\n  };\\n  \\n  render() {\\n    return (\\n      <div>\\n        <form onSubmit={this.handleSubmit}>\\n          <input type=\\\"text\\\" ref={input => (this.getTitle = input)} />\\n          <br />\\n          <textarea ref={input => (this.getMessage = input)} rows=\\\"5\\\" cols=\\\"28\\\" />\\n          <button>Post</button>\\n        </form>\\n      \\n        {this.props.posts.map(post => (\\n          <div key={post.id}>\\n            {post.editing ? (\\n              <EditComponent post={post} key={post.id} />\\n            ) : (\\n              <Post key={post.id} post={post} />\\n            )}\\n          </div>\\n        ))}\\n      </div>\\n    );\\n  }\\n}\\n\\nconst mapStateToProps = state => ({\\n    posts: state.obj\\n});\\n\\nexport default connect(mapStateToProps)(App);\\n\".trim();var ReduxCurd=/*#__PURE__*/function(_Component){_inherits(ReduxCurd,_Component);function ReduxCurd(){_classCallCheck(this,ReduxCurd);return _possibleConstructorReturn(this,_getPrototypeOf(ReduxCurd).apply(this,arguments));}_createClass(ReduxCurd,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Reducers\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:reducers,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Components\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:comps,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return ReduxCurd;}(Component);export default withStyles(styles)(ReduxCurd);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/Redux/deep/reduxCurd.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","reducers","trim","comps","ReduxCurd","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAGA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADgB,CAKvBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALa,CAQvBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARY,CAAL,EAApB,CAaA,GAAMC,CAAAA,QAAQ,CAAG,ijCAwCdC,IAxCc,EAAjB,CA0CA,GAAMC,CAAAA,KAAK,CAAG,48FA8HZD,IA9HY,EAAd,C,GAiIME,CAAAA,S,qSACgB,CAClBC,UAAU,CAAC,iBAAMvB,CAAAA,KAAK,CAACwB,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACZ,KAA1B,EACE,8BAAI,oBAAC,OAAD,MAAJ,CADF,CADF,CADF,CAME,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEY,OAAO,CAACZ,KAA1B,EACE,oBAAC,IAAD,MACE,yCADF,CAEE,2BAAK,KAAK,CAAEN,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEY,QADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAFF,CASE,8BATF,CAUE,2CAVF,CAWE,2BAAK,KAAK,CAAEZ,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEc,KADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAXF,CADF,CADF,CANF,CADF,CAgCD,C,uBAtCqBtB,S,EAyCxB,cAAgBI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBW,SAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst reducers = `\n//reducers/data.js\nconst initialState = [\n  { id: 1, title: \"mukesh\", last:'kumar' },\n  { id: 2, title: \"niketh\", last:'kumar' },\n  { id: 3, title: \"subham\", last:'kumar' },\n  { id: 4, title: \"sanya\", last:'kumari' },\n]\n\n\nexport default function(state = initialState, action){\n  const {type, payload} = action;\n  console.log('actions',action)\n  \n  switch (action.type) {\n    case \"ADD_POST\":\n      return state.concat([action.data]);\n      \n    case \"DELETE_POST\":\n      return state.filter(post => post.id !== action.id);\n      \n    case \"EDIT_POST\":\n      return state.map(post =>\n        post.id === action.id ? { ...post, editing: !post.editing } : post\n      );\n      \n    case \"UPDATE\":\n      return state.map(post => {\n        if (post.id === action.id) {\n          return {\n            ...post,\n            title: action.data.newTitle,\n            message: action.data.newMessage,\n            editing: !post.editing\n          };\n        } else return post;\n      });\n    default:\n      return state;\n  }\n}`.trim();\n\nconst comps = `\n//components/post.js\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Post extends Component {\n  handleEdit = () => {\n    this.props.dispatch({\n      type: \"EDIT_POST\",\n      id: this.props.post.id\n    })\n  }\n  \n  handleDelete = () => {\n    this.props.dispatch({\n      type: \"DELETE_POST\",\n      id: this.props.post.id\n    })\n  }\n  \n  render() {\n    return (\n      <div>\n        <h2>{this.props.post.title}</h2>\n        <p>{this.props.post.message}</p>\n        <button onClick={this.handleEdit}>Edit</button>\n        <button onClick={this.handleDelete}>Delete</button>\n      </div>\n    );\n  }\n}\n\nexport default connect()(Post);\n\n\n//components/editComponent.js\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass EditComponent extends Component {\n  handleEdit = e => {\n    e.preventDefault();\n    const newTitle = this.getTitle.value;\n    const newMessage = this.getMessage.value;\n    const data = {\n      newTitle,\n      newMessage\n    };\n    this.props.dispatch({ type: \"UPDATE\", id: this.props.post.id, data: data });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleEdit}>\n          <input type=\"text\" ref={input => (this.getTitle = input)} defaultValue={this.props.post.title} />\n          <br />\n          <textarea rows=\"5\" ref={input => (this.getMessage = input)} defaultValue={this.props.post.message} cols=\"28\" />\n          <br />\n          <button>Update</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect()(EditComponent);\n\n\n\n//components/App.js\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport EditComponent from \"./editComponent\";\nimport Post from \"./post\";\n\nclass App extends Component {\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const title = this.getTitle.value;\n    const message = this.getMessage.value;\n    const data = {\n      id: new Date(),\n      title,\n      message,\n      editing: false\n    };\n\n    this.props.dispatch({\n      type: \"ADD_POST\",\n      data\n    });\n    this.getTitle.value = \"\";\n    this.getMessage.value = \"\";\n  };\n  \n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" ref={input => (this.getTitle = input)} />\n          <br />\n          <textarea ref={input => (this.getMessage = input)} rows=\"5\" cols=\"28\" />\n          <button>Post</button>\n        </form>\n      \n        {this.props.posts.map(post => (\n          <div key={post.id}>\n            {post.editing ? (\n              <EditComponent post={post} key={post.id} />\n            ) : (\n              <Post key={post.id} post={post} />\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n    posts: state.obj\n});\n\nexport default connect(mapStateToProps)(App);\n`.trim();\n\n\nclass ReduxCurd extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Reducers</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={reducers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Components</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={comps}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(ReduxCurd));\n"]},"metadata":{},"sourceType":"module"}