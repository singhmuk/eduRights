{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var curd=\"\\n//components/User.js\\nexport const User = ({ name, email, id, onEdit, onDelete }) => {\\n  const [isEdit, setIsEdit] = useState(false);\\n\\n  const handleEdit = () => { setIsEdit(!isEdit); };\\n\\n  const handleDelete = () => { onDelete(id); };\\n\\n  const handleOnEditSubmit = (e) => {\\n    e.preventDefault();\\n    onEdit(id, e.target.name.value, e.target.email.value);\\n    setIsEdit(!isEdit);\\n  };\\n\\n  return (\\n    <div>\\n      {isEdit ? (\\n        <form onSubmit={handleOnEditSubmit}>\\n          <input placeholder=\\\"Name\\\" name=\\\"name\\\" defaultValue={name} />\\n          <input placeholder=\\\"Email\\\" name=\\\"email\\\" defaultValue={email} />\\n          <button onSubmit={handleOnEditSubmit}>Save</button>\\n        </form>\\n      ) : (\\n        <div className=\\\"user\\\">\\n          <span className=\\\"user-name\\\">{name}</span>\\n          <span className=\\\"user-email\\\">{email}</span>\\n          <div>\\n            <button onClick={handleEdit}>Edit</button>\\n            <button onClick={handleDelete}>Delete</button>\\n          </div>\\n        </div>\\n      )}\\n    </div>\\n  );\\n};\\n\\n\\n\\n//components/AddUser.js\\nexport const AddUser = ({ onAdd }) => {\\n  const handleOnSubmit = (e) => {\\n    e.preventDefault();\\n    onAdd(e.target.name.value, e.target.email.value);\\n    e.target.name.value = \\\"\\\";\\n    e.target.email.value = \\\"\\\";\\n  };\\n\\n  return (\\n    <form onSubmit={handleOnSubmit}>\\n      <h3>Add User</h3>\\n      <input placeholder=\\\"Name\\\" name=\\\"name\\\" />\\n      <input placeholder=\\\"Email\\\" name=\\\"email\\\" />\\n      <button onSubmit={handleOnSubmit}>Add</button>\\n      <hr />\\n    </form>\\n  );\\n};\\n\\n\\n//App.js\\nimport { User } from \\\"./components/User\\\";\\nimport { AddUser } from \\\"./components/AddUser\\\";\\n\\nexport default function App() {\\n  const [users, setUsers] = useState([]);\\n\\n  useEffect(() => {\\n    fetchData();\\n  }, []);\\n\\n  const fetchData = async () => {\\n    await fetch(\\\"https://jsonplaceholder.typicode.com/users\\\")\\n      .then((res) => res.json())\\n      .then((data) => setUsers(data))\\n      .catch((error) => console.log(error));\\n  };\\n\\n  const onAdd = async (name, email) => {\\n    await fetch(\\\"https://jsonplaceholder.typicode.com/users\\\", {\\n      method: \\\"POST\\\",\\n      body: JSON.stringify({\\n        name: name,\\n        email: email\\n      }),\\n      headers: {\\n        \\\"Content-type\\\": \\\"application/json; charset=UTF-8\\\"\\n      }\\n    })\\n      .then((res) => {\\n        if (res.status !== 201) {\\n          return;\\n        } else {\\n          return res.json();\\n        }\\n      })\\n      .then((data) => {\\n        setUsers((users) => [...users, data]);\\n      })\\n      .catch((error) => console.log(error));\\n  };\\n\\n  const onEdit = async (id, name, email) => {\\n    await fetch('https://jsonplaceholder.typicode.com/users/'$'{id}', {\\n    method: \\\"PUT\\\",\\n      body: JSON.stringify({\\n        name: name,\\n        email: email\\n      }),\\n        headers: {\\n  \\\"Content-type\\\": \\\"application/json; charset=UTF-8\\\"\\n}\\n    })\\n      .then((res) => {\\n  if (res.status !== 200) {\\n    return;\\n  } else {\\n    return res.json();\\n  }\\n})\\n  .then((data) => {\\n    const updatedUsers = users.map((user) => {\\n      if (user.id === id) {\\n        user.name = name;\\n        user.email = email;\\n      }\\n\\n      return user;\\n    });\\n\\n    setUsers((users) => updatedUsers);\\n  })\\n  .catch((error) => console.log(error));\\n  };\\n\\nconst onDelete = async (id) => {\\n  await fetch('https://jsonplaceholder.typicode.com/users/'$'{id}', {\\n    method: \\\"DELETE\\\"\\n  })\\n    .then((res) => {\\n      if (res.status !== 200) {\\n        return;\\n      } else {\\n        setUsers(\\n          users.filter((user) => {\\n            return user.id !== id;\\n          })\\n        );\\n      }\\n    })\\n    .catch((error) => console.log(error));\\n};\\n\\nreturn (\\n  <div className=\\\"App\\\">\\n    <h1>Users</h1>\\n    <AddUser onAdd={onAdd} />\\n    {users.map((user) => (\\n      <User\\n        id={user.id}\\n        key={user.id}\\n        name={user.name}\\n        email={user.email}\\n        onEdit={onEdit}\\n        onDelete={onDelete}\\n      />\\n    ))}\\n  </div>\\n);\\n}\\n\\n\".trim();// const server = ``.trim();\nvar ExpenseTraMern=/*#__PURE__*/function(_Component){_inherits(ExpenseTraMern,_Component);function ExpenseTraMern(){_classCallCheck(this,ExpenseTraMern);return _possibleConstructorReturn(this,_getPrototypeOf(ExpenseTraMern).apply(this,arguments));}_createClass(ExpenseTraMern,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"React Curd Json Placeholder\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:curd,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return ExpenseTraMern;}(Component);export default withStyles(styles)(ExpenseTraMern);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/Redux/deep/expenseTraMern.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","curd","trim","ExpenseTraMern","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAGA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADgB,CAKvBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALa,CAQvBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARY,CAAL,EAApB,CAaA,GAAMC,CAAAA,IAAI,CAAG,siIA2KXC,IA3KW,EAAb,CA6KA;GAGMC,CAAAA,c,8TACgB,CAClBC,UAAU,CAAC,iBAAMtB,CAAAA,KAAK,CAACuB,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACX,KAA1B,EACE,8BAAI,oBAAC,OAAD,MAAJ,CADF,CADF,CADF,CAME,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEW,OAAO,CAACX,KAA1B,EACE,oBAAC,IAAD,MACE,4DADF,CAEE,2BAAK,KAAK,CAAEN,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEY,IADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAFF,CADF,CADF,CANF,CADF,CAuBD,C,4BA7B0BpB,S,EAgC7B,cAAgBI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBU,cAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst curd = `\n//components/User.js\nexport const User = ({ name, email, id, onEdit, onDelete }) => {\n  const [isEdit, setIsEdit] = useState(false);\n\n  const handleEdit = () => { setIsEdit(!isEdit); };\n\n  const handleDelete = () => { onDelete(id); };\n\n  const handleOnEditSubmit = (e) => {\n    e.preventDefault();\n    onEdit(id, e.target.name.value, e.target.email.value);\n    setIsEdit(!isEdit);\n  };\n\n  return (\n    <div>\n      {isEdit ? (\n        <form onSubmit={handleOnEditSubmit}>\n          <input placeholder=\"Name\" name=\"name\" defaultValue={name} />\n          <input placeholder=\"Email\" name=\"email\" defaultValue={email} />\n          <button onSubmit={handleOnEditSubmit}>Save</button>\n        </form>\n      ) : (\n        <div className=\"user\">\n          <span className=\"user-name\">{name}</span>\n          <span className=\"user-email\">{email}</span>\n          <div>\n            <button onClick={handleEdit}>Edit</button>\n            <button onClick={handleDelete}>Delete</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n\n\n//components/AddUser.js\nexport const AddUser = ({ onAdd }) => {\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    onAdd(e.target.name.value, e.target.email.value);\n    e.target.name.value = \"\";\n    e.target.email.value = \"\";\n  };\n\n  return (\n    <form onSubmit={handleOnSubmit}>\n      <h3>Add User</h3>\n      <input placeholder=\"Name\" name=\"name\" />\n      <input placeholder=\"Email\" name=\"email\" />\n      <button onSubmit={handleOnSubmit}>Add</button>\n      <hr />\n    </form>\n  );\n};\n\n\n//App.js\nimport { User } from \"./components/User\";\nimport { AddUser } from \"./components/AddUser\";\n\nexport default function App() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    await fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((data) => setUsers(data))\n      .catch((error) => console.log(error));\n  };\n\n  const onAdd = async (name, email) => {\n    await fetch(\"https://jsonplaceholder.typicode.com/users\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: name,\n        email: email\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    })\n      .then((res) => {\n        if (res.status !== 201) {\n          return;\n        } else {\n          return res.json();\n        }\n      })\n      .then((data) => {\n        setUsers((users) => [...users, data]);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const onEdit = async (id, name, email) => {\n    await fetch('https://jsonplaceholder.typicode.com/users/'$'{id}', {\n    method: \"PUT\",\n      body: JSON.stringify({\n        name: name,\n        email: email\n      }),\n        headers: {\n  \"Content-type\": \"application/json; charset=UTF-8\"\n}\n    })\n      .then((res) => {\n  if (res.status !== 200) {\n    return;\n  } else {\n    return res.json();\n  }\n})\n  .then((data) => {\n    const updatedUsers = users.map((user) => {\n      if (user.id === id) {\n        user.name = name;\n        user.email = email;\n      }\n\n      return user;\n    });\n\n    setUsers((users) => updatedUsers);\n  })\n  .catch((error) => console.log(error));\n  };\n\nconst onDelete = async (id) => {\n  await fetch('https://jsonplaceholder.typicode.com/users/'$'{id}', {\n    method: \"DELETE\"\n  })\n    .then((res) => {\n      if (res.status !== 200) {\n        return;\n      } else {\n        setUsers(\n          users.filter((user) => {\n            return user.id !== id;\n          })\n        );\n      }\n    })\n    .catch((error) => console.log(error));\n};\n\nreturn (\n  <div className=\"App\">\n    <h1>Users</h1>\n    <AddUser onAdd={onAdd} />\n    {users.map((user) => (\n      <User\n        id={user.id}\n        key={user.id}\n        name={user.name}\n        email={user.email}\n        onEdit={onEdit}\n        onDelete={onDelete}\n      />\n    ))}\n  </div>\n);\n}\n\n`.trim();\n\n// const server = ``.trim();\n\n\nclass ExpenseTraMern extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>React Curd Json Placeholder</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={curd}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(ExpenseTraMern));\n"]},"metadata":{},"sourceType":"module"}