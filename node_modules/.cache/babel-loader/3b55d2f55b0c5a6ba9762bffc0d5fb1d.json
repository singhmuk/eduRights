{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/css/sass.js\";\nimport React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport \"../ReactJs/styles.css\";\nimport Sidebar from \"./sidebar\";\nimport PrismCode from \"../ReactJs/prismCode\";\nconst titles = {\n  backgroundColor: \"#F0F8FF\",\n  padding: \"1px\",\n  fontSize: \"16px\"\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst Calc = `\n.foo {\n\tWidth: calc(100px + 50px)\n}\n`.trim();\nconst Mixin = `\n//To define mixin:\n@mixin grid($flex: true /*default argument*/) {\n  @if $flex {\n      @include flex;\n  } @else {\n      display: block;\n  }\n}\n\n\n.row {\n  @include grid(true);\n}\n\n/*css*/\n.row {\n  display: -webkit-flex;\n  display: flex;\n}\n`.trim();\nconst app = `\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div>\n       <p className='text'>Paragraph</p>\n       <div className='main'>\n       <p className='nesting'>Nesting</p>\n       </div>\n\n       <nav>\n        <ul>\n          <li><a href=\"#\">HTML</a></li>\n          <li><a href=\"#\">CSS</a></li>\n          <li><a href=\"#\">SASS</a></li>\n        </ul>\n      </nav>\n\n      <div className=\"danger\">Warning! This is some text.</div>\n      <button class=\"button-basic button-report\">Report this</button>\n    </div>\n  );\n}\n\nexport default App;\n`.trim();\nconst stylescss = `\n//variables\n$primaryColor:blue;\n$secondaryColor:#008000;\n\n$basePadding:0.75rem;\n$borderRadius:10%;\n\n$font-weight:(\n    \"regular\":400,\n    \"medium\":500,\n    \"bold\":600\n);\n`.trim();\nconst varNesting = `\nh3 { color: $color-primary; }\n\np { color: $color-blue; }\n\na { color: $color-blue; }\n\n$color-primary: pink;\n$color-blue: blue;\n$box-border: 1px solid black;\n$border-radius: 5%;\n$border-padding: 10px;\n$border-with: 50%;\n\n//scss map\n$color: (\n  blue-color: blue,\n  green-color: green,\n  yellow-color: yellow,\n  red-color: red,\n  white-color: white,\n);\n.box1 {\n  background-color: map-get($color, yellow-color);\n  border: $box-border;\n  border-radius: $border-radius;\n}\n\n.box1, h3 {\n  font-size: 30px;\n  color: rgb(63, 61, 202);\n}\n\n.box1, p {\n  font-size: 18px;\n  color: rgb(41, 143, 75);\n}\n\n.box1, a {\n  color: rgb(136, 11, 32);\n}\n\n.box1 a:hover {\n  background-color: red;\n}\n\n.box2 {\n  background-color: map-get($color, red-color);\n  width: $border-with;\n}\n\n.box2, h3 {\n  font-size: 30px;\n  color: rgb(49, 49, 83);\n}\n\n//nesting\nul {\n  list-style-type: square;\n  li {\n    padding: 5px;\n    button {\n      background-color: blue;\n\n      &:hover {\n        background-color: green;\n      }\n    }\n    &:first-child {\n      border: 1px solid pink;\n    }\n  }\n}\n\n\n//variable.html\n<div class=\"box1\">\n  <h3>Best Box</h3>\n  <p>Please make box</p>\n  <a href=\"#\">link here</a>\n</div>\n<div class=\"box2\">\n  <h3>Best Box2</h3>\n  <p>Please make box2</p>\n  <a href=\"#\">link here2</a>\n</div>\n<ul>\n  <li><button>Button1</button></li>\n  <li><button>Button2</button></li>\n  <li><button>Button3</button></li>\n  <li><button>Button4</button></li>\n  <li><button>Button5</button></li>\n  <li><button>Button6</button></li>\n</ul>\n`.trim();\nconst varriscss = `\n$box-border: 1px solid black;\n$border-radius: 5%;\n$border-padding: 10px;\n$border-with: 50%;\n$font-text: 18px;\n\n//scss map\n$color: (\n  blue-color: blue,\n  green-color: green,\n  yellow-color: yellow,\n  red-color: red,\n  white-color: white,\n);\n`.trim();\nconst utilitycss = `\n@import \"./_veriables\";\n\n.float { float: left; }\n\n.floatR { float: right; }\n\n.clear { float: both; }\n\n.margin-0 { margin: 0; }\n\n.padding-0 { padding: 0; }\n`.trim();\nconst scssmap = `\n$color: (\n  blue-color: blue,\n  green-color: green,\n  yellow-color: yellow,\n  red-color: red,\n  white-color: white,\n);\n\nh2 {\n  font-size: $font-text;\n  color: map-get($color, yellow-color);\n}`.trim();\nconst mixinscss = `\n@import \"../scss/base-global\";\n@import \"../scss/_veriables\";\n@import \"../scss/_typography\";\n@import \"../scss/utility\";\n\n$box-border: 1px solid black;\n$border-radius: 5%;\n$border-padding: 10px;\n$border-with: 50%;\n\n//scss map\n$color: (\n  blue-color: blue,\n  green-color: green,\n  yellow-color: yellow,\n  red-color: red,\n  white-color: white,\n);\n\n//mixin\n@mixin block {\n  border: $box-border;\n  border-radius: $border-radius;\n  padding: $border-padding;\n  width: $border-with;\n  h3 {\n    font-size: 30px;\n  }\n}\n\n.box1 {\n  @include block;\n  background-color: map-get($color, yellow-color);\n}\n\n.box1, h3 {\n  @include block;\n  color: rgb(63, 61, 202);\n}\n\n.box2 {\n  @include block;\n  background-color: map-get($color, red-color);\n}\n\n.box2, h3 {\n  @include block;\n  color: rgb(49, 49, 83);\n}`.trim();\nconst operatorscss = `\n//Comparision Operators: <, >, <=, >=\n\n$val1: 10;\n$val2: 5;\n\n.myClass {\n  padding: $val1 % $val2 + px;\n}\n\n.myClass {\n  font-size: $val1 + px;\n}\n\n.myClass {\n  font-size: $val1 * 2 + px;\n}\n`.trim();\nconst extendscss = `\n.box {\n  border: 2px solid green;\n  border-radius: 10px;\n  width: 300px;\n}\n\n//extends\n.greenbox {\n  @extend .box;\n}\n\n//placeholder\n%box2 {\n  border: 2px solid green;\n  border-radius: 10px;\n  width: 300px;\n}\n\n.greenbox2 {\n  @extend %box2;\n}\n`.trim();\nconst functioncss = `\n.function {\n  background-color: yellow;\n  border: 1px solid red;\n}\n\n.function:hover {\n  background-color: darken(blue, 15%);\n  background-color: mix(black, green);\n}\n\n//custom function\n@function sum($val, $val2) {\n  @return $val + $val2;\n}\n\n.function {\n  font-size: sum(20, 50) * 1px;\n}\n\n//image\n.header {\n  background: url(\"../image.png\");\n}`.trim();\nconst condotionscss = `\n$value: high;\n\n.myClass {\n  @if $value == high {\n    margin: 100px;\n  } @else if($value == low) {\n    margin: 550px;\n  } @else {\n    margin: 20px;\n  }\n}\n\n@mixin myStyle {\n  font-size: 10px;\n}\n.myClass2 {\n  @include myStyle();\n}`.trim();\nconst loopcss = `\n@for $i from 1 through 4 {\n  .box {\n    width: 100px;\n  }\n}\n\n@for $i from 1 to 4 {\n  .box {\n    width: 100px;\n  }\n}\n\n//each :Loop iteration happen on the basis of list.\n$devices: desktop, mobile, teblet;\n\n@each $active in $devices {\n  .myDevice {\n    background-color: green;\n  }\n}\n\n//while\n$i: 1;\n@while $i<4 {\n  .myClass {\n    width: 100px;\n  }\n\n  $i: $i + 1;\n}\n`.trim();\nconst interpolationcss = `\n$side: left;\n$value: 50;\n\n.gap-#{$side}-#{$value} {\n  margin-#{$side}: 50px;\n}\n\n@mixin gap($side, $value) {\n}\n\n.myClass {\n  @include gap(right, 100);\n}`.trim();\nconst contentdirective = `\n@mixin myMixin {\n  font-size: 20px;\n}\n\n.class {\n  @include myMixin() {\n    background: red;\n  }\n}\n\n.class2 {\n  @include myMixin();\n  @media only screen and (min-device-width: 481px) and (max-device-width: 1024px) and (orientation: portrait) {\n    background-color: green;\n  }\n}\n`.trim();\n\nclass Sass extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, \"Features of Sass:\"), \"Create scss file with \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, \"_filename\"), \".\", React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, \"Variables\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, \"Nesting\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, \"Partials & Imports\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, \"Mixins\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, \"Extends\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, \"Operators\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, \"Functions\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, \"Conditional Directives\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, \"1. How does Calc work?\"), \"calc() function allows us to perform mathematical operations on property values. Instead of declaring.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, \"Ex. \"), \"static pixel values for an element's width, we can use calc() to specify that the width is the result of the addition of two/ more numeric values.\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: Calc,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, \"2. SASS vs SCSS\"), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, \"SASS is based on indentation and SCSS(Sassy CSS) is not.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, \"SASS uses .sass extension while SCSS uses .scss extension.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, \"SASS uses indentation rather than brackets to indicate nesting of selectors, and newlines rather than semicolons to separate properties.\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, \"3. What is a Mixin and how to use on?\"), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, \"A Mixin is a block of code that lets us group CSS declarations we may reuse throughout our site.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, \"To use a Mixin, we simply use \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, \"@include\"), \" followed by the name of the Mixin and a semi-colon.\")), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: Mixin,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, \"Sass Example\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, \"npm install node-sass\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }, \"app.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: app,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }, \"styles/styles.scss\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: stylescss,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, \"4. Variable & Nesting\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: varNesting,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }, \"5. Variable\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: varriscss,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }, \"6. Utility\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: utilitycss,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    }, \"7. scss-map\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: scssmap,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589\n      },\n      __self: this\n    }, \"8. Mixin scss\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: mixinscss,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }, \"9. Operators\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602\n      },\n      __self: this\n    }, \"Equality Operators: \"), \"==, !=\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605\n      },\n      __self: this\n    }, \"Comparision Operators: \")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608\n      },\n      __self: this\n    }, \"Numeric Operators: \"), \"+, -, %, /, *\")), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: operatorscss,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }, \"10. Extends & Placeholder\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: extendscss,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630\n      },\n      __self: this\n    }, \"11. Functions\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632\n      },\n      __self: this\n    }, \"[[sass built-in feFunctions]]\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633\n      },\n      __self: this\n    }, \"darken($colorName, 15%);\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634\n      },\n      __self: this\n    }, \"lighten($colorName, 15%);\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635\n      },\n      __self: this\n    }, \"mix(black, grin);\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    }, \"map-get($map, $key)\")), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: functioncss,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647\n      },\n      __self: this\n    }, \"12. Condotions\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: condotionscss,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657\n      },\n      __self: this\n    }, \"13. Loop\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: loopcss,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667\n      },\n      __self: this\n    }, \"14. Interpolation\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: interpolationcss,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677\n      },\n      __self: this\n    }, \"15. Content Directive\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: contentdirective,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(Sass);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/css/sass.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","Calc","trim","Mixin","app","stylescss","varNesting","varriscss","utilitycss","scssmap","mixinscss","operatorscss","extendscss","functioncss","condotionscss","loopcss","interpolationcss","contentdirective","Sass","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport \"../ReactJs/styles.css\";\nimport Sidebar from \"./sidebar\";\nimport PrismCode from \"../ReactJs/prismCode\";\n\nconst titles = { backgroundColor: \"#F0F8FF\", padding: \"1px\", fontSize: \"16px\" };\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n});\n\nconst Calc = `\n.foo {\n\tWidth: calc(100px + 50px)\n}\n`.trim();\n\nconst Mixin = `\n//To define mixin:\n@mixin grid($flex: true /*default argument*/) {\n  @if $flex {\n      @include flex;\n  } @else {\n      display: block;\n  }\n}\n\n\n.row {\n  @include grid(true);\n}\n\n/*css*/\n.row {\n  display: -webkit-flex;\n  display: flex;\n}\n`.trim();\n\nconst app = `\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div>\n       <p className='text'>Paragraph</p>\n       <div className='main'>\n       <p className='nesting'>Nesting</p>\n       </div>\n\n       <nav>\n        <ul>\n          <li><a href=\"#\">HTML</a></li>\n          <li><a href=\"#\">CSS</a></li>\n          <li><a href=\"#\">SASS</a></li>\n        </ul>\n      </nav>\n\n      <div className=\"danger\">Warning! This is some text.</div>\n      <button class=\"button-basic button-report\">Report this</button>\n    </div>\n  );\n}\n\nexport default App;\n`.trim();\n\nconst stylescss = `\n//variables\n$primaryColor:blue;\n$secondaryColor:#008000;\n\n$basePadding:0.75rem;\n$borderRadius:10%;\n\n$font-weight:(\n    \"regular\":400,\n    \"medium\":500,\n    \"bold\":600\n);\n`.trim();\n\nconst varNesting = `\nh3 { color: $color-primary; }\n\np { color: $color-blue; }\n\na { color: $color-blue; }\n\n$color-primary: pink;\n$color-blue: blue;\n$box-border: 1px solid black;\n$border-radius: 5%;\n$border-padding: 10px;\n$border-with: 50%;\n\n//scss map\n$color: (\n  blue-color: blue,\n  green-color: green,\n  yellow-color: yellow,\n  red-color: red,\n  white-color: white,\n);\n.box1 {\n  background-color: map-get($color, yellow-color);\n  border: $box-border;\n  border-radius: $border-radius;\n}\n\n.box1, h3 {\n  font-size: 30px;\n  color: rgb(63, 61, 202);\n}\n\n.box1, p {\n  font-size: 18px;\n  color: rgb(41, 143, 75);\n}\n\n.box1, a {\n  color: rgb(136, 11, 32);\n}\n\n.box1 a:hover {\n  background-color: red;\n}\n\n.box2 {\n  background-color: map-get($color, red-color);\n  width: $border-with;\n}\n\n.box2, h3 {\n  font-size: 30px;\n  color: rgb(49, 49, 83);\n}\n\n//nesting\nul {\n  list-style-type: square;\n  li {\n    padding: 5px;\n    button {\n      background-color: blue;\n\n      &:hover {\n        background-color: green;\n      }\n    }\n    &:first-child {\n      border: 1px solid pink;\n    }\n  }\n}\n\n\n//variable.html\n<div class=\"box1\">\n  <h3>Best Box</h3>\n  <p>Please make box</p>\n  <a href=\"#\">link here</a>\n</div>\n<div class=\"box2\">\n  <h3>Best Box2</h3>\n  <p>Please make box2</p>\n  <a href=\"#\">link here2</a>\n</div>\n<ul>\n  <li><button>Button1</button></li>\n  <li><button>Button2</button></li>\n  <li><button>Button3</button></li>\n  <li><button>Button4</button></li>\n  <li><button>Button5</button></li>\n  <li><button>Button6</button></li>\n</ul>\n`.trim();\n\nconst varriscss = `\n$box-border: 1px solid black;\n$border-radius: 5%;\n$border-padding: 10px;\n$border-with: 50%;\n$font-text: 18px;\n\n//scss map\n$color: (\n  blue-color: blue,\n  green-color: green,\n  yellow-color: yellow,\n  red-color: red,\n  white-color: white,\n);\n`.trim();\n\nconst utilitycss = `\n@import \"./_veriables\";\n\n.float { float: left; }\n\n.floatR { float: right; }\n\n.clear { float: both; }\n\n.margin-0 { margin: 0; }\n\n.padding-0 { padding: 0; }\n`.trim();\n\nconst scssmap = `\n$color: (\n  blue-color: blue,\n  green-color: green,\n  yellow-color: yellow,\n  red-color: red,\n  white-color: white,\n);\n\nh2 {\n  font-size: $font-text;\n  color: map-get($color, yellow-color);\n}`.trim();\n\nconst mixinscss = `\n@import \"../scss/base-global\";\n@import \"../scss/_veriables\";\n@import \"../scss/_typography\";\n@import \"../scss/utility\";\n\n$box-border: 1px solid black;\n$border-radius: 5%;\n$border-padding: 10px;\n$border-with: 50%;\n\n//scss map\n$color: (\n  blue-color: blue,\n  green-color: green,\n  yellow-color: yellow,\n  red-color: red,\n  white-color: white,\n);\n\n//mixin\n@mixin block {\n  border: $box-border;\n  border-radius: $border-radius;\n  padding: $border-padding;\n  width: $border-with;\n  h3 {\n    font-size: 30px;\n  }\n}\n\n.box1 {\n  @include block;\n  background-color: map-get($color, yellow-color);\n}\n\n.box1, h3 {\n  @include block;\n  color: rgb(63, 61, 202);\n}\n\n.box2 {\n  @include block;\n  background-color: map-get($color, red-color);\n}\n\n.box2, h3 {\n  @include block;\n  color: rgb(49, 49, 83);\n}`.trim();\n\nconst operatorscss = `\n//Comparision Operators: <, >, <=, >=\n\n$val1: 10;\n$val2: 5;\n\n.myClass {\n  padding: $val1 % $val2 + px;\n}\n\n.myClass {\n  font-size: $val1 + px;\n}\n\n.myClass {\n  font-size: $val1 * 2 + px;\n}\n`.trim();\n\nconst extendscss = `\n.box {\n  border: 2px solid green;\n  border-radius: 10px;\n  width: 300px;\n}\n\n//extends\n.greenbox {\n  @extend .box;\n}\n\n//placeholder\n%box2 {\n  border: 2px solid green;\n  border-radius: 10px;\n  width: 300px;\n}\n\n.greenbox2 {\n  @extend %box2;\n}\n`.trim();\n\nconst functioncss = `\n.function {\n  background-color: yellow;\n  border: 1px solid red;\n}\n\n.function:hover {\n  background-color: darken(blue, 15%);\n  background-color: mix(black, green);\n}\n\n//custom function\n@function sum($val, $val2) {\n  @return $val + $val2;\n}\n\n.function {\n  font-size: sum(20, 50) * 1px;\n}\n\n//image\n.header {\n  background: url(\"../image.png\");\n}`.trim();\n\nconst condotionscss = `\n$value: high;\n\n.myClass {\n  @if $value == high {\n    margin: 100px;\n  } @else if($value == low) {\n    margin: 550px;\n  } @else {\n    margin: 20px;\n  }\n}\n\n@mixin myStyle {\n  font-size: 10px;\n}\n.myClass2 {\n  @include myStyle();\n}`.trim();\n\nconst loopcss = `\n@for $i from 1 through 4 {\n  .box {\n    width: 100px;\n  }\n}\n\n@for $i from 1 to 4 {\n  .box {\n    width: 100px;\n  }\n}\n\n//each :Loop iteration happen on the basis of list.\n$devices: desktop, mobile, teblet;\n\n@each $active in $devices {\n  .myDevice {\n    background-color: green;\n  }\n}\n\n//while\n$i: 1;\n@while $i<4 {\n  .myClass {\n    width: 100px;\n  }\n\n  $i: $i + 1;\n}\n`.trim();\n\nconst interpolationcss = `\n$side: left;\n$value: 50;\n\n.gap-#{$side}-#{$value} {\n  margin-#{$side}: 50px;\n}\n\n@mixin gap($side, $value) {\n}\n\n.myClass {\n  @include gap(right, 100);\n}`.trim();\n\nconst contentdirective = `\n@mixin myMixin {\n  font-size: 20px;\n}\n\n.class {\n  @include myMixin() {\n    background: red;\n  }\n}\n\n.class2 {\n  @include myMixin();\n  @media only screen and (min-device-width: 481px) and (max-device-width: 1024px) and (orientation: portrait) {\n    background-color: green;\n  }\n}\n`.trim();\n\nclass Sass extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4>\n              <Sidebar />\n            </h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Features of Sass:</h3>\n              Create scss file with <b>_filename</b>.\n              <ol>\n                <li>Variables</li>\n                <li>Nesting</li>\n                <li>Partials & Imports</li>\n                <li>Mixins</li>\n                <li>Extends</li>\n                <li>Operators</li>\n                <li>Functions</li>\n                <li>Conditional Directives</li>\n              </ol>\n              <br />\n              <br />\n              <h3>1. How does Calc work?</h3>\n              calc() function allows us to perform mathematical operations on\n              property values. Instead of declaring.\n              <br />\n              <br />\n              <b>Ex. </b>static pixel values for an element's width, we can use\n              calc() to specify that the width is the result of the addition of\n              two/ more numeric values.\n              <div style={titles}>\n                <PrismCode\n                  code={Calc}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>2. SASS vs SCSS</h3>\n              <ol>\n                <li>\n                  SASS is based on indentation and SCSS(Sassy CSS) is not.\n                </li>\n                <li>\n                  SASS uses .sass extension while SCSS uses .scss extension.\n                </li>\n                <li>\n                  SASS uses indentation rather than brackets to indicate nesting\n                  of selectors, and newlines rather than semicolons to separate\n                  properties.\n                </li>\n              </ol>\n              <br />\n              <h3>3. What is a Mixin and how to use on?</h3>\n              <ol>\n                <li>\n                  A Mixin is a block of code that lets us group CSS declarations\n                  we may reuse throughout our site.\n                </li>\n                <li>\n                  To use a Mixin, we simply use <b>@include</b> followed by the\n                  name of the Mixin and a semi-colon.\n                </li>\n              </ol>\n              <div style={titles}>\n                <PrismCode\n                  code={Mixin}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Sass Example</h3>\n              <b>npm install node-sass</b>\n              <br />\n              <b>app.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={app}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>styles/styles.scss</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={stylescss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>4. Variable & Nesting</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={varNesting}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>5. Variable</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={varriscss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>6. Utility</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={utilitycss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>7. scss-map</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={scssmap}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>8. Mixin scss</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={mixinscss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>9. Operators</h3>\n              <ul>\n                <li>\n                  <b>Equality Operators: </b>==, !=\n                </li>\n                <li>\n                  <b>Comparision Operators: </b>\n                </li>\n                <li>\n                  <b>Numeric Operators: </b>+, -, %, /, *\n                </li>\n              </ul>\n              <div style={titles}>\n                <PrismCode\n                  code={operatorscss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>10. Extends & Placeholder</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={extendscss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>11. Functions</h3>\n              <ul>\n                <li>[[sass built-in feFunctions]]</li>\n                <li>darken($colorName, 15%);</li>\n                <li>lighten($colorName, 15%);</li>\n                <li>mix(black, grin);</li>\n                <li>map-get($map, $key)</li>\n              </ul>\n              <div style={titles}>\n                <PrismCode\n                  code={functioncss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>12. Condotions</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={condotionscss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>13. Loop</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={loopcss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>14. Interpolation</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={interpolationcss}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <h3>15. Content Directive</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={contentdirective}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Sass);\n"]},"metadata":{},"sourceType":"module"}