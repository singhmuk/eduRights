{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/ml/deepMl/capture.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst image = `\nimport cv2\nprint(\"Package cv2 imorted\");\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\ncv2.imshow(\"output\", img)\ncv2.waitKey(0)\n`.trim();\nconst video = `\nimport cv2\ncap = cv2.VideoCapture(\"Resources/test.mp4\")\n\nwhile True:\n    success, img = cap.read();\n    cv2.imshow(\"Video\", img)\n    if cv2.waitKey(1) & 0xFF == ord('q'):\n        break;\n`.trim();\nconst webcam = `\nimport cv2\n\ncap = cv2.VideoCapture(0)  //0 is default for laptop camra\ncap.set(3,640)\ncap.set(4,640)\nimport cv2\n\ncap = cv2.VideoCapture(0)  //0 is default for laptop camra\ncap.set(3,640)\ncap.set(4,640)\n`.trim();\nconst gray = `\nimport cv2\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nimgGray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n\ncv2.imshow(\"Gray Image\", imgGray)\ncv2.waitKey(0)\n`.trim();\nconst blur = `\nimport cv2\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nimgBlur = cv2.GaussianBlur(img, (7,7),0)\n\ncv2.imshow(\"Blur Image\", imgBlur)\ncv2.waitKey(0)\n`.trim();\nconst canny = `\nimport cv2\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nimgCanny = cv2.Canny(img, 100,100)\n\ncv2.imshow(\"Canny Image\", imgCanny)\ncv2.waitKey(0)\n`.trim();\nconst dialation = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nkernel = np.ones((5,5),np.uint8)\n\nimgCanny = cv2.Canny(img, 100,100)\nimgDialation = cv2.dilate(imgCanny, kernel, iterations=1)\n\ncv2.imshow(\"Canny Image\", imgCanny)\ncv2.imshow(\"Dialation Image\", imgDialation)\ncv2.waitKey(0)\n`.trim();\nconst eroded = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nkernel = np.ones((5,5),np.uint8)\n\nimgCanny = cv2.Canny(img, 100,100)\nimgDialation = cv2.dilate(imgCanny, kernel, iterations=1)\nimgEroded = cv2.erode(imgDialation, kernel, iterations=1)\n\ncv2.imshow(\"Canny Image\", imgCanny)\ncv2.imshow(\"Dialation Image\", imgDialation)\ncv2.imshow(\"Eroded Image\", imgEroded)\ncv2.waitKey(0)\n`.trim();\nconst resize = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nprint(img.shape)\n\nimgResize = cv2.resize(img, (300,200))\n\ncv2.imshow(\"Image\",img)\ncv2.imshow(\"Resize\",imgResize)\n\ncv2.waitKey(0)\n`.trim();\nconst crop = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\n\nimgCropped = img[0:200,200:500]\n\ncv2.imshow(\"Image\",img)\ncv2.imshow(\"Cropped\",imgCropped)\n\ncv2.waitKey(0)\n`.trim();\nconst shapes = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nimg = np.zeros((512,512,3),np.uint8)\nprint(img)\nimg[:]= 255,0,0\n\ncv2.imshow(\"Image\", img)\ncv2.waitKey(0)\n`.trim();\nconst draw = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nimg = np.zeros((512,512,3),np.uint8)\n\ncv2.line(img,(0,0),(300,300),(0,255),3)\n\ncv2.imshow(\"Image\", img)\ncv2.waitKey(0)\n`.trim();\nconst Prespective = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nwidth,height = 250,350\npts1 = np.float32([[111, 219],[287, 188],[154, 482], [352, 440]])\npts2 = np.float32([[0,0],[width,0],[0,height],[width,height]])\nmatrix = cv2.getPerspectiveTransform(pts1, pts2)\nimgOutput = cv2.warpPerspective(img,matrix,(width,height))\n\ncv2.imshow(\"Output\", imgOutput)\ncv2.waitKey(0)\n`.trim();\n\nclass Capture extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Capture image:\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: image,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Capture video\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: video,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    })), React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"To close video press 'q' on terminal\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Capture video use webcam:\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: webcam,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Basic function: Find Gray Img\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: gray,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Blur\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: blur,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Canny\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: canny,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Dialation\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: dialation,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Eroded: Opposite to Dialation\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: eroded,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"Opencv Convention/Resize Image\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: resize,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"Crop Image\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: crop,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Shapes and Texts:\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: shapes,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"Line draw:\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: draw,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"Earp Prespective:\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: Prespective,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(Capture);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/ml/deepMl/capture.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","image","trim","video","webcam","gray","blur","canny","dialation","eroded","resize","crop","shapes","draw","Prespective","Capture","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = {backgroundColor:'#F0F8FF', padding:'1px', fontSize:'16px'}\n\nconst styles = theme => ({\n  paper: {\n      margin: theme.spacing(1),\n      padding: theme.spacing(1)\n  },\n  smMargin: {\n      margin: theme.spacing(1)\n  },\n  actionDiv: {\n      textAlign: \"center\"\n  }\n})\n\n\nconst image = `\nimport cv2\nprint(\"Package cv2 imorted\");\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\ncv2.imshow(\"output\", img)\ncv2.waitKey(0)\n`.trim()\n\nconst video = `\nimport cv2\ncap = cv2.VideoCapture(\"Resources/test.mp4\")\n\nwhile True:\n    success, img = cap.read();\n    cv2.imshow(\"Video\", img)\n    if cv2.waitKey(1) & 0xFF == ord('q'):\n        break;\n`.trim()\n\nconst webcam = `\nimport cv2\n\ncap = cv2.VideoCapture(0)  //0 is default for laptop camra\ncap.set(3,640)\ncap.set(4,640)\nimport cv2\n\ncap = cv2.VideoCapture(0)  //0 is default for laptop camra\ncap.set(3,640)\ncap.set(4,640)\n`.trim()\n\nconst gray = `\nimport cv2\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nimgGray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n\ncv2.imshow(\"Gray Image\", imgGray)\ncv2.waitKey(0)\n`.trim()\n\nconst blur = `\nimport cv2\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nimgBlur = cv2.GaussianBlur(img, (7,7),0)\n\ncv2.imshow(\"Blur Image\", imgBlur)\ncv2.waitKey(0)\n`.trim()\n\nconst canny = `\nimport cv2\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nimgCanny = cv2.Canny(img, 100,100)\n\ncv2.imshow(\"Canny Image\", imgCanny)\ncv2.waitKey(0)\n`.trim()\n\nconst dialation = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nkernel = np.ones((5,5),np.uint8)\n\nimgCanny = cv2.Canny(img, 100,100)\nimgDialation = cv2.dilate(imgCanny, kernel, iterations=1)\n\ncv2.imshow(\"Canny Image\", imgCanny)\ncv2.imshow(\"Dialation Image\", imgDialation)\ncv2.waitKey(0)\n`.trim()\n\nconst eroded = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nkernel = np.ones((5,5),np.uint8)\n\nimgCanny = cv2.Canny(img, 100,100)\nimgDialation = cv2.dilate(imgCanny, kernel, iterations=1)\nimgEroded = cv2.erode(imgDialation, kernel, iterations=1)\n\ncv2.imshow(\"Canny Image\", imgCanny)\ncv2.imshow(\"Dialation Image\", imgDialation)\ncv2.imshow(\"Eroded Image\", imgEroded)\ncv2.waitKey(0)\n`.trim()\n\nconst resize = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nprint(img.shape)\n\nimgResize = cv2.resize(img, (300,200))\n\ncv2.imshow(\"Image\",img)\ncv2.imshow(\"Resize\",imgResize)\n\ncv2.waitKey(0)\n`.trim()\n\nconst crop = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\n\nimgCropped = img[0:200,200:500]\n\ncv2.imshow(\"Image\",img)\ncv2.imshow(\"Cropped\",imgCropped)\n\ncv2.waitKey(0)\n`.trim()\n\nconst shapes = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nimg = np.zeros((512,512,3),np.uint8)\nprint(img)\nimg[:]= 255,0,0\n\ncv2.imshow(\"Image\", img)\ncv2.waitKey(0)\n`.trim()\n\nconst draw = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nimg = np.zeros((512,512,3),np.uint8)\n\ncv2.line(img,(0,0),(300,300),(0,255),3)\n\ncv2.imshow(\"Image\", img)\ncv2.waitKey(0)\n`.trim()\n\nconst Prespective = `\nimport cv2\nimport numpy as np\n\nimg = cv2.imread(\"D:\\Python\\Machin_Learning\\openCV\\Resources\\imgs.jpg\")\nwidth,height = 250,350\npts1 = np.float32([[111, 219],[287, 188],[154, 482], [352, 440]])\npts2 = np.float32([[0,0],[width,0],[0,height],[width,height]])\nmatrix = cv2.getPerspectiveTransform(pts1, pts2)\nimgOutput = cv2.warpPerspective(img,matrix,(width,height))\n\ncv2.imshow(\"Output\", imgOutput)\ncv2.waitKey(0)\n`.trim()\n\n\nclass Capture extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n            <Grid item xs={2}>\n                <Paper className={classes.paper}>\n                    <h4><Sidebar /></h4>\n                </Paper>\n            </Grid>\n<Grid item xs={10}>\n<Paper className={classes.paper}>\n<List>\n      <h3>Capture image:</h3>\n      <div style={titles}>\n      <PrismCode\n        code={image}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Capture video</h3>\n      <div style={titles}>\n      <PrismCode\n        code={video}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <i>To close video press 'q' on terminal</i>\n      <br/>\n      <br/>\n      <h3>Capture video use webcam:</h3>\n      <div style={titles}>\n      <PrismCode\n        code={webcam}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Basic function: Find Gray Img</h3>\n      <div style={titles}>\n      <PrismCode\n        code={gray}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Blur</h3>\n      <div style={titles}>\n      <PrismCode\n        code={blur}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Canny</h3>\n      <div style={titles}>\n      <PrismCode\n        code={canny}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Dialation</h3>\n      <div style={titles}>\n      <PrismCode\n        code={dialation}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Eroded: Opposite to Dialation</h3>\n      <div style={titles}>\n      <PrismCode\n        code={eroded}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Opencv Convention/Resize Image</h3>\n      <div style={titles}>\n      <PrismCode\n        code={resize}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Crop Image</h3>\n      <div style={titles}>\n      <PrismCode\n        code={crop}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Shapes and Texts:</h3>\n      <div style={titles}>\n      <PrismCode\n        code={shapes}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Line draw:</h3>\n      <div style={titles}>\n      <PrismCode\n        code={draw}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      <br/>\n      <br/>\n      <h3>Earp Prespective:</h3>\n      <div style={titles}>\n      <PrismCode\n        code={Prespective}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      </List>\n      </Paper>\n      </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Capture));\n"]},"metadata":{},"sourceType":"module"}