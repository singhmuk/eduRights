{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import\"../../ReactJs/styles.css\";import Sidebar from\"../sidebar\";import PrismCode from\"../../ReactJs/prismCode\";var titles={backgroundColor:\"#F0F8FF\",padding:\"1px\",fontSize:\"16px\"};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var progress=\"\\n//html\\n{{progress}}\\n<button (click) = \\\"stop($event)\\\" > Stop</button>\\n\\n\\nexport class AppComponent {\\n  progress = 0;\\n  isStop = false;\\n\\n  ngOnInit(){\\n    setInterval(()=>{\\n      if(!this.isStop && this.progress <99){\\n      this.progress = this.progress + 10\\n    }\\n    else{\\n      if(this.progress==100){\\n        this.progress=0\\n      }\\n\\n      this.progress = this.progress\\n    }\\n    },1000)\\n  }\\n\\n  stop(){\\n    this.isStop = !this.isStop\\n  }\\n}\".trim();var pureImpure=\"\\n// import Pure, Impure component in app.module.ts\\n\\n@Pipe({name: 'purePipe'})\\nexport class Pure   {\\n  transform(item){\\n    return item.value  * 2;\\n  }\\n}\\n\\n@Pipe({\\n  name: 'impurePipe',\\n  pure: false\\n  })\\nexport class Impure   {\\n  transform(item){\\n    return item.value   * 2;\\n  }\\n}\\n\\n@Component({\\n  selector: 'app-root',\\n  template: '\\n  <h1> pure: {{Object | purePipe}}</h1>\\n     <h1>impure: {{Object | impurePipe}}</h1>\\n     <button (click) = 'fun()'> change data</button>\\n      '})\\n\\nexport class AppComponent  {\\nObject = {value: 1};\\n  fun() { this.Object.value++; }\\n}\\n\".trim();var Loader=/*#__PURE__*/function(_Component){_inherits(Loader,_Component);function Loader(){_classCallCheck(this,Loader);return _possibleConstructorReturn(this,_getPrototypeOf(Loader).apply(this,arguments));}_createClass(Loader,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"3. Progress Bar\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:progress,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"4. Pure-Impure Pipe\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:pureImpure,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return Loader;}(Component);export default withStyles(styles)(Loader);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/angularjsd/angular 12/loader.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","progress","trim","pureImpure","Loader","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAEA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,QAAY,CACzBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADkB,CAKzBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALe,CAQzBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARc,CAAZ,EAAf,CAaA,GAAMC,CAAAA,QAAQ,CAAG,0dA4BdC,IA5Bc,EAAjB,CA8BA,GAAMC,CAAAA,UAAU,CAAG,2lBAgCjBD,IAhCiB,EAAnB,C,GAkCME,CAAAA,M,sRACgB,CAClBC,UAAU,CAAC,iBAAMvB,CAAAA,KAAK,CAACwB,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACZ,KAA1B,EACE,8BACE,oBAAC,OAAD,MADF,CADF,CADF,CADF,CAQE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEY,OAAO,CAACZ,KAA1B,EACE,oBAAC,IAAD,MACE,gDADF,CAEE,2BAAK,KAAK,CAAEN,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEY,QADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAFF,CASE,8BATF,CAWE,oDAXF,CAYE,2BAAK,KAAK,CAAEZ,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEc,UADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAZF,CADF,CADF,CARF,CADF,CAmCD,C,oBAzCkBtB,S,EA4CrB,cAAeI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBW,MAAnB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport \"../../ReactJs/styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../../ReactJs/prismCode\";\n\nconst titles = { backgroundColor: \"#F0F8FF\", padding: \"1px\", fontSize: \"16px\" };\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n});\n\nconst progress = `\n//html\n{{progress}}\n<button (click) = \"stop($event)\" > Stop</button>\n\n\nexport class AppComponent {\n  progress = 0;\n  isStop = false;\n\n  ngOnInit(){\n    setInterval(()=>{\n      if(!this.isStop && this.progress <99){\n      this.progress = this.progress + 10\n    }\n    else{\n      if(this.progress==100){\n        this.progress=0\n      }\n\n      this.progress = this.progress\n    }\n    },1000)\n  }\n\n  stop(){\n    this.isStop = !this.isStop\n  }\n}`.trim();\n\nconst pureImpure = `\n// import Pure, Impure component in app.module.ts\n\n@Pipe({name: 'purePipe'})\nexport class Pure   {\n  transform(item){\n    return item.value  * 2;\n  }\n}\n\n@Pipe({\n  name: 'impurePipe',\n  pure: false\n  })\nexport class Impure   {\n  transform(item){\n    return item.value   * 2;\n  }\n}\n\n@Component({\n  selector: 'app-root',\n  template: '\n  <h1> pure: {{Object | purePipe}}</h1>\n     <h1>impure: {{Object | impurePipe}}</h1>\n     <button (click) = 'fun()'> change data</button>\n      '})\n\nexport class AppComponent  {\nObject = {value: 1};\n  fun() { this.Object.value++; }\n}\n`.trim();\n\nclass Loader extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4>\n              <Sidebar />\n            </h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>3. Progress Bar</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={progress}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>4. Pure-Impure Pipe</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={pureImpure}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Loader);\n"]},"metadata":{},"sourceType":"module"}