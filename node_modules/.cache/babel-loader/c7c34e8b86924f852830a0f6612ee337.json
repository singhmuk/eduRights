{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/angularjsd/deepAngularjs/angularlFlters.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst app = `\n//app.js\nvar app = angular.module('myApp', []);\nvar root = 'http://jsonplaceholder.typicode.com/users';\n\napp.controller('myCtrl', function($scope, $http) {\n$http({\n  method:'get',\n  url:'http://jsonplaceholder.typicode.com/users'\n})\n.then(res => {\n  $scope.myData = res.data;\n})\n})\n\n\n//index.html\n<body ng-controller=\"myCtrl\">\n    <div> \n        <li ng-repeat=\"x in myData | filter : 'L'\">\n        {{ x.name }}\n        <button ng-click=\"getResult(x)\">Click</button>\n     </li>\n     </div>\n</body>`.trim();\nconst custom = `\nvar app = angular.module('myApp', []);\n  app.filter('myFormat', myFormat);\n  \n  function myFormat() {\n      return function(x) {\n          var i, c, txt = \"\";\n          for (i = 0; i < x.length; i++) {\n              c = x[i];\n              if (i % 2 == 0) {\n                  c = c.toUpperCase();\n              }\n              txt += c;\n          }\n          return txt;\n      };\n  };\n\n\n  app.controller('namesCtrl', namesCtrl);\n  function namesCtrl($scope) {\n      $scope.names = [\n          'Jani',\n          'Carl',\n          'Margareth',\n          'Hege',\n          'Joe',\n          'Gustav',\n          'Birgit',\n          'Mary',\n          'Kai'\n          ];\n  };`.trim();\nconst customIndex = `\n<body  ng-controller=\"namesCtrl\">\n    <li ng-repeat=\"x in names\">\n        {{x | myFormat}}\n    </li>\n</body>\n `.trim();\n\nclass Fiters extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Filter\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Filters can be added in AngularJS to format data:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), \"currency Format a number to a currency format.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), \"date Format a date to a specified format.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), \"filter Select a subset of items from an array.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), \"json Format an object to a JSON string.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), \"limitTo Limits an array/string, into a specified number of elements/characters.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), \"lowercase Format a string to lower case.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), \"number Format a number to a string.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), \"orderBy Orders an array by an expression.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), \"uppercase Format a string to upper case.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), \"Filters can be added to expressions by using the pipe character |, followed by a filter.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"app.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: app,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"custom\"), \"You can make your own filters by registering a new filter factory function with your module.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), \"The myFormat filter will format every other character to uppercase.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"custom.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: custom,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"customIndex.html\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: customIndex,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(Fiters);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/angularjsd/deepAngularjs/angularlFlters.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","app","trim","custom","customIndex","Fiters","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = {backgroundColor:'#F0F8FF', padding:'1px', fontSize:'16px'}\n\nconst styles = theme => ({\n  paper: {\n      margin: theme.spacing(1),\n      padding: theme.spacing(1)\n  },\n  smMargin: {\n      margin: theme.spacing(1)\n  },\n  actionDiv: {\n      textAlign: \"center\"\n  }\n})\n\n\nconst app = `\n//app.js\nvar app = angular.module('myApp', []);\nvar root = 'http://jsonplaceholder.typicode.com/users';\n\napp.controller('myCtrl', function($scope, $http) {\n$http({\n  method:'get',\n  url:'http://jsonplaceholder.typicode.com/users'\n})\n.then(res => {\n  $scope.myData = res.data;\n})\n})\n\n\n//index.html\n<body ng-controller=\"myCtrl\">\n    <div> \n        <li ng-repeat=\"x in myData | filter : 'L'\">\n        {{ x.name }}\n        <button ng-click=\"getResult(x)\">Click</button>\n     </li>\n     </div>\n</body>`.trim()\n\nconst custom = `\nvar app = angular.module('myApp', []);\n  app.filter('myFormat', myFormat);\n  \n  function myFormat() {\n      return function(x) {\n          var i, c, txt = \"\";\n          for (i = 0; i < x.length; i++) {\n              c = x[i];\n              if (i % 2 == 0) {\n                  c = c.toUpperCase();\n              }\n              txt += c;\n          }\n          return txt;\n      };\n  };\n\n\n  app.controller('namesCtrl', namesCtrl);\n  function namesCtrl($scope) {\n      $scope.names = [\n          'Jani',\n          'Carl',\n          'Margareth',\n          'Hege',\n          'Joe',\n          'Gustav',\n          'Birgit',\n          'Mary',\n          'Kai'\n          ];\n  };`.trim()\n\nconst customIndex = `\n<body  ng-controller=\"namesCtrl\">\n    <li ng-repeat=\"x in names\">\n        {{x | myFormat}}\n    </li>\n</body>\n `.trim()\n\n\n\nclass Fiters extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n            <Grid item xs={2}>\n                <Paper className={classes.paper}>\n                    <h4><Sidebar /></h4>\n                </Paper>\n            </Grid>\n<Grid item xs={10}>\n<Paper className={classes.paper}>\n<List>\n      <h3>Filter</h3>\n      <b>Filters can be added in AngularJS to format data:</b>\n<br/>\n<br/>\ncurrency Format a number to a currency format.<br/>\ndate Format a date to a specified format.<br/>\nfilter Select a subset of items from an array.<br/>\njson Format an object to a JSON string.<br/>\nlimitTo Limits an array/string, into a specified number of elements/characters.<br/>\nlowercase Format a string to lower case.<br/>\nnumber Format a number to a string.<br/>\norderBy Orders an array by an expression.<br/>\nuppercase Format a string to upper case.<br/>\n<br/>\nFilters can be added to expressions by using the pipe character |, followed by a filter.<br/>\n<br/>\n      <b>app.js</b>\n      <div style={titles}>\n      <PrismCode\n        code={app}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n       <br/>\n      <h3>custom</h3>\n      You can make your own filters by registering a new filter factory function with your module.\n<br/>\nThe myFormat filter will format every other character to uppercase.\n<br/>\n<br/>\n        <b>custom.js</b>\n      <div style={titles}>\n      <PrismCode\n        code={custom}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n        <br/>\n        <b>customIndex.html</b>\n      <div style={titles}>\n      <PrismCode\n        code={customIndex}\n        language=\"js\"\n        plugins={[\"line-numbers\"]}\n      />\n      </div>\n      </List>\n      </Paper>\n      </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Fiters));\n"]},"metadata":{},"sourceType":"module"}