{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../styles.css';import Sidebar from'../sidebar';import PrismCode from'../prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var linkData=\"\\n//models/item.js\\nconst mongoose = require('mongoose');\\nconst Schema = mongoose.Schema;\\n\\nconst ItemSchema = new Schema({\\n  name: {\\n    type: String,\\n    required: true\\n  },\\n  date: {\\n    type: Date,\\n    default: Date.now\\n  }\\n});\\nmodule.exports = Item = mongoose.model('item', ItemSchema);\\n\\n\\n\\n//routes/item.js\\nconst express = require('express');\\nconst router = express.Router();\\nconst Item = require('../models/Item');\\n\\nrouter.get('/', (req, res) => {\\n  Item.find()\\n    .sort({ date: -1 })\\n    .then(items => res.json(items));\\n});\\n\\nrouter.get('/:id', (req, res) => {\\n  Item.findById(req.params.id)\\n    .sort({ date: -1 })\\n    .then(items => res.json(items));\\n});\\n\\nrouter.post('/', (req, res) => {\\n  const newItem = new Item({\\n    name: req.body.name\\n  });\\n\\n  newItem.save().then(item => res.json(item));\\n});\\n\\nrouter.patch('/:id', (req, res) => {\\n  Item.findByIdAndUpdate(req.params.id, {\\n    name: req.body.name,\\n  }, { new: true }).then(data => { res.send(data) })\\n})\\n\\nrouter.delete('/:id', (req, res) => {\\n  Item.findById(req.params.id)\\n    .then(item => item.remove().then(() => res.json({ success: true })))\\n    .catch(err => res.status(404).json({ success: false }));\\n});\\n\\nmodule.exports = router;\\n\".trim();var compos=\"\\n//App.js\\nimport { BrowserRouter as Router, Route, NavLink, Switch } from 'react-router-dom';\\nimport ShoppingList from './components/ShoppingList';\\nimport AppNavbar from './components/AppNavbar';\\nimport ItemModal from './components/ItemModal';\\nimport EditList from './components/Edit';\\n\\nfunction App() {\\n  return (\\n    <Router>\\n      <div className=\\\"container\\\">\\n        <Switch>\\n          <Route exact path=\\\"/\\\" component={ShoppingList} />\\n          <Route exact path=\\\"/ItemModal/new\\\" component={ItemModal} />\\n          <Route exact path=\\\"/AppNavbar/:_id\\\" component={AppNavbar} />\\n          <Route exact path=\\\"/EditList/:_id/edit\\\" component={EditList} />\\n        </Switch>\\n      </div>\\n    </Router>\\n  );\\n}\\n\\n\\n\\n//componenrs/ShoppingList.js\\nimport React, { useState, useEffect } from 'react';\\nimport axios from 'axios';\\nimport { Link } from 'react-router-dom';\\n\\n\\nconst ShoppingList = () => {\\n  const [items, setItems] = useState([])\\n\\n  useEffect(() => {\\n    axios.get(\\\"/item\\\")\\n      .then(res => {\\n        setItems(res.data);\\n      })\\n  }, []);\\n\\n  return (\\n    <div>\\n      <Link to=\\\"/ItemModal/new\\\">Add Items</Link>\\n      {items.map((item) => {\\n        return (\\n          <div key={item._id}>\\n            <h4><Link to={'/ AppNavbar / '$'{ item._id }'}>{item.name}</Link></h4>\\n            <small>_id: {item._id}</small>\\n          </div>\\n        )\\n      })}\\n    </div>\\n  )\\n}\\n\\n\\n//componenrs/ItemModal.js\\nimport React, { useState } from \\\"react\\\";\\nimport { post } from 'axios';\\n\\n\\nconst ItemModal = (props) => {\\n  const initialState = { name: '' }\\n  const [items, setItems] = useState(initialState)\\n\\n  const handleChange = (e) => {\\n    setItems({ ...items, [e.target.name]: e.target.value })\\n  }\\n\\n  const handleSubmit = (e) => {\\n    e.preventDefault();\\n    post('/item', items);\\n    props.history.push('/ ');\\n  }\\n\\n  const handleCancel = () => {\\n    props.history.push(\\\"/\\\");\\n  }\\n\\n  return (\\n    <div>\\n      <h1>Add Items</h1>\\n      <form onSubmit={handleSubmit}>\\n        <label>Name</label>\\n        <input type=\\\"text\\\" name=\\\"name\\\" value={items.name} onChange={handleChange} />\\n\\n        <input type=\\\"submit\\\" value=\\\"Submit\\\" />\\n        <button type=\\\"button\\\" onClick={handleCancel} >Cancel</button>\\n      </form>\\n    </div>\\n  );\\n}\\n\\n\\n\\n//componenrs/AppNavbar.js\\nimport React, { useState, useEffect } from \\\"react\\\";\\nimport axios from 'axios';\\nimport { Link } from 'react-router-dom';\\n\\nconst AppNavbar = (props) => {\\n  const [item, setItems] = useState({});\\n\\n  useEffect(() => {\\n    axios('/ item / '$'{ props.match.params._id }')\\n      .then(res => res.data)\\n      .then(receivedData => setItems(receivedData));\\n  }, [props]);\\n\\n  const handleDelete = () => {\\n    axios.delete('/ item / '$'{ props.match.params._id } ');\\n    props.history.push(\\\"/\\\");\\n  }\\n\\n  return (\\n    <div>\\n      <h2>{item.name}</h2>\\n      <small>_id: {item._id}</small>\\n      <p>{item.content}</p>\\n\\n      <Link to={'/ EditList / '$'{ item._id } /edit'}>Edit</Link >\\n      <button onClick={handleDelete}>Delete</button>\\n      <Link to=\\\"/\\\" >Close</Link>\\n    </div >\\n  );\\n};\\n\\n\\n\\n//componenrs/Edit.js\\nimport axios from 'axios';\\nimport { patch } from 'axios';\\n\\n\\nconst EditList = (props) => {\\n  const initialState = { name: '' }\\n  const [items, setItems] = useState(initialState)\\n\\n  useEffect(() => {\\n    axios('/ item / '$'{ props.match.params._id }')\\n      .then(res => res.data)\\n      .then(receivedData => setItems(receivedData));\\n  }, [props]);\\n\\n  const handleSubmit = (e) => {\\n    e.preventDefault();\\n    patch('/ item / '$'{ items._id } ', items);\\n    props.history.push('/ ');\\n  }\\n\\n  const handleChange = (e) => {\\n    setItems({ ...items, [e.target.name]: e.target.value })\\n  }\\n\\n  const handleCancel = () => {\\n    props.history.push('/ ');\\n  }\\n\\n  return (\\n    <div>\\n      <h1>Edit {items.name}</h1>\\n      <form onSubmit={handleSubmit}>\\n        <label>Name</label>\\n        <input type=\\\"text\\\" name=\\\"name\\\" value={items.name} onChange={handleChange} />\\n\\n        <button type=\\\"submit\\\">Update</button>\\n        <button type=\\\"button\\\" onClick={handleCancel}>Cancel</button>\\n      </form>\\n    </div>\\n  );\\n}\\n\".trim();var onlyGet=\"\\n//App.js\\nimport ShoppingList from './components/ShoppingList';\\nimport AppNavbar from './components/AppNavbar';\\n\\n\\nfunction App() {\\n  return (\\n    <Router>\\n      <div className=\\\"container\\\">\\n        <Switch>\\n          <Route exact path=\\\"/\\\" component={ShoppingList} />\\n          <Route exact path=\\\"/AppNavbar/:_id\\\" component={AppNavbar} />\\n        </Switch>\\n      </div>\\n    </Router>\\n  );\\n}\\n\\n\\n\\n//components/ShoppingList.js\\nimport React, { useState, useEffect } from 'react';\\nimport axios from 'axios';\\nimport { Link } from 'react-router-dom';\\n\\n\\nconst ShoppingList = () => {\\n  const [items, setItems] = useState([])\\n\\n  useEffect(() => {\\n    axios.get(\\\"/item\\\")\\n      .then(res => {\\n        setItems(res.data);\\n      })\\n  }, []);\\n\\n  return (\\n    <div>\\n      {items.map((item) => {\\n        return (\\n          <div key={item._id}>\\n            <h4><Link to={'/ AppNavbar / '$'{ item._id }'}>{item.name}</Link></h4>\\n            <small>_id: {item._id}</small>\\n          </div>\\n        )\\n      })}\\n    </div>\\n  )\\n}\\n\\n\\n\\n//components/AppNavbar.js\\nimport axios from 'axios';\\n\\nconst AppNavbar = (props) => {\\n  const [item, setItems] = useState({});\\n\\n  useEffect(() => {\\n    axios('/ item / '$'{ props.match.params._id }')\\n      .then(res => res.data)\\n      .then(receivedData => setItems(receivedData));\\n  }, [props]);\\n\\n  return (\\n    <div>\\n      <h2>{item.name}</h2>\\n      <small>_id: {item._id}</small>\\n      <p>{item.content}</p>\\n    </div>\\n  );\\n};\\n\".trim();var LinkGet=/*#__PURE__*/function(_Component){_inherits(LinkGet,_Component);function LinkGet(){_classCallCheck(this,LinkGet);return _possibleConstructorReturn(this,_getPrototypeOf(LinkGet).apply(this,arguments));}_createClass(LinkGet,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"1. Pass data as props in link(API)\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:linkData,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"UI\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:compos,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"2. Pass data only\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:onlyGet,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return LinkGet;}(Component);export default withStyles(styles)(LinkGet);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/linkGet.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","linkData","trim","compos","onlyGet","LinkGet","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,eAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CAGA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADgB,CAKvBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALa,CAQvBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARY,CAAL,EAApB,CAcA,GAAMC,CAAAA,QAAQ,CAAG,8uCAyDfC,IAzDe,EAAjB,CA2DA,GAAMC,CAAAA,MAAM,CAAG,wqIA4KbD,IA5Ka,EAAf,CA8KA,GAAME,CAAAA,OAAO,CAAG,g/CAyEdF,IAzEc,EAAhB,C,GA6EMG,CAAAA,O,2RACgB,CAClBC,UAAU,CAAC,iBAAMxB,CAAAA,KAAK,CAACyB,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACb,KAA1B,EACE,8BAAI,oBAAC,OAAD,MAAJ,CADF,CADF,CADF,CAOE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEa,OAAO,CAACb,KAA1B,EACE,oBAAC,IAAD,MACE,mEADF,CAEE,2BAAK,KAAK,CAAEN,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEY,QADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAFF,CASE,8BATF,CAWE,mCAXF,CAYE,2BAAK,KAAK,CAAEZ,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEc,MADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAZF,CAoBE,8BApBF,CAqBE,kDArBF,CAsBE,2BAAK,KAAK,CAAEd,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEe,OADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAtBF,CADF,CADF,CAPF,CADF,CA4CD,C,qBAlDmBvB,S,EAqDtB,cAAgBI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBY,OAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst linkData = `\n//models/item.js\nconst mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\n\nconst ItemSchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  date: {\n    type: Date,\n    default: Date.now\n  }\n});\nmodule.exports = Item = mongoose.model('item', ItemSchema);\n\n\n\n//routes/item.js\nconst express = require('express');\nconst router = express.Router();\nconst Item = require('../models/Item');\n\nrouter.get('/', (req, res) => {\n  Item.find()\n    .sort({ date: -1 })\n    .then(items => res.json(items));\n});\n\nrouter.get('/:id', (req, res) => {\n  Item.findById(req.params.id)\n    .sort({ date: -1 })\n    .then(items => res.json(items));\n});\n\nrouter.post('/', (req, res) => {\n  const newItem = new Item({\n    name: req.body.name\n  });\n\n  newItem.save().then(item => res.json(item));\n});\n\nrouter.patch('/:id', (req, res) => {\n  Item.findByIdAndUpdate(req.params.id, {\n    name: req.body.name,\n  }, { new: true }).then(data => { res.send(data) })\n})\n\nrouter.delete('/:id', (req, res) => {\n  Item.findById(req.params.id)\n    .then(item => item.remove().then(() => res.json({ success: true })))\n    .catch(err => res.status(404).json({ success: false }));\n});\n\nmodule.exports = router;\n`.trim();\n\nconst compos = `\n//App.js\nimport { BrowserRouter as Router, Route, NavLink, Switch } from 'react-router-dom';\nimport ShoppingList from './components/ShoppingList';\nimport AppNavbar from './components/AppNavbar';\nimport ItemModal from './components/ItemModal';\nimport EditList from './components/Edit';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\" component={ShoppingList} />\n          <Route exact path=\"/ItemModal/new\" component={ItemModal} />\n          <Route exact path=\"/AppNavbar/:_id\" component={AppNavbar} />\n          <Route exact path=\"/EditList/:_id/edit\" component={EditList} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\n\n//componenrs/ShoppingList.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n\nconst ShoppingList = () => {\n  const [items, setItems] = useState([])\n\n  useEffect(() => {\n    axios.get(\"/item\")\n      .then(res => {\n        setItems(res.data);\n      })\n  }, []);\n\n  return (\n    <div>\n      <Link to=\"/ItemModal/new\">Add Items</Link>\n      {items.map((item) => {\n        return (\n          <div key={item._id}>\n            <h4><Link to={'/ AppNavbar / '$'{ item._id }'}>{item.name}</Link></h4>\n            <small>_id: {item._id}</small>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\n\n//componenrs/ItemModal.js\nimport React, { useState } from \"react\";\nimport { post } from 'axios';\n\n\nconst ItemModal = (props) => {\n  const initialState = { name: '' }\n  const [items, setItems] = useState(initialState)\n\n  const handleChange = (e) => {\n    setItems({ ...items, [e.target.name]: e.target.value })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    post('/item', items);\n    props.history.push('/ ');\n  }\n\n  const handleCancel = () => {\n    props.history.push(\"/\");\n  }\n\n  return (\n    <div>\n      <h1>Add Items</h1>\n      <form onSubmit={handleSubmit}>\n        <label>Name</label>\n        <input type=\"text\" name=\"name\" value={items.name} onChange={handleChange} />\n\n        <input type=\"submit\" value=\"Submit\" />\n        <button type=\"button\" onClick={handleCancel} >Cancel</button>\n      </form>\n    </div>\n  );\n}\n\n\n\n//componenrs/AppNavbar.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst AppNavbar = (props) => {\n  const [item, setItems] = useState({});\n\n  useEffect(() => {\n    axios('/ item / '$'{ props.match.params._id }')\n      .then(res => res.data)\n      .then(receivedData => setItems(receivedData));\n  }, [props]);\n\n  const handleDelete = () => {\n    axios.delete('/ item / '$'{ props.match.params._id } ');\n    props.history.push(\"/\");\n  }\n\n  return (\n    <div>\n      <h2>{item.name}</h2>\n      <small>_id: {item._id}</small>\n      <p>{item.content}</p>\n\n      <Link to={'/ EditList / '$'{ item._id } /edit'}>Edit</Link >\n      <button onClick={handleDelete}>Delete</button>\n      <Link to=\"/\" >Close</Link>\n    </div >\n  );\n};\n\n\n\n//componenrs/Edit.js\nimport axios from 'axios';\nimport { patch } from 'axios';\n\n\nconst EditList = (props) => {\n  const initialState = { name: '' }\n  const [items, setItems] = useState(initialState)\n\n  useEffect(() => {\n    axios('/ item / '$'{ props.match.params._id }')\n      .then(res => res.data)\n      .then(receivedData => setItems(receivedData));\n  }, [props]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    patch('/ item / '$'{ items._id } ', items);\n    props.history.push('/ ');\n  }\n\n  const handleChange = (e) => {\n    setItems({ ...items, [e.target.name]: e.target.value })\n  }\n\n  const handleCancel = () => {\n    props.history.push('/ ');\n  }\n\n  return (\n    <div>\n      <h1>Edit {items.name}</h1>\n      <form onSubmit={handleSubmit}>\n        <label>Name</label>\n        <input type=\"text\" name=\"name\" value={items.name} onChange={handleChange} />\n\n        <button type=\"submit\">Update</button>\n        <button type=\"button\" onClick={handleCancel}>Cancel</button>\n      </form>\n    </div>\n  );\n}\n`.trim();\n\nconst onlyGet = `\n//App.js\nimport ShoppingList from './components/ShoppingList';\nimport AppNavbar from './components/AppNavbar';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\" component={ShoppingList} />\n          <Route exact path=\"/AppNavbar/:_id\" component={AppNavbar} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\n\n//components/ShoppingList.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n\nconst ShoppingList = () => {\n  const [items, setItems] = useState([])\n\n  useEffect(() => {\n    axios.get(\"/item\")\n      .then(res => {\n        setItems(res.data);\n      })\n  }, []);\n\n  return (\n    <div>\n      {items.map((item) => {\n        return (\n          <div key={item._id}>\n            <h4><Link to={'/ AppNavbar / '$'{ item._id }'}>{item.name}</Link></h4>\n            <small>_id: {item._id}</small>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\n\n\n//components/AppNavbar.js\nimport axios from 'axios';\n\nconst AppNavbar = (props) => {\n  const [item, setItems] = useState({});\n\n  useEffect(() => {\n    axios('/ item / '$'{ props.match.params._id }')\n      .then(res => res.data)\n      .then(receivedData => setItems(receivedData));\n  }, [props]);\n\n  return (\n    <div>\n      <h2>{item.name}</h2>\n      <small>_id: {item._id}</small>\n      <p>{item.content}</p>\n    </div>\n  );\n};\n`.trim();\n\n\n\nclass LinkGet extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. Pass data as props in link(API)</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={linkData}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>UI</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={compos}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n\n              <br />\n              <h3>2. Pass data only</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={onlyGet}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(LinkGet));"]},"metadata":{},"sourceType":"module"}