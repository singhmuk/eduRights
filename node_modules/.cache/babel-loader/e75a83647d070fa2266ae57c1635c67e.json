{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var cluster=\"\\nimport matplotlib.pyplot as plt\\nimport numpy as np\\n\\nxpoints = np.array([0, 6])\\nypoints = np.array([0, 250])\\n\\nplt.plot(xpoints, ypoints)\\nplt.show()\\n\\n\\n# Line plot :\\nfrom matplotlib import pyplot as plt\\n  \\nx = [5, 2, 9, 4, 7]\\ny = [10, 5, 8, 4, 2]\\n  \\nplt.plot(x,y)\\nplt.show()\\n\\n\\n# Bar plot :\\nfrom matplotlib import pyplot as plt\\n  \\nx = [5, 2, 9, 4, 7]\\ny = [10, 5, 8, 4, 2]\\n  \\nplt.bar(x,y)\\nplt.show()\\n\\n\\n# Histogram :\\nfrom matplotlib import pyplot as plt\\n  \\ny = [10, 5, 8, 4, 2]\\n  \\nplt.hist(y)\\nplt.show()\\n\\n\\n# Scatter Plot :\\nfrom matplotlib import pyplot as plt\\n  \\nx = [5, 2, 9, 4, 7]\\ny = [10, 5, 8, 4, 2]\\n  \\nplt.scatter(x, y)\\n  \\nplt.show()\".trim();var stack=\"\".trim();// const stack = ``.trim();\n// const stack = ``.trim();\n// const stack = ``.trim();\nvar Libraries=/*#__PURE__*/function(_Component){_inherits(Libraries,_Component);function Libraries(){_classCallCheck(this,Libraries);return _possibleConstructorReturn(this,_getPrototypeOf(Libraries).apply(this,arguments));}_createClass(Libraries,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"OpenCv(Image-processing)\"),React.createElement(\"b\",null,\"What is Computer Vision?\"),React.createElement(\"br\",null),\"Essentially means giving a computer the ability to see the world as we humans do.\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"function:\"),React.createElement(\"ul\",null,React.createElement(\"li\",null,\"cv2.imread(path, flag)\"),React.createElement(\"li\",null,\"cv2.IMREAD_COLOR\"),React.createElement(\"li\",null,\"cv2.IMREAD_GRAYSCALE\"),React.createElement(\"li\",null,\"cv2.IMREAD_UNCHANGED\"),React.createElement(\"li\",null,\"cv2.imwrite(filename, image)\")),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Applications of Computer Vision:\"),React.createElement(\"br\",null),React.createElement(\"ul\",null,React.createElement(\"li\",null,\"Robotics Application\"),React.createElement(\"li\",null,\"Medicine Application\"),React.createElement(\"li\",null,\"Industrial Automation Application\"),React.createElement(\"li\",null,\"Security Application(Biometrics, Surveillance)\")),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Features\"),React.createElement(\"br\",null),React.createElement(\"ul\",null,React.createElement(\"li\",null,\"Read and write images\"),React.createElement(\"li\",null,\"Capture and save videos\"),React.createElement(\"li\",null,\"Process images (filter, transform)\"),React.createElement(\"li\",null,\"Perform feature detection\"),React.createElement(\"li\",null,\"Detect specific objects such as faces, eyes, cars, in the videos or images.\"),React.createElement(\"li\",null,\"Analyze the video, i.e., estimate the motion in it, subtract the background, and track objects in it.\")),React.createElement(\"br\",null)))));}}]);return Libraries;}(Component);export default withStyles(styles)(Libraries);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/ml/deepMl/libraries.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","cluster","trim","stack","Libraries","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAGA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADgB,CAKvBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALa,CAQvBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARY,CAAL,EAApB,CAcA,GAAMC,CAAAA,OAAO,CAAG,4qBAgDJC,IAhDI,EAAhB,CAoDA,GAAMC,CAAAA,KAAK,CAAG,GAAGD,IAAH,EAAd,CAEA;AAEA;AAEA;GAGME,CAAAA,S,qSACgB,CAClBC,UAAU,CAAC,iBAAMvB,CAAAA,KAAK,CAACwB,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACZ,KAA1B,EACE,8BAAI,oBAAC,OAAD,MAAJ,CADF,CADF,CADF,CAME,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEY,OAAO,CAACZ,KAA1B,EACE,oBAAC,IAAD,MACE,yDADF,CAEE,wDAFF,CAEiC,8BAFjC,qFAIE,8BAJF,CAKE,8BALF,CAME,yCANF,CAOE,8BACE,uDADF,CAEE,iDAFF,CAGE,qDAHF,CAIE,qDAJF,CAKE,6DALF,CAPF,CAcE,8BAdF,CAeE,8BAfF,CAgBE,gEAhBF,CAgByC,8BAhBzC,CAiBE,8BACE,qDADF,CAEE,qDAFF,CAGE,kEAHF,CAIE,+EAJF,CAjBF,CAuBE,8BAvBF,CAwBE,8BAxBF,CAyBE,wCAzBF,CAyBiB,8BAzBjB,CA0BE,8BACE,sDADF,CAEE,wDAFF,CAGE,mEAHF,CAIE,0DAJF,CAKE,4GALF,CAME,sIANF,CA1BF,CAkCE,8BAlCF,CADF,CADF,CANF,CADF,CAgGD,C,uBAtGqBd,S,EAyGxB,cAAgBI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBW,SAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst cluster = `\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nxpoints = np.array([0, 6])\nypoints = np.array([0, 250])\n\nplt.plot(xpoints, ypoints)\nplt.show()\n\n\n# Line plot :\nfrom matplotlib import pyplot as plt\n  \nx = [5, 2, 9, 4, 7]\ny = [10, 5, 8, 4, 2]\n  \nplt.plot(x,y)\nplt.show()\n\n\n# Bar plot :\nfrom matplotlib import pyplot as plt\n  \nx = [5, 2, 9, 4, 7]\ny = [10, 5, 8, 4, 2]\n  \nplt.bar(x,y)\nplt.show()\n\n\n# Histogram :\nfrom matplotlib import pyplot as plt\n  \ny = [10, 5, 8, 4, 2]\n  \nplt.hist(y)\nplt.show()\n\n\n# Scatter Plot :\nfrom matplotlib import pyplot as plt\n  \nx = [5, 2, 9, 4, 7]\ny = [10, 5, 8, 4, 2]\n  \nplt.scatter(x, y)\n  \nplt.show()`.trim();\n\n\n\nconst stack = ``.trim();\n\n// const stack = ``.trim();\n\n// const stack = ``.trim();\n\n// const stack = ``.trim();\n\n\nclass Libraries extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>OpenCv(Image-processing)</h3>\n              <b>What is Computer Vision?</b><br />\n              Essentially means giving a computer the ability to see the world as we humans do.\n              <br />\n              <br />\n              <b>function:</b>\n              <ul>\n                <li>cv2.imread(path, flag)</li>\n                <li>cv2.IMREAD_COLOR</li>\n                <li>cv2.IMREAD_GRAYSCALE</li>\n                <li>cv2.IMREAD_UNCHANGED</li>\n                <li>cv2.imwrite(filename, image)</li>\n              </ul>\n              <br />\n              <br />\n              <b>Applications of Computer Vision:</b><br />\n              <ul>\n                <li>Robotics Application</li>\n                <li>Medicine Application</li>\n                <li>Industrial Automation Application</li>\n                <li>Security Application(Biometrics, Surveillance)</li>\n              </ul>\n              <br />\n              <br />\n              <b>Features</b><br />\n              <ul>\n                <li>Read and write images</li>\n                <li>Capture and save videos</li>\n                <li>Process images (filter, transform)</li>\n                <li>Perform feature detection</li>\n                <li>Detect specific objects such as faces, eyes, cars, in the videos or images.</li>\n                <li>Analyze the video, i.e., estimate the motion in it, subtract the background, and track objects in it.</li>\n              </ul>\n              <br />\n\n\n\n\n\n\n\n              \n\n              {/* <h3></h3>\n              <div style={titles}>\n                <PrismCode\n                  code={stack}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3></h3>\n              <div style={titles}>\n                <PrismCode\n                  code={stack}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3></h3>\n              <div style={titles}>\n                <PrismCode\n                  code={stack}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3></h3>\n              <div style={titles}>\n                <PrismCode\n                  code={stack}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div> */}\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Libraries));\n"]},"metadata":{},"sourceType":"module"}