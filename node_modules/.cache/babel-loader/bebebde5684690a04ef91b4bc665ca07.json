{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/ReactJs/reactJs_hooks/models.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst modal = `\nimport Previews from \"./previews\"\n\nconst App = () => {\n  const [data, setData] = useState([{\n    \"id\": 1,\n    \"letter\": \"J\",\n    \"image\": '/images/d1.jpg',\n    \"barColor\": \"#28a745\",\n    \"percentage\": 50,\n    \"text\": \"Live\"\n  }])\n\n  return (\n    <div>\n      {data.map((value) => (\n        <div>\n          {value.text}\n          {value.name}\n          <div>\n            {value.percentage < 70 && <Previews data={value} />}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\n\n//previews.js\nimport Popup from \"reactjs-popup\"\n\nconst Previews = (props) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(open => !open);\n  };\n\n  return (\n    <div>\n      <button onClick={handleClickOpen}>btn</button>\n\n      <Popup open={open} onClose={handleClickOpen} >\n        <div>{props.data.text}</div>\n        <div>{props.data.exame}</div>\n        <div>{props.data.barColor}</div>\n        <div>{props.data.percentage}</div>\n      </Popup>\n    </div>\n  );\n}\n`.trim();\nconst childData = `\nclass App extends Component {\n  state={ourData:''}\n  \n  changeText = (myData) => {\n    this.setState({ourData:myData});\n  }\n  render(){\n    return(\n      <div>\n        {this.state.ourData}\n        <First refer = {this.changeText} />\n      </div>\n    )\n  }\n}\n\n\n// first.js\nclass First extends Component {\n  state={data:'first'}\n   \n   changeText = () => {\n     var myData = this.state.data;\n     this.props.refer(myData)\n   }\n   render(){\n     return(\n       <div>\n         <button onClick = {()=>this.changeText()} >Click</button> \n       </div>\n     )\n   }\n }`.trim();\nconst download = `\n   import {CSVLink, CSVDownload} from 'react-csv';\n   import axios from 'axios';\n\n   class CsvFile extends Component {\n      state={\n         mockData:[]\n      }\n      \n      \n     componentDidMount(){\n      let url=\"https://jsonplaceholder.typicode.com/users\";\n      axios.get(url)\n           .then(res => {\n              const mockData= res.data\n              this.setState({ mockData })\n              console.log('ssssssss',res.data)\n          })\n     }\n      \n      render(){\n         var csvData = this.state.mockData.map(value=>{\n            let obj = {};\n                obj.name = value.name;\n                obj.address = value.address.street;\n                \n            return obj; \n        })\n      return(\n         <div>\n            <p>Async Await</p>\n            {this.state.mockData.map((items) => (\n               <li key={items.id}>{items.name}</li>\n            ))}\n            <CSVLink data={csvData} >Download csv</CSVLink>\n         </div>\n       )\n      }\n   }\n\nexport default CsvFile;`.trim();\nconst routers = `\n // 1. Not Found 404\n <Router>\n  <Switch>\n  <Route exact path = \"/\" component={Home} />\n  <Route exact path = \"/*\" component={Error} />\n  </Switch>\n  <Route exact path = \"/history/:name/:address\" component={History} />\n</Router>\n\n\n// 2.Url value display on UI\nfunction History({match}) {\n   return (\n     <div>\n       <p>History {match.params.name}</p>\n     </div>\n   )\n }\n \n export default History;\n \n \n // 3.Url value display on UI with hooks\n function History() {\n   const { name, address } = useParams();\n   return (\n     <div>\n       <p>History {name}-{address}</p>\n     </div>\n   )\n }\n \n export default History;\n \n \n //4. History Push\n function History({match}) {\n   return (\n     <div>\n       <p>History {match.params.name}</p>\n     </div>\n   )\n }\n \n export default History;`.trim();\nconst protecteds = `\n // auth.js\n class Auth {\n  constructor() {\n    this.authenticated = false;\n  }\n\n  login(cb) {\n    this.authenticated = true;\n    cb();\n  }\n\n  logout(cb) {\n    this.authenticated = false;\n    cb();\n  }\n\n  isAuthenticated() {\n    return this.authenticated;\n  }\n}\n\nexport default new Auth();\n\n\n// LandingPage.js\nimport auth from \"./auth\";\n\nconst LandingPage = props => {\n  return (\n    <div>\n      <h1>Landing Page</h1>\n      <button\n        onClick={() => {\n          auth.login(() => {\n            props.history.push(\"/app\");\n          });\n        }}\n      >\n        Login\n      </button>\n    </div>\n  );\n};\n\n\nexport default LandingPage;\n\n\n// ProtectedRoute.js\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"./auth\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (auth.isAuthenticated()) {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  from: props.location\n                }\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n\n\nexport default ProtectedRoute;\n\n\n//App.js\nimport auth from \"./auth\";\n\nexport const App = props => {\n  return (\n    <div>\n      <h1>App Layout</h1>\n      <button\n        onClick={() => {\n          auth.logout(() => {\n            props.history.push(\"/\");\n          });\n        }}\n      >\n        Logout\n      </button>\n    </div>\n  );\n};\n\n\nexport default App;\n\n\n// index.js\nimport { App } from './App';\nimport LandingPage from \"./landing_page.js\";\nimport ProtectedRoute from \"./protected_route\";\n\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n     <BrowserRouter>\n      <Switch>\n          <Route exact path=\"/\" component={LandingPage} />\n          <ProtectedRoute exact path=\"/App\" component={App} />\n          <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\n        </Switch>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);`.trim();\nconst loading = `\nclass App extends Component {\n  state = {\n          isLoading: false, \n          data: '', \n          mockData: [],\n        }\n\n      handleData() {\n        axios.get(\"https://jsonplaceholder.typicode.com/users\")\n         .then(res => {\n            const mockData= res.data\n            this.setState({ mockData })\n        })\n    }\n\n  handleSubmit = () => {\n      axios.get(\"https://jsonplaceholder.typicode.com/users\")\n       .then(data => this.setState({ data: data }, () => {\n            this.handleData()\n          }))\n          .then(() => this.setState({ isLoading: false }));\n  }\n\n  render() {\n    let mockData = \"Loding\";\n    if (!this.state.isLoading && this.state.mockData) {\n       mockData = (\n         <div>\n           {this.state.mockData.map(val => (\n             <li>{val.id}</li>\n           ))}\n           <button type=\"button\" onClick={this.handleSubmit}>Click Me!</button>\n           </div>\n       )\n    }\n      return (\n          <>{mockData}</>\n      )\n  }\n}`.trim();\n\nclass Models extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, \"1. Modal\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: modal,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, \"2. Call Child Data\"), \"Snario in which we call state from child to parrent component.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, \"Here App.js is parent class, and child component (First.js) have state data that we call in App component.\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: childData,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, \"3. Download CSV File\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: download,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, \"4. Loading icon on api fatch\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: loading,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, \"5. Router\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: routers,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, \"6. Protected Routes\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: protecteds,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(Models);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/ReactJs/reactJs_hooks/models.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","modal","trim","childData","download","routers","protecteds","loading","Models","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst modal = `\nimport Previews from \"./previews\"\n\nconst App = () => {\n  const [data, setData] = useState([{\n    \"id\": 1,\n    \"letter\": \"J\",\n    \"image\": '/images/d1.jpg',\n    \"barColor\": \"#28a745\",\n    \"percentage\": 50,\n    \"text\": \"Live\"\n  }])\n\n  return (\n    <div>\n      {data.map((value) => (\n        <div>\n          {value.text}\n          {value.name}\n          <div>\n            {value.percentage < 70 && <Previews data={value} />}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\n\n//previews.js\nimport Popup from \"reactjs-popup\"\n\nconst Previews = (props) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(open => !open);\n  };\n\n  return (\n    <div>\n      <button onClick={handleClickOpen}>btn</button>\n\n      <Popup open={open} onClose={handleClickOpen} >\n        <div>{props.data.text}</div>\n        <div>{props.data.exame}</div>\n        <div>{props.data.barColor}</div>\n        <div>{props.data.percentage}</div>\n      </Popup>\n    </div>\n  );\n}\n`.trim();\n\n\nconst childData = `\nclass App extends Component {\n  state={ourData:''}\n  \n  changeText = (myData) => {\n    this.setState({ourData:myData});\n  }\n  render(){\n    return(\n      <div>\n        {this.state.ourData}\n        <First refer = {this.changeText} />\n      </div>\n    )\n  }\n}\n\n\n// first.js\nclass First extends Component {\n  state={data:'first'}\n   \n   changeText = () => {\n     var myData = this.state.data;\n     this.props.refer(myData)\n   }\n   render(){\n     return(\n       <div>\n         <button onClick = {()=>this.changeText()} >Click</button> \n       </div>\n     )\n   }\n }`.trim();\n\n\nconst download = `\n   import {CSVLink, CSVDownload} from 'react-csv';\n   import axios from 'axios';\n\n   class CsvFile extends Component {\n      state={\n         mockData:[]\n      }\n      \n      \n     componentDidMount(){\n      let url=\"https://jsonplaceholder.typicode.com/users\";\n      axios.get(url)\n           .then(res => {\n              const mockData= res.data\n              this.setState({ mockData })\n              console.log('ssssssss',res.data)\n          })\n     }\n      \n      render(){\n         var csvData = this.state.mockData.map(value=>{\n            let obj = {};\n                obj.name = value.name;\n                obj.address = value.address.street;\n                \n            return obj; \n        })\n      return(\n         <div>\n            <p>Async Await</p>\n            {this.state.mockData.map((items) => (\n               <li key={items.id}>{items.name}</li>\n            ))}\n            <CSVLink data={csvData} >Download csv</CSVLink>\n         </div>\n       )\n      }\n   }\n\nexport default CsvFile;`.trim();\n\nconst routers = `\n // 1. Not Found 404\n <Router>\n  <Switch>\n  <Route exact path = \"/\" component={Home} />\n  <Route exact path = \"/*\" component={Error} />\n  </Switch>\n  <Route exact path = \"/history/:name/:address\" component={History} />\n</Router>\n\n\n// 2.Url value display on UI\nfunction History({match}) {\n   return (\n     <div>\n       <p>History {match.params.name}</p>\n     </div>\n   )\n }\n \n export default History;\n \n \n // 3.Url value display on UI with hooks\n function History() {\n   const { name, address } = useParams();\n   return (\n     <div>\n       <p>History {name}-{address}</p>\n     </div>\n   )\n }\n \n export default History;\n \n \n //4. History Push\n function History({match}) {\n   return (\n     <div>\n       <p>History {match.params.name}</p>\n     </div>\n   )\n }\n \n export default History;`.trim();\n\n\nconst protecteds = `\n // auth.js\n class Auth {\n  constructor() {\n    this.authenticated = false;\n  }\n\n  login(cb) {\n    this.authenticated = true;\n    cb();\n  }\n\n  logout(cb) {\n    this.authenticated = false;\n    cb();\n  }\n\n  isAuthenticated() {\n    return this.authenticated;\n  }\n}\n\nexport default new Auth();\n\n\n// LandingPage.js\nimport auth from \"./auth\";\n\nconst LandingPage = props => {\n  return (\n    <div>\n      <h1>Landing Page</h1>\n      <button\n        onClick={() => {\n          auth.login(() => {\n            props.history.push(\"/app\");\n          });\n        }}\n      >\n        Login\n      </button>\n    </div>\n  );\n};\n\n\nexport default LandingPage;\n\n\n// ProtectedRoute.js\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"./auth\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (auth.isAuthenticated()) {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  from: props.location\n                }\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n\n\nexport default ProtectedRoute;\n\n\n//App.js\nimport auth from \"./auth\";\n\nexport const App = props => {\n  return (\n    <div>\n      <h1>App Layout</h1>\n      <button\n        onClick={() => {\n          auth.logout(() => {\n            props.history.push(\"/\");\n          });\n        }}\n      >\n        Logout\n      </button>\n    </div>\n  );\n};\n\n\nexport default App;\n\n\n// index.js\nimport { App } from './App';\nimport LandingPage from \"./landing_page.js\";\nimport ProtectedRoute from \"./protected_route\";\n\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n     <BrowserRouter>\n      <Switch>\n          <Route exact path=\"/\" component={LandingPage} />\n          <ProtectedRoute exact path=\"/App\" component={App} />\n          <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\n        </Switch>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);`.trim();\n\nconst loading = `\nclass App extends Component {\n  state = {\n          isLoading: false, \n          data: '', \n          mockData: [],\n        }\n\n      handleData() {\n        axios.get(\"https://jsonplaceholder.typicode.com/users\")\n         .then(res => {\n            const mockData= res.data\n            this.setState({ mockData })\n        })\n    }\n\n  handleSubmit = () => {\n      axios.get(\"https://jsonplaceholder.typicode.com/users\")\n       .then(data => this.setState({ data: data }, () => {\n            this.handleData()\n          }))\n          .then(() => this.setState({ isLoading: false }));\n  }\n\n  render() {\n    let mockData = \"Loding\";\n    if (!this.state.isLoading && this.state.mockData) {\n       mockData = (\n         <div>\n           {this.state.mockData.map(val => (\n             <li>{val.id}</li>\n           ))}\n           <button type=\"button\" onClick={this.handleSubmit}>Click Me!</button>\n           </div>\n       )\n    }\n      return (\n          <>{mockData}</>\n      )\n  }\n}`.trim();\n\n\n\nclass Models extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. Modal</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={modal}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>2. Call Child Data</h3>\n              Snario in which we call state from child to parrent component.<br />\n              <i>Here App.js is parent class, and child component (First.js) have state data that we call in App component.</i>\n              <div style={titles}>\n                <PrismCode\n                  code={childData}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>3. Download CSV File</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={download}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n\n              <br />\n              <h3>4. Loading icon on api fatch</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={loading}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n\n              <br />\n              <h3>5. Router</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={routers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>6. Protected Routes</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={protecteds}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Models));"]},"metadata":{},"sourceType":"module"}