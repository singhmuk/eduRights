{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import\"../../ReactJs/styles.css\";import Sidebar from\"../sidebar\";import PrismCode from\"../../ReactJs/prismCode\";var titles={backgroundColor:\"#F0F8FF\",padding:\"1px\",fontSize:\"16px\"};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var radio=\"\\n//html\\n<div *ngFor=\\\"let season of seasons; let i = index\\\">\\n<input type=\\\"radio\\\" id=\\\"season{{i}}\\\" name=\\\"seasons\\\" [value]=\\\"season\\\" [(ngModel)]=\\\"chhose\\\" />\\n  {{season}}\\n</div >\\n  {{chhose}}\\n\\nexport class AppComponent {\\n  chhose: string;\\n  seasons: string[] = ['Winter', 'Spring', 'Summer', 'Autumn'];\\n}\\n\".trim();var changeFonts=\"\\n//html\\n<button (click)=\\\"dec()\\\">Smaller</button>\\n<button (click) = \\\"inc()\\\"> Bigger</button>\\n<label [style.font-size.px] = \\\"fontSize\\\"> {{fontSize}}px</label>\\n    \\n\\nexport class AppComponent {\\n  constructor() { }\\n  fontSize = 16;\\n\\n  resize(delta: number){\\n    this.fontSize = Math.min(40, Math.max(8, +this.fontSize + delta))\\n  }\\n\\n  dec(){ this.resize(-1)}\\n\\n  inc(){ this.resize(+1)}\\n}\".trim();var cusDirectives=\"\\n//html\\n<button bgColorChange>Change background color!</button>\\n\\n\\nimport { Directive, ElementRef, Renderer2, HostListener } from '@angular/core';\\n\\n@Directive({\\n  selector: '[bgColorChange]',\\n})\\nexport class ChildComp {\\n  constructor(private elRef: ElementRef, private renderer: Renderer2) {}\\n\\n  @HostListener('click') onClick() {\\n    this.renderer.setStyle(this.elRef.nativeElement, 'background-color', 'red');\\n  }\\n}\\n\".trim();var arrValidates=\"\\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations'; in app.module.ts\\n\\n//html\\n<div [@fadeIn]>Element will fade in when added to the DOM</div>\\n\\n\\nimport { trigger, state, style, animate, transition } from '@angular/animations';\\n\\n@Component({\\n  animations: [\\n    trigger('fadeIn', [\\n      state(\\n        'void',\\n        style({\\n          opacity: 0,\\n        })\\n      ),\\n      transition(':enter', [\\n        animate(\\n          '500ms ease-in-out',\\n          style({\\n            opacity: 1,\\n          })\\n        ),\\n      ]),\\n    ]),\\n  ],\\n})\\nexport class AppComponent {}\\n\".trim();var RadioButton12=/*#__PURE__*/function(_Component){_inherits(RadioButton12,_Component);function RadioButton12(){_classCallCheck(this,RadioButton12);return _possibleConstructorReturn(this,_getPrototypeOf(RadioButton12).apply(this,arguments));}_createClass(RadioButton12,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Radio\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:radio,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Change Font\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:changeFonts,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Create a custom directive in Angular that changes the background color of an element on click.\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:cusDirectives,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Use Angular animations to create a fade-in effect on a component.\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:arrValidates,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return RadioButton12;}(Component);export default withStyles(styles)(RadioButton12);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/angularjsd/angular 12/radioButton.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","radio","trim","changeFonts","cusDirectives","arrValidates","RadioButton12","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAEA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,QAAY,CACzBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADkB,CAKzBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALe,CAQzBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARc,CAAZ,EAAf,CAaA,GAAMC,CAAAA,KAAK,CAAG,uUAYZC,IAZY,EAAd,CAcA,GAAMC,CAAAA,WAAW,CAAG,0ZAkBjBD,IAlBiB,EAApB,CAoBA,GAAME,CAAAA,aAAa,CAAG,qbAiBpBF,IAjBoB,EAAtB,CAmBA,GAAMG,CAAAA,YAAY,CAAG,gnBA8BnBH,IA9BmB,EAArB,C,GAgCMI,CAAAA,a,yTACgB,CAClBC,UAAU,CAAC,iBAAMzB,CAAAA,KAAK,CAAC0B,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACd,KAA1B,EACE,8BACE,oBAAC,OAAD,MADF,CADF,CADF,CADF,CAQE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEc,OAAO,CAACd,KAA1B,EACE,oBAAC,IAAD,MACE,sCADF,CAEE,2BAAK,KAAK,CAAEN,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEY,KADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAFF,CASE,8BATF,CAUE,4CAVF,CAWE,2BAAK,KAAK,CAAEZ,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEc,WADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAXF,CAkBE,8BAlBF,CAmBE,+HAnBF,CAuBE,2BAAK,KAAK,CAAEd,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEe,aADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAvBF,CA8BE,8BA9BF,CA+BE,kGA/BF,CAoCE,2BAAK,KAAK,CAAEf,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEgB,YADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CApCF,CADF,CADF,CARF,CADF,CA2DD,C,2BAjEyBxB,S,EAoE5B,cAAeI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBa,aAAnB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport \"../../ReactJs/styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../../ReactJs/prismCode\";\n\nconst titles = { backgroundColor: \"#F0F8FF\", padding: \"1px\", fontSize: \"16px\" };\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n});\n\nconst radio = `\n//html\n<div *ngFor=\"let season of seasons; let i = index\">\n<input type=\"radio\" id=\"season{{i}}\" name=\"seasons\" [value]=\"season\" [(ngModel)]=\"chhose\" />\n  {{season}}\n</div >\n  {{chhose}}\n\nexport class AppComponent {\n  chhose: string;\n  seasons: string[] = ['Winter', 'Spring', 'Summer', 'Autumn'];\n}\n`.trim();\n\nconst changeFonts = `\n//html\n<button (click)=\"dec()\">Smaller</button>\n<button (click) = \"inc()\"> Bigger</button>\n<label [style.font-size.px] = \"fontSize\"> {{fontSize}}px</label>\n    \n\nexport class AppComponent {\n  constructor() { }\n  fontSize = 16;\n\n  resize(delta: number){\n    this.fontSize = Math.min(40, Math.max(8, +this.fontSize + delta))\n  }\n\n  dec(){ this.resize(-1)}\n\n  inc(){ this.resize(+1)}\n}`.trim();\n\nconst cusDirectives = `\n//html\n<button bgColorChange>Change background color!</button>\n\n\nimport { Directive, ElementRef, Renderer2, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[bgColorChange]',\n})\nexport class ChildComp {\n  constructor(private elRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener('click') onClick() {\n    this.renderer.setStyle(this.elRef.nativeElement, 'background-color', 'red');\n  }\n}\n`.trim();\n\nconst arrValidates = `\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations'; in app.module.ts\n\n//html\n<div [@fadeIn]>Element will fade in when added to the DOM</div>\n\n\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\n@Component({\n  animations: [\n    trigger('fadeIn', [\n      state(\n        'void',\n        style({\n          opacity: 0,\n        })\n      ),\n      transition(':enter', [\n        animate(\n          '500ms ease-in-out',\n          style({\n            opacity: 1,\n          })\n        ),\n      ]),\n    ]),\n  ],\n})\nexport class AppComponent {}\n`.trim();\n\nclass RadioButton12 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4>\n              <Sidebar />\n            </h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Radio</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={radio}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Change Font</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={changeFonts}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>\n                Create a custom directive in Angular that changes the background\n                color of an element on click.\n              </h3>\n              <div style={titles}>\n                <PrismCode\n                  code={cusDirectives}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>\n                Use Angular animations to create a fade-in effect on a\n                component.\n              </h3>\n\n              <div style={titles}>\n                <PrismCode\n                  code={arrValidates}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(RadioButton12);\n"]},"metadata":{},"sourceType":"module"}