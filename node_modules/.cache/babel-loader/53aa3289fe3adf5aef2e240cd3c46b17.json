{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import\"../styles.css\";import Sidebar from\"../sidebar\";import PrismCode from\"../prismCode\";var titles={backgroundColor:\"#F0F8FF\",padding:\"1px\",fontSize:\"16px\"};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var multiple=\"\\nconst App = () => {\\n  const [mockdata, setMockdata] = useState([]);\\n  const [mockdata2, setMockdata2] = useState([]);\\n\\n  const getMockdata = axios.get(\\\"https://jsonplaceholder.typicode.com/users\\\");\\n\\n  const getMockdata2 = () => {\\n    return axios.get(\\\"https://jsonplaceholder.typicode.com/posts\\\");\\n  };\\n\\n  useEffect(() => {\\n    Promise.all([getMockdata, getMockdata2()]).then((res) => {\\n      setMockdata(res[0].data);\\n      setMockdata2(res[1].data);\\n    });\\n  }, []);\\n\\n  return (\\n    <div>\\n      <h1>Data One</h1>\\n      <ul>\\n        {mockdata.map((item) => (\\n          <li key={item.id}>{item.name}</li>\\n        ))}\\n      </ul>\\n      <h1>Data Two</h1>\\n      <ul>\\n        {mockdata2.map((item) => (\\n          <li key={item.id}>{item.title}</li>\\n        ))}\\n      </ul>\\n    </div>\\n  );\\n}; \\n\".trim();var getLists=\"\\nconst App = () => {\\n  const [mocks, setMocks] = useState([]);\\n  const [user, setUser] = useState('');\\n\\n  const handleApi = async () => {\\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\\n    setMocks(res.data)\\n  }\\n\\n  useEffect(()=>{\\n    handleApi();\\n  },[])\\n\\n  const filterdata = mocks.filter(item => (\\n      item.name.toLowerCase().includes(user.toLowerCase()))\\n    );\\n\\n  return (\\n    <div>\\n      <input type=\\\"text\\\" name=\\\"user\\\" value={user} onChange={(e)=>setUser(e.target.value)} />\\n     {filterdata.map(items=>(\\n      <li>{items.name}</li>\\n     ))}\\n    </div>\\n  );\\n};\".trim();var steps=\"\\nconst App = () => {\\n  const [step, setStep] = useState(0);\\n\\n  return (\\n    <div>\\n      <input type=\\\"number\\\" value={step} min=\\\"0\\\" max=\\\"10\\\" step=\\\"2\\\" onChange={(e) => setStep(e.target.value)} />\\n    </div>\\n  );\\n};\\n\".trim();var dateTime=\"\\n //1\\n function date_time() {\\n   return Date();\\n }\\n \\n //2\\n function formatDate(dayOfWeek, day, month, year) {\\n   var daysOfWeek = [\\\"Sun\\\",\\\"Mon\\\",\\\"Tue\\\",\\\"Wed\\\",\\\"Thu\\\",\\\"Fri\\\",\\\"Sat\\\"];\\n   var months = [\\\"Jan\\\",\\\"Feb\\\",\\\"Mar\\\",\\\"Apr\\\",\\\"May\\\",\\\"Jun\\\",\\\"Jul\\\",\\\"Aug\\\",\\\"Sep\\\",\\\"Oct\\\",\\\"Nov\\\",\\\"Dec\\\"];\\n       return daysOfWeek[dayOfWeek] + \\\" \\\" + months[month] + \\\" \\\" + day + \\\" \\\" + year; }\\n \\n   var birthday = new Date(Date.UTC(2000,0,1)); \\n   var birthDay = formatDate(birthday.getUTCDay(), birthday.getUTCDate(),     \\n   birthday.getUTCMonth(), birthday.getUTCFullYear())\\n \\n \\n export { date_time, birthDay }\".trim();var minMaxs=\"\\nconst App = () => {\\n  const [minDate, setMinDate] = useState(\\\"\\\");\\n  const [maxDate, setMaxDate] = useState(\\\"\\\");\\n\\n  const handleMinDateChange = (e) => {\\n    const selectedDate = e.target.value;\\n    setMinDate(selectedDate);\\n    if (maxDate < selectedDate) {\\n      setMaxDate(\\\"\\\");\\n    }\\n  };\\n\\n  const handleMaxDateChange = (e) => {\\n    const selectedDate = e.target.value;\\n    setMaxDate(selectedDate);\\n  };\\n\\n  return (\\n    <div>\\n      Minimum Date: <input type=\\\"date\\\" id=\\\"minDate\\\" value={minDate} onChange={handleMinDateChange} />\\n      Maximum Date: <input type=\\\"date\\\" id=\\\"maxDate\\\" value={maxDate} min={minDate} onChange={handleMaxDateChange} />\\n    </div>\\n  );\\n};\\n\".trim();var AsyncAwait=/*#__PURE__*/function(_Component){_inherits(AsyncAwait,_Component);function AsyncAwait(){_classCallCheck(this,AsyncAwait);return _possibleConstructorReturn(this,_getPrototypeOf(AsyncAwait).apply(this,arguments));}_createClass(AsyncAwait,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"1. Get Lists\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:getLists,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"1. Min-Max date\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:minMaxs,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"3. Recived data from two different APIS in one function to multiple calls.\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:multiple,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"7. Step Input\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:steps,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"8. Date_time\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:dateTime,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return AsyncAwait;}(Component);export default withStyles(styles)(AsyncAwait);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/async_await.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","multiple","trim","getLists","steps","dateTime","minMaxs","AsyncAwait","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport \"../styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../prismCode\";\n\nconst titles = { backgroundColor: \"#F0F8FF\", padding: \"1px\", fontSize: \"16px\" };\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n});\n\nconst multiple = `\nconst App = () => {\n  const [mockdata, setMockdata] = useState([]);\n  const [mockdata2, setMockdata2] = useState([]);\n\n  const getMockdata = axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n  const getMockdata2 = () => {\n    return axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n  };\n\n  useEffect(() => {\n    Promise.all([getMockdata, getMockdata2()]).then((res) => {\n      setMockdata(res[0].data);\n      setMockdata2(res[1].data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <h1>Data One</h1>\n      <ul>\n        {mockdata.map((item) => (\n          <li key={item.id}>{item.name}</li>\n        ))}\n      </ul>\n      <h1>Data Two</h1>\n      <ul>\n        {mockdata2.map((item) => (\n          <li key={item.id}>{item.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}; \n`.trim();\n\nconst getLists = `\nconst App = () => {\n  const [mocks, setMocks] = useState([]);\n  const [user, setUser] = useState('');\n\n  const handleApi = async () => {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n    setMocks(res.data)\n  }\n\n  useEffect(()=>{\n    handleApi();\n  },[])\n\n  const filterdata = mocks.filter(item => (\n      item.name.toLowerCase().includes(user.toLowerCase()))\n    );\n\n  return (\n    <div>\n      <input type=\"text\" name=\"user\" value={user} onChange={(e)=>setUser(e.target.value)} />\n     {filterdata.map(items=>(\n      <li>{items.name}</li>\n     ))}\n    </div>\n  );\n};`.trim();\n\nconst steps = `\nconst App = () => {\n  const [step, setStep] = useState(0);\n\n  return (\n    <div>\n      <input type=\"number\" value={step} min=\"0\" max=\"10\" step=\"2\" onChange={(e) => setStep(e.target.value)} />\n    </div>\n  );\n};\n`.trim();\n\nconst dateTime = `\n //1\n function date_time() {\n   return Date();\n }\n \n //2\n function formatDate(dayOfWeek, day, month, year) {\n   var daysOfWeek = [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"];\n   var months = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n       return daysOfWeek[dayOfWeek] + \" \" + months[month] + \" \" + day + \" \" + year; }\n \n   var birthday = new Date(Date.UTC(2000,0,1)); \n   var birthDay = formatDate(birthday.getUTCDay(), birthday.getUTCDate(),     \n   birthday.getUTCMonth(), birthday.getUTCFullYear())\n \n \n export { date_time, birthDay }`.trim();\n\nconst minMaxs = `\nconst App = () => {\n  const [minDate, setMinDate] = useState(\"\");\n  const [maxDate, setMaxDate] = useState(\"\");\n\n  const handleMinDateChange = (e) => {\n    const selectedDate = e.target.value;\n    setMinDate(selectedDate);\n    if (maxDate < selectedDate) {\n      setMaxDate(\"\");\n    }\n  };\n\n  const handleMaxDateChange = (e) => {\n    const selectedDate = e.target.value;\n    setMaxDate(selectedDate);\n  };\n\n  return (\n    <div>\n      Minimum Date: <input type=\"date\" id=\"minDate\" value={minDate} onChange={handleMinDateChange} />\n      Maximum Date: <input type=\"date\" id=\"maxDate\" value={maxDate} min={minDate} onChange={handleMaxDateChange} />\n    </div>\n  );\n};\n`.trim();\n\nclass AsyncAwait extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4>\n              <Sidebar />\n            </h4>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. Get Lists</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={getLists}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>1. Min-Max date</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={minMaxs}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>\n                3. Recived data from two different APIS in one function to\n                multiple calls.\n              </h3>\n              <div style={titles}>\n                <PrismCode\n                  code={multiple}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>7. Step Input</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={steps}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>8. Date_time</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={dateTime}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(AsyncAwait);\n"]},"metadata":{},"sourceType":"module"}