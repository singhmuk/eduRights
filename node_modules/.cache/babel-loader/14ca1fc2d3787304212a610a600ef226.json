{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/angularjsd/angular 12/rxjs.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst purejs = `\n//html\n<html>\n  <script src=\"https://unpkg.com/@reactivex/rxjs@5.3.0/dist/global/Rx.js\"></script>\n  <body>\n    <button>Click me</button>\n    <script src=\"app.js\"></script>\n  </body>\n</html>\n\n\n//js\ndocument.addEventListener('click', (event) => console.log(event));\n\n\n//2\nvar button = document.querySelector('button');\n\nRx.Observable.fromEvent(button, 'click')\n  .subscribe(\n    (value) => console.log(value.clientX)\n  );\n`.trim();\nconst observables = `\n\n`.trim();\nconst execs = `\nvar button = document.querySelector('button');\n\nvar observer = {\n  next: function (value) {\n    console.log(value);\n  },\n  error: function (error) {\n    console.log(error);\n  },\n  complete: function () {\n    console.log('Completed');\n  }\n};\n\n//Rx.Observable.fromEvent(button, 'click')\nvar subscription = Rx.Observable.create(function (obs) {\n  //obs.next('A value');\n  //obs.error('Error');\n  //setTimeout(function() {\n  //\tobs.complete();\n  //  obs.next('A second value');\n  //}, 2000);\n  button.onclick = function (event) {\n    obs.next(event);\n  }\n})\n  .subscribe(observer);\n\nsetTimeout(function () {\n  subscription.unsubscribe();\n}, 5000);\n`.trim();\nconst throttleTime = `\nvar observable = Rx.Observable.interval(1000);\nvar observer = {\n  next: function (value) {\n    console.log(value);\n  }\n};\n\nobservable.map(function (value) {\n  return 'Number: ' + value;\n}).throttleTime(1900).subscribe(observer);\n`.trim();\nconst fixrxjs = `\nvar subject = new Rx.Subject();\n\nsubject.subscribe({\n  next: function (value) {\n    console.log(value);\n  },\n  error: function (error) {\n    console.log(error);\n  },\n  complete: function () {\n    console.log('Complete');\n  }\n});\n\nsubject.subscribe({\n  next: function (value) {\n    console.log(value);\n  }\n});\n\nsubject.next('A new data piece');\nsubject.complete();\nsubject.next('New value');\n`.trim();\nconst filteringrxjs = `\nvar observable = Rx.Observable.interval(1000);\n\nobservable\n  .filter(function (value) {\n    return value % 2 == 0;\n  })\n  .subscribe({\n    next: function (value) {\n      console.log(value);\n    },\n    error: function (error) {\n      console.log('Error: ', error);\n    }\n  });\n`.trim();\nconst debounceTime = `\n//html\n<html>\n  <script src=\"https://unpkg.com/@reactivex/rxjs@5.3.0/dist/global/Rx.js\"></script>\n  <body>\n    <input type=\"text\">\n      <script src=\"app.js\"></script>\n  </body>\n</html>\n\n\n//js\nvar input = document.querySelector('input');\nvar observable = Rx.Observable.fromEvent(input, 'input');\n\nobservable\n  .subscribe({\n    next: function (event) {\n      console.log(event.target.value);\n    }\n  });\n  \n  \n  \n//2\nvar input = document.querySelector('input');\nvar observable = Rx.Observable.fromEvent(input, 'input');\n\nobservable\n  .map(event => event.target.value)\n  .debounceTime(500)\n  .distinctUntilChanged()\n  .subscribe({\n    next: function (value) {\n      console.log(value);\n    }\n  });\n`.trim();\nconst scan = `\nvar input = document.querySelector('input');\nvar observable = Rx.Observable.of(1, 2, 3, 4, 5);\n\nobservable\n  .subscribe({\n    next: function (value) {\n      console.log(value);\n    }\n  });\n\n\n\n//2\nvar observable = Rx.Observable.of(1, 2, 3, 4, 5);\n\nobservable\n  .scan((total, currentValue) => {\n    return total + currentValue;\n  }, 0)\n  .subscribe({\n    next: function (value) {\n      console.log(value);\n    }\n  });\n`.trim();\nconst pluck = `\nvar input = document.querySelector('input');\nvar observable = Rx.Observable.fromEvent(input, 'input');\n\nobservable\n  .subscribe({\n    next: function (event) {\n      console.log(event.target.value);\n    }\n  });\n\n\n//2\nvar input = document.querySelector('input');\nvar observable = Rx.Observable.fromEvent(input, 'input');\n\nobservable\n  .pluck('target', 'value')\n  .debounceTime(500)\n  .distinctUntilChanged()\n  .subscribe({\n    next: function (value) {\n      console.log(value);\n    }\n  });\n`.trim();\nconst mergeMap = `\n//html\n<body>\n    <input type=\"text\" id=\"input1\">\n      <input type=\"text\" id=\"input2\">\n        <p>Combined value: <span></span></p>\n        <script src=\"app.js\"></script>\n      </body>\n      \n      \n//js\nvar input1 = document.querySelector('#input1');\nvar input2 = document.querySelector('#input2');\n\nvar span = document.querySelector('span');\n\nvar obs1 = Rx.Observable.fromEvent(input1, 'input');\nvar obs2 = Rx.Observable.fromEvent(input2, 'input');\n\nobs1.mergeMap(\nevent1 => {\nreturn obs2.map(event2 => event1.target.value + ' ' + event2.target.value)\n      }\n    ).subscribe(\n    combinedValue => span.textContent = combinedValue\n  );\n`.trim();\nconst switchMaps = `\nvar button = document.querySelector('button');\n\nvar obs1 = Rx.Observable.fromEvent(button, 'click');\nvar obs2 = Rx.Observable.interval(1000);\n\nobs1.switchMap(\n  event => {\n    return obs2\n  }\n).subscribe(\n  (value) => console.log(value)\n);\n`.trim();\nconst BehaviorSubject = `\nvar clickEmitted = new Rx.Subject();\nvar button = document.querySelector('button');\nvar div = document.querySelector('div');\n\nbutton.addEventListener('click', () => clickEmitted.next('Clicked!'));\n\nclickEmitted.subscribe(\n  (value) => div.textContent = value\n);\n\n\n//2\nvar clickEmitted = new Rx.BehaviorSubject('Not clicked');\nvar button = document.querySelector('button');\nvar div = document.querySelector('div');\n\nbutton.addEventListener('click', () => clickEmitted.next('Clicked!'));\n\nclickEmitted.subscribe(\n  (value) => div.textContent = value\n);\n`.trim();\nconst map = `\nimport {Observable, interval} from 'rxjs';\nimport {map} from \"rxjs/operators\";\n\ninterval(1000).pipe(map(data => data * 2))\n              .subscribe((data:number) => {\n                console.log(data)\n              });\n\n\n\n//map\nimport {Observable, interval, Subscriber, pipe} from 'rxjs';\nimport {map} from \"rxjs/operators\";\n\nfunction fetchUser(){\n  const newObservable = new Observable((observer:Subscriber<unknown>) => {\n    const user={\n      data:{firstName: 'Sam', mob: 2345342290}\n    }\n    observer.next(user)\n  });\n  return newObservable.pipe(map(user)=>{\n    return user.data\n  })\n}\n\n\nfetchUser().Subscriber((user)=>{\n  console.log(user)\n})`.trim();\nconst filter = `\nimport {interval} from 'rxjs';\nimport {filter, map} from \"rxjs/operators\";\n\nconst observable = interval(100).pipe(filter(data=>{\n  return data<5\n}));\n\nobservable.subscribe(data => {\n  console.log(data);\n})\n`.trim();\nconst switchMap = `\nimport {Observable} from 'rxjs';\nimport {switchMap} from \"rxjs/operators\";\n\nfunction buySugarInBulk(){\n  return new Observable(observer=>{\n    observer.next('Suger Perchased');\n  })\n}\n\nfunction getSuger(quantity){\n  return new Observable((observer)=>{\n    return observer.next('Suger ' +quantity+ 'for you' )\n  })\n}\n\nfunction getSugarFromShop(quantity){\n  return buySugarInBulk().pipe(switchMap(()=>{\n    return getSuger(quantity);\n  }));\n}\n\ngetSugarFromShop('1Kg').subscribe(data=>{\n  console.log(data);\n});`.trim();\nconst concatMap = `\nimport {timer} from \"rxjs\";\nimport {concatMap, map} from \"rxjs/operators\";\n\nconst timer$ = timer(100, 500)\n                .pipe(map(data => data + 'timer1'));\n\nconst timer2$ = timer(100, 500)\n                .pipe(map(data => data + 'timer2'));\n\nconst observables = timer$.pipe(concatMap(timer1Data => {\n                 return timer2$.pipe(map(data => data + timer1Data));\n}))\n\n\nobservables.subscribe(data => console.log(data));`.trim();\nconst observableVsPromises = `\nfunction isBreadAvailable(){\n  return true;\n}\n\nfunction isAggAvailable(){\n  return false;\n}\n\nfunction bringBread(){\n  return new Promise((res, rej) =>{\n    if(isBreadAvailable()) {\n      res('Bread is Available');\n    }\n    else if(isAggAvailable){\n      res('Agg is Available')\n    }\n    else{\n      rej('Bread is bring')\n    }\n  })\n}\n\nbringBread().then((data)=>{\n  console.log(data);\n})\n.catch(err => {\n  console.log(err)\n})`.trim();\nconst observableV = `\nimport {BehaviorSubject, timeout} from 'rxjs';\n\nconst data = ['A', 'B', 'C', 'D', 'E'];\nconst fm = new BehaviorSubject('First Data');\n\nfunction changeSongs(){\n  for(let song of data){\n    fm.next(song);\n  }\n}\n\n\nfm.subscribe((song:string)=>{\n  console.log(song);\n});\n\nchangeSongs();\n\nsetTimeout(()=>{\n  fm.subscribe((song:string)=>{\n  console.log(song);\n});\n},1000);`.trim();\nconst rxjxLibrary = `import { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';`.trim();\nconst observableFun = `import { from } from 'rxjs'; // from function\nconst data = from(fetch('/api/endpoint')); //Created from Promise\ndata.subscribe({\n next(response) {console.log(response);},\n error(err) {console.error('Error: ' + err);},\n complete() {console.log('Completed');}\n});`.trim();\nconst observableAJAX = `\nimport { ajax } from 'rxjs/ajax'; // ajax function\nconst apiData = ajax('/api/data'); // Created from AJAX request\n// Subscribe to create the request\napiData.subscribe(res => console.log(res.status, res.response));`.trim();\nconst observableCount = `\nimport { interval } from 'rxjs'; // interval function\nconst secondsCounter = interval(1000); // Created from Counter value\nsecondsCounter.subscribe(n =>\n  console.log('Counter value: '$'{n}'));`.trim();\nconst observableEvt = `\nimport { fromEvent } from 'rxjs';\nconst el = document.getElementById('custom-element');\nconst mouseMoves = fromEvent(el, 'mousemove');\nconst subscription = mouseMoves.subscribe((e: MouseEvent) => {\n  console.log('Coordnitaes of mouse pointer: '$'{e.clientX} * '$'{e.clientY}');\n  });`.trim();\nconst placeholders = `\n//app.component.ts\nimport {PlaceholderService} from \"./services/placeholder.service\"\n\n@Component({\n  selector: 'app-root',\n  template: '\n  <button (click)=\"getApi()\">GET</button>\n    <div *ngFor=\"let items of data\">\n      <p>{{items.id}} - {{items.title}}</p>\n    </div>\n  ',\n})\n\nexport class AppComponent implements OnInit{\n  data:Array<any>;\n  \n  constructor( private https:PlaceholderService) { \n    this.data=new Array<any>()\n   }\n\n  ngOnInit(): void {}\n  getApi(){\n    this.https.getData().subscribe((data)=>{\n      this.data=data\n    })\n  }\n}\n\n\n//services/placeholder.service.ts\nimport { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlaceholderService {\n\n  constructor(private http:HttpClient) { }\n\n  getData(): Observable<any>{\n    const url=\"https://jsonplaceholder.typicode.com/posts\";\n    return this.http.get<any>(url)\n  }\n}\n`.trim();\n\nclass Rxjs extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      },\n      __self: this\n    }, \"Rxjs With Pure Js (Reactive Extension for JavaScript)\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: purejs,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }, \"RxJS OPERATORS LIKE map() OR throttleTime()\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: throttleTime,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }, \"RxJS SUBJECT (~EventEmitter)\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: fixrxjs,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    }, \"filter() OPERATOR\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: filteringrxjs,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }, \"debounceTime & distinctUntilChanged \"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: debounceTime,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593\n      },\n      __self: this\n    }, \"scan() vs reduce()\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: scan,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603\n      },\n      __self: this\n    }, \"pluck()\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: pluck,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613\n      },\n      __self: this\n    }, \"mergeMap()\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: mergeMap,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623\n      },\n      __self: this\n    }, \"switchMap()\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: switchMaps,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633\n      },\n      __self: this\n    }, \"BehaviorSubject\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: BehaviorSubject,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642\n      },\n      __self: this\n    }, \"What is RxJS With Angular\"), \"RxJS is a library for composing asynchronous and callback-based code in a functional, reactive style using Observables. Many APIs such as HttpClient produce and consume RxJS Observables and also uses operators for processing observables.\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: rxjxLibrary,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653\n      },\n      __self: this\n    }, \"What are the utility functions provided by RxJS\"), \"The RxJS library also provides below utility functions for creating and working with observables.\", React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656\n      },\n      __self: this\n    }, \"Converting existing code for async operations into observables\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657\n      },\n      __self: this\n    }, \"Iterating through the values in a stream\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658\n      },\n      __self: this\n    }, \"Mapping values to different types\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659\n      },\n      __self: this\n    }, \"Filtering streams\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660\n      },\n      __self: this\n    }, \"Composing multiple streams\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664\n      },\n      __self: this\n    }, \"What are observable creation functions\"), \"RxJS provides creation functions for the process of creating observables from things such as promises, events, timers and Ajax requests.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667\n      },\n      __self: this\n    }, \"1. Create an observable from a promise\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: observableFun,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677\n      },\n      __self: this\n    }, \"2. Create an observable that creates an AJAX request\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: observableAJAX,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687\n      },\n      __self: this\n    }, \"3. Create an observable from a counter\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: observableCount,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697\n      },\n      __self: this\n    }, \"4. Create an observable from an event\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: observableEvt,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706\n      },\n      __self: this\n    }, \"Map\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708\n      },\n      __self: this\n    }, \"map change observable value.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709\n      },\n      __self: this\n    }, \"map to transform a collection of items into a collection of different items.\")), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: map,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720\n      },\n      __self: this\n    }, \"Filter\"), \"This operator takes values from the source Observable, passes them through a predicate function and only emits those values that get TRUE.\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: filter,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730\n      },\n      __self: this\n    }, \"SwitchMap\"), \"switchMap operator is basically a combination of two operators - switchAll and map. The map part lets you map a value from a higher-order source observable to an inner observable stream. When a new value arrives from a source observable, execute a map function that returns an inner observable.\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: switchMap,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741\n      },\n      __self: this\n    }, \"concatMap\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: concatMap,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 752\n      },\n      __self: this\n    }, \"OservableVsPromises\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: observableVsPromises,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763\n      },\n      __self: this\n    }, \"BehaviorSubject ObservableV:\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: observableV,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774\n      },\n      __self: this\n    }, \"Placeholders\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: placeholders,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(Rxjs);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/angularjsd/angular 12/rxjs.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","purejs","trim","observables","execs","throttleTime","fixrxjs","filteringrxjs","debounceTime","scan","pluck","mergeMap","switchMaps","BehaviorSubject","map","filter","switchMap","concatMap","observableVsPromises","observableV","rxjxLibrary","observableFun","observableAJAX","observableCount","observableEvt","placeholders","Rxjs","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst purejs = `\n//html\n<html>\n  <script src=\"https://unpkg.com/@reactivex/rxjs@5.3.0/dist/global/Rx.js\"></script>\n  <body>\n    <button>Click me</button>\n    <script src=\"app.js\"></script>\n  </body>\n</html>\n\n\n//js\ndocument.addEventListener('click', (event) => console.log(event));\n\n\n//2\nvar button = document.querySelector('button');\n\nRx.Observable.fromEvent(button, 'click')\n  .subscribe(\n    (value) => console.log(value.clientX)\n  );\n`.trim();\n\nconst observables = `\n\n`.trim();\n\nconst execs = `\nvar button = document.querySelector('button');\n\nvar observer = {\n  next: function (value) {\n    console.log(value);\n  },\n  error: function (error) {\n    console.log(error);\n  },\n  complete: function () {\n    console.log('Completed');\n  }\n};\n\n//Rx.Observable.fromEvent(button, 'click')\nvar subscription = Rx.Observable.create(function (obs) {\n  //obs.next('A value');\n  //obs.error('Error');\n  //setTimeout(function() {\n  //\tobs.complete();\n  //  obs.next('A second value');\n  //}, 2000);\n  button.onclick = function (event) {\n    obs.next(event);\n  }\n})\n  .subscribe(observer);\n\nsetTimeout(function () {\n  subscription.unsubscribe();\n}, 5000);\n`.trim();\n\nconst throttleTime = `\nvar observable = Rx.Observable.interval(1000);\nvar observer = {\n  next: function (value) {\n    console.log(value);\n  }\n};\n\nobservable.map(function (value) {\n  return 'Number: ' + value;\n}).throttleTime(1900).subscribe(observer);\n`.trim();\n\nconst fixrxjs = `\nvar subject = new Rx.Subject();\n\nsubject.subscribe({\n  next: function (value) {\n    console.log(value);\n  },\n  error: function (error) {\n    console.log(error);\n  },\n  complete: function () {\n    console.log('Complete');\n  }\n});\n\nsubject.subscribe({\n  next: function (value) {\n    console.log(value);\n  }\n});\n\nsubject.next('A new data piece');\nsubject.complete();\nsubject.next('New value');\n`.trim();\n\nconst filteringrxjs = `\nvar observable = Rx.Observable.interval(1000);\n\nobservable\n  .filter(function (value) {\n    return value % 2 == 0;\n  })\n  .subscribe({\n    next: function (value) {\n      console.log(value);\n    },\n    error: function (error) {\n      console.log('Error: ', error);\n    }\n  });\n`.trim();\n\nconst debounceTime = `\n//html\n<html>\n  <script src=\"https://unpkg.com/@reactivex/rxjs@5.3.0/dist/global/Rx.js\"></script>\n  <body>\n    <input type=\"text\">\n      <script src=\"app.js\"></script>\n  </body>\n</html>\n\n\n//js\nvar input = document.querySelector('input');\nvar observable = Rx.Observable.fromEvent(input, 'input');\n\nobservable\n  .subscribe({\n    next: function (event) {\n      console.log(event.target.value);\n    }\n  });\n  \n  \n  \n//2\nvar input = document.querySelector('input');\nvar observable = Rx.Observable.fromEvent(input, 'input');\n\nobservable\n  .map(event => event.target.value)\n  .debounceTime(500)\n  .distinctUntilChanged()\n  .subscribe({\n    next: function (value) {\n      console.log(value);\n    }\n  });\n`.trim();\n\nconst scan = `\nvar input = document.querySelector('input');\nvar observable = Rx.Observable.of(1, 2, 3, 4, 5);\n\nobservable\n  .subscribe({\n    next: function (value) {\n      console.log(value);\n    }\n  });\n\n\n\n//2\nvar observable = Rx.Observable.of(1, 2, 3, 4, 5);\n\nobservable\n  .scan((total, currentValue) => {\n    return total + currentValue;\n  }, 0)\n  .subscribe({\n    next: function (value) {\n      console.log(value);\n    }\n  });\n`.trim();\n\nconst pluck = `\nvar input = document.querySelector('input');\nvar observable = Rx.Observable.fromEvent(input, 'input');\n\nobservable\n  .subscribe({\n    next: function (event) {\n      console.log(event.target.value);\n    }\n  });\n\n\n//2\nvar input = document.querySelector('input');\nvar observable = Rx.Observable.fromEvent(input, 'input');\n\nobservable\n  .pluck('target', 'value')\n  .debounceTime(500)\n  .distinctUntilChanged()\n  .subscribe({\n    next: function (value) {\n      console.log(value);\n    }\n  });\n`.trim();\n\nconst mergeMap = `\n//html\n<body>\n    <input type=\"text\" id=\"input1\">\n      <input type=\"text\" id=\"input2\">\n        <p>Combined value: <span></span></p>\n        <script src=\"app.js\"></script>\n      </body>\n      \n      \n//js\nvar input1 = document.querySelector('#input1');\nvar input2 = document.querySelector('#input2');\n\nvar span = document.querySelector('span');\n\nvar obs1 = Rx.Observable.fromEvent(input1, 'input');\nvar obs2 = Rx.Observable.fromEvent(input2, 'input');\n\nobs1.mergeMap(\nevent1 => {\nreturn obs2.map(event2 => event1.target.value + ' ' + event2.target.value)\n      }\n    ).subscribe(\n    combinedValue => span.textContent = combinedValue\n  );\n`.trim();\n\nconst switchMaps = `\nvar button = document.querySelector('button');\n\nvar obs1 = Rx.Observable.fromEvent(button, 'click');\nvar obs2 = Rx.Observable.interval(1000);\n\nobs1.switchMap(\n  event => {\n    return obs2\n  }\n).subscribe(\n  (value) => console.log(value)\n);\n`.trim();\n\nconst BehaviorSubject = `\nvar clickEmitted = new Rx.Subject();\nvar button = document.querySelector('button');\nvar div = document.querySelector('div');\n\nbutton.addEventListener('click', () => clickEmitted.next('Clicked!'));\n\nclickEmitted.subscribe(\n  (value) => div.textContent = value\n);\n\n\n//2\nvar clickEmitted = new Rx.BehaviorSubject('Not clicked');\nvar button = document.querySelector('button');\nvar div = document.querySelector('div');\n\nbutton.addEventListener('click', () => clickEmitted.next('Clicked!'));\n\nclickEmitted.subscribe(\n  (value) => div.textContent = value\n);\n`.trim();\n\nconst map = `\nimport {Observable, interval} from 'rxjs';\nimport {map} from \"rxjs/operators\";\n\ninterval(1000).pipe(map(data => data * 2))\n              .subscribe((data:number) => {\n                console.log(data)\n              });\n\n\n\n//map\nimport {Observable, interval, Subscriber, pipe} from 'rxjs';\nimport {map} from \"rxjs/operators\";\n\nfunction fetchUser(){\n  const newObservable = new Observable((observer:Subscriber<unknown>) => {\n    const user={\n      data:{firstName: 'Sam', mob: 2345342290}\n    }\n    observer.next(user)\n  });\n  return newObservable.pipe(map(user)=>{\n    return user.data\n  })\n}\n\n\nfetchUser().Subscriber((user)=>{\n  console.log(user)\n})`.trim();\n\nconst filter = `\nimport {interval} from 'rxjs';\nimport {filter, map} from \"rxjs/operators\";\n\nconst observable = interval(100).pipe(filter(data=>{\n  return data<5\n}));\n\nobservable.subscribe(data => {\n  console.log(data);\n})\n`.trim();\n\nconst switchMap = `\nimport {Observable} from 'rxjs';\nimport {switchMap} from \"rxjs/operators\";\n\nfunction buySugarInBulk(){\n  return new Observable(observer=>{\n    observer.next('Suger Perchased');\n  })\n}\n\nfunction getSuger(quantity){\n  return new Observable((observer)=>{\n    return observer.next('Suger ' +quantity+ 'for you' )\n  })\n}\n\nfunction getSugarFromShop(quantity){\n  return buySugarInBulk().pipe(switchMap(()=>{\n    return getSuger(quantity);\n  }));\n}\n\ngetSugarFromShop('1Kg').subscribe(data=>{\n  console.log(data);\n});`.trim();\n\nconst concatMap = `\nimport {timer} from \"rxjs\";\nimport {concatMap, map} from \"rxjs/operators\";\n\nconst timer$ = timer(100, 500)\n                .pipe(map(data => data + 'timer1'));\n\nconst timer2$ = timer(100, 500)\n                .pipe(map(data => data + 'timer2'));\n\nconst observables = timer$.pipe(concatMap(timer1Data => {\n                 return timer2$.pipe(map(data => data + timer1Data));\n}))\n\n\nobservables.subscribe(data => console.log(data));`.trim();\n\nconst observableVsPromises = `\nfunction isBreadAvailable(){\n  return true;\n}\n\nfunction isAggAvailable(){\n  return false;\n}\n\nfunction bringBread(){\n  return new Promise((res, rej) =>{\n    if(isBreadAvailable()) {\n      res('Bread is Available');\n    }\n    else if(isAggAvailable){\n      res('Agg is Available')\n    }\n    else{\n      rej('Bread is bring')\n    }\n  })\n}\n\nbringBread().then((data)=>{\n  console.log(data);\n})\n.catch(err => {\n  console.log(err)\n})`.trim();\n\nconst observableV = `\nimport {BehaviorSubject, timeout} from 'rxjs';\n\nconst data = ['A', 'B', 'C', 'D', 'E'];\nconst fm = new BehaviorSubject('First Data');\n\nfunction changeSongs(){\n  for(let song of data){\n    fm.next(song);\n  }\n}\n\n\nfm.subscribe((song:string)=>{\n  console.log(song);\n});\n\nchangeSongs();\n\nsetTimeout(()=>{\n  fm.subscribe((song:string)=>{\n  console.log(song);\n});\n},1000);`.trim();\n\nconst rxjxLibrary = `import { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';`.trim();\n\nconst observableFun = `import { from } from 'rxjs'; // from function\nconst data = from(fetch('/api/endpoint')); //Created from Promise\ndata.subscribe({\n next(response) {console.log(response);},\n error(err) {console.error('Error: ' + err);},\n complete() {console.log('Completed');}\n});`.trim();\n\nconst observableAJAX = `\nimport { ajax } from 'rxjs/ajax'; // ajax function\nconst apiData = ajax('/api/data'); // Created from AJAX request\n// Subscribe to create the request\napiData.subscribe(res => console.log(res.status, res.response));`.trim();\n\nconst observableCount = `\nimport { interval } from 'rxjs'; // interval function\nconst secondsCounter = interval(1000); // Created from Counter value\nsecondsCounter.subscribe(n =>\n  console.log('Counter value: '$'{n}'));`.trim();\n\nconst observableEvt = `\nimport { fromEvent } from 'rxjs';\nconst el = document.getElementById('custom-element');\nconst mouseMoves = fromEvent(el, 'mousemove');\nconst subscription = mouseMoves.subscribe((e: MouseEvent) => {\n  console.log('Coordnitaes of mouse pointer: '$'{e.clientX} * '$'{e.clientY}');\n  });`.trim();\n\nconst placeholders = `\n//app.component.ts\nimport {PlaceholderService} from \"./services/placeholder.service\"\n\n@Component({\n  selector: 'app-root',\n  template: '\n  <button (click)=\"getApi()\">GET</button>\n    <div *ngFor=\"let items of data\">\n      <p>{{items.id}} - {{items.title}}</p>\n    </div>\n  ',\n})\n\nexport class AppComponent implements OnInit{\n  data:Array<any>;\n  \n  constructor( private https:PlaceholderService) { \n    this.data=new Array<any>()\n   }\n\n  ngOnInit(): void {}\n  getApi(){\n    this.https.getData().subscribe((data)=>{\n      this.data=data\n    })\n  }\n}\n\n\n//services/placeholder.service.ts\nimport { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlaceholderService {\n\n  constructor(private http:HttpClient) { }\n\n  getData(): Observable<any>{\n    const url=\"https://jsonplaceholder.typicode.com/posts\";\n    return this.http.get<any>(url)\n  }\n}\n`.trim();\n\n\nclass Rxjs extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Rxjs With Pure Js (Reactive Extension for JavaScript)</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={purejs}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>RxJS OPERATORS LIKE map() OR throttleTime()</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={throttleTime}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>RxJS SUBJECT (~EventEmitter)</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={fixrxjs}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>filter() OPERATOR</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={filteringrxjs}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>debounceTime & distinctUntilChanged </h3>\n              <div style={titles}>\n                <PrismCode\n                  code={debounceTime}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>scan() vs reduce()</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={scan}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>pluck()</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={pluck}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>mergeMap()</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={mergeMap}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>switchMap()</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={switchMaps}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>BehaviorSubject</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={BehaviorSubject}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n\n              <h3>What is RxJS With Angular</h3>\n              RxJS is a library for composing asynchronous and callback-based code in a functional, reactive style using Observables. Many APIs such as HttpClient produce and consume RxJS Observables and also uses operators for processing observables.\n              <div style={titles}>\n                <PrismCode\n                  code={rxjxLibrary}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>What are the utility functions provided by RxJS</h3>\n              The RxJS library also provides below utility functions for creating and working with observables.\n              <ul>\n                <li>Converting existing code for async operations into observables</li>\n                <li>Iterating through the values in a stream</li>\n                <li>Mapping values to different types</li>\n                <li>Filtering streams</li>\n                <li>Composing multiple streams</li>\n              </ul>\n              <br />\n\n              <h3>What are observable creation functions</h3>\n              RxJS provides creation functions for the process of creating observables from things such as promises, events, timers and Ajax requests.\n              <br />\n              <b>1. Create an observable from a promise</b>\n              <div style={titles}>\n                <PrismCode\n                  code={observableFun}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <b>2. Create an observable that creates an AJAX request</b>\n              <div style={titles}>\n                <PrismCode\n                  code={observableAJAX}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <b>3. Create an observable from a counter</b>\n              <div style={titles}>\n                <PrismCode\n                  code={observableCount}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <b>4. Create an observable from an event</b>\n              <div style={titles}>\n                <PrismCode\n                  code={observableEvt}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n\n              <h3>Map</h3>\n              <ul>\n                <li>map change observable value.</li>\n                <li>map to transform a collection of items into a collection of different items.</li>\n              </ul>\n              <div style={titles}>\n                <PrismCode\n                  code={map}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Filter</h3>\n              This operator takes values from the source Observable, passes them through a predicate function and only emits those values that get TRUE.\n              <div style={titles}>\n                <PrismCode\n                  code={filter}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n                <br />\n\n                <h3>SwitchMap</h3>\n                switchMap operator is basically a combination of two operators - switchAll and map. The map part lets you map a value from a higher-order source observable to an inner observable stream. When a new value arrives from a source observable, execute a map function that returns an inner observable.\n                <div style={titles}>\n                  <PrismCode\n                    code={switchMap}\n                    language=\"js\"\n                    plugins={[\"line-numbers\"]}\n                  />\n                </div>\n                <br />\n\n                <h3>concatMap</h3>\n\n                <div style={titles}>\n                  <PrismCode\n                    code={concatMap}\n                    language=\"js\"\n                    plugins={[\"line-numbers\"]}\n                  />\n                </div>\n                <br />\n\n                <h3>OservableVsPromises</h3>\n\n                <div style={titles}>\n                  <PrismCode\n                    code={observableVsPromises}\n                    language=\"js\"\n                    plugins={[\"line-numbers\"]}\n                  />\n                </div>\n                <br />\n\n                <h3>BehaviorSubject ObservableV:</h3>\n                <div style={titles}>\n                  <PrismCode\n                    code={observableV}\n                    language=\"js\"\n                    plugins={[\"line-numbers\"]}\n                  />\n                </div>\n              </div>\n              <br />\n\n              <h3>Placeholders</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={placeholders}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Rxjs));\n"]},"metadata":{},"sourceType":"module"}