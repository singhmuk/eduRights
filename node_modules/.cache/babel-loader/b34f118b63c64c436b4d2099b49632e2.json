{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/angularjsd/angular 12/debounce.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst creaditCard = `\n//import CreditCardDirective in app.module.ts\n\nimport { Directive, HostListener, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[credit-card]'\n})\nexport class CreditCardDirective {\n\n  @HostBinding('style.border')\n  border: string;\n\n  @HostListener('input', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    const input = event.target as HTMLInputElement;\n    let trimmed = input.value.replace(/\\s+/g, '');\n    if(trimmed.length > 16) {\n      trimmed = trimmed.substr(0, 16);\n    }\n    let numbers = [];\n    for(let i = 0; i < trimmed.length; i += 4) {\n      numbers.push(trimmed.substr(i, 4));\n    }\n    input.value = numbers.join(' ');\n\n    this.border = '';\n    if(/[^\\d]+/.test(trimmed)) {\n      this.border = '1px solid red';\n    }\n  }\n}\n\n\n//app.component.ts\n@Component({\n  selector: 'app-root',\n  template: '\n  < div >\n  <label>Credit Card Number\n    <input\n      name=\"credit-card\"\n      type=\"text\"\n      credit-card>\n      </label>\n    </div>\n      ',\n    })\n\nexport class AppComponent  {}\n`.trim();\nconst debounce = `\n//debounce-click.directive.ts\nimport { Directive, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Directive({\n  selector: '[appDebounceClick]'\n})\nexport class DebounceClickDirective implements OnInit, OnDestroy {\n  @Input() debounceTime = 500;\n  @Output() debounceClick = new EventEmitter();\n  private clicks = new Subject();\n  private subscription: Subscription;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.subscription = this.clicks.pipe(\n      debounceTime(this.debounceTime)\n    ).subscribe(e => this.debounceClick.emit(e));\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  @HostListener('click', ['$event'])\n  clickEvent(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.clicks.next(event);\n  }\n}\n\n\n//app.component.ts\n@Component({\n  selector: 'app-root',\n  template: '\n  <h1> Creating a Custom Debounce Click Directive in Angular</h1>\n    {{count}}\n      <br />\n      <button (click) = \"log()\"> Regular Click</button>\n      & nbsp;\n<button appDebounceClick (debounceClick) = \"log()\" [debounceTime] = \"700\"> Debounced Click</button>\n    ',\n  })\nexport class AppComponent  {\n   count = 0;\n\n  log() {\n    this.count++;\n    console.log('Clicked!');\n  }\n}\n`.trim();\nconst truncates = `\n//truncate.pipe.ts\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'truncate' })\nexport class TruncatePipe implements PipeTransform {\n\n  transform(value: string, limit: number): string {\n    return value.length < limit\n      ? value\n      : value.slice(0, limit) + '...';\n  }\n}\n\n\n//app.component.ts\n@Component({\n  selector: 'app-root',\n  template: \n  <p> {{'this is a not so long string' | truncate}}</p>\n    <p>{{'this is a not so long string' | truncate : 20}}</p>\n      ',\n    })\n\nexport class AppComponent  {}\n`.trim();\nconst popUp = `\n@Component({\n  selector: 'app-root',\n  template: '\n  <button(click)=\"showAlert()\"> show alert</button>\n    <div *ngIf=\"isVisible\">\n      JWT copied to clipboard\n</div>\n'})\n\nexport class AppComponent  {\n    public isVisible: boolean = false;\n\n  showAlert() : void {\n    if (this.isVisible) {\n      return;\n    }\n    this.isVisible = true;\n    setTimeout(()=> this.isVisible = false,2500)\n  }\n}`.trim();\n\nclass Debounce extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"1. Credit Card Input\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: creaditCard,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"2. Debounce\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"This directive is used to help prevent duplicate actions.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"The Directive API is a particular way to add behavior to existing DOM elements or components. For our use case, we want to debounce or delay click events from occurring when an element is a click.\")), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: debounce,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"3. Truncates\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: truncates,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"4. PopUp\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: popUp,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(Debounce);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/angularjsd/angular 12/debounce.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","creaditCard","trim","debounce","truncates","popUp","Debounce","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,EAAkCC,IAAlC,QAA8C,mBAA9C;AAEA,OAAO,0BAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAGA,MAAMC,MAAM,GAAG;AAAEC,EAAAA,eAAe,EAAE,SAAnB;AAA8BC,EAAAA,OAAO,EAAE,KAAvC;AAA8CC,EAAAA,QAAQ,EAAE;AAAxD,CAAf;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH;AAELN,IAAAA,OAAO,EAAEG,KAAK,CAACG,OAAN,CAAc,CAAd;AAFJ,GADgB;AAKvBC,EAAAA,QAAQ,EAAE;AACRF,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADA,GALa;AAQvBE,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF;AARY,CAAL,CAApB;;AAcA,MAAMC,WAAW,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAD,CAkDlBC,IAlDkB,EAApB;AAqDA,MAAMC,QAAQ,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAD,CAwDfD,IAxDe,EAAjB;AA2DA,MAAME,SAAS,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;CAAD,CAyBhBF,IAzBgB,EAAlB;AA4BA,MAAMG,KAAK,GAAI;;;;;;;;;;;;;;;;;;;;EAAD,CAoBXH,IApBW,EAAd;;AAuBA,MAAMI,QAAN,SAAuBzB,SAAvB,CAAiC;AAC/B0B,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,UAAU,CAAC,MAAM1B,KAAK,CAAC2B,YAAN,EAAP,EAA6B,CAA7B,CAAV;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,WACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAED,OAAO,CAAChB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CADF,CADF,CADF,EAME,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEgB,OAAO,CAAChB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAK,MAAA,KAAK,EAAEN,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEY,WADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8MAFF,CAZF,EAgBE;AAAK,MAAA,KAAK,EAAEZ,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEc,QADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhBF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAzBF,EA0BE;AAAK,MAAA,KAAK,EAAEd,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEe,SADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA1BF,EAiCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCF,EAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnCF,EAoCE;AAAK,MAAA,KAAK,EAAEf,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEgB,KADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CApCF,CADF,CADF,CANF,CADF;AAyDD;;AA/D8B;;AAkEjC,eAAgBpB,UAAU,CAACQ,MAAD,CAAV,CAAmBa,QAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst creaditCard = `\n//import CreditCardDirective in app.module.ts\n\nimport { Directive, HostListener, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[credit-card]'\n})\nexport class CreditCardDirective {\n\n  @HostBinding('style.border')\n  border: string;\n\n  @HostListener('input', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    const input = event.target as HTMLInputElement;\n    let trimmed = input.value.replace(/\\s+/g, '');\n    if(trimmed.length > 16) {\n      trimmed = trimmed.substr(0, 16);\n    }\n    let numbers = [];\n    for(let i = 0; i < trimmed.length; i += 4) {\n      numbers.push(trimmed.substr(i, 4));\n    }\n    input.value = numbers.join(' ');\n\n    this.border = '';\n    if(/[^\\d]+/.test(trimmed)) {\n      this.border = '1px solid red';\n    }\n  }\n}\n\n\n//app.component.ts\n@Component({\n  selector: 'app-root',\n  template: '\n  < div >\n  <label>Credit Card Number\n    <input\n      name=\"credit-card\"\n      type=\"text\"\n      credit-card>\n      </label>\n    </div>\n      ',\n    })\n\nexport class AppComponent  {}\n`.trim();\n\n\nconst debounce = `\n//debounce-click.directive.ts\nimport { Directive, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Directive({\n  selector: '[appDebounceClick]'\n})\nexport class DebounceClickDirective implements OnInit, OnDestroy {\n  @Input() debounceTime = 500;\n  @Output() debounceClick = new EventEmitter();\n  private clicks = new Subject();\n  private subscription: Subscription;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.subscription = this.clicks.pipe(\n      debounceTime(this.debounceTime)\n    ).subscribe(e => this.debounceClick.emit(e));\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  @HostListener('click', ['$event'])\n  clickEvent(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.clicks.next(event);\n  }\n}\n\n\n//app.component.ts\n@Component({\n  selector: 'app-root',\n  template: '\n  <h1> Creating a Custom Debounce Click Directive in Angular</h1>\n    {{count}}\n      <br />\n      <button (click) = \"log()\"> Regular Click</button>\n      & nbsp;\n<button appDebounceClick (debounceClick) = \"log()\" [debounceTime] = \"700\"> Debounced Click</button>\n    ',\n  })\nexport class AppComponent  {\n   count = 0;\n\n  log() {\n    this.count++;\n    console.log('Clicked!');\n  }\n}\n`.trim();\n\n\nconst truncates = `\n//truncate.pipe.ts\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'truncate' })\nexport class TruncatePipe implements PipeTransform {\n\n  transform(value: string, limit: number): string {\n    return value.length < limit\n      ? value\n      : value.slice(0, limit) + '...';\n  }\n}\n\n\n//app.component.ts\n@Component({\n  selector: 'app-root',\n  template: \n  <p> {{'this is a not so long string' | truncate}}</p>\n    <p>{{'this is a not so long string' | truncate : 20}}</p>\n      ',\n    })\n\nexport class AppComponent  {}\n`.trim();\n\n\nconst popUp = `\n@Component({\n  selector: 'app-root',\n  template: '\n  <button(click)=\"showAlert()\"> show alert</button>\n    <div *ngIf=\"isVisible\">\n      JWT copied to clipboard\n</div>\n'})\n\nexport class AppComponent  {\n    public isVisible: boolean = false;\n\n  showAlert() : void {\n    if (this.isVisible) {\n      return;\n    }\n    this.isVisible = true;\n    setTimeout(()=> this.isVisible = false,2500)\n  }\n}`.trim();\n\n\nclass Debounce extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. Credit Card Input</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={creaditCard}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>2. Debounce</h3>\n              <ul>\n                <li>This directive is used to help prevent duplicate actions.</li>\n                <li>The Directive API is a particular way to add behavior to existing DOM elements or components. For our use case, we want to debounce or delay click events from occurring when an element is a click.</li>\n              </ul>\n              <div style={titles}>\n                <PrismCode\n                  code={debounce}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>3. Truncates</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={truncates}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>4. PopUp</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={popUp}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Debounce));\n"]},"metadata":{},"sourceType":"module"}