{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var fileModel=\"\\nconst ProductSchema = new Schems({\\n  name: { type: String, required: true },\\n  price: { type: Number, required: true },\\n  image: { type: String, required: true },\\n});\\n\\nmodule.exports = mongoose.model('Product', ProductSchema);\\n\".trim();var fileControllers=\"\\nconst Product = require('../models/Product');\\nconst { StatusCodes } = require('http-status-codes');\\n\\nconst createProduct = async (req, res) => {\\n  const product = await Product.create(req.body);\\n  res.status(StatusCodes.CREATED).json({ product });\\n};\\nconst getAllProducts = async (req, res) => {\\n  const products = await Product.find({});\\n  res.status(StatusCodes.OK).json({ products });\\n};\\n\\nmodule.exports = {\\n  createProduct,\\n  getAllProducts,\\n};\".trim();var uploadControllers=\"\\nconst path = require('path');\\nconst { StatusCodes } = require('http-status-codes');\\nconst CustomError = require('../errors');\\nconst cloudinary = require('cloudinary').v2;\\nconst fs = require('fs');\\n\\nconst uploadProductImageLocal = async (req, res) => {\\n  if (!req.files) {\\n    throw new CustomError.BadRequestError('No File Uploaded');\\n  }\\n  const productImage = req.files.image;\\n  if (!productImage.mimetype.startsWith('image')) {\\n    throw new CustomError.BadRequestError('Please Upload Image');\\n  }\\n  const maxSize = 1024 * 1024;\\n  if (productImage.size > maxSize) {\\n    throw new CustomError.BadRequestError('Please upload image smaller 1MB');\\n  }\\n  const imagePath = path.join(\\n    __dirname,\\n    '../public/uploads/' + '$'{productImage.name}'\\n  );\\n  await productImage.mv(imagePath);\\n  return res\\n    .status(StatusCodes.OK)\\n    .json({ image: { src: '/uploads/'$'{productImage.name}' } });\\n};\\n\\nconst uploadProductImage = async (req, res) => {\\n  const result = await cloudinary.uploader.upload(\\n    req.files.image.tempFilePath,\\n    {\\n      use_filename: true,\\n      folder: 'file-upload',\\n    }\\n  );\\n  fs.unlinkSync(req.files.image.tempFilePath);\\n  return res.status(StatusCodes.OK).json({ image: { src: result.secure_url } });\\n};\\n\\nmodule.exports = {\\n  uploadProductImage,\\n};\\n\".trim();var fileRoutes=\"\\nconst { createProduct,  getAllProducts } = require('../controllers/productController');\\nconst { uploadProductImage } = require('../controllers/uploadsController');\\n\\nrouter.route('/').post(createProduct).get(getAllProducts);\\nrouter.route('/uploads').post(uploadProductImage);\\n\\nmodule.exports = router;\\n\".trim();var authMiddleware=\"\\nconst User = require('../models/User')\\nconst jwt = require('jsonwebtoken')\\nconst { UnauthenticatedError } = require('../errors')\\n\\nconst auth = async (req, res, next) => {\\n  // check header\\n  const authHeader = req.headers.authorization\\n  if (!authHeader || !authHeader.startsWith('Bearer')) {\\n    throw new UnauthenticatedError('Authentication invalid')\\n  }\\n  const token = authHeader.split(' ')[1]\\n\\n  try {\\n    const payload = jwt.verify(token, process.env.JWT_SECRET)\\n    // attach the user to the job routes\\n    req.user = { userId: payload.userId, name: payload.name }\\n    next()\\n  } catch (error) {\\n    throw new UnauthenticatedError('Authentication invalid')\\n  }\\n}\\n\\nmodule.exports = auth\\n\".trim();var errorHandler=\"\\nconst { StatusCodes } = require('http-status-codes')\\nconst errorHandlerMiddleware = (err, req, res, next) => {\\n  let customError = {\\n    // set default\\n    statusCode: err.statusCode || StatusCodes.INTERNAL_SERVER_ERROR,\\n    msg: err.message || 'Something went wrong try again later',\\n  }\\n\\n  if (err.name === 'ValidationError') {\\n    customError.msg = Object.values(err.errors)\\n      .map((item) => item.message)\\n      .join(',')\\n    customError.statusCode = 400\\n  }\\n  if (err.code && err.code === 11000) {\\n    customError.msg = 'Duplicate value entered for '$'{Object.keys(\\n      err.keyValue\\n    )} field, please choose another value'\\n    customError.statusCode = 400\\n  }\\n  if (err.name === 'CastError') {\\n    customError.msg = 'No item found with id : '$'{err.value}'\\n    customError.statusCode = 404\\n  }\\n\\n  return res.status(customError.statusCode).json({ msg: customError.msg })\\n}\\n\\nmodule.exports = errorHandlerMiddleware;\\n\".trim();var noteFound=\"\\nconst notFound = (req, res) => res.status(404).send('Route does not exist')\\n\\nmodule.exports = notFound;\\n\".trim();var badReq=\"\\nconst { StatusCodes } = require('http-status-codes');\\nconst CustomAPIError = require('./custom-api');\\n\\nclass BadRequestError extends CustomAPIError {\\n  constructor(message) {\\n    super(message);\\n    this.statusCode = StatusCodes.BAD_REQUEST;\\n  }\\n}\\n\\nmodule.exports = BadRequestError;\\n\".trim();var commonApi=\"\\nclass CustomAPIError extends Error {\\n  constructor(message) {\\n    super(message)\\n  }\\n}\\n\\nmodule.exports = CustomAPIError;\\n\".trim();var NotFoundError=\"\\nconst { StatusCodes } = require('http-status-codes');\\nconst CustomAPIError = require('./custom-api');\\n\\nclass NotFoundError extends CustomAPIError {\\n  constructor(message) {\\n    super(message);\\n    this.statusCode = StatusCodes.NOT_FOUND;\\n  }\\n}\\n\\nmodule.exports = NotFoundError;\\n\".trim();var UnauthenticatedError=\"\\nconst { StatusCodes } = require('http-status-codes');\\nconst CustomAPIError = require('./custom-api');\\n\\nclass UnauthenticatedError extends CustomAPIError {\\n  constructor(message) {\\n    super(message);\\n    this.statusCode = StatusCodes.UNAUTHORIZED;\\n  }\\n}\\n\\nmodule.exports = UnauthenticatedError;\\n\".trim();var errorIndex=\"\\nconst CustomAPIError = require('./custom-api')\\nconst UnauthenticatedError = require('./unauthenticated')\\nconst NotFoundError = require('./not-found')\\nconst BadRequestError = require('./bad-request')\\n\\nmodule.exports = {\\n  CustomAPIError,\\n  UnauthenticatedError,\\n  NotFoundError,\\n  BadRequestError,\\n}\\n\".trim();var server=\"\\nconst fileUpload = require('express-fileupload');\\nconst cloudinary = require('cloudinary').v2;\\nconst connectDB = require('./db/connect');\\nconst productRouter = require('./routes/productRoutes');\\nconst notFoundMiddleware = require('./middleware/not-found');\\nconst errorHandlerMiddleware = require('./middleware/error-handler');\\n\\n\\ncloudinary.config({\\n  cloud_name: process.env.CLOUD_NAME,\\n  api_key: process.env.CLOUD_API_KEY,\\n  api_secret: process.env.CLOUD_API_SECRET,\\n});\\n\\napp.use(express.static('./public'));\\napp.use(fileUpload({ useTempFiles: true }));\\n\\napp.use('/api/v1/products', productRouter);\\napp.use(notFoundMiddleware);\\napp.use(errorHandlerMiddleware);\\n\".trim();var FileUpload=/*#__PURE__*/function(_Component){_inherits(FileUpload,_Component);function FileUpload(){_classCallCheck(this,FileUpload);return _possibleConstructorReturn(this,_getPrototypeOf(FileUpload).apply(this,arguments));}_createClass(FileUpload,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"File Upload\"),React.createElement(\"b\",null,\"middleware/authentication.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:authMiddleware,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"middleware/error-handler.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:errorHandler,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"middleware/not-found.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:noteFound,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"models/product.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:fileModel,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"controllers/productController.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:fileControllers,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"controllers/uploadsController.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:uploadControllers,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"routes/productRoutes.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:fileRoutes,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"errors/bad-request.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:badReq,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"errors/custom-api.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:commonApi,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"errors/not-found.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:NotFoundError,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"errors/unauthenticated.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:UnauthenticatedError,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"index.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:errorIndex,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"server.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:server,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return FileUpload;}(Component);export default withStyles(styles)(FileUpload);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/nodeJs/nodeDeep/file_upload.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","fileModel","trim","fileControllers","uploadControllers","fileRoutes","authMiddleware","errorHandler","noteFound","badReq","commonApi","NotFoundError","UnauthenticatedError","errorIndex","server","FileUpload","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst fileModel = `\nconst ProductSchema = new Schems({\n  name: { type: String, required: true },\n  price: { type: Number, required: true },\n  image: { type: String, required: true },\n});\n\nmodule.exports = mongoose.model('Product', ProductSchema);\n`.trim();\n\nconst fileControllers = `\nconst Product = require('../models/Product');\nconst { StatusCodes } = require('http-status-codes');\n\nconst createProduct = async (req, res) => {\n  const product = await Product.create(req.body);\n  res.status(StatusCodes.CREATED).json({ product });\n};\nconst getAllProducts = async (req, res) => {\n  const products = await Product.find({});\n  res.status(StatusCodes.OK).json({ products });\n};\n\nmodule.exports = {\n  createProduct,\n  getAllProducts,\n};`.trim();\n\nconst uploadControllers = `\nconst path = require('path');\nconst { StatusCodes } = require('http-status-codes');\nconst CustomError = require('../errors');\nconst cloudinary = require('cloudinary').v2;\nconst fs = require('fs');\n\nconst uploadProductImageLocal = async (req, res) => {\n  if (!req.files) {\n    throw new CustomError.BadRequestError('No File Uploaded');\n  }\n  const productImage = req.files.image;\n  if (!productImage.mimetype.startsWith('image')) {\n    throw new CustomError.BadRequestError('Please Upload Image');\n  }\n  const maxSize = 1024 * 1024;\n  if (productImage.size > maxSize) {\n    throw new CustomError.BadRequestError('Please upload image smaller 1MB');\n  }\n  const imagePath = path.join(\n    __dirname,\n    '../public/uploads/' + '$'{productImage.name}'\n  );\n  await productImage.mv(imagePath);\n  return res\n    .status(StatusCodes.OK)\n    .json({ image: { src: '/uploads/'$'{productImage.name}' } });\n};\n\nconst uploadProductImage = async (req, res) => {\n  const result = await cloudinary.uploader.upload(\n    req.files.image.tempFilePath,\n    {\n      use_filename: true,\n      folder: 'file-upload',\n    }\n  );\n  fs.unlinkSync(req.files.image.tempFilePath);\n  return res.status(StatusCodes.OK).json({ image: { src: result.secure_url } });\n};\n\nmodule.exports = {\n  uploadProductImage,\n};\n`.trim();\n\nconst fileRoutes = `\nconst { createProduct,  getAllProducts } = require('../controllers/productController');\nconst { uploadProductImage } = require('../controllers/uploadsController');\n\nrouter.route('/').post(createProduct).get(getAllProducts);\nrouter.route('/uploads').post(uploadProductImage);\n\nmodule.exports = router;\n`.trim();\n\nconst authMiddleware = `\nconst User = require('../models/User')\nconst jwt = require('jsonwebtoken')\nconst { UnauthenticatedError } = require('../errors')\n\nconst auth = async (req, res, next) => {\n  // check header\n  const authHeader = req.headers.authorization\n  if (!authHeader || !authHeader.startsWith('Bearer')) {\n    throw new UnauthenticatedError('Authentication invalid')\n  }\n  const token = authHeader.split(' ')[1]\n\n  try {\n    const payload = jwt.verify(token, process.env.JWT_SECRET)\n    // attach the user to the job routes\n    req.user = { userId: payload.userId, name: payload.name }\n    next()\n  } catch (error) {\n    throw new UnauthenticatedError('Authentication invalid')\n  }\n}\n\nmodule.exports = auth\n`.trim();\n\nconst errorHandler = `\nconst { StatusCodes } = require('http-status-codes')\nconst errorHandlerMiddleware = (err, req, res, next) => {\n  let customError = {\n    // set default\n    statusCode: err.statusCode || StatusCodes.INTERNAL_SERVER_ERROR,\n    msg: err.message || 'Something went wrong try again later',\n  }\n\n  if (err.name === 'ValidationError') {\n    customError.msg = Object.values(err.errors)\n      .map((item) => item.message)\n      .join(',')\n    customError.statusCode = 400\n  }\n  if (err.code && err.code === 11000) {\n    customError.msg = 'Duplicate value entered for '$'{Object.keys(\n      err.keyValue\n    )} field, please choose another value'\n    customError.statusCode = 400\n  }\n  if (err.name === 'CastError') {\n    customError.msg = 'No item found with id : '$'{err.value}'\n    customError.statusCode = 404\n  }\n\n  return res.status(customError.statusCode).json({ msg: customError.msg })\n}\n\nmodule.exports = errorHandlerMiddleware;\n`.trim();\n\nconst noteFound = `\nconst notFound = (req, res) => res.status(404).send('Route does not exist')\n\nmodule.exports = notFound;\n`.trim();\n\nconst badReq = `\nconst { StatusCodes } = require('http-status-codes');\nconst CustomAPIError = require('./custom-api');\n\nclass BadRequestError extends CustomAPIError {\n  constructor(message) {\n    super(message);\n    this.statusCode = StatusCodes.BAD_REQUEST;\n  }\n}\n\nmodule.exports = BadRequestError;\n`.trim();\n\nconst commonApi = `\nclass CustomAPIError extends Error {\n  constructor(message) {\n    super(message)\n  }\n}\n\nmodule.exports = CustomAPIError;\n`.trim();\n\nconst NotFoundError = `\nconst { StatusCodes } = require('http-status-codes');\nconst CustomAPIError = require('./custom-api');\n\nclass NotFoundError extends CustomAPIError {\n  constructor(message) {\n    super(message);\n    this.statusCode = StatusCodes.NOT_FOUND;\n  }\n}\n\nmodule.exports = NotFoundError;\n`.trim();\n\nconst UnauthenticatedError = `\nconst { StatusCodes } = require('http-status-codes');\nconst CustomAPIError = require('./custom-api');\n\nclass UnauthenticatedError extends CustomAPIError {\n  constructor(message) {\n    super(message);\n    this.statusCode = StatusCodes.UNAUTHORIZED;\n  }\n}\n\nmodule.exports = UnauthenticatedError;\n`.trim();\n\nconst errorIndex = `\nconst CustomAPIError = require('./custom-api')\nconst UnauthenticatedError = require('./unauthenticated')\nconst NotFoundError = require('./not-found')\nconst BadRequestError = require('./bad-request')\n\nmodule.exports = {\n  CustomAPIError,\n  UnauthenticatedError,\n  NotFoundError,\n  BadRequestError,\n}\n`.trim();\n\nconst server = `\nconst fileUpload = require('express-fileupload');\nconst cloudinary = require('cloudinary').v2;\nconst connectDB = require('./db/connect');\nconst productRouter = require('./routes/productRoutes');\nconst notFoundMiddleware = require('./middleware/not-found');\nconst errorHandlerMiddleware = require('./middleware/error-handler');\n\n\ncloudinary.config({\n  cloud_name: process.env.CLOUD_NAME,\n  api_key: process.env.CLOUD_API_KEY,\n  api_secret: process.env.CLOUD_API_SECRET,\n});\n\napp.use(express.static('./public'));\napp.use(fileUpload({ useTempFiles: true }));\n\napp.use('/api/v1/products', productRouter);\napp.use(notFoundMiddleware);\napp.use(errorHandlerMiddleware);\n`.trim();\n\n\nclass FileUpload extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>File Upload</h3>\n              <b>middleware/authentication.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={authMiddleware}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>middleware/error-handler.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={errorHandler}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>middleware/not-found.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={noteFound}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              \n              <b>models/product.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={fileModel}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>controllers/productController.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={fileControllers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>controllers/uploadsController.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={uploadControllers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>routes/productRoutes.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={fileRoutes}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>errors/bad-request.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={badReq}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>errors/custom-api.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={commonApi}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>errors/not-found.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={NotFoundError}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>errors/unauthenticated.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={UnauthenticatedError}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>index.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={errorIndex}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n\n              <br />\n              <br />\n\n              <b>server.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={server}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(FileUpload));\n"]},"metadata":{},"sourceType":"module"}