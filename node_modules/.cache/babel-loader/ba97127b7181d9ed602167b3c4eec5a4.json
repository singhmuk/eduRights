{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/angularjsd/angular 12/rxjs.js\";\nimport React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport \"../../ReactJs/styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../../ReactJs/prismCode\";\nconst titles = {\n  backgroundColor: \"#F0F8FF\",\n  padding: \"1px\",\n  fontSize: \"16px\"\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst subscribes = `\nobs.subscribe({\n  next:(data)=>console.log('obj',data),\n  error:(err)=>console.log('obj',err),\n  complete:()=>console.log('complate'),\n})`.trim();\nconst rxjsfrom = `\n//import { from } from 'rxjs';\nexport class AppComponent  {\n  ngOnInit(){\n    const data = from(fetch('https://jsonplaceholder.typicode.com/posts'));\n\n    data.subscribe({\n      next(res) { console.log(res); },\n      error(err) { console.error('Error: ' + err); },\n      complete() { console.log('Completed'); }\n    });\n  }\n}\n`.trim();\nconst mapfil = `\n//import { of } from 'rxjs';\n//import { map } from 'rxjs/operators';\n\nexport class AppComponent  {\n  val:any=[];\n  \n  ngOnInit(){\n    const nums = of(1, 2, 3);\n\n    const squr = map((val: number) => val * val);\n    const sqNum = squr(nums);\n\n    sqNum.subscribe(x => this.val.push(x));\n  }\n}\n`.trim();\nconst mapipe = `\n//import { of } from 'rxjs';\n//import { filter, map } from 'rxjs/operators';\n\nexport class AppComponent  {\n  val:any=[];\n\n  ngOnInit(){\n    const squareOdd = of(1, 2, 3, 4, 5)\n    .pipe(\n      filter(n => n % 2 !== 0),\n      map(n => n * n)\n    );\n\n    squareOdd.subscribe(x => this.val.push(x));\n  }\n}\n`.trim();\nconst stcreate = `\n//import { Component, ElementRef, ViewChild } from '@angular/core';\n//import { fromEvent } from 'rxjs';\n\nexport class AppComponent  {\n  constructor(){}\n  @ViewChild('addBtn')\n  addBtn!: ElementRef;\n\n  //stream create\n  ngAfterViewInit(){\n    fromEvent(this.addBtn.nativeElement, 'click').subscribe(res=>{\n      console.log(res)\n    })\n  }\n}\n`.trim();\nconst unsubscribe = `\n//import { interval, Subscription } from 'rxjs';\nexport class AppComponent  {\n  intervalval=0;\n  videoSub!: Subscription;\n\n  ngOnInit(){\n    const broadcast = interval(1000)\n    this.videoSub = broadcast.subscribe(res=>{\n      this.intervalval = res;\n\n      if(res>5){\n        this.videoSub.unsubscribe()\n      }\n    })\n  }\n}\n`.trim();\nconst throttleTime = `\nvar observable = Rx.Observable.interval(1000);\nvar observer = {\n  next: function (value) {\n    console.log(value);\n  }\n};\n\nobservable.map(function (value) {\n  return 'Number: ' + value;\n}).throttleTime(1900).subscribe(observer);\n`.trim();\nconst fixrxjs = `\nvar subject = new Rx.Subject();\n\nsubject.subscribe({\n  next: function (value) {\n    console.log(value);\n  },\n  error: function (error) {\n    console.log(error);\n  },\n  complete: function () {\n    console.log('Complete');\n  }\n});\n\nsubject.subscribe({\n  next: function (value) {\n    console.log(value);\n  }\n});\n\nsubject.next('A new data piece');\nsubject.complete();\nsubject.next('New value');\n`.trim();\nconst filter = `\nimport {interval} from 'rxjs';\nimport {filter, map} from \"rxjs/operators\";\n\nconst observable = interval(100).pipe(filter(data=>{\n  return data<5\n}));\n\nobservable.subscribe(data => {\n  console.log(data);\n})\n`.trim();\nconst rxjxLibrary = `import { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';`.trim();\nconst observableFun = `import { from } from 'rxjs'; // from function\nconst data = from(fetch('/api/endpoint')); //Created from Promise\ndata.subscribe({\n next(response) {console.log(response);},\n error(err) {console.error('Error: ' + err);},\n complete() {console.log('Completed');}\n});`.trim();\nconst observableAJAX = `\nimport { ajax } from 'rxjs/ajax'; // ajax function\nconst apiData = ajax('/api/data'); // Created from AJAX request\n// Subscribe to create the request\napiData.subscribe(res => console.log(res.status, res.response));`.trim();\nconst observableCount = `\nimport { interval } from 'rxjs'; // interval function\nconst secondsCounter = interval(1000); // Created from Counter value\nsecondsCounter.subscribe(n =>\n  console.log('Counter value: '$'{n}'));`.trim();\nconst observableEvt = `\nimport { fromEvent } from 'rxjs';\nconst el = document.getElementById('custom-element');\nconst mouseMoves = fromEvent(el, 'mousemove');\nconst subscription = mouseMoves.subscribe((e: MouseEvent) => {\n  console.log('Coordnitaes of mouse pointer: '$'{e.clientX} * '$'{e.clientY}');\n  });`.trim();\nconst placeholders = `\n//app.component.ts\nimport {PlaceholderService} from \"./services/placeholder.service\"\n\n@Component({\n  selector: 'app-root',\n  template: '\n  <button (click)=\"getApi()\">GET</button>\n    <div *ngFor=\"let items of data\">\n      <p>{{items.id}} - {{items.title}}</p>\n    </div>\n  ',\n})\n\nexport class AppComponent implements OnInit{\n  data:Array<any>;\n  \n  constructor( private https:PlaceholderService) { \n    this.data=new Array<any>()\n   }\n\n  ngOnInit(): void {}\n  getApi(){\n    this.https.getData().subscribe((data)=>{\n      this.data=data\n    })\n  }\n}\n\n\n//services/placeholder.service.ts\nimport { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlaceholderService {\n\n  constructor(private http:HttpClient) { }\n\n  getData(): Observable<any>{\n    const url=\"https://jsonplaceholder.typicode.com/posts\";\n    return this.http.get<any>(url)\n  }\n}\n`.trim();\nconst notifications = `\ninterface Observer<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n`.trim();\nconst otsbservable = `\nimport { Observable } from \"rxjs/Observable\";\n// import \"rxjs/add/operator/pluck\";\n\nconst obs = new Observable((observer)=>{\n  let counter=1;\n  const producer = setInterval(()=>{\n    observer.next(counter++)\n  },1000)\n})\n\nconst sub = obs.subscribe({\n  next:(data)=>console.log('obj1',data),\n  error:(err)=>console.log('obj1',err),\n  complete:()=>console.log('complate'),\n})\n\nsetTimeout(()=>{\n  sub.unsubscribe();\n},5000)`.trim();\nconst otsbservable2 = `\nimport { Observable } from \"rxjs/Observable\";\n\nconst obs = new Observable((observer) => {\n  let counter = 1;\n  const producer = setInterval(() => {\n    observer.next(counter++);\n\n    if (counter > 5) {\n      observer.error(\"oops\");\n      observer.complete();\n    }\n  }, 1000);\n\n  return () => {\n    console.log(\"unsubscribe done\");\n    clearInterval(producer);\n  };\n});\n\nconst sub = obs.subscribe({\n  next: (data) => console.log(\"obj1\", data),\n  error: (err) => console.log(\"obj1\", err),\n  complete: () => console.log(\"complate\"),\n});`.trim();\nconst otsbservable3 = `\nimport { Observable } from \"rxjs/Observable\";\n\nconst obs = new Observable((observer)=>{\n  let counter=1;\n  const producer = setInterval(()=>{\n    observer.next(counter++)\n\n    if(counter>5){\n      observer.error('oops')\n    }\n  },1000);\n\n  return()=>{\n    console.log('unsubscribe done')\n    clearInterval(producer)\n  }\n})\n\nconst sub = obs.subscribe({\n  next:(data)=>console.log('obj1',data),\n  error:(err)=>console.log('obj1',err),\n  complete:()=>console.log('complate'),\n})\n\nsetTimeout(()=>{\n  const sub2 = obs.subscribe({\n    next:(data)=>console.log('obj2',data),\n    error:(err)=>console.log('obj2',err),\n    complete:()=>console.log('complate2'),\n  })\n},3000)\n\nsetTimeout(()=>{\n  sub.unsubscribe();\n},5000);`.trim();\nconst otsbservable4 = `\nimport { Observable } from \"rxjs/Observable\";\n\nconst pr = new Promise((res) => {\n  console.log(\"done\");\n\n  setTimeout(() => {\n    res(\"resolbe\");\n  }, 1000);\n});\n\npr.then((data) => {\n  console.log(data);\n});\n\n//2\nconst obs = new Observable((observer) => {\n  console.log(\"done\");\n\n  setTimeout(() => {\n    observer.next(\"resolbe\");\n  }, 1000);\n});\n\nsetTimeout(() => {\n  obs.subscribe(console.log);\n}, 3000);\n`.trim();\nconst otsbservable5 = `\nimport {of} from \"rxjs\";\n\nconst obs=of(12);\n\nobs.subscribe({\n  next: (x)=>console.log(x),\n  complete: ()=>console.log('done'),\n})\n\n//2\nconst arr = [1,2,3];\nconst obs2 = of(arr);\n\nobs2.subscribe((x)=>console.log(x))\n\n\n//3\nconst user = {\n  id:45,\n  name:'Rakesh'\n}\n\nconst obs3=of(user);\nobs3.subscribe((x)=>console.log(x))\n\n\n//3\nconst set = new Set();\n\nset.add(1);\nset.add(2);\nset.add(3);\n\nconst obs4=of(set);\nobs4.subscribe((x)=>console.log(x))\n\nconst map = new Map();\nmap.set('name','Mukeah')\nmap.set('user','Nitesh')\n\nconst obs5=of(map);\nobs5.subscribe((x)=>console.log(x))\n\n//4\nconst pr = new Promise((res)=>res('done'));\nconst obs6=of(pr);\n\nobs6.subscribe((x)=>{\n  x.then(console.log)\n})`.trim();\nconst otsbservable6 = `\nimport {from} from \"rxjs\";\n\nconst names = ['a', 'b', 'c'];\nconst obs = from(names);\n\nobs.subscribe((item)=>{\n  console.log(item)\n})\n\n\n//2\nconst set = new Set();\nset.add('d');\nset.add('e');\nset.add('f');\n\nconst obs2 = from(set);\n\nobs2.subscribe((item)=>{\n  console.log(item)\n})\n\n\n//3\nconst pr = new Promise((res)=>res('done'));\n\nconst obs3 = from(pr);\n\nobs3.subscribe((item)=>{\n  console.log(item)\n})\n\n\n//4\nconst pr2 = new Promise((res)=>res('done'));\nconst pr3 = new Promise((res)=>res('done2'));\nconst pr4 = new Promise((res)=>res('done3'));\n\nconst prArr = [pr2, pr3, pr4]\nconst obs4 = from(prArr);\n\nobs4.subscribe((item)=>{\n  item.then(console.log)\n})`.trim();\nconst otsbservable7 = `\nimport { fromEvent } from \"rxjs\";\n\n//Click anywerer on window\nconst click$ = fromEvent(document, \"click\");\nclick$.subscribe(console.log);\n\n//2\n//inside html: <button>click</button>\nconst click2$ = fromEvent(\n  document.querySelector(\"button\") as HTMLButtonElement,\n  \"click\"\n);\nclick2$.subscribe(console.log);\n\n//3\nconst click3$ = fromEvent(\n  document.querySelector(\"button\") as HTMLButtonElement,\n  \"click\",\n  { capture: true, passive: true, once: true }\n);\nclick3$.subscribe(console.log);\n`.trim();\nconst otsbservable8 = `\nimport { interval, from } from \"rxjs\";\n\nconst obs$ = interval(1000);\nconst sub$ = obs$.subscribe((i) => {\n  if (i > 10) {\n    sub$.unsubscribe();\n    return;\n  }\n  console.log(i);\n});\n\n//2\nconst sub2$ = obs$.subscribe((i) => {\n  if (i > 2) {\n    sub2$.unsubscribe();\n    return;\n  }\n  from(\n    fetch(\"https://jsonplaceholder.typicode.com/posts/\" + (i + 1)).then((res) =>\n      res.json()\n    )\n  ).subscribe(console.log);\n});\n`.trim();\nconst otsbservable9 = `\nimport { timer, from } from \"rxjs\";\n\ntimer(1000).subscribe(console.log)\n\n//2\ntimer(1000, 3000).subscribe(console.log);\n\n//3\ntimer(new Date(\"17/03/2023 11:58:00\"), 2000).subscribe(() => {\n  from(\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then((res) =>\n      res.json()\n    )\n  ).subscribe(console.log);\n});\n`.trim();\nconst otsbservable10 = `\nimport { range } from \"rxjs\";\n\nrange(1, 10).subscribe(console.log);\n\n//2\nrange(10, 10).subscribe(console.log);\n`.trim();\nconst otsbservable11 = `\nimport { generate } from \"rxjs\";\n\ngenerate({\n  initialState: 1,\n  condition: (a) => a < 10,\n  iterate: (a) => a + 1,\n  resultSelector: (b: number) => \"Count\" + b,\n}).subscribe(console.log);\n`.trim();\nconst otsbservable12 = `\nimport { ajax } from \"rxjs/ajax\";\n\nconst http$ = ajax(\"https://jsonplaceholder.typicode.com/posts\");\nhttp$.subscribe({\n  next: (res) => {\n    console.log(res.response);\n  },\n  error: (err) => {\n    console.log(\"Error\", err);\n  },\n});\n\n//2\nconst http2$ = ajax({\n  url: \"https://jsonplaceholder.typicode.com/posts\",\n  headers: {\n    Authorization: \"Bearer\",\n    Accept: \"application/json\",\n  },\n});\nhttp2$.subscribe({\n  next: (res) => {\n    console.log(res.response);\n  },\n  error: (err) => {\n    console.log(\"Error\", err);\n  },\n});\n\n//3\nconst http3$ = ajax({\n  url: \"https://jsonplaceholder.typicode.com/posts\",\n  method: \"POST\",\n  headers: {\n    Authorization: \"Bearer\",\n    Accept: \"application/json\",\n  },\n  body: {\n    title: \"foo\",\n    body: \"bar\",\n    userId: 1,\n  },\n});\nhttp3$.subscribe({\n  next: (res) => {\n    console.log(res.response);\n  },\n  error: (err) => {\n    console.log(\"Error\", err);\n  },\n});\n\n//4\nconst http4$ = ajax.get(\"https://jsonplaceholder.typicode.com/posts\", {\n  \"x-some-header-key\": \"value\",\n});\nhttp4$.subscribe({\n  next: (res) => {\n    console.log(res.response);\n  },\n  error: (err) => {\n    console.log(\"Error\", err);\n  },\n});\n\n//I5 f response come from server is html type\nconst http5$ = ajax({\n  url: \"https://jsonplaceholder.typicode.com/posts\",\n  responseType: \"text\",\n});\nhttp5$.subscribe({\n  next: (res) => {\n    console.log(res.response);\n  },\n  error: (err) => {\n    console.log(\"Error\", err);\n  },\n});\n\n//6 post\nconst http6$ = ajax.post(\n  \"https://jsonplaceholder.typicode.com/posts\",\n  { Hi: \"Hello\" },\n  {\n    Authorizaion: \"Beares\",\n  }\n);\nhttp6$.subscribe({\n  next: (res) => {\n    console.log(res.response);\n  },\n  error: (err) => {\n    console.log(\"Error\", err);\n  },\n});\n\n//7 put and so on.\nconst http7$ = ajax.put(\n  \"https://jsonplaceholder.typicode.com/posts\",\n  { Hi: \"Hello\" },\n  {\n    Authorizaion: \"Beares\",\n  }\n);\nhttp7$.subscribe({\n  next: (res) => {\n    console.log(res.response);\n  },\n  error: (err) => {\n    console.log(\"Error\", err);\n  },\n});\n`.trim();\nconst otsbservable13 = `\nimport { iif, of } from \"rxjs\";\n\nlet isAuthenticated = true;\nconst obs$ = iif(() => isAuthenticated, of([\"Mukesh\", \"Rakesh\"]), of([]));\n\nobs$.subscribe((res) => {\n  console.log(\"Observer\", res);\n});\n`.trim();\nconst otsbservable14 = `\nimport { defer, of } from \"rxjs\";\n\n// const obs$ = of(new Date());\nconst obs$ = defer(() => of(new Date()));\n\nobs$.subscribe((res) => {\n  console.log(\"1st Observer\", res.toTimeString());\n});\n\nsetTimeout(() => {\n  obs$.subscribe((res) => {\n    console.log(\"2st Observer\", res.toTimeString());\n  });\n}, 1000);`.trim();\nconst otsbservable15 = `\nimport { from, concat, of } from \"rxjs\";\n\nconst num$ = of(1, 2, 3);\nconst names$ = from([\"Mukesh\", \"Rakesh\"]);\n\nconcat(num$, names$).subscribe(console.log);`.trim();\nconst otsbservable16 = ``.trim();\n\nclass Rxjs extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730\n      },\n      __self: this\n    }, \"1. What is HttpClient, and what are its benefits?\"), \"Angular applications communicate with backend services over HTTP protocol using HttpClient which is based on top of the XMLHttpRequest interface.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735\n      },\n      __self: this\n    }, \"advantages:\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737\n      },\n      __self: this\n    }, \"Contains testability features\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738\n      },\n      __self: this\n    }, \"Provides typed request and response objects\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739\n      },\n      __self: this\n    }, \"Intercept request and response\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740\n      },\n      __self: this\n    }, \"Supports Observable APIs\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741\n      },\n      __self: this\n    }, \"Supports streamlined error handling\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744\n      },\n      __self: this\n    }, \"HttpClient implement 'Simplified syntax for headers' while, HTTP not.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 748\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 749\n      },\n      __self: this\n    }, \"2. Rxjs With Pure Js (Reactive Extension for JavaScript)\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751\n      },\n      __self: this\n    }, \"Rxjs is an external library, which used in reactive programming. we use observable to achieve asynchronous task.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755\n      },\n      __self: this\n    }, \"Reactive Programming is programming with asynchronous data streams.\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 760\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762\n      },\n      __self: this\n    }, \"Rxjs can use non-angular projects.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763\n      },\n      __self: this\n    }, \"In angular project Rxjs not need to install because it come with angular.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767\n      },\n      __self: this\n    }, \"RxJS makes it easy for JavaScript developers to write asynchronous code using composable Observables instead of callbacks and Promises.\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775\n      },\n      __self: this\n    }, \"Observables introduced in Rxjs. it's a data source. Observables work on data stream. to use those stream data we need to subscribe. For subscribe observables data we use Observer. Observer is not useful untill it subscribe.\", \" \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781\n      },\n      __self: this\n    }, \"Observables deals with synchronous and asynchronous both.\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787\n      },\n      __self: this\n    }, \"Create Observables stream: \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789\n      },\n      __self: this\n    }, \"User input(click button)\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 790\n      },\n      __self: this\n    }, \"Http Request\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791\n      },\n      __self: this\n    }, \"Array\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792\n      },\n      __self: this\n    }, \"Objects\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795\n      },\n      __self: this\n    }, \"Observable handle(Subscribe): \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 796\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 797\n      },\n      __self: this\n    }, \"Next\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 798\n      },\n      __self: this\n    }, \"Error\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 799\n      },\n      __self: this\n    }, \"Completion\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 801\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 802\n      },\n      __self: this\n    }, \"Subscribe accept 3 values: \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 803\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 804\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: subscribes,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 805\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 811\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812\n      },\n      __self: this\n    }, \"3. What are Observables?\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 814\n      },\n      __self: this\n    }, \"Observables are declarative which provide support for passing messages between publishers and subscribers in our application.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820\n      },\n      __self: this\n    }, \"They are mainly used for event handling, asynchronous programming, and handling multiple values. In this case, you define a function for publishing values, but it is not executed until a consumer subscribes to it. The subscribed consumer then receives notifications until the function completes, or until they unsubscribe.\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 830\n      },\n      __self: this\n    }, \"4. What is an Observer?\"), \"Observer is an interface for a consumer of push-based notifications delivered by an Observable. It has below structure.\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: notifications,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 840\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841\n      },\n      __self: this\n    }, \"5. What is Subscribing\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843\n      },\n      __self: this\n    }, \"A Subscription is an object that represents a disposable resource, usually the execution of an Observable.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847\n      },\n      __self: this\n    }, \"A Subscription has one important method, unsubscribe, that takes no argument and just disposes of the resource held by the subscription.\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 853\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 854\n      },\n      __self: this\n    }, \"6. What will happen if you do not supply handler for observer\"), \"Normally an observer object can define any combination of next, error and complete notification type handlers. If you don't supply a handler for a notification type, the observer just ignores notifications of that type.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862\n      },\n      __self: this\n    }, \"7. What is RxJS With Angular\"), \"RxJS is a library for composing asynchronous and callback-based code in a functional, reactive style using Observables. Many APIs such as HttpClient produce and consume RxJS Observables and also uses operators for processing observables.\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 867\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: rxjxLibrary,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 874\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875\n      },\n      __self: this\n    }, \"8. What are the utility functions provided by RxJS\"), \"The RxJS library also provides below utility functions for creating and working with observables.\", React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 878\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 879\n      },\n      __self: this\n    }, \"Converting existing code for async operations into observables\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 882\n      },\n      __self: this\n    }, \"Iterating through the values in a stream\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 883\n      },\n      __self: this\n    }, \"Mapping values to different types\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884\n      },\n      __self: this\n    }, \"Filtering streams\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885\n      },\n      __self: this\n    }, \"Composing multiple streams\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 887\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888\n      },\n      __self: this\n    }, \"9. What are observable creation functions\"), \"RxJS provides creation functions for the process of creating observables from things such as promises, events, timers and Ajax requests.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 892\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 893\n      },\n      __self: this\n    }, \"1. Create an observable from a promise\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 894\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: observableFun,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 901\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 902\n      },\n      __self: this\n    }, \"Rxjs with typescript\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 903\n      },\n      __self: this\n    }, \"1. Observable\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 904\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 906\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 914\n      },\n      __self: this\n    }, \"2. \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 915\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 916\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable2,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 917\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 923\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 924\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 925\n      },\n      __self: this\n    }, \"3.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 926\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 927\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable3,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 928\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 934\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 935\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 936\n      },\n      __self: this\n    }, \"4. Rxjs with Promise\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 938\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable4,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 945\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 946\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 947\n      },\n      __self: this\n    }, \"5. of: \"), \"of means create observable of values given in of().\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 948\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable5,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 950\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 956\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 957\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 958\n      },\n      __self: this\n    }, \"6. from: \"), \"from get values from iterable item.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 959\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 960\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable6,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 961\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 967\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 968\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 969\n      },\n      __self: this\n    }, \"7. fromEvent: \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 970\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 971\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable7,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 972\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 978\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 979\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 980\n      },\n      __self: this\n    }, \"8. Interval\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 981\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 982\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable8,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 983\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 989\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 990\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 991\n      },\n      __self: this\n    }, \"9. timer\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 992\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 993\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable9,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 994\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1001\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1002\n      },\n      __self: this\n    }, \"10. range\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1003\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1004\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable10,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1005\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1011\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1012\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1013\n      },\n      __self: this\n    }, \"11. generate\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1014\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1015\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable11,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1016\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1022\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1023\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1024\n      },\n      __self: this\n    }, \"12. ajax\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1025\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1026\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable12,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1027\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1033\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1034\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1035\n      },\n      __self: this\n    }, \"13. iif\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1036\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1037\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable13,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1038\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1044\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1045\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1046\n      },\n      __self: this\n    }, \"14. defer\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1047\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1048\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable14,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1049\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1055\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1056\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1057\n      },\n      __self: this\n    }, \"15. concat\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1058\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1059\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable15,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1060\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1066\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1067\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1068\n      },\n      __self: this\n    }, \"16. merge\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1070\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable16,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1071\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1077\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1078\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1079\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1080\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1081\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1082\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1088\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1089\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1090\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1091\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1092\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1093\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1099\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1100\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1101\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1102\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1103\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1104\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1110\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1111\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1112\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1113\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1114\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1115\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1121\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1122\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1123\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1124\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1125\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1126\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1132\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1133\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1134\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1135\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1136\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: otsbservable,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1137\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1143\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1144\n      },\n      __self: this\n    }, \"10. What does subscribing mean in RxJS?\"), \"In RxJS, when using observables, we need to subscribe to an observable to use the data that flows through that observable. This data is generated from a publisher and is consumed by a subscriber. When we subscribe to an observable, we pass in a function for the data and another function for errors so that, in case there is some error, we can show some message or process the message in some way.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1152\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1153\n      },\n      __self: this\n    }, \"From\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1154\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: rxjsfrom,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1155\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1161\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1162\n      },\n      __self: this\n    }, \"Map\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1163\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: mapfil,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1164\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1170\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1171\n      },\n      __self: this\n    }, \"Pipe\"), \"pipe() function is also a method on the RxJS Observable.\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1173\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: mapipe,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1174\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1180\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1181\n      },\n      __self: this\n    }, \"Stream create\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1182\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: stcreate,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1183\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1189\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1190\n      },\n      __self: this\n    }, \"Unsubscribe\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1191\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: unsubscribe,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1192\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1198\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1199\n      },\n      __self: this\n    }, \"RxJS OPERATORS LIKE map() OR throttleTime()\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1200\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: throttleTime,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1201\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1207\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1208\n      },\n      __self: this\n    }, \"RxJS SUBJECT (~EventEmitter)\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1209\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: fixrxjs,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1210\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1216\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1217\n      },\n      __self: this\n    }, \"2. Create an observable that creates an AJAX request\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1218\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: observableAJAX,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1219\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1225\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1226\n      },\n      __self: this\n    }, \"3. Create an observable from a counter\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1227\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: observableCount,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1228\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1234\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1235\n      },\n      __self: this\n    }, \"4. Create an observable from an event\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1236\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: observableEvt,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1237\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1243\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1244\n      },\n      __self: this\n    }, \"Filter\"), \"This operator takes values from the source Observable, passes them through a predicate function and only emits those values that get TRUE.\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1248\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: filter,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1249\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1255\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1256\n      },\n      __self: this\n    }, \"Placeholders\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1257\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: placeholders,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1258\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(Rxjs);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/angularjsd/angular 12/rxjs.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","subscribes","trim","rxjsfrom","mapfil","mapipe","stcreate","unsubscribe","throttleTime","fixrxjs","filter","rxjxLibrary","observableFun","observableAJAX","observableCount","observableEvt","placeholders","notifications","otsbservable","otsbservable2","otsbservable3","otsbservable4","otsbservable5","otsbservable6","otsbservable7","otsbservable8","otsbservable9","otsbservable10","otsbservable11","otsbservable12","otsbservable13","otsbservable14","otsbservable15","otsbservable16","Rxjs","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport \"../../ReactJs/styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../../ReactJs/prismCode\";\n\nconst titles = { backgroundColor: \"#F0F8FF\", padding: \"1px\", fontSize: \"16px\" };\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n});\n\nconst subscribes = `\nobs.subscribe({\n  next:(data)=>console.log('obj',data),\n  error:(err)=>console.log('obj',err),\n  complete:()=>console.log('complate'),\n})`.trim();\n\nconst rxjsfrom = `\n//import { from } from 'rxjs';\nexport class AppComponent  {\n  ngOnInit(){\n    const data = from(fetch('https://jsonplaceholder.typicode.com/posts'));\n\n    data.subscribe({\n      next(res) { console.log(res); },\n      error(err) { console.error('Error: ' + err); },\n      complete() { console.log('Completed'); }\n    });\n  }\n}\n`.trim();\n\nconst mapfil = `\n//import { of } from 'rxjs';\n//import { map } from 'rxjs/operators';\n\nexport class AppComponent  {\n  val:any=[];\n  \n  ngOnInit(){\n    const nums = of(1, 2, 3);\n\n    const squr = map((val: number) => val * val);\n    const sqNum = squr(nums);\n\n    sqNum.subscribe(x => this.val.push(x));\n  }\n}\n`.trim();\n\nconst mapipe = `\n//import { of } from 'rxjs';\n//import { filter, map } from 'rxjs/operators';\n\nexport class AppComponent  {\n  val:any=[];\n\n  ngOnInit(){\n    const squareOdd = of(1, 2, 3, 4, 5)\n    .pipe(\n      filter(n => n % 2 !== 0),\n      map(n => n * n)\n    );\n\n    squareOdd.subscribe(x => this.val.push(x));\n  }\n}\n`.trim();\n\nconst stcreate = `\n//import { Component, ElementRef, ViewChild } from '@angular/core';\n//import { fromEvent } from 'rxjs';\n\nexport class AppComponent  {\n  constructor(){}\n  @ViewChild('addBtn')\n  addBtn!: ElementRef;\n\n  //stream create\n  ngAfterViewInit(){\n    fromEvent(this.addBtn.nativeElement, 'click').subscribe(res=>{\n      console.log(res)\n    })\n  }\n}\n`.trim();\n\nconst unsubscribe = `\n//import { interval, Subscription } from 'rxjs';\nexport class AppComponent  {\n  intervalval=0;\n  videoSub!: Subscription;\n\n  ngOnInit(){\n    const broadcast = interval(1000)\n    this.videoSub = broadcast.subscribe(res=>{\n      this.intervalval = res;\n\n      if(res>5){\n        this.videoSub.unsubscribe()\n      }\n    })\n  }\n}\n`.trim();\n\nconst throttleTime = `\nvar observable = Rx.Observable.interval(1000);\nvar observer = {\n  next: function (value) {\n    console.log(value);\n  }\n};\n\nobservable.map(function (value) {\n  return 'Number: ' + value;\n}).throttleTime(1900).subscribe(observer);\n`.trim();\n\nconst fixrxjs = `\nvar subject = new Rx.Subject();\n\nsubject.subscribe({\n  next: function (value) {\n    console.log(value);\n  },\n  error: function (error) {\n    console.log(error);\n  },\n  complete: function () {\n    console.log('Complete');\n  }\n});\n\nsubject.subscribe({\n  next: function (value) {\n    console.log(value);\n  }\n});\n\nsubject.next('A new data piece');\nsubject.complete();\nsubject.next('New value');\n`.trim();\n\nconst filter = `\nimport {interval} from 'rxjs';\nimport {filter, map} from \"rxjs/operators\";\n\nconst observable = interval(100).pipe(filter(data=>{\n  return data<5\n}));\n\nobservable.subscribe(data => {\n  console.log(data);\n})\n`.trim();\n\nconst rxjxLibrary = `import { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';`.trim();\n\nconst observableFun = `import { from } from 'rxjs'; // from function\nconst data = from(fetch('/api/endpoint')); //Created from Promise\ndata.subscribe({\n next(response) {console.log(response);},\n error(err) {console.error('Error: ' + err);},\n complete() {console.log('Completed');}\n});`.trim();\n\nconst observableAJAX = `\nimport { ajax } from 'rxjs/ajax'; // ajax function\nconst apiData = ajax('/api/data'); // Created from AJAX request\n// Subscribe to create the request\napiData.subscribe(res => console.log(res.status, res.response));`.trim();\n\nconst observableCount = `\nimport { interval } from 'rxjs'; // interval function\nconst secondsCounter = interval(1000); // Created from Counter value\nsecondsCounter.subscribe(n =>\n  console.log('Counter value: '$'{n}'));`.trim();\n\nconst observableEvt = `\nimport { fromEvent } from 'rxjs';\nconst el = document.getElementById('custom-element');\nconst mouseMoves = fromEvent(el, 'mousemove');\nconst subscription = mouseMoves.subscribe((e: MouseEvent) => {\n  console.log('Coordnitaes of mouse pointer: '$'{e.clientX} * '$'{e.clientY}');\n  });`.trim();\n\nconst placeholders = `\n//app.component.ts\nimport {PlaceholderService} from \"./services/placeholder.service\"\n\n@Component({\n  selector: 'app-root',\n  template: '\n  <button (click)=\"getApi()\">GET</button>\n    <div *ngFor=\"let items of data\">\n      <p>{{items.id}} - {{items.title}}</p>\n    </div>\n  ',\n})\n\nexport class AppComponent implements OnInit{\n  data:Array<any>;\n  \n  constructor( private https:PlaceholderService) { \n    this.data=new Array<any>()\n   }\n\n  ngOnInit(): void {}\n  getApi(){\n    this.https.getData().subscribe((data)=>{\n      this.data=data\n    })\n  }\n}\n\n\n//services/placeholder.service.ts\nimport { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlaceholderService {\n\n  constructor(private http:HttpClient) { }\n\n  getData(): Observable<any>{\n    const url=\"https://jsonplaceholder.typicode.com/posts\";\n    return this.http.get<any>(url)\n  }\n}\n`.trim();\n\nconst notifications = `\ninterface Observer<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n`.trim();\n\nconst otsbservable = `\nimport { Observable } from \"rxjs/Observable\";\n// import \"rxjs/add/operator/pluck\";\n\nconst obs = new Observable((observer)=>{\n  let counter=1;\n  const producer = setInterval(()=>{\n    observer.next(counter++)\n  },1000)\n})\n\nconst sub = obs.subscribe({\n  next:(data)=>console.log('obj1',data),\n  error:(err)=>console.log('obj1',err),\n  complete:()=>console.log('complate'),\n})\n\nsetTimeout(()=>{\n  sub.unsubscribe();\n},5000)`.trim();\n\nconst otsbservable2 = `\nimport { Observable } from \"rxjs/Observable\";\n\nconst obs = new Observable((observer) => {\n  let counter = 1;\n  const producer = setInterval(() => {\n    observer.next(counter++);\n\n    if (counter > 5) {\n      observer.error(\"oops\");\n      observer.complete();\n    }\n  }, 1000);\n\n  return () => {\n    console.log(\"unsubscribe done\");\n    clearInterval(producer);\n  };\n});\n\nconst sub = obs.subscribe({\n  next: (data) => console.log(\"obj1\", data),\n  error: (err) => console.log(\"obj1\", err),\n  complete: () => console.log(\"complate\"),\n});`.trim();\n\nconst otsbservable3 = `\nimport { Observable } from \"rxjs/Observable\";\n\nconst obs = new Observable((observer)=>{\n  let counter=1;\n  const producer = setInterval(()=>{\n    observer.next(counter++)\n\n    if(counter>5){\n      observer.error('oops')\n    }\n  },1000);\n\n  return()=>{\n    console.log('unsubscribe done')\n    clearInterval(producer)\n  }\n})\n\nconst sub = obs.subscribe({\n  next:(data)=>console.log('obj1',data),\n  error:(err)=>console.log('obj1',err),\n  complete:()=>console.log('complate'),\n})\n\nsetTimeout(()=>{\n  const sub2 = obs.subscribe({\n    next:(data)=>console.log('obj2',data),\n    error:(err)=>console.log('obj2',err),\n    complete:()=>console.log('complate2'),\n  })\n},3000)\n\nsetTimeout(()=>{\n  sub.unsubscribe();\n},5000);`.trim();\n\nconst otsbservable4 = `\nimport { Observable } from \"rxjs/Observable\";\n\nconst pr = new Promise((res) => {\n  console.log(\"done\");\n\n  setTimeout(() => {\n    res(\"resolbe\");\n  }, 1000);\n});\n\npr.then((data) => {\n  console.log(data);\n});\n\n//2\nconst obs = new Observable((observer) => {\n  console.log(\"done\");\n\n  setTimeout(() => {\n    observer.next(\"resolbe\");\n  }, 1000);\n});\n\nsetTimeout(() => {\n  obs.subscribe(console.log);\n}, 3000);\n`.trim();\n\nconst otsbservable5 = `\nimport {of} from \"rxjs\";\n\nconst obs=of(12);\n\nobs.subscribe({\n  next: (x)=>console.log(x),\n  complete: ()=>console.log('done'),\n})\n\n//2\nconst arr = [1,2,3];\nconst obs2 = of(arr);\n\nobs2.subscribe((x)=>console.log(x))\n\n\n//3\nconst user = {\n  id:45,\n  name:'Rakesh'\n}\n\nconst obs3=of(user);\nobs3.subscribe((x)=>console.log(x))\n\n\n//3\nconst set = new Set();\n\nset.add(1);\nset.add(2);\nset.add(3);\n\nconst obs4=of(set);\nobs4.subscribe((x)=>console.log(x))\n\nconst map = new Map();\nmap.set('name','Mukeah')\nmap.set('user','Nitesh')\n\nconst obs5=of(map);\nobs5.subscribe((x)=>console.log(x))\n\n//4\nconst pr = new Promise((res)=>res('done'));\nconst obs6=of(pr);\n\nobs6.subscribe((x)=>{\n  x.then(console.log)\n})`.trim();\n\nconst otsbservable6 = `\nimport {from} from \"rxjs\";\n\nconst names = ['a', 'b', 'c'];\nconst obs = from(names);\n\nobs.subscribe((item)=>{\n  console.log(item)\n})\n\n\n//2\nconst set = new Set();\nset.add('d');\nset.add('e');\nset.add('f');\n\nconst obs2 = from(set);\n\nobs2.subscribe((item)=>{\n  console.log(item)\n})\n\n\n//3\nconst pr = new Promise((res)=>res('done'));\n\nconst obs3 = from(pr);\n\nobs3.subscribe((item)=>{\n  console.log(item)\n})\n\n\n//4\nconst pr2 = new Promise((res)=>res('done'));\nconst pr3 = new Promise((res)=>res('done2'));\nconst pr4 = new Promise((res)=>res('done3'));\n\nconst prArr = [pr2, pr3, pr4]\nconst obs4 = from(prArr);\n\nobs4.subscribe((item)=>{\n  item.then(console.log)\n})`.trim();\n\nconst otsbservable7 = `\nimport { fromEvent } from \"rxjs\";\n\n//Click anywerer on window\nconst click$ = fromEvent(document, \"click\");\nclick$.subscribe(console.log);\n\n//2\n//inside html: <button>click</button>\nconst click2$ = fromEvent(\n  document.querySelector(\"button\") as HTMLButtonElement,\n  \"click\"\n);\nclick2$.subscribe(console.log);\n\n//3\nconst click3$ = fromEvent(\n  document.querySelector(\"button\") as HTMLButtonElement,\n  \"click\",\n  { capture: true, passive: true, once: true }\n);\nclick3$.subscribe(console.log);\n`.trim();\n\nconst otsbservable8 = `\nimport { interval, from } from \"rxjs\";\n\nconst obs$ = interval(1000);\nconst sub$ = obs$.subscribe((i) => {\n  if (i > 10) {\n    sub$.unsubscribe();\n    return;\n  }\n  console.log(i);\n});\n\n//2\nconst sub2$ = obs$.subscribe((i) => {\n  if (i > 2) {\n    sub2$.unsubscribe();\n    return;\n  }\n  from(\n    fetch(\"https://jsonplaceholder.typicode.com/posts/\" + (i + 1)).then((res) =>\n      res.json()\n    )\n  ).subscribe(console.log);\n});\n`.trim();\n\nconst otsbservable9 = `\nimport { timer, from } from \"rxjs\";\n\ntimer(1000).subscribe(console.log)\n\n//2\ntimer(1000, 3000).subscribe(console.log);\n\n//3\ntimer(new Date(\"17/03/2023 11:58:00\"), 2000).subscribe(() => {\n  from(\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then((res) =>\n      res.json()\n    )\n  ).subscribe(console.log);\n});\n`.trim();\n\nconst otsbservable10 = `\nimport { range } from \"rxjs\";\n\nrange(1, 10).subscribe(console.log);\n\n//2\nrange(10, 10).subscribe(console.log);\n`.trim();\n\nconst otsbservable11 = `\nimport { generate } from \"rxjs\";\n\ngenerate({\n  initialState: 1,\n  condition: (a) => a < 10,\n  iterate: (a) => a + 1,\n  resultSelector: (b: number) => \"Count\" + b,\n}).subscribe(console.log);\n`.trim();\n\nconst otsbservable12 = `\nimport { ajax } from \"rxjs/ajax\";\n\nconst http$ = ajax(\"https://jsonplaceholder.typicode.com/posts\");\nhttp$.subscribe({\n  next: (res) => {\n    console.log(res.response);\n  },\n  error: (err) => {\n    console.log(\"Error\", err);\n  },\n});\n\n//2\nconst http2$ = ajax({\n  url: \"https://jsonplaceholder.typicode.com/posts\",\n  headers: {\n    Authorization: \"Bearer\",\n    Accept: \"application/json\",\n  },\n});\nhttp2$.subscribe({\n  next: (res) => {\n    console.log(res.response);\n  },\n  error: (err) => {\n    console.log(\"Error\", err);\n  },\n});\n\n//3\nconst http3$ = ajax({\n  url: \"https://jsonplaceholder.typicode.com/posts\",\n  method: \"POST\",\n  headers: {\n    Authorization: \"Bearer\",\n    Accept: \"application/json\",\n  },\n  body: {\n    title: \"foo\",\n    body: \"bar\",\n    userId: 1,\n  },\n});\nhttp3$.subscribe({\n  next: (res) => {\n    console.log(res.response);\n  },\n  error: (err) => {\n    console.log(\"Error\", err);\n  },\n});\n\n//4\nconst http4$ = ajax.get(\"https://jsonplaceholder.typicode.com/posts\", {\n  \"x-some-header-key\": \"value\",\n});\nhttp4$.subscribe({\n  next: (res) => {\n    console.log(res.response);\n  },\n  error: (err) => {\n    console.log(\"Error\", err);\n  },\n});\n\n//I5 f response come from server is html type\nconst http5$ = ajax({\n  url: \"https://jsonplaceholder.typicode.com/posts\",\n  responseType: \"text\",\n});\nhttp5$.subscribe({\n  next: (res) => {\n    console.log(res.response);\n  },\n  error: (err) => {\n    console.log(\"Error\", err);\n  },\n});\n\n//6 post\nconst http6$ = ajax.post(\n  \"https://jsonplaceholder.typicode.com/posts\",\n  { Hi: \"Hello\" },\n  {\n    Authorizaion: \"Beares\",\n  }\n);\nhttp6$.subscribe({\n  next: (res) => {\n    console.log(res.response);\n  },\n  error: (err) => {\n    console.log(\"Error\", err);\n  },\n});\n\n//7 put and so on.\nconst http7$ = ajax.put(\n  \"https://jsonplaceholder.typicode.com/posts\",\n  { Hi: \"Hello\" },\n  {\n    Authorizaion: \"Beares\",\n  }\n);\nhttp7$.subscribe({\n  next: (res) => {\n    console.log(res.response);\n  },\n  error: (err) => {\n    console.log(\"Error\", err);\n  },\n});\n`.trim();\n\nconst otsbservable13 = `\nimport { iif, of } from \"rxjs\";\n\nlet isAuthenticated = true;\nconst obs$ = iif(() => isAuthenticated, of([\"Mukesh\", \"Rakesh\"]), of([]));\n\nobs$.subscribe((res) => {\n  console.log(\"Observer\", res);\n});\n`.trim();\n\nconst otsbservable14 = `\nimport { defer, of } from \"rxjs\";\n\n// const obs$ = of(new Date());\nconst obs$ = defer(() => of(new Date()));\n\nobs$.subscribe((res) => {\n  console.log(\"1st Observer\", res.toTimeString());\n});\n\nsetTimeout(() => {\n  obs$.subscribe((res) => {\n    console.log(\"2st Observer\", res.toTimeString());\n  });\n}, 1000);`.trim();\n\nconst otsbservable15 = `\nimport { from, concat, of } from \"rxjs\";\n\nconst num$ = of(1, 2, 3);\nconst names$ = from([\"Mukesh\", \"Rakesh\"]);\n\nconcat(num$, names$).subscribe(console.log);`.trim();\n\nconst otsbservable16 = ``.trim();\n\nclass Rxjs extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4>\n              <Sidebar />\n            </h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. What is HttpClient, and what are its benefits?</h3>\n              Angular applications communicate with backend services over HTTP\n              protocol using HttpClient which is based on top of the\n              XMLHttpRequest interface.\n              <br />\n              <b>advantages:</b>\n              <ul>\n                <li>Contains testability features</li>\n                <li>Provides typed request and response objects</li>\n                <li>Intercept request and response</li>\n                <li>Supports Observable APIs</li>\n                <li>Supports streamlined error handling</li>\n              </ul>\n              <br />\n              <b>\n                HttpClient implement 'Simplified syntax for headers' while, HTTP\n                not.\n              </b>\n              <br />\n              <h3>2. Rxjs With Pure Js (Reactive Extension for JavaScript)</h3>\n              <ul>\n                <li>\n                  Rxjs is an external library, which used in reactive\n                  programming. we use observable to achieve asynchronous task.\n                </li>\n                <li>\n                  Reactive Programming is programming with asynchronous data\n                  streams.\n                </li>\n              </ul>\n              <br />\n              <ul>\n                <li>Rxjs can use non-angular projects.</li>\n                <li>\n                  In angular project Rxjs not need to install because it come\n                  with angular.\n                </li>\n                <li>\n                  RxJS makes it easy for JavaScript developers to write\n                  asynchronous code using composable Observables instead of\n                  callbacks and Promises.\n                </li>\n              </ul>\n              <br />\n              <ul>\n                <li>\n                  Observables introduced in Rxjs. it's a data source.\n                  Observables work on data stream. to use those stream data we\n                  need to subscribe. For subscribe observables data we use\n                  Observer. Observer is not useful untill it subscribe.{\" \"}\n                </li>\n                <li>\n                  Observables deals with synchronous and asynchronous both.\n                </li>\n              </ul>\n              <br />\n              <ul>\n                <b>Create Observables stream: </b>\n                <br />\n                <li>User input(click button)</li>\n                <li>Http Request</li>\n                <li>Array</li>\n                <li>Objects</li>\n                <br />\n                <br />\n                <b>Observable handle(Subscribe): </b>\n                <br />\n                <li>Next</li>\n                <li>Error</li>\n                <li>Completion</li>\n              </ul>\n              <br />\n              <b>Subscribe accept 3 values: </b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={subscribes}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>3. What are Observables?</h3>\n              <ul>\n                <li>\n                  Observables are declarative which provide support for passing\n                  messages between publishers and subscribers in our\n                  application.\n                </li>\n                <br />\n                <li>\n                  They are mainly used for event handling, asynchronous\n                  programming, and handling multiple values. In this case, you\n                  define a function for publishing values, but it is not\n                  executed until a consumer subscribes to it. The subscribed\n                  consumer then receives notifications until the function\n                  completes, or until they unsubscribe.\n                </li>\n              </ul>\n              <br />\n              <h3>4. What is an Observer?</h3>\n              Observer is an interface for a consumer of push-based\n              notifications delivered by an Observable. It has below structure.\n              <div style={titles}>\n                <PrismCode\n                  code={notifications}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>5. What is Subscribing</h3>\n              <ul>\n                <li>\n                  A Subscription is an object that represents a disposable\n                  resource, usually the execution of an Observable.\n                </li>\n                <li>\n                  A Subscription has one important method, unsubscribe, that\n                  takes no argument and just disposes of the resource held by\n                  the subscription.\n                </li>\n              </ul>\n              <br />\n              <h3>\n                6. What will happen if you do not supply handler for observer\n              </h3>\n              Normally an observer object can define any combination of next,\n              error and complete notification type handlers. If you don't supply\n              a handler for a notification type, the observer just ignores\n              notifications of that type.\n              <br />\n              <h3>7. What is RxJS With Angular</h3>\n              RxJS is a library for composing asynchronous and callback-based\n              code in a functional, reactive style using Observables. Many APIs\n              such as HttpClient produce and consume RxJS Observables and also\n              uses operators for processing observables.\n              <div style={titles}>\n                <PrismCode\n                  code={rxjxLibrary}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>8. What are the utility functions provided by RxJS</h3>\n              The RxJS library also provides below utility functions for\n              creating and working with observables.\n              <ul>\n                <li>\n                  Converting existing code for async operations into observables\n                </li>\n                <li>Iterating through the values in a stream</li>\n                <li>Mapping values to different types</li>\n                <li>Filtering streams</li>\n                <li>Composing multiple streams</li>\n              </ul>\n              <br />\n              <h3>9. What are observable creation functions</h3>\n              RxJS provides creation functions for the process of creating\n              observables from things such as promises, events, timers and Ajax\n              requests.\n              <br />\n              <b>1. Create an observable from a promise</b>\n              <div style={titles}>\n                <PrismCode\n                  code={observableFun}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Rxjs with typescript</h3>\n              <b>1. Observable</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>2. </b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable2}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>3.</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable3}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>4. Rxjs with Promise</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable4}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>5. of: </b>of means create observable of values given in of().\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable5}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>6. from: </b>from get values from iterable item.\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable6}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>7. fromEvent: </b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable7}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>8. Interval</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable8}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>9. timer</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable9}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>10. range</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable10}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>11. generate</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable11}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>12. ajax</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable12}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>13. iif</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable13}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>14. defer</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable14}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>15. concat</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable15}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>16. merge</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable16}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b></b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b></b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b></b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b></b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b></b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b></b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={otsbservable}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>10. What does subscribing mean in RxJS?</h3>\n              In RxJS, when using observables, we need to subscribe to an\n              observable to use the data that flows through that observable.\n              This data is generated from a publisher and is consumed by a\n              subscriber. When we subscribe to an observable, we pass in a\n              function for the data and another function for errors so that, in\n              case there is some error, we can show some message or process the\n              message in some way.\n              <br />\n              <h3>From</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={rxjsfrom}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Map</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={mapfil}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Pipe</h3>\n              pipe() function is also a method on the RxJS Observable.\n              <div style={titles}>\n                <PrismCode\n                  code={mapipe}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Stream create</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={stcreate}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Unsubscribe</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={unsubscribe}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>RxJS OPERATORS LIKE map() OR throttleTime()</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={throttleTime}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>RxJS SUBJECT (~EventEmitter)</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={fixrxjs}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <b>2. Create an observable that creates an AJAX request</b>\n              <div style={titles}>\n                <PrismCode\n                  code={observableAJAX}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <b>3. Create an observable from a counter</b>\n              <div style={titles}>\n                <PrismCode\n                  code={observableCount}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <b>4. Create an observable from an event</b>\n              <div style={titles}>\n                <PrismCode\n                  code={observableEvt}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Filter</h3>\n              This operator takes values from the source Observable, passes them\n              through a predicate function and only emits those values that get\n              TRUE.\n              <div style={titles}>\n                <PrismCode\n                  code={filter}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Placeholders</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={placeholders}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Rxjs);\n"]},"metadata":{},"sourceType":"module"}