{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import PrismCode from'../prismCode';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../styles.css';import Sidebar from'../sidebar';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var countProgress=\"\\nclass App extends Component {\\n  state = {\\n      progress: 0,\\n      score: 0\\n    };  \\n    \\n    \\n  handleClick = () => {\\n      this.setState(() => {\\n        if (this.state.progress + 10 === 100) {\\n          return { progress: 0, score: this.state.score + 1 };\\n        }\\n        return { progress: this.state.progress + 10 };\\n      });\\n    }\\n\\n  render() {\\n    const style = { width: this.state.progress + '%' };\\n    \\n    return (\\n      <div onClick={this.handleClick}>\\n        {'Score: ' + this.state.score} <br />\\n        {this.state.progress + '%'}\\n        <div className=\\\"bar\\\" style={style} />\\n      </div>\\n    );\\n  }\\n}\\n\\n\\n//App.css\\n.bar {\\n  width: 0;\\n  height: 20px;\\n  transition: width 0.3s;\\n  background: #21d147;\\n  cursor: pointer;\\n}\".trim();var contTimmer=\"\\nclass App extends Component {\\n  state = {\\n    isActive: false,\\n    secondsElapsed: 1800000 / 1000 //time in seconds\\n  };\\n\\n  getHours() {\\n    return (\\\"0\\\" + Math.floor(this.state.secondsElapsed / 3600)).slice(-2);\\n  }\\n\\n  getMinutes() {\\n    return (\\\"0\\\" + Math.floor((this.state.secondsElapsed % 3600) / 60)).slice(-2);\\n  }\\n\\n  getSeconds() {\\n    return (\\\"0\\\" + (this.state.secondsElapsed % 60)).slice(-2);\\n  }\\n\\n  startTime = () => {\\n    this.setState({ isActive: true });\\n    \\n    this.countdown = setInterval(() => {\\n      this.setState({ secondsElapsed: this.state.secondsElapsed - 1 }) \\n    }, 1000);\\n  };\\n\\n  resetTime = () => {\\n    clearInterval(this.countdown);\\n    this.setState({\\n        secondsElapsed: 1800000 / 1000,\\n        isActive: false\\n    });\\n  };\\n\\n  pauseTime = () => {\\n    clearInterval(this.countdown);\\n    this.setState({ isActive: false });\\n  };\\n\\n  render() {\\n    return (\\n      <div>\\n        <div>\\n          <span>{this.getHours()} : {this.getMinutes()} : {this.getSeconds()}</span>\\n        </div>\\n        <div>\\n          <button onClick={this.state.isActive ? this.pauseTime : this.startTime}>\\n            Start/Pause\\n          </button>\\n          <button onClick={this.resetTime}>Reset</button>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\".trim();var pause=\"\\nconst App=()=>{\\n  const [count, setCount]=useState(0);\\n  const [isFalse,setIsFalse]=useState(false);\\n\\n  const handleCount=()=>{\\n   \\n       if(isFalse){\\n           setCount(count+1)\\n       }\\n       else{\\n           setCount(count-1)\\n       }\\n  }\\n  \\n  const handleBtn=()=>{\\n   setIsFalse(!isFalse);\\n  }\\n\\n  return(\\n   <div>\\n       {count}<br/>\\n       <button onClick={handleCount}>Count</button>\\n       <button onClick={handleBtn}>Handle</button>\\n\\n   </div>\\n  )\\n}\\n\\nexport default App;\\n\".trim();var fizzBuzz=\"\\nclass App extends Component {\\n  state = {\\n    fizzBuzz: '',\\n    counter: 1\\n  };\\n  \\n  isFizzBuzz = () => {\\n    const counter = this.state.counter;\\n    let fizzBuzz = this.state.fizzBuzz;\\n    \\n    if (counter % 3 === 0) { fizzBuzz += 'Fizz, ' }\\n    if (counter % 5 === 0) { fizzBuzz += 'Buzz, ' };\\n    if (counter % 5 && counter % 3) { fizzBuzz += ''$'{counter}, ' };\\n    \\n    this.setState({ fizzBuzz: fizzBuzz });\\n  };\\n  increment = () => {\\n    this.setState((prevState) => ({ counter: ++prevState.counter }));\\n    this.isFizzBuzz();\\n  };\\n  decrement = () => {\\n    this.setState((prevState) => ({ counter: --prevState.counter }));\\n    this.isFizzBuzz();\\n  };\\n  render() {\\n    return (\\n      <div>\\n        <button onClick={this.increment}>+</button>{ }\\n        <button onClick={this.decrement}>-</button><br /><br />\\n        {this.state.fizzBuzz}\\n      </div>\\n    );\\n  }\\n}\".trim();var ratings=\"\\nconst Star = ({ starId, marked }) => {\\n  return (\\n    <span\\n      star-id={starId}\\n      style={{ color: \\\"green\\\", cursor: \\\"pointer\\\" }}\\n    >\\n      {marked ? \\\"\\u2605\\\" : \\\"\\u2606\\\"}  // \\\"/u2605\\\" : \\\"/u2606\\\"\\n    </span>\\n  );\\n};\\n\\nconst App = () => {\\n  const [selection, setSelection] = React.useState(0);\\n\\n  const [rating, setRating] = React.useState(0);\\n\\n  const hoverOver = event => {\\n    let starId = 0;\\n    if (event && event.target && event.target.getAttribute(\\\"star-id\\\")) {\\n      starId = event.target.getAttribute(\\\"star-id\\\");\\n    }\\n    setSelection(starId);\\n  };\\n\\n  return (\\n    <div\\n      onMouseOver={hoverOver}\\n      onMouseOut={() => hoverOver(null)}\\n      onClick={event => setRating(event.target.getAttribute(\\\"star-id\\\"))}\\n    >\\n      {Array.from({ length: 5 }, (v, i) => (\\n        <Star starId={i + 1} marked={selection ? selection > i : rating > i} />\\n      ))}\\n    </div>\\n  );\\n};\".trim();var SortItems=/*#__PURE__*/function(_Component){_inherits(SortItems,_Component);function SortItems(){_classCallCheck(this,SortItems);return _possibleConstructorReturn(this,_getPrototypeOf(SortItems).apply(this,arguments));}_createClass(SortItems,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"b\",null,\"1.onClick increase 10% progress bar\"),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:countProgress,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"2. A click to start the countdown timer and a second one to Pause the timer in the same button\"),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:contTimmer,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"3. Click on pause button to decrese count again Click on pause to start increse count\"),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:pause,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"4. FizzBuzz :\"),\" If counter = 3, then print 'Fizz', counter = 5, 'Buzz' else print counter values.\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:fizzBuzz,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"b\",null,\"7. Start Rating\"),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:ratings,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return SortItems;}(Component);export default withStyles(styles)(SortItems);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/sortItems.js"],"names":["React","Component","PrismCode","Prism","Grid","Paper","withStyles","List","Sidebar","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","countProgress","trim","contTimmer","pause","fizzBuzz","ratings","SortItems","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PrismCode from '../prismCode';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../styles.css'\nimport Sidebar from '../sidebar';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst countProgress = `\nclass App extends Component {\n  state = {\n      progress: 0,\n      score: 0\n    };  \n    \n    \n  handleClick = () => {\n      this.setState(() => {\n        if (this.state.progress + 10 === 100) {\n          return { progress: 0, score: this.state.score + 1 };\n        }\n        return { progress: this.state.progress + 10 };\n      });\n    }\n\n  render() {\n    const style = { width: this.state.progress + '%' };\n    \n    return (\n      <div onClick={this.handleClick}>\n        {'Score: ' + this.state.score} <br />\n        {this.state.progress + '%'}\n        <div className=\"bar\" style={style} />\n      </div>\n    );\n  }\n}\n\n\n//App.css\n.bar {\n  width: 0;\n  height: 20px;\n  transition: width 0.3s;\n  background: #21d147;\n  cursor: pointer;\n}`.trim();\n\nconst contTimmer = `\nclass App extends Component {\n  state = {\n    isActive: false,\n    secondsElapsed: 1800000 / 1000 //time in seconds\n  };\n\n  getHours() {\n    return (\"0\" + Math.floor(this.state.secondsElapsed / 3600)).slice(-2);\n  }\n\n  getMinutes() {\n    return (\"0\" + Math.floor((this.state.secondsElapsed % 3600) / 60)).slice(-2);\n  }\n\n  getSeconds() {\n    return (\"0\" + (this.state.secondsElapsed % 60)).slice(-2);\n  }\n\n  startTime = () => {\n    this.setState({ isActive: true });\n    \n    this.countdown = setInterval(() => {\n      this.setState({ secondsElapsed: this.state.secondsElapsed - 1 }) \n    }, 1000);\n  };\n\n  resetTime = () => {\n    clearInterval(this.countdown);\n    this.setState({\n        secondsElapsed: 1800000 / 1000,\n        isActive: false\n    });\n  };\n\n  pauseTime = () => {\n    clearInterval(this.countdown);\n    this.setState({ isActive: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <span>{this.getHours()} : {this.getMinutes()} : {this.getSeconds()}</span>\n        </div>\n        <div>\n          <button onClick={this.state.isActive ? this.pauseTime : this.startTime}>\n            Start/Pause\n          </button>\n          <button onClick={this.resetTime}>Reset</button>\n        </div>\n      </div>\n    );\n  }\n}`.trim();\n\nconst pause = `\nconst App=()=>{\n  const [count, setCount]=useState(0);\n  const [isFalse,setIsFalse]=useState(false);\n\n  const handleCount=()=>{\n   \n       if(isFalse){\n           setCount(count+1)\n       }\n       else{\n           setCount(count-1)\n       }\n  }\n  \n  const handleBtn=()=>{\n   setIsFalse(!isFalse);\n  }\n\n  return(\n   <div>\n       {count}<br/>\n       <button onClick={handleCount}>Count</button>\n       <button onClick={handleBtn}>Handle</button>\n\n   </div>\n  )\n}\n\nexport default App;\n`.trim();\n\nconst fizzBuzz = `\nclass App extends Component {\n  state = {\n    fizzBuzz: '',\n    counter: 1\n  };\n  \n  isFizzBuzz = () => {\n    const counter = this.state.counter;\n    let fizzBuzz = this.state.fizzBuzz;\n    \n    if (counter % 3 === 0) { fizzBuzz += 'Fizz, ' }\n    if (counter % 5 === 0) { fizzBuzz += 'Buzz, ' };\n    if (counter % 5 && counter % 3) { fizzBuzz += ''$'{counter}, ' };\n    \n    this.setState({ fizzBuzz: fizzBuzz });\n  };\n  increment = () => {\n    this.setState((prevState) => ({ counter: ++prevState.counter }));\n    this.isFizzBuzz();\n  };\n  decrement = () => {\n    this.setState((prevState) => ({ counter: --prevState.counter }));\n    this.isFizzBuzz();\n  };\n  render() {\n    return (\n      <div>\n        <button onClick={this.increment}>+</button>{ }\n        <button onClick={this.decrement}>-</button><br /><br />\n        {this.state.fizzBuzz}\n      </div>\n    );\n  }\n}`.trim();\n\nconst ratings = `\nconst Star = ({ starId, marked }) => {\n  return (\n    <span\n      star-id={starId}\n      style={{ color: \"green\", cursor: \"pointer\" }}\n    >\n      {marked ? \"★\" : \"☆\"}  // \"/u2605\" : \"/u2606\"\n    </span>\n  );\n};\n\nconst App = () => {\n  const [selection, setSelection] = React.useState(0);\n\n  const [rating, setRating] = React.useState(0);\n\n  const hoverOver = event => {\n    let starId = 0;\n    if (event && event.target && event.target.getAttribute(\"star-id\")) {\n      starId = event.target.getAttribute(\"star-id\");\n    }\n    setSelection(starId);\n  };\n\n  return (\n    <div\n      onMouseOver={hoverOver}\n      onMouseOut={() => hoverOver(null)}\n      onClick={event => setRating(event.target.getAttribute(\"star-id\"))}\n    >\n      {Array.from({ length: 5 }, (v, i) => (\n        <Star starId={i + 1} marked={selection ? selection > i : rating > i} />\n      ))}\n    </div>\n  );\n};`.trim();\n\n\n\nclass SortItems extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <b>1.onClick increase 10% progress bar</b>\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={countProgress}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>2. A click to start the countdown timer and a second one to Pause the timer in the same button</b>\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={contTimmer}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>3. Click on pause button to decrese count again Click on pause to start increse count</b>\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={pause}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>4. FizzBuzz :</b> If counter = 3, then print 'Fizz', counter = 5, 'Buzz' else print counter values.\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={fizzBuzz}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <b>7. Start Rating</b>\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={ratings}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(SortItems));"]},"metadata":{},"sourceType":"module"}