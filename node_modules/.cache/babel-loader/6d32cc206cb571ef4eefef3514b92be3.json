{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import\"../styles.css\";import Sidebar from\"../sidebar\";import PrismCode from\"../prismCode\";var titles={backgroundColor:\"#F0F8FF\",padding:\"1px\",fontSize:\"16px\"};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var modal=\"\\nimport Previews from \\\"./previews\\\"\\n\\nconst App = () => {\\n  const [data, setData] = useState([{\\n    \\\"id\\\": 1,\\n    \\\"letter\\\": \\\"J\\\",\\n    \\\"image\\\": '/images/d1.jpg',\\n    \\\"barColor\\\": \\\"#28a745\\\",\\n    \\\"percentage\\\": 50,\\n    \\\"text\\\": \\\"Live\\\"\\n  }])\\n\\n  return (\\n    <div>\\n      {data.map((value) => (\\n        <div>\\n          {value.text}\\n          {value.name}\\n          <div>\\n            {value.percentage < 70 && <Previews data={value} />}\\n          </div>\\n        </div>\\n      ))}\\n    </div>\\n  );\\n}\\n\\n\\n//previews.js\\nimport Popup from \\\"reactjs-popup\\\"\\n\\nconst Previews = (props) => {\\n  const [open, setOpen] = useState(false)\\n\\n  const handleClickOpen = () => {\\n    setOpen(open => !open);\\n  };\\n\\n  return (\\n    <div>\\n      <button onClick={handleClickOpen}>btn</button>\\n\\n      <Popup open={open} onClose={handleClickOpen} >\\n        <div>{props.data.text}</div>\\n        <div>{props.data.exame}</div>\\n        <div>{props.data.barColor}</div>\\n        <div>{props.data.percentage}</div>\\n      </Popup>\\n    </div>\\n  );\\n}\\n\".trim();var download=\"\\n   import {CSVLink, CSVDownload} from 'react-csv';\\n   import axios from 'axios';\\n\\n   class CsvFile extends Component {\\n      state={\\n         mockData:[]\\n      }\\n      \\n      \\n     componentDidMount(){\\n      let url=\\\"https://jsonplaceholder.typicode.com/users\\\";\\n      axios.get(url)\\n           .then(res => {\\n              const mockData= res.data\\n              this.setState({ mockData })\\n              console.log('ssssssss',res.data)\\n          })\\n     }\\n      \\n      render(){\\n         var csvData = this.state.mockData.map(value=>{\\n            let obj = {};\\n                obj.name = value.name;\\n                obj.address = value.address.street;\\n                \\n            return obj; \\n        })\\n      return(\\n         <div>\\n            <p>Async Await</p>\\n            {this.state.mockData.map((items) => (\\n               <li key={items.id}>{items.name}</li>\\n            ))}\\n            <CSVLink data={csvData} >Download csv</CSVLink>\\n         </div>\\n       )\\n      }\\n   }\\n\\nexport default CsvFile;\".trim();var protecteds=\"\\n // auth.js\\n class Auth {\\n  constructor() {\\n    this.authenticated = false;\\n  }\\n\\n  login(cb) {\\n    this.authenticated = true;\\n    cb();\\n  }\\n\\n  logout(cb) {\\n    this.authenticated = false;\\n    cb();\\n  }\\n\\n  isAuthenticated() {\\n    return this.authenticated;\\n  }\\n}\\n\\nexport default new Auth();\\n\\n\\n// LandingPage.js\\nimport auth from \\\"./auth\\\";\\n\\nconst LandingPage = props => {\\n  return (\\n    <div>\\n      <h1>Landing Page</h1>\\n      <button\\n        onClick={() => {\\n          auth.login(() => {\\n            props.history.push(\\\"/app\\\");\\n          });\\n        }}\\n      >\\n        Login\\n      </button>\\n    </div>\\n  );\\n};\\n\\n\\nexport default LandingPage;\\n\\n\\n// ProtectedRoute.js\\nimport { Route, Redirect } from \\\"react-router-dom\\\";\\nimport auth from \\\"./auth\\\";\\n\\nconst ProtectedRoute = ({\\n  component: Component,\\n  ...rest\\n}) => {\\n  return (\\n    <Route\\n      {...rest}\\n      render={props => {\\n        if (auth.isAuthenticated()) {\\n          return <Component {...props} />;\\n        } else {\\n          return (\\n            <Redirect\\n              to={{\\n                pathname: \\\"/\\\",\\n                state: {\\n                  from: props.location\\n                }\\n              }}\\n            />\\n          );\\n        }\\n      }}\\n    />\\n  );\\n};\\n\\n\\nexport default ProtectedRoute;\\n\\n\\n//App.js\\nimport auth from \\\"./auth\\\";\\n\\nexport const App = props => {\\n  return (\\n    <div>\\n      <h1>App Layout</h1>\\n      <button\\n        onClick={() => {\\n          auth.logout(() => {\\n            props.history.push(\\\"/\\\");\\n          });\\n        }}\\n      >\\n        Logout\\n      </button>\\n    </div>\\n  );\\n};\\n\\n\\nexport default App;\\n\\n\\n// index.js\\nimport { App } from './App';\\nimport LandingPage from \\\"./landing_page.js\\\";\\nimport ProtectedRoute from \\\"./protected_route\\\";\\n\\nimport { BrowserRouter, Route, Switch } from \\\"react-router-dom\\\";\\n\\nReactDOM.render(\\n  <React.StrictMode>\\n     <BrowserRouter>\\n      <Switch>\\n          <Route exact path=\\\"/\\\" component={LandingPage} />\\n          <ProtectedRoute exact path=\\\"/App\\\" component={App} />\\n          <Route path=\\\"*\\\" component={() => \\\"404 NOT FOUND\\\"} />\\n        </Switch>\\n      </BrowserRouter>\\n  </React.StrictMode>,\\n  document.getElementById('root')\\n);\".trim();var loading=\"\\nclass App extends Component {\\n  state = {\\n          isLoading: false, \\n          data: '', \\n          mockData: [],\\n        }\\n\\n      handleData() {\\n        axios.get(\\\"https://jsonplaceholder.typicode.com/users\\\")\\n         .then(res => {\\n            const mockData= res.data\\n            this.setState({ mockData })\\n        })\\n    }\\n\\n  handleSubmit = () => {\\n      axios.get(\\\"https://jsonplaceholder.typicode.com/users\\\")\\n       .then(data => this.setState({ data: data }, () => {\\n            this.handleData()\\n          }))\\n          .then(() => this.setState({ isLoading: false }));\\n  }\\n\\n  render() {\\n    let mockData = \\\"Loding\\\";\\n    if (!this.state.isLoading && this.state.mockData) {\\n       mockData = (\\n         <div>\\n           {this.state.mockData.map(val => (\\n             <li>{val.id}</li>\\n           ))}\\n           <button type=\\\"button\\\" onClick={this.handleSubmit}>Click Me!</button>\\n           </div>\\n       )\\n    }\\n      return (\\n          <>{mockData}</>\\n      )\\n  }\\n}\".trim();var Models=/*#__PURE__*/function(_Component){_inherits(Models,_Component);function Models(){_classCallCheck(this,Models);return _possibleConstructorReturn(this,_getPrototypeOf(Models).apply(this,arguments));}_createClass(Models,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"1. Modal\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:modal,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"3. Download CSV File\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:download,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"4. Loading icon on api fatch\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:loading,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"6. Protected Routes\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:protecteds,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return Models;}(Component);export default withStyles(styles)(Models);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/models.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","modal","trim","download","protecteds","loading","Models","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,eAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CAEA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,QAAY,CACzBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADkB,CAKzBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALe,CAQzBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARc,CAAZ,EAAf,CAaA,GAAMC,CAAAA,KAAK,CAAG,gjCAoDZC,IApDY,EAAd,CAsDA,GAAMC,CAAAA,QAAQ,CAAG,4hCAwCQD,IAxCR,EAAjB,CA0CA,GAAME,CAAAA,UAAU,CAAG,+vEA8HfF,IA9He,EAAnB,CAgIA,GAAMG,CAAAA,OAAO,CAAG,qgCAwCbH,IAxCa,EAAhB,C,GA0CMI,CAAAA,M,sRACgB,CAClBC,UAAU,CAAC,iBAAMzB,CAAAA,KAAK,CAAC0B,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACd,KAA1B,EACE,8BACE,oBAAC,OAAD,MADF,CADF,CADF,CADF,CASE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEc,OAAO,CAACd,KAA1B,EACE,oBAAC,IAAD,MACE,yCADF,CAEE,2BAAK,KAAK,CAAEN,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEY,KADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAFF,CASE,8BATF,CAWE,qDAXF,CAYE,2BAAK,KAAK,CAAEZ,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEc,QADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAZF,CAoBE,8BApBF,CAqBE,6DArBF,CAsBE,2BAAK,KAAK,CAAEd,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEgB,OADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAtBF,CA6BE,8BA7BF,CA8BE,8BA9BF,CAgCE,oDAhCF,CAiCE,2BAAK,KAAK,CAAEhB,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEe,UADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAjCF,CADF,CADF,CATF,CADF,CAyDD,C,oBA/DkBvB,S,EAkErB,cAAeI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBa,MAAnB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport \"../styles.css\";\nimport Sidebar from \"../sidebar\";\nimport PrismCode from \"../prismCode\";\n\nconst titles = { backgroundColor: \"#F0F8FF\", padding: \"1px\", fontSize: \"16px\" };\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n});\n\nconst modal = `\nimport Previews from \"./previews\"\n\nconst App = () => {\n  const [data, setData] = useState([{\n    \"id\": 1,\n    \"letter\": \"J\",\n    \"image\": '/images/d1.jpg',\n    \"barColor\": \"#28a745\",\n    \"percentage\": 50,\n    \"text\": \"Live\"\n  }])\n\n  return (\n    <div>\n      {data.map((value) => (\n        <div>\n          {value.text}\n          {value.name}\n          <div>\n            {value.percentage < 70 && <Previews data={value} />}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\n\n//previews.js\nimport Popup from \"reactjs-popup\"\n\nconst Previews = (props) => {\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(open => !open);\n  };\n\n  return (\n    <div>\n      <button onClick={handleClickOpen}>btn</button>\n\n      <Popup open={open} onClose={handleClickOpen} >\n        <div>{props.data.text}</div>\n        <div>{props.data.exame}</div>\n        <div>{props.data.barColor}</div>\n        <div>{props.data.percentage}</div>\n      </Popup>\n    </div>\n  );\n}\n`.trim();\n\nconst download = `\n   import {CSVLink, CSVDownload} from 'react-csv';\n   import axios from 'axios';\n\n   class CsvFile extends Component {\n      state={\n         mockData:[]\n      }\n      \n      \n     componentDidMount(){\n      let url=\"https://jsonplaceholder.typicode.com/users\";\n      axios.get(url)\n           .then(res => {\n              const mockData= res.data\n              this.setState({ mockData })\n              console.log('ssssssss',res.data)\n          })\n     }\n      \n      render(){\n         var csvData = this.state.mockData.map(value=>{\n            let obj = {};\n                obj.name = value.name;\n                obj.address = value.address.street;\n                \n            return obj; \n        })\n      return(\n         <div>\n            <p>Async Await</p>\n            {this.state.mockData.map((items) => (\n               <li key={items.id}>{items.name}</li>\n            ))}\n            <CSVLink data={csvData} >Download csv</CSVLink>\n         </div>\n       )\n      }\n   }\n\nexport default CsvFile;`.trim();\n\nconst protecteds = `\n // auth.js\n class Auth {\n  constructor() {\n    this.authenticated = false;\n  }\n\n  login(cb) {\n    this.authenticated = true;\n    cb();\n  }\n\n  logout(cb) {\n    this.authenticated = false;\n    cb();\n  }\n\n  isAuthenticated() {\n    return this.authenticated;\n  }\n}\n\nexport default new Auth();\n\n\n// LandingPage.js\nimport auth from \"./auth\";\n\nconst LandingPage = props => {\n  return (\n    <div>\n      <h1>Landing Page</h1>\n      <button\n        onClick={() => {\n          auth.login(() => {\n            props.history.push(\"/app\");\n          });\n        }}\n      >\n        Login\n      </button>\n    </div>\n  );\n};\n\n\nexport default LandingPage;\n\n\n// ProtectedRoute.js\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"./auth\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (auth.isAuthenticated()) {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  from: props.location\n                }\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n\n\nexport default ProtectedRoute;\n\n\n//App.js\nimport auth from \"./auth\";\n\nexport const App = props => {\n  return (\n    <div>\n      <h1>App Layout</h1>\n      <button\n        onClick={() => {\n          auth.logout(() => {\n            props.history.push(\"/\");\n          });\n        }}\n      >\n        Logout\n      </button>\n    </div>\n  );\n};\n\n\nexport default App;\n\n\n// index.js\nimport { App } from './App';\nimport LandingPage from \"./landing_page.js\";\nimport ProtectedRoute from \"./protected_route\";\n\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n     <BrowserRouter>\n      <Switch>\n          <Route exact path=\"/\" component={LandingPage} />\n          <ProtectedRoute exact path=\"/App\" component={App} />\n          <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\n        </Switch>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);`.trim();\n\nconst loading = `\nclass App extends Component {\n  state = {\n          isLoading: false, \n          data: '', \n          mockData: [],\n        }\n\n      handleData() {\n        axios.get(\"https://jsonplaceholder.typicode.com/users\")\n         .then(res => {\n            const mockData= res.data\n            this.setState({ mockData })\n        })\n    }\n\n  handleSubmit = () => {\n      axios.get(\"https://jsonplaceholder.typicode.com/users\")\n       .then(data => this.setState({ data: data }, () => {\n            this.handleData()\n          }))\n          .then(() => this.setState({ isLoading: false }));\n  }\n\n  render() {\n    let mockData = \"Loding\";\n    if (!this.state.isLoading && this.state.mockData) {\n       mockData = (\n         <div>\n           {this.state.mockData.map(val => (\n             <li>{val.id}</li>\n           ))}\n           <button type=\"button\" onClick={this.handleSubmit}>Click Me!</button>\n           </div>\n       )\n    }\n      return (\n          <>{mockData}</>\n      )\n  }\n}`.trim();\n\nclass Models extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4>\n              <Sidebar />\n            </h4>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. Modal</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={modal}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>3. Download CSV File</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={download}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n\n              <br />\n              <h3>4. Loading icon on api fatch</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={loading}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <h3>6. Protected Routes</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={protecteds}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Models);\n"]},"metadata":{},"sourceType":"module"}