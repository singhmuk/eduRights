{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/nodeJs/nodeDeep/file_upload.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst fileModel = `\nconst ProductSchema = new Schems({\n  name: { type: String, required: true },\n  price: { type: Number, required: true },\n  image: { type: String, required: true },\n});\n\nmodule.exports = mongoose.model('Product', ProductSchema);\n`.trim();\nconst fileControllers = `\nconst Product = require('../models/Product');\nconst { StatusCodes } = require('http-status-codes');\n\nconst createProduct = async (req, res) => {\n  const product = await Product.create(req.body);\n  res.status(StatusCodes.CREATED).json({ product });\n};\nconst getAllProducts = async (req, res) => {\n  const products = await Product.find({});\n  res.status(StatusCodes.OK).json({ products });\n};\n\nmodule.exports = {\n  createProduct,\n  getAllProducts,\n};`.trim();\nconst uploadControllers = `\nconst path = require('path');\nconst { StatusCodes } = require('http-status-codes');\nconst CustomError = require('../errors');\nconst cloudinary = require('cloudinary').v2;\nconst fs = require('fs');\n\nconst uploadProductImageLocal = async (req, res) => {\n  if (!req.files) {\n    throw new CustomError.BadRequestError('No File Uploaded');\n  }\n  const productImage = req.files.image;\n  if (!productImage.mimetype.startsWith('image')) {\n    throw new CustomError.BadRequestError('Please Upload Image');\n  }\n  const maxSize = 1024 * 1024;\n  if (productImage.size > maxSize) {\n    throw new CustomError.BadRequestError('Please upload image smaller 1MB');\n  }\n  const imagePath = path.join(\n    __dirname,\n    '../public/uploads/' + '$'{productImage.name}'\n  );\n  await productImage.mv(imagePath);\n  return res\n    .status(StatusCodes.OK)\n    .json({ image: { src: '/uploads/'$'{productImage.name}' } });\n};\n\nconst uploadProductImage = async (req, res) => {\n  const result = await cloudinary.uploader.upload(\n    req.files.image.tempFilePath,\n    {\n      use_filename: true,\n      folder: 'file-upload',\n    }\n  );\n  fs.unlinkSync(req.files.image.tempFilePath);\n  return res.status(StatusCodes.OK).json({ image: { src: result.secure_url } });\n};\n\nmodule.exports = {\n  uploadProductImage,\n};\n`.trim();\nconst fileRoutes = `\nconst { createProduct,  getAllProducts } = require('../controllers/productController');\nconst { uploadProductImage } = require('../controllers/uploadsController');\n\nrouter.route('/').post(createProduct).get(getAllProducts);\nrouter.route('/uploads').post(uploadProductImage);\n\nmodule.exports = router;\n`.trim();\nconst authMiddleware = `\nconst User = require('../models/User')\nconst jwt = require('jsonwebtoken')\nconst { UnauthenticatedError } = require('../errors')\n\nconst auth = async (req, res, next) => {\n  // check header\n  const authHeader = req.headers.authorization\n  if (!authHeader || !authHeader.startsWith('Bearer')) {\n    throw new UnauthenticatedError('Authentication invalid')\n  }\n  const token = authHeader.split(' ')[1]\n\n  try {\n    const payload = jwt.verify(token, process.env.JWT_SECRET)\n    // attach the user to the job routes\n    req.user = { userId: payload.userId, name: payload.name }\n    next()\n  } catch (error) {\n    throw new UnauthenticatedError('Authentication invalid')\n  }\n}\n\nmodule.exports = auth\n`.trim();\nconst errorHandler = `\nconst { StatusCodes } = require('http-status-codes')\nconst errorHandlerMiddleware = (err, req, res, next) => {\n  let customError = {\n    // set default\n    statusCode: err.statusCode || StatusCodes.INTERNAL_SERVER_ERROR,\n    msg: err.message || 'Something went wrong try again later',\n  }\n\n  if (err.name === 'ValidationError') {\n    customError.msg = Object.values(err.errors)\n      .map((item) => item.message)\n      .join(',')\n    customError.statusCode = 400\n  }\n  if (err.code && err.code === 11000) {\n    customError.msg = 'Duplicate value entered for '$'{Object.keys(\n      err.keyValue\n    )} field, please choose another value'\n    customError.statusCode = 400\n  }\n  if (err.name === 'CastError') {\n    customError.msg = 'No item found with id : '$'{err.value}'\n    customError.statusCode = 404\n  }\n\n  return res.status(customError.statusCode).json({ msg: customError.msg })\n}\n\nmodule.exports = errorHandlerMiddleware;\n`.trim();\nconst noteFound = `\nconst notFound = (req, res) => res.status(404).send('Route does not exist')\n\nmodule.exports = notFound;\n`.trim();\nconst badReq = `\nconst { StatusCodes } = require('http-status-codes');\nconst CustomAPIError = require('./custom-api');\n\nclass BadRequestError extends CustomAPIError {\n  constructor(message) {\n    super(message);\n    this.statusCode = StatusCodes.BAD_REQUEST;\n  }\n}\n\nmodule.exports = BadRequestError;\n`.trim();\nconst commonApi = `\nclass CustomAPIError extends Error {\n  constructor(message) {\n    super(message)\n  }\n}\n\nmodule.exports = CustomAPIError;\n`.trim();\nconst NotFoundError = `\nconst { StatusCodes } = require('http-status-codes');\nconst CustomAPIError = require('./custom-api');\n\nclass NotFoundError extends CustomAPIError {\n  constructor(message) {\n    super(message);\n    this.statusCode = StatusCodes.NOT_FOUND;\n  }\n}\n\nmodule.exports = NotFoundError;\n`.trim();\nconst UnauthenticatedError = `\nconst { StatusCodes } = require('http-status-codes');\nconst CustomAPIError = require('./custom-api');\n\nclass UnauthenticatedError extends CustomAPIError {\n  constructor(message) {\n    super(message);\n    this.statusCode = StatusCodes.UNAUTHORIZED;\n  }\n}\n\nmodule.exports = UnauthenticatedError;\n`.trim();\nconst errorIndex = `\nconst CustomAPIError = require('./custom-api')\nconst UnauthenticatedError = require('./unauthenticated')\nconst NotFoundError = require('./not-found')\nconst BadRequestError = require('./bad-request')\n\nmodule.exports = {\n  CustomAPIError,\n  UnauthenticatedError,\n  NotFoundError,\n  BadRequestError,\n}\n`.trim();\nconst server = `\nconst fileUpload = require('express-fileupload');\nconst cloudinary = require('cloudinary').v2;\nconst connectDB = require('./db/connect');\nconst productRouter = require('./routes/productRoutes');\nconst notFoundMiddleware = require('./middleware/not-found');\nconst errorHandlerMiddleware = require('./middleware/error-handler');\n\n\ncloudinary.config({\n  cloud_name: process.env.CLOUD_NAME,\n  api_key: process.env.CLOUD_API_KEY,\n  api_secret: process.env.CLOUD_API_SECRET,\n});\n\napp.use(express.static('./public'));\napp.use(fileUpload({ useTempFiles: true }));\n\napp.use('/api/v1/products', productRouter);\napp.use(notFoundMiddleware);\napp.use(errorHandlerMiddleware);\n`.trim();\n\nclass FileUpload extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"File Upload\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"middleware/authentication.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: authMiddleware,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"middleware/error-handler.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: errorHandler,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"middleware/not-found.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: noteFound,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"models/product.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: fileModel,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \"controllers/productController.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: fileControllers,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"controllers/uploadsController.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: uploadControllers,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"routes/productRoutes.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: fileRoutes,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, \"errors/bad-request.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: badReq,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"errors/custom-api.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: commonApi,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"errors/not-found.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: NotFoundError,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, \"errors/unauthenticated.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: UnauthenticatedError,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, \"index.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: errorIndex,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, \"server.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: server,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(FileUpload);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/nodeJs/nodeDeep/file_upload.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","fileModel","trim","fileControllers","uploadControllers","fileRoutes","authMiddleware","errorHandler","noteFound","badReq","commonApi","NotFoundError","UnauthenticatedError","errorIndex","server","FileUpload","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst fileModel = `\nconst ProductSchema = new Schems({\n  name: { type: String, required: true },\n  price: { type: Number, required: true },\n  image: { type: String, required: true },\n});\n\nmodule.exports = mongoose.model('Product', ProductSchema);\n`.trim();\n\nconst fileControllers = `\nconst Product = require('../models/Product');\nconst { StatusCodes } = require('http-status-codes');\n\nconst createProduct = async (req, res) => {\n  const product = await Product.create(req.body);\n  res.status(StatusCodes.CREATED).json({ product });\n};\nconst getAllProducts = async (req, res) => {\n  const products = await Product.find({});\n  res.status(StatusCodes.OK).json({ products });\n};\n\nmodule.exports = {\n  createProduct,\n  getAllProducts,\n};`.trim();\n\nconst uploadControllers = `\nconst path = require('path');\nconst { StatusCodes } = require('http-status-codes');\nconst CustomError = require('../errors');\nconst cloudinary = require('cloudinary').v2;\nconst fs = require('fs');\n\nconst uploadProductImageLocal = async (req, res) => {\n  if (!req.files) {\n    throw new CustomError.BadRequestError('No File Uploaded');\n  }\n  const productImage = req.files.image;\n  if (!productImage.mimetype.startsWith('image')) {\n    throw new CustomError.BadRequestError('Please Upload Image');\n  }\n  const maxSize = 1024 * 1024;\n  if (productImage.size > maxSize) {\n    throw new CustomError.BadRequestError('Please upload image smaller 1MB');\n  }\n  const imagePath = path.join(\n    __dirname,\n    '../public/uploads/' + '$'{productImage.name}'\n  );\n  await productImage.mv(imagePath);\n  return res\n    .status(StatusCodes.OK)\n    .json({ image: { src: '/uploads/'$'{productImage.name}' } });\n};\n\nconst uploadProductImage = async (req, res) => {\n  const result = await cloudinary.uploader.upload(\n    req.files.image.tempFilePath,\n    {\n      use_filename: true,\n      folder: 'file-upload',\n    }\n  );\n  fs.unlinkSync(req.files.image.tempFilePath);\n  return res.status(StatusCodes.OK).json({ image: { src: result.secure_url } });\n};\n\nmodule.exports = {\n  uploadProductImage,\n};\n`.trim();\n\nconst fileRoutes = `\nconst { createProduct,  getAllProducts } = require('../controllers/productController');\nconst { uploadProductImage } = require('../controllers/uploadsController');\n\nrouter.route('/').post(createProduct).get(getAllProducts);\nrouter.route('/uploads').post(uploadProductImage);\n\nmodule.exports = router;\n`.trim();\n\nconst authMiddleware = `\nconst User = require('../models/User')\nconst jwt = require('jsonwebtoken')\nconst { UnauthenticatedError } = require('../errors')\n\nconst auth = async (req, res, next) => {\n  // check header\n  const authHeader = req.headers.authorization\n  if (!authHeader || !authHeader.startsWith('Bearer')) {\n    throw new UnauthenticatedError('Authentication invalid')\n  }\n  const token = authHeader.split(' ')[1]\n\n  try {\n    const payload = jwt.verify(token, process.env.JWT_SECRET)\n    // attach the user to the job routes\n    req.user = { userId: payload.userId, name: payload.name }\n    next()\n  } catch (error) {\n    throw new UnauthenticatedError('Authentication invalid')\n  }\n}\n\nmodule.exports = auth\n`.trim();\n\nconst errorHandler = `\nconst { StatusCodes } = require('http-status-codes')\nconst errorHandlerMiddleware = (err, req, res, next) => {\n  let customError = {\n    // set default\n    statusCode: err.statusCode || StatusCodes.INTERNAL_SERVER_ERROR,\n    msg: err.message || 'Something went wrong try again later',\n  }\n\n  if (err.name === 'ValidationError') {\n    customError.msg = Object.values(err.errors)\n      .map((item) => item.message)\n      .join(',')\n    customError.statusCode = 400\n  }\n  if (err.code && err.code === 11000) {\n    customError.msg = 'Duplicate value entered for '$'{Object.keys(\n      err.keyValue\n    )} field, please choose another value'\n    customError.statusCode = 400\n  }\n  if (err.name === 'CastError') {\n    customError.msg = 'No item found with id : '$'{err.value}'\n    customError.statusCode = 404\n  }\n\n  return res.status(customError.statusCode).json({ msg: customError.msg })\n}\n\nmodule.exports = errorHandlerMiddleware;\n`.trim();\n\nconst noteFound = `\nconst notFound = (req, res) => res.status(404).send('Route does not exist')\n\nmodule.exports = notFound;\n`.trim();\n\nconst badReq = `\nconst { StatusCodes } = require('http-status-codes');\nconst CustomAPIError = require('./custom-api');\n\nclass BadRequestError extends CustomAPIError {\n  constructor(message) {\n    super(message);\n    this.statusCode = StatusCodes.BAD_REQUEST;\n  }\n}\n\nmodule.exports = BadRequestError;\n`.trim();\n\nconst commonApi = `\nclass CustomAPIError extends Error {\n  constructor(message) {\n    super(message)\n  }\n}\n\nmodule.exports = CustomAPIError;\n`.trim();\n\nconst NotFoundError = `\nconst { StatusCodes } = require('http-status-codes');\nconst CustomAPIError = require('./custom-api');\n\nclass NotFoundError extends CustomAPIError {\n  constructor(message) {\n    super(message);\n    this.statusCode = StatusCodes.NOT_FOUND;\n  }\n}\n\nmodule.exports = NotFoundError;\n`.trim();\n\nconst UnauthenticatedError = `\nconst { StatusCodes } = require('http-status-codes');\nconst CustomAPIError = require('./custom-api');\n\nclass UnauthenticatedError extends CustomAPIError {\n  constructor(message) {\n    super(message);\n    this.statusCode = StatusCodes.UNAUTHORIZED;\n  }\n}\n\nmodule.exports = UnauthenticatedError;\n`.trim();\n\nconst errorIndex = `\nconst CustomAPIError = require('./custom-api')\nconst UnauthenticatedError = require('./unauthenticated')\nconst NotFoundError = require('./not-found')\nconst BadRequestError = require('./bad-request')\n\nmodule.exports = {\n  CustomAPIError,\n  UnauthenticatedError,\n  NotFoundError,\n  BadRequestError,\n}\n`.trim();\n\nconst server = `\nconst fileUpload = require('express-fileupload');\nconst cloudinary = require('cloudinary').v2;\nconst connectDB = require('./db/connect');\nconst productRouter = require('./routes/productRoutes');\nconst notFoundMiddleware = require('./middleware/not-found');\nconst errorHandlerMiddleware = require('./middleware/error-handler');\n\n\ncloudinary.config({\n  cloud_name: process.env.CLOUD_NAME,\n  api_key: process.env.CLOUD_API_KEY,\n  api_secret: process.env.CLOUD_API_SECRET,\n});\n\napp.use(express.static('./public'));\napp.use(fileUpload({ useTempFiles: true }));\n\napp.use('/api/v1/products', productRouter);\napp.use(notFoundMiddleware);\napp.use(errorHandlerMiddleware);\n`.trim();\n\n\nclass FileUpload extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>File Upload</h3>\n              <b>middleware/authentication.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={authMiddleware}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>middleware/error-handler.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={errorHandler}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>middleware/not-found.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={noteFound}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              \n              <b>models/product.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={fileModel}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>controllers/productController.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={fileControllers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>controllers/uploadsController.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={uploadControllers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>routes/productRoutes.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={fileRoutes}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>errors/bad-request.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={badReq}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>errors/custom-api.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={commonApi}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>errors/not-found.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={NotFoundError}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>errors/unauthenticated.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={UnauthenticatedError}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>index.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={errorIndex}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n\n              <br />\n              <br />\n\n              <b>server.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={server}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(FileUpload));\n"]},"metadata":{},"sourceType":"module"}