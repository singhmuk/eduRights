{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var mulSelects=\"\\nimport { Component } from '@angular/core';\\nimport { HttpClient } from '@angular/common/http';\\n\\n@Component({\\n  selector: 'app-root',\\n  template: '\\n    <li *ngFor=\\\"let item of list\\\">\\n    <input type=\\\"checkbox\\\" [(ngModel)] = \\\"item.checked\\\">\\n      {{item.name}}\\n    </li>\\n  {{this.result | json}}\\n    ',\\n})\\n\\nexport class AppComponent {\\n  list: any[];\\n\\n  constructor(private http: HttpClient){}\\n  ngOnInit() {\\n    this.http.get('https://jsonplaceholder.typicode.com/users')\\n        .subscribe(val => {\\n          this.list = val\\n        })\\n    }\\n\\n  get result() {\\n    return this.list.filter(item => item.checked);\\n  }\\n\\n}\\n\".trim();var multiCheck=\"\\n//in app.module => import { FormsModule, ReactiveFormsModule } from '@angular/forms';\\nimport { Component } from '@angular/core';\\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray} from '@angular/forms';\\n\\n@Component({\\n  selector: 'app-root',\\n  template: '\\n  < form[formGroup]=\\\"form\\\"(ngSubmit) = \\\"submit()\\\" >\\n    <div * ngFor=\\\"let web of websiteList\\\" >\\n      <input type=\\\"checkbox\\\" [value] = \\\"web.id\\\"(change) = \\\"onCheckboxChange($event)\\\" />\\n        {{web.name}}\\n      </div >\\n\\n  <button type=\\\"submit\\\" [disabled] = \\\"!form.valid\\\"> Submit</button>\\n    </form>\\n',})\\n\\nexport class AppComponent {\\n form: FormGroup;\\n  websiteList: any = [\\n    { id: 1, name: 'ItSolutionStuff.com' },\\n    { id: 2, name: 'HDTuto.com' },\\n    { id: 3, name: 'NiceSnippets.com' }\\n  ];\\n\\n  constructor(private formBuilder: FormBuilder) {\\n    this.form = this.formBuilder.group({\\n      website: this.formBuilder.array([], [Validators.required])\\n    })\\n  }\\n\\n  onCheckboxChange(e) {\\n    const website = this.form.get('website') as FormArray;\\n\\n    if (e.target.checked) {\\n      website.push(new FormControl(e.target.value));\\n    } else {\\n       const index = website.controls.findIndex(x => x.value === e.target.value);\\n       website.removeAt(index);\\n    }\\n  }\\n\\n  submit(){\\n    console.log(this.form.value);\\n  }\\n}\\n\".trim();var dropdawn=\"\\nimport { Component } from '@angular/core';\\nimport { HttpClient } from '@angular/common/http';\\n\\n@Component({\\n  selector: 'app-root',\\n  template: '\\n  <select #select (change) = \\\"onChange()\\\">\\n    <option>Select</option>\\n      <option *ngFor=\\\"let item of this.dataList; let i = index\\\"\\n              value = \\\"{{item.name}}\\\" [selected] = \\\"i == 0\\\">\\n        {{item.name}}\\n      </option >\\n    </select >\\n  ',})\\n\\nexport class AppComponent {\\n  dataList: Array<any> = [];\\n  constructor(private http: HttpClient) { }\\n\\n  ngOnInit(){\\n    this.http.get('https://jsonplaceholder.typicode.com/users')\\n        .subscribe(val => {\\n          this.dataList = val\\n        })\\n    }\\n\\n  onChange(){\\n    console.log('sss', this.dataList)\\n  }\\n}\".trim();var dropForm=\"\\nimport { Component } from '@angular/core';\\nimport { FormBuilder, Validators } from \\\"@angular/forms\\\";\\n\\n@Component({\\n  selector: 'app-root',\\n  template: '\\n  <form [formGroup]=\\\"registrationForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <select (change) = \\\"changeCity($event)\\\" formControlName=\\\"cityName\\\">\\n              <option value=\\\"\\\">Choose your city</option>\\n              <option *ngFor=\\\"let city of City\\\" [ngValue]=\\\"city\\\">{{city}}</option>\\n            </select>\\n\\n            < !--error block-- >\\n  <div *ngIf=\\\"isSubmitted && cityName.errors?.required\\\">\\n    Please enter your city name\\n  </div>\\n\\n  <button type=\\\"submit\\\">Submit</button>\\n      </form >',\\n})\\n\\nexport class AppComponent {\\n  isSubmitted = false;\\n  City: any = ['Florida', 'South Dakota', 'Tennessee', 'Michigan']\\n\\n  constructor(public fb: FormBuilder) { }\\n\\n  //Form\\n  registrationForm = this.fb.group({\\n    cityName: ['', [Validators.required]]\\n  })\\n\\n  changeCity(e) {\\n    console.log(e.value)\\n    this.cityName.setValue(e.target.value)\\n  }\\n\\n  get cityName() {\\n    return this.registrationForm.get('cityName');\\n  }\\n\\n  onSubmit() {\\n    this.isSubmitted = true;\\n    if (!this.registrationForm.valid) {\\n      return false;\\n    } else {\\n      alert(JSON.stringify(this.registrationForm.value))\\n    }\\n  }\\n}\".trim();var currTime=\"\\n@Component({\\n  selector: 'app-root',\\n  template: '{{ time }}',\\n})\\n\\nexport class AppComponent {\\n  time='';\\n  ngOnInit(){\\n    setTimeout(()=>{\\n      this.time = new Date().toLocaleTimeString();\\n    },1000)\\n  }\\n}\".trim();var pipes=\"\\n@Component({\\n  selector: 'app-root',\\n  template: '\\n    <div> {{product | json}}</div>\\n    <div>Birthdate: {{(product?.birthdate | date:'longDate') | uppercase}}</div>\\n    <label>Price: </label>{{product.price | currency: 'USD': 'symbol'}}\\n  ',\\n})\\n\\nexport class AppComponent {\\n  product = {\\n    name: 'frimfram',\\n    price: 42,\\n    birthdate:  new Date(1970, 1, 25)\\n  };\\n}\".trim();var currency=\"\\n@Component({\\n  selector: 'app-root',\\n  template: '\\n      <div>{{money | currency: 'JPY': 'symbol'}}</div >\\n      <div>{{money | currency:'USD':'symbol'}}</div>\\n      <div>{{money | currency:'INR':'symbol'}}</div>\\n      <div>{{money | currency:'JPY':'' }}\\u5186</div>\\n    ',\\n})\\n\\nexport class AppComponent {\\n\\tmoney = 1980;\\n}\".trim();var switching=\"\\ninterface name{\\n  name:string;\\n  city:string;\\n  state:string;\\n  country:string;\\n  street:string;\\n}\\n\\nfunction address(obj:name){\\n  switch(obj.name){\\n    case 'Mukesh':\\n      console.log(obj.name)\\n    case 'Gr. Noida':\\n      console.log(obj.city)\\n    case 'UP':\\n      console.log(obj.state)\\n    case 'India':\\n      console.log(obj.country)\\n    case 'Sanjay Vihar':\\n      console.log(obj.street)\\n    break;\\n    default:\\n      console.log('Sorry')\\n  }\\n}\\n\\nconst obj2={name:'Mukesh', city:'Gr. Noida', state:'UP', country:'India',street:'Sanjay Vihar'};\\naddress(obj2)\\n}\".trim();var MultiCheck=/*#__PURE__*/function(_Component){_inherits(MultiCheck,_Component);function MultiCheck(){_classCallCheck(this,MultiCheck);return _possibleConstructorReturn(this,_getPrototypeOf(MultiCheck).apply(this,arguments));}_createClass(MultiCheck,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Multi Select\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:mulSelects,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"h3\",null,\"MultiCheck\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:multiCheck,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"h3\",null,\"Dropdown\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:dropdawn,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"h3\",null,\"Dropdown Form\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:dropForm,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Current Time\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:currTime,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Pipes\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:pipes,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Currency converter\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:currency,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Switch case\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:switching,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return MultiCheck;}(Component);export default withStyles(styles)(MultiCheck);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/angularjsd/angular 12/multiCheck.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","mulSelects","trim","multiCheck","dropdawn","dropForm","currTime","pipes","currency","switching","MultiCheck","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst mulSelects = `\nimport { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  template: '\n    <li *ngFor=\"let item of list\">\n    <input type=\"checkbox\" [(ngModel)] = \"item.checked\">\n      {{item.name}}\n    </li>\n  {{this.result | json}}\n    ',\n})\n\nexport class AppComponent {\n  list: any[];\n\n  constructor(private http: HttpClient){}\n  ngOnInit() {\n    this.http.get('https://jsonplaceholder.typicode.com/users')\n        .subscribe(val => {\n          this.list = val\n        })\n    }\n\n  get result() {\n    return this.list.filter(item => item.checked);\n  }\n\n}\n`.trim();\n\nconst multiCheck = `\n//in app.module => import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray} from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  template: '\n  < form[formGroup]=\"form\"(ngSubmit) = \"submit()\" >\n    <div * ngFor=\"let web of websiteList\" >\n      <input type=\"checkbox\" [value] = \"web.id\"(change) = \"onCheckboxChange($event)\" />\n        {{web.name}}\n      </div >\n\n  <button type=\"submit\" [disabled] = \"!form.valid\"> Submit</button>\n    </form>\n',})\n\nexport class AppComponent {\n form: FormGroup;\n  websiteList: any = [\n    { id: 1, name: 'ItSolutionStuff.com' },\n    { id: 2, name: 'HDTuto.com' },\n    { id: 3, name: 'NiceSnippets.com' }\n  ];\n\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group({\n      website: this.formBuilder.array([], [Validators.required])\n    })\n  }\n\n  onCheckboxChange(e) {\n    const website = this.form.get('website') as FormArray;\n\n    if (e.target.checked) {\n      website.push(new FormControl(e.target.value));\n    } else {\n       const index = website.controls.findIndex(x => x.value === e.target.value);\n       website.removeAt(index);\n    }\n  }\n\n  submit(){\n    console.log(this.form.value);\n  }\n}\n`.trim();\n\nconst dropdawn = `\nimport { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  template: '\n  <select #select (change) = \"onChange()\">\n    <option>Select</option>\n      <option *ngFor=\"let item of this.dataList; let i = index\"\n              value = \"{{item.name}}\" [selected] = \"i == 0\">\n        {{item.name}}\n      </option >\n    </select >\n  ',})\n\nexport class AppComponent {\n  dataList: Array<any> = [];\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(){\n    this.http.get('https://jsonplaceholder.typicode.com/users')\n        .subscribe(val => {\n          this.dataList = val\n        })\n    }\n\n  onChange(){\n    console.log('sss', this.dataList)\n  }\n}`.trim();\n\nconst dropForm = `\nimport { Component } from '@angular/core';\nimport { FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-root',\n  template: '\n  <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\n    <select (change) = \"changeCity($event)\" formControlName=\"cityName\">\n              <option value=\"\">Choose your city</option>\n              <option *ngFor=\"let city of City\" [ngValue]=\"city\">{{city}}</option>\n            </select>\n\n            < !--error block-- >\n  <div *ngIf=\"isSubmitted && cityName.errors?.required\">\n    Please enter your city name\n  </div>\n\n  <button type=\"submit\">Submit</button>\n      </form >',\n})\n\nexport class AppComponent {\n  isSubmitted = false;\n  City: any = ['Florida', 'South Dakota', 'Tennessee', 'Michigan']\n\n  constructor(public fb: FormBuilder) { }\n\n  //Form\n  registrationForm = this.fb.group({\n    cityName: ['', [Validators.required]]\n  })\n\n  changeCity(e) {\n    console.log(e.value)\n    this.cityName.setValue(e.target.value)\n  }\n\n  get cityName() {\n    return this.registrationForm.get('cityName');\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n    if (!this.registrationForm.valid) {\n      return false;\n    } else {\n      alert(JSON.stringify(this.registrationForm.value))\n    }\n  }\n}`.trim();\n\nconst currTime = `\n@Component({\n  selector: 'app-root',\n  template: '{{ time }}',\n})\n\nexport class AppComponent {\n  time='';\n  ngOnInit(){\n    setTimeout(()=>{\n      this.time = new Date().toLocaleTimeString();\n    },1000)\n  }\n}`.trim();\n\n\nconst pipes = `\n@Component({\n  selector: 'app-root',\n  template: '\n    <div> {{product | json}}</div>\n    <div>Birthdate: {{(product?.birthdate | date:'longDate') | uppercase}}</div>\n    <label>Price: </label>{{product.price | currency: 'USD': 'symbol'}}\n  ',\n})\n\nexport class AppComponent {\n  product = {\n    name: 'frimfram',\n    price: 42,\n    birthdate:  new Date(1970, 1, 25)\n  };\n}`.trim();\n\nconst currency = `\n@Component({\n  selector: 'app-root',\n  template: '\n      <div>{{money | currency: 'JPY': 'symbol'}}</div >\n      <div>{{money | currency:'USD':'symbol'}}</div>\n      <div>{{money | currency:'INR':'symbol'}}</div>\n      <div>{{money | currency:'JPY':'' }}円</div>\n    ',\n})\n\nexport class AppComponent {\n\tmoney = 1980;\n}`.trim();\n\nconst switching = `\ninterface name{\n  name:string;\n  city:string;\n  state:string;\n  country:string;\n  street:string;\n}\n\nfunction address(obj:name){\n  switch(obj.name){\n    case 'Mukesh':\n      console.log(obj.name)\n    case 'Gr. Noida':\n      console.log(obj.city)\n    case 'UP':\n      console.log(obj.state)\n    case 'India':\n      console.log(obj.country)\n    case 'Sanjay Vihar':\n      console.log(obj.street)\n    break;\n    default:\n      console.log('Sorry')\n  }\n}\n\nconst obj2={name:'Mukesh', city:'Gr. Noida', state:'UP', country:'India',street:'Sanjay Vihar'};\naddress(obj2)\n}`.trim();\n\n\n\nclass MultiCheck extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Multi Select</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={mulSelects}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <h3>MultiCheck</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={multiCheck}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <h3>Dropdown</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={dropdawn}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <h3>Dropdown Form</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={dropForm}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Current Time</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={currTime}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Pipes</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={pipes}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Currency converter</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={currency}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Switch case</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={switching}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(MultiCheck));\n"]},"metadata":{},"sourceType":"module"}