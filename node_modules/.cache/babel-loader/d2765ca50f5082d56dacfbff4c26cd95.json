{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/javaScripts/deepJs/jsObjects.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst Keywords = `\nfunction Person(first, last, age, interests) {\n  this.name = {\n    'first': first,\n    'last': last\n  };\n  this.age = age;\n  this.interests = interests;\n\n  this.bio = function () {\n    console.log(this.name.first + ' ' + this.name.last + ' is ' + this.age + 'old. likes ' + this.interests[0]);\n  };\n\n  this.greeting = function () {\n    console.log('Hi! Im ' + this.name.first + '.');\n  };\n};\n\n\nconst person1 = new Person('Bob', 'Smith', 32, ['music', 'skiing']);\nconsole.log(person1);\n`.trim();\nconst extract = `\nlet name = 'Anna';\nlet age = 10;\nlet ageField = \"age\";\n\nlet obj = {\n\t\"name\":\"Muk\",\n\t[ageField]: 20,\n\t\"greet me\"(){\n\t\tconsole.log(this.name, \"---\",this.age);\n\t}\n};\n\nconsole.log(obj[\"age\"]);\nconsole.log(obj[ageField]); \n\nobj[\"greet me\"]();`.trim();\nconst parse = `\n   const book = {\n     title: 'Ego is the Enemy',\n     author: 'Ryan Holiday'\n   }\n   \n   const bookJSON = JSON.stringify(book)\n   const bookObject = JSON.parse(bookJSON)\n   console.log(bookObject.title)`.trim();\nconst stringify = `\nJSON.stringify(undefined);                                                                      //undefined \nJSON.stringify(function(){});                                                                   //undefined\nJSON.stringify([1,undefined,function(){},4]);                                                   //[1,null,null,4]\nJSON.stringify({a:2, b:function(){}});                                                          //{\"a\":2}\n`.trim();\nconst callbackFun = `\nconst someSyncListener = (callback, ) => {\n  callback()\n }\n \n try {\n  someSyncListener(throwError)\n }\n catch (error) {\n  console.log(error)\n }\n console .log(\"I'm alive!\")`.trim();\nconst usserDefined = `\n const add = (a, b, callback) => {\n   setTimeout(() => {\n     callback(a + b)\n   }, 2000)\n  }\n  \n  add(1, 4, (sum) => {\n     console.log(sum)\n })\n `.trim();\nconst callbackHell = `\nconst checkAuth = cb => {\n  setTimeout(() => {\n    cb({ isAuth: true })\n  }, 2000)\n}\nconst getUser = (authInfo, cb) => {\n  if (!authInfo.isAuth) {\n    cb(null)\n    return\n  }\n  setTimeout(() => {\n    cb({ name: 'Max' })\n  }, 2000)\n}\ncheckAuth(authInfo => {\n  getUser(authInfo, user => {\n    console.log(user.name)\n  })\n})\n`.trim();\nconst neverCallingCallback = `\nconst p1 = Promise.reject('Rejected');\n\nconst p2 = Promise.resolve('Resolve')\n\nconst p3 = new Promise((resolve, reject) => {\n      setTimeout(resolve,1000, 'Winnig')\n})\n\n\nPromise.race([p2, p1, p3])\n       .then((res) => {\n         console.log('Winnig', res)\n       })\n       .catch((err) => {\n         console.log(err)\n       })\n       \n       \n//2\nfunction timeoutPromise(delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      reject(\"Timeout\");\n    }, delay);\n  });\n}\n\nPromise.race([\n  timeoutPromise(3000)\n])\n  .then(() => {},\n    function (err) {})\n`.trim();\nconst callbackSynchronous = `\nvar X;\nfunction Test(A, B, Callback) {\n   X = (A + B * A * B);\n   Callback(X);\n}\n\nTest(99999,999999,function(Data) {\n   alert(Data);\n});\n\nalert(\"This is not printed first, as it would be in Async.\");\n`.trim();\nconst callbackPromises = `\nconst getUser = cb => {\n  setTimeout(() => {\n    cb({ name: 'Max' })\n  }, 2000)\n}\n\ngetUser(user => {\n  console.log(user.name) \n})`.trim();\nconst chainig = `\nnew Promise((resolve, reject) => {\n  console.log('Initial');\n\n  resolve();\n})\n\n.then(() => {\n  throw new Error('Something failed');\n\n  console.log('Do this');\n})\n.catch(() => {\n  console.error('Do that');\n})\n\n.then(() => {\n  console.log('Do this, no matter what happened before');\n});`.trim();\nconst possible = `\nwindow.addEventListener(\"unhandledrejection\", event => {\n  event.preventDefault();\n}, false);`.trim();\nconst composition = `\n//Promise.all\nconst promise1 = Promise.resolve(3);\nconst promise2 = 42;\nconst promise3 = new Promise((resolve, reject) => {\n  setTimeout(resolve, 100, 'foo');\n});\n\nPromise.all([promise1, promise2, promise3]).then((values) => {\n  console.log(values);\n});\n\n\n\n//Promise.race\nconst promise1 = new Promise((resolve, reject) => {\n  setTimeout(resolve, 500, 'one');\n});\n\nconst promise2 = new Promise((resolve, reject) => {\n  setTimeout(resolve, 100, 'two');\n});\n\nPromise.race([promise1, promise2]).then((value) => {\n  console.log(value);                                                     // Both resolve, but promise2 is faster\n});\n`.trim();\nconst timing = `\nconst wait = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nwait().then(() => console.log(4));\nPromise.resolve().then(() => console.log(2)).then(() => console.log(3));\nconsole.log(1);`.trim();\nconst queues = `\nconst promise = new Promise(function(resolve, reject) {\n  console.log(\"Promise callback\");\n  resolve();\n}).then(function(result) {\n  console.log(\"Promise callback (.then)\");\n});\n\nsetTimeout(function() {\n  console.log(\"event-loop cycle: Promise (fulfilled)\", promise)\n}, 0);\n\nconsole.log(\"Promise (pending)\", promise);\n`.trim();\n\nclass JsObject extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"1. Extract Object Value\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: extract,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"2. Array_like_Objects\"), \"Di\\uFB00erence between Arrays and Array-like Objects is that Array-like objects inherit from Object.prototype instead of Array.prototype. This means that Array-like Objects can't access common Array prototype methods like forEach(), push(), map(), filter(), and slice().\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: coercion,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"4. JSON\"), \"Converting a string to a native object is called deserialization, while converting a native object to a string so it can be transmitted across the network is called serialization.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"JSON is purely a string with a specified data format \\u2014 it contains only properties, no methods.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"JSON requires double quotes to be used around strings and property names. Single quotes are not valid.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"Lightweight data-interchange format\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, \"Based on a subset of javascript\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"Often used with AJAX\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, \"Data Types = Number, String, Boolean, Array, Object, Null\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"Storing Data with JSON\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: parse,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"Json Parse And Json Stringify\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \"JSON.parse(): \"), \"to convert the string into a JavaScript object.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"JSON.stringify(): \"), \"to convert JavaScript object into a string.\")), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: stringify,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"5. Callback Function with try/catch\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: callbackFun,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"Usser Defined\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: usserDefined,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, \"Callback Hell\"), \"When working with a lot of dependent asynchronous operations, you quickly end up in callback hell.\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: callbackHell,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, \"Never Calling Callback\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: neverCallingCallback,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, \"Callback Synchronous\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }), \"synchronously callback usally return values and asynchronous callback don't.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }), \"Simply adding a callback to a function does not make it non-blocking/ asynchronous. Asynchronous capability is actually provided by the environment.\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: callbackSynchronous,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, \"6. Promises\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, \"Callback Promises\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: callbackPromises,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, \"Chaining after a catch\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }), \"It's possible to chain after a failure, i.e. a catch, which is useful to accomplish new actions even after an action failed in the chain.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: chainig,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \"Promise rejection events\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }), \"Whenever a promise is rejected, one of two events is sent to the global scope (window or web worker).\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, \"1. rejectionhandled:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }), \"Sent when a promise is rejected, after that rejection has been handled by the executor's reject function.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, \"2. unhandledrejection:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }), \"Sent when a promise is rejected but there is no rejection handler available.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }), \"In both cases, the event (PromiseRejectionEvent) has as members a promise property indicating the promise that was rejected, and a reason property that provides the reason given for the promise to be rejected.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: possible,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }), \"By calling the event's preventDefault() method, you tell the JavaScript runtime not to do its default action when rejected promises go unhandled.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, \"7. Composition\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, \"Promise.resolve() and Promise.reject() are shortcuts to manually create an already resolved or rejected promise respectively.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, \"Promise.all() and Promise.race() are two composition tools for running asynchronous operations in parallel.\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: composition,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, \"8. Timing\"), \"To avoid surprises, functions passed to then() will never be called synchronously, even with an already-resolved promise.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }), \"Instead of running immediately, the passed-in function is put on a microtask queue, which means it runs later when the queue is emptied at the end of the current run of the JavaScript event loop.\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: timing,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }, \"9. Task queues vs microtasks\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }, \"Promise callbacks are handled as a \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }, \"Microtask\"), \".\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, \"setTimeout() callbacks are handled as \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, \"Task queues\"), \".\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: queues,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(JsObject);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/javaScripts/deepJs/jsObjects.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","Keywords","trim","extract","parse","stringify","callbackFun","usserDefined","callbackHell","neverCallingCallback","callbackSynchronous","callbackPromises","chainig","possible","composition","timing","queues","JsObject","componentDidMount","setTimeout","highlightAll","render","classes","props","coercion"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,EAAkCC,IAAlC,QAA8C,mBAA9C;AAEA,OAAO,0BAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAGA,MAAMC,MAAM,GAAG;AAAEC,EAAAA,eAAe,EAAE,SAAnB;AAA8BC,EAAAA,OAAO,EAAE,KAAvC;AAA8CC,EAAAA,QAAQ,EAAE;AAAxD,CAAf;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH;AAELN,IAAAA,OAAO,EAAEG,KAAK,CAACG,OAAN,CAAc,CAAd;AAFJ,GADgB;AAKvBC,EAAAA,QAAQ,EAAE;AACRF,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADA,GALa;AAQvBE,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF;AARY,CAAL,CAApB;;AAgBA,MAAMC,QAAQ,GAAI;;;;;;;;;;;;;;;;;;;;;CAAD,CAqBfC,IArBe,EAAjB;AAuBA,MAAMC,OAAO,GAAI;;;;;;;;;;;;;;;;mBAAD,CAgBID,IAhBJ,EAAhB;AAuBA,MAAME,KAAK,GAAI;;;;;;;;iCAAD,CAQoBF,IARpB,EAAd;AAYA,MAAMG,SAAS,GAAI;;;;;CAAD,CAKhBH,IALgB,EAAlB;AASA,MAAMI,WAAW,GAAI;;;;;;;;;;;4BAAD,CAWSJ,IAXT,EAApB;AAcA,MAAMK,YAAY,GAAI;;;;;;;;;;EAAD,CAUlBL,IAVkB,EAArB;AAYA,MAAMM,YAAY,GAAI;;;;;;;;;;;;;;;;;;;;CAAD,CAoBnBN,IApBmB,EAArB;AAsBA,MAAMO,oBAAoB,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAD,CAiC3BP,IAjC2B,EAA7B;AAoCA,MAAMQ,mBAAmB,GAAI;;;;;;;;;;;;CAAD,CAY1BR,IAZ0B,EAA5B;AAcA,MAAMS,gBAAgB,GAAI;;;;;;;;;GAAD,CASrBT,IATqB,EAAzB;AAeA,MAAMU,OAAO,GAAI;;;;;;;;;;;;;;;;;;IAAD,CAkBXV,IAlBW,EAAhB;AAoBA,MAAMW,QAAQ,GAAI;;;WAAD,CAGLX,IAHK,EAAjB;AAKA,MAAMY,WAAW,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;CAAD,CA0BlBZ,IA1BkB,EAApB;AA4BA,MAAMa,MAAM,GAAI;;;;;gBAAD,CAKEb,IALF,EAAf;AAOA,MAAMc,MAAM,GAAI;;;;;;;;;;;;;CAAD,CAabd,IAba,EAAf;;AAgBA,MAAMe,QAAN,SAAuBpC,SAAvB,CAAiC;AAC/BqC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,UAAU,CAAC,MAAMrC,KAAK,CAACsC,YAAN,EAAP,EAA6B,CAA7B,CAAV;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,WACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAED,OAAO,CAAC3B,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CADF,CADF,CADF,EAME,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE2B,OAAO,CAAC3B,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAK,MAAA,KAAK,EAAEN,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEc,OADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAXF,oRAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAkBE;AAAK,MAAA,KAAK,EAAEd,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEmC,QADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAlBF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,EA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA3BF,yLA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BF,EA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BF,EAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8GADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gHAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEANF,CAhCF,EAwCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCF,EAyCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzCF,EA2CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCA3CF,EA4CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5CF,EA6CE;AAAK,MAAA,KAAK,EAAEnC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEe,KADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA7CF,EAoDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApDF,EAqDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArDF,EAuDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAvDF,EAwDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAJ,oDADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAJ,gDAFF,CAxDF,EA6DE;AAAK,MAAA,KAAK,EAAEf,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEgB,SADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA7DF,EAoEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApEF,EAsEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAtEF,EAuEE;AAAK,MAAA,KAAK,EAAEhB,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEiB,WADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAvEF,EA8EE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9EF,EA+EE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/EF,EAiFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAjFF,EAkFE;AAAK,MAAA,KAAK,EAAEjB,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEkB,YADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAlFF,EAyFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzFF,EA0FE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1FF,EA4FE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA5FF,wGA8FE;AAAK,MAAA,KAAK,EAAElB,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEmB,YADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA9FF,EAqGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArGF,EAsGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtGF,EAwGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAxGF,EAyGE;AAAK,MAAA,KAAK,EAAEnB,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEoB,oBADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAzGF,EAgHE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhHF,EAiHE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjHF,EAmHE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAnHF,EAoHE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApHF,EAqHE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArHF,kFAuHE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvHF,0JA0HE;AAAK,MAAA,KAAK,EAAEpB,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEqB,mBADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA1HF,EAiIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjIF,EAmIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAnIF,EAoIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BApIF,EAqIE;AAAK,MAAA,KAAK,EAAErB,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEsB,gBADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CArIF,EA4IE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5IF,EA6IE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7IF,EA+IE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCA/IF,EAgJE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhJF,+IAmJE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnJF,EAoJE;AAAK,MAAA,KAAK,EAAEtB,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEuB,OADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CApJF,EA2JE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3JF,EA4JE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5JF,EA8JE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCA9JF,EA+JE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/JF,2GAiKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjKF,EAkKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlKF,EAmKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAnKF,EAoKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApKF,+GAsKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtKF,EAuKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvKF,EAwKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAxKF,EAyKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzKF,kFA2KE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3KF,EA4KE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5KF,uNA+KE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/KF,EAgLE;AAAK,MAAA,KAAK,EAAEvB,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEwB,QADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhLF,EAuLE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvLF,uJA0LE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1LF,EA4LE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA5LF,EA6LE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uIADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qHAFF,CA7LF,EAiME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjMF,EAmME;AAAK,MAAA,KAAK,EAAExB,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEyB,WADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAnMF,EA0ME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1MF,EA4ME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA5MF,+HA8ME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9MF,yMAiNE;AAAK,MAAA,KAAK,EAAEzB,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAE0B,MADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAjNF,EAwNE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxNF,EA0NE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCA1NF,EA2NE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAvC,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA1C,MAFF,CA3NF,EA+NE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/NF,EAgOE;AAAK,MAAA,KAAK,EAAE1B,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAE2B,MADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhOF,CADF,CADF,CANF,CADF;AAqPD;;AA3P8B;;AA8PjC,eAAgB/B,UAAU,CAACQ,MAAD,CAAV,CAAmBwB,QAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\n\n\nconst Keywords = `\nfunction Person(first, last, age, interests) {\n  this.name = {\n    'first': first,\n    'last': last\n  };\n  this.age = age;\n  this.interests = interests;\n\n  this.bio = function () {\n    console.log(this.name.first + ' ' + this.name.last + ' is ' + this.age + 'old. likes ' + this.interests[0]);\n  };\n\n  this.greeting = function () {\n    console.log('Hi! Im ' + this.name.first + '.');\n  };\n};\n\n\nconst person1 = new Person('Bob', 'Smith', 32, ['music', 'skiing']);\nconsole.log(person1);\n`.trim();\n\nconst extract = `\nlet name = 'Anna';\nlet age = 10;\nlet ageField = \"age\";\n\nlet obj = {\n\t\"name\":\"Muk\",\n\t[ageField]: 20,\n\t\"greet me\"(){\n\t\tconsole.log(this.name, \"---\",this.age);\n\t}\n};\n\nconsole.log(obj[\"age\"]);\nconsole.log(obj[ageField]); \n\nobj[\"greet me\"]();`.trim();\n\n\n\n\n\n\nconst parse = `\n   const book = {\n     title: 'Ego is the Enemy',\n     author: 'Ryan Holiday'\n   }\n   \n   const bookJSON = JSON.stringify(book)\n   const bookObject = JSON.parse(bookJSON)\n   console.log(bookObject.title)`.trim();\n\n\n\nconst stringify = `\nJSON.stringify(undefined);                                                                      //undefined \nJSON.stringify(function(){});                                                                   //undefined\nJSON.stringify([1,undefined,function(){},4]);                                                   //[1,null,null,4]\nJSON.stringify({a:2, b:function(){}});                                                          //{\"a\":2}\n`.trim();\n\n\n\nconst callbackFun = `\nconst someSyncListener = (callback, ) => {\n  callback()\n }\n \n try {\n  someSyncListener(throwError)\n }\n catch (error) {\n  console.log(error)\n }\n console .log(\"I'm alive!\")`.trim();\n\n\nconst usserDefined = `\n const add = (a, b, callback) => {\n   setTimeout(() => {\n     callback(a + b)\n   }, 2000)\n  }\n  \n  add(1, 4, (sum) => {\n     console.log(sum)\n })\n `.trim();\n\nconst callbackHell = `\nconst checkAuth = cb => {\n  setTimeout(() => {\n    cb({ isAuth: true })\n  }, 2000)\n}\nconst getUser = (authInfo, cb) => {\n  if (!authInfo.isAuth) {\n    cb(null)\n    return\n  }\n  setTimeout(() => {\n    cb({ name: 'Max' })\n  }, 2000)\n}\ncheckAuth(authInfo => {\n  getUser(authInfo, user => {\n    console.log(user.name)\n  })\n})\n`.trim();\n\nconst neverCallingCallback = `\nconst p1 = Promise.reject('Rejected');\n\nconst p2 = Promise.resolve('Resolve')\n\nconst p3 = new Promise((resolve, reject) => {\n      setTimeout(resolve,1000, 'Winnig')\n})\n\n\nPromise.race([p2, p1, p3])\n       .then((res) => {\n         console.log('Winnig', res)\n       })\n       .catch((err) => {\n         console.log(err)\n       })\n       \n       \n//2\nfunction timeoutPromise(delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      reject(\"Timeout\");\n    }, delay);\n  });\n}\n\nPromise.race([\n  timeoutPromise(3000)\n])\n  .then(() => {},\n    function (err) {})\n`.trim()\n\n\nconst callbackSynchronous = `\nvar X;\nfunction Test(A, B, Callback) {\n   X = (A + B * A * B);\n   Callback(X);\n}\n\nTest(99999,999999,function(Data) {\n   alert(Data);\n});\n\nalert(\"This is not printed first, as it would be in Async.\");\n`.trim();\n\nconst callbackPromises = `\nconst getUser = cb => {\n  setTimeout(() => {\n    cb({ name: 'Max' })\n  }, 2000)\n}\n\ngetUser(user => {\n  console.log(user.name) \n})`.trim();\n\n\n\n\n\nconst chainig = `\nnew Promise((resolve, reject) => {\n  console.log('Initial');\n\n  resolve();\n})\n\n.then(() => {\n  throw new Error('Something failed');\n\n  console.log('Do this');\n})\n.catch(() => {\n  console.error('Do that');\n})\n\n.then(() => {\n  console.log('Do this, no matter what happened before');\n});`.trim();\n\nconst possible = `\nwindow.addEventListener(\"unhandledrejection\", event => {\n  event.preventDefault();\n}, false);`.trim();\n\nconst composition = `\n//Promise.all\nconst promise1 = Promise.resolve(3);\nconst promise2 = 42;\nconst promise3 = new Promise((resolve, reject) => {\n  setTimeout(resolve, 100, 'foo');\n});\n\nPromise.all([promise1, promise2, promise3]).then((values) => {\n  console.log(values);\n});\n\n\n\n//Promise.race\nconst promise1 = new Promise((resolve, reject) => {\n  setTimeout(resolve, 500, 'one');\n});\n\nconst promise2 = new Promise((resolve, reject) => {\n  setTimeout(resolve, 100, 'two');\n});\n\nPromise.race([promise1, promise2]).then((value) => {\n  console.log(value);                                                     // Both resolve, but promise2 is faster\n});\n`.trim();\n\nconst timing = `\nconst wait = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nwait().then(() => console.log(4));\nPromise.resolve().then(() => console.log(2)).then(() => console.log(3));\nconsole.log(1);`.trim();\n\nconst queues = `\nconst promise = new Promise(function(resolve, reject) {\n  console.log(\"Promise callback\");\n  resolve();\n}).then(function(result) {\n  console.log(\"Promise callback (.then)\");\n});\n\nsetTimeout(function() {\n  console.log(\"event-loop cycle: Promise (fulfilled)\", promise)\n}, 0);\n\nconsole.log(\"Promise (pending)\", promise);\n`.trim();\n\n\nclass JsObject extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. Extract Object Value</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={extract}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>2. Array_like_Objects</h3>\n              Diﬀerence between Arrays and Array-like Objects is that Array-like objects inherit from Object.prototype\n              instead of Array.prototype. This means that Array-like Objects can't access common Array\n              prototype methods like forEach(), push(), map(), filter(), and slice().\n              <br />\n\n              \n              <div style={titles}>\n                <PrismCode\n                  code={coercion}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>4. JSON</h3>\n              Converting a string to a native object is called deserialization, while converting a native object to a string\n              so it can be transmitted across the network is called serialization.\n              <br />\n              <br />\n              <ul>\n                <li>JSON is purely a string with a specified data format — it contains only properties, no methods.</li>\n                <li>JSON requires double quotes to be used around strings and property names. Single quotes are not valid.</li>\n                <li>Lightweight data-interchange format</li>\n                <li>Based on a subset of javascript</li>\n                <li>Often used with AJAX</li>\n                <li>Data Types = Number, String, Boolean, Array, Object, Null</li>\n              </ul>\n              <br />\n              <br />\n\n              <b>Storing Data with JSON</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={parse}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>Json Parse And Json Stringify</b>\n              <ul>\n                <li><b>JSON.parse(): </b>to convert the string into a JavaScript object.</li>\n                <li><b>JSON.stringify(): </b>to convert JavaScript object into a string.</li>\n              </ul>\n\n              <div style={titles}>\n                <PrismCode\n                  code={stringify}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>5. Callback Function with try/catch</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={callbackFun}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>Usser Defined</b>\n              <div style={titles}>\n                <PrismCode\n                  code={usserDefined}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>Callback Hell</b>\n              When working with a lot of dependent asynchronous operations, you quickly end up in callback hell.\n              <div style={titles}>\n                <PrismCode\n                  code={callbackHell}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>Never Calling Callback</b>\n              <div style={titles}>\n                <PrismCode\n                  code={neverCallingCallback}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>Callback Synchronous</b>\n              <br />\n              <br />\n              synchronously callback usally return values and asynchronous callback don't.\n              <br />\n              Simply adding a callback to a function does not make it non-blocking/ asynchronous.\n              Asynchronous capability is actually provided by the environment.\n              <div style={titles}>\n                <PrismCode\n                  code={callbackSynchronous}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>6. Promises</h3>\n              <b>Callback Promises</b>\n              <div style={titles}>\n                <PrismCode\n                  code={callbackPromises}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>Chaining after a catch</b>\n              <br />\n              It's possible to chain after a failure, i.e. a catch, which is useful to accomplish new actions even after an\n              action failed in the chain.\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={chainig}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>Promise rejection events</b>\n              <br />\n              Whenever a promise is rejected, one of two events is sent to the global scope (window or web worker).\n              <br />\n              <br />\n              <b>1. rejectionhandled:</b>\n              <br />\n              Sent when a promise is rejected, after that rejection has been handled by the executor's reject function.\n              <br />\n              <br />\n              <b>2. unhandledrejection:</b>\n              <br />\n              Sent when a promise is rejected but there is no rejection handler available.\n              <br />\n              <br />\n              In both cases, the event (PromiseRejectionEvent) has as members a promise property indicating the promise that\n              was rejected, and a reason property that provides the reason given for the promise to be rejected.\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={possible}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              By calling the event's preventDefault() method, you tell the JavaScript runtime not to do its default action when\n              rejected promises go unhandled.\n              <br />\n\n              <h3>7. Composition</h3>\n              <ul>\n                <li>Promise.resolve() and Promise.reject() are shortcuts to manually create an already resolved or rejected promise respectively.</li>\n                <li>Promise.all() and Promise.race() are two composition tools for running asynchronous operations in parallel.</li>\n              </ul>\n              <br />\n\n              <div style={titles}>\n                <PrismCode\n                  code={composition}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>8. Timing</h3>\n              To avoid surprises, functions passed to then() will never be called synchronously, even with an already-resolved promise.\n              <br />\n              Instead of running immediately, the passed-in function is put on a microtask queue, which means it runs later\n              when the queue is emptied at the end of the current run of the JavaScript event loop.\n              <div style={titles}>\n                <PrismCode\n                  code={timing}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>9. Task queues vs microtasks</h3>\n              <ul>\n                <li>Promise callbacks are handled as a <b>Microtask</b>.</li>\n                <li>setTimeout() callbacks are handled as <b>Task queues</b>.</li>\n              </ul>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={queues}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(JsObject));\n"]},"metadata":{},"sourceType":"module"}