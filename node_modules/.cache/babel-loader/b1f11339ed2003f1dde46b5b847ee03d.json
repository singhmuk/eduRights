{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/pythone/deeppy/flask_signUp.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst flasks = `\nTo check python: cmd => python --version\npy -m pip install flask\nflask.__version__\n\npip install vertualenv or py -m venv env\nactivate environment: (project name)env\\Scripts\\activate \npip install flask\ncreated file set to flask: set FLASK_APP=app.py\nflask run\nnot required to run every time: set FLASK_DEBUG=1\n\n\n//2\npip install vertualenv or pip install virtualenvwrapper-win\nvirtualenv env\n.\\env\\Scripts/activate.ps1\npip install flask\npython .\\app.py\n\nSet-ExecutionPolicy unrestricted\n\n\n`.trim();\nconst appy = `from flask import Flask, render_template, flash, redirect, url_for, session, request, logging\n#from data import Articles\nfrom flask_mysqldb import MySQL\nfrom wtforms import Form, StringField, TextAreaField, PasswordField, validators\nfrom passlib.hash import sha256_crypt\nfrom functools import wraps\n\napp = Flask(__name__)\n\n# Config MySQL\napp.config['MYSQL_HOST'] = 'localhost'\napp.config['MYSQL_USER'] = 'root'\napp.config['MYSQL_PASSWORD'] = ''\napp.config['MYSQL_DB'] = 'myflaskapp'\napp.config['MYSQL_CURSORCLASS'] = 'DictCursor'\n# init MYSQL\nmysql = MySQL(app)\n\n#Articles = Articles()\n\n# Index\n@app.route('/')\ndef index():\n    return render_template('home.html')\n\n\n# About\n@app.route('/about')\ndef about():\n    return render_template('about.html')\n\n\n# Articles\n@app.route('/articles')\ndef articles():\n    # Create cursor\n    cur = mysql.connection.cursor()\n\n    # Get articles\n    result = cur.execute(\"SELECT * FROM articles\")\n\n    articles = cur.fetchall()\n\n    if result > 0:\n        return render_template('articles.html', articles=articles)\n    else:\n        msg = 'No Articles Found'\n        return render_template('articles.html', msg=msg)\n    # Close connection\n    cur.close()\n\n\n#Single Article\n@app.route('/article/<string:id>/')\ndef article(id):\n    # Create cursor\n    cur = mysql.connection.cursor()\n\n    # Get article\n    result = cur.execute(\"SELECT * FROM articles WHERE id = %s\", [id])\n\n    article = cur.fetchone()\n\n    return render_template('article.html', article=article)\n\n\n# Register Form Class\nclass RegisterForm(Form):\n    name = StringField('Name', [validators.Length(min=1, max=50)])\n    username = StringField('Username', [validators.Length(min=4, max=25)])\n    email = StringField('Email', [validators.Length(min=6, max=50)])\n    password = PasswordField('Password', [\n        validators.DataRequired(),\n        validators.EqualTo('confirm', message='Passwords do not match')\n    ])\n    confirm = PasswordField('Confirm Password')\n\n\n# User Register\n@app.route('/register', methods=['GET', 'POST'])\ndef register():\n    form = RegisterForm(request.form)\n    if request.method == 'POST' and form.validate():\n        name = form.name.data\n        email = form.email.data\n        username = form.username.data\n        password = sha256_crypt.encrypt(str(form.password.data))\n\n        # Create cursor\n        cur = mysql.connection.cursor()\n\n        # Execute query\n        cur.execute(\"INSERT INTO users(name, email, username, password) VALUES(%s, %s, %s, %s)\", (name, email, \n                                        username, password))\n\n        # Commit to DB\n        mysql.connection.commit()\n\n        # Close connection\n        cur.close()\n\n        flash('You are now registered and can log in', 'success')\n\n        return redirect(url_for('login'))\n    return render_template('register.html', form=form)\n\n\n# User login\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    if request.method == 'POST':\n        # Get Form Fields\n        username = request.form['username']\n        password_candidate = request.form['password']\n\n        # Create cursor\n        cur = mysql.connection.cursor()\n\n        # Get user by username\n        result = cur.execute(\"SELECT * FROM users WHERE username = %s\", [username])\n\n        if result > 0:\n            # Get stored hash\n            data = cur.fetchone()\n            password = data['password']\n\n            # Compare Passwords\n            if sha256_crypt.verify(password_candidate, password):\n                # Passed\n                session['logged_in'] = True\n                session['username'] = username\n\n                flash('You are now logged in', 'success')\n                return redirect(url_for('dashboard'))\n            else:\n                error = 'Invalid login'\n                return render_template('login.html', error=error)\n            # Close connection\n            cur.close()\n        else:\n            error = 'Username not found'\n            return render_template('login.html', error=error)\n\n    return render_template('login.html')\n\n# Check if user logged in\ndef is_logged_in(f):\n    @wraps(f)\n    def wrap(*args, **kwargs):\n        if 'logged_in' in session:\n            return f(*args, **kwargs)\n        else:\n            flash('Unauthorized, Please login', 'danger')\n            return redirect(url_for('login'))\n    return wrap\n\n# Logout\n@app.route('/logout')\n@is_logged_in\ndef logout():\n    session.clear()\n    flash('You are now logged out', 'success')\n    return redirect(url_for('login'))\n\n# Dashboard\n@app.route('/dashboard')\n@is_logged_in\ndef dashboard():\n    # Create cursor\n    cur = mysql.connection.cursor()\n\n    # Get articles\n    #result = cur.execute(\"SELECT * FROM articles\")\n    # Show articles only from the user logged in \n    result = cur.execute(\"SELECT * FROM articles WHERE author = %s\", [session['username']])\n\n    articles = cur.fetchall()\n\n    if result > 0:\n        return render_template('dashboard.html', articles=articles)\n    else:\n        msg = 'No Articles Found'\n        return render_template('dashboard.html', msg=msg)\n    # Close connection\n    cur.close()\n\n# Article Form Class\nclass ArticleForm(Form):\n    title = StringField('Title', [validators.Length(min=1, max=200)])\n    body = TextAreaField('Body', [validators.Length(min=30)])\n\n# Add Article\n@app.route('/add_article', methods=['GET', 'POST'])\n@is_logged_in\ndef add_article():\n    form = ArticleForm(request.form)\n    if request.method == 'POST' and form.validate():\n        title = form.title.data\n        body = form.body.data\n\n        # Create Cursor\n        cur = mysql.connection.cursor()\n\n        # Execute\n        cur.execute(\"INSERT INTO articles(title, body, author) VALUES(%s, %s, %s)\",(title, body, session['username']))\n\n        # Commit to DB\n        mysql.connection.commit()\n\n        #Close connection\n        cur.close()\n\n        flash('Article Created', 'success')\n\n        return redirect(url_for('dashboard'))\n\n    return render_template('add_article.html', form=form)\n\n\n# Edit Article\n@app.route('/edit_article/<string:id>', methods=['GET', 'POST'])\n@is_logged_in\ndef edit_article(id):\n    # Create cursor\n    cur = mysql.connection.cursor()\n\n    # Get article by id\n    result = cur.execute(\"SELECT * FROM articles WHERE id = %s\", [id])\n\n    article = cur.fetchone()\n    cur.close()\n    # Get form\n    form = ArticleForm(request.form)\n\n    # Populate article form fields\n    form.title.data = article['title']\n    form.body.data = article['body']\n\n    if request.method == 'POST' and form.validate():\n        title = request.form['title']\n        body = request.form['body']\n\n        # Create Cursor\n        cur = mysql.connection.cursor()\n        app.logger.info(title)\n        # Execute\n        cur.execute (\"UPDATE articles SET title=%s, body=%s WHERE id=%s\",(title, body, id))\n        # Commit to DB\n        mysql.connection.commit()\n\n        #Close connection\n        cur.close()\n\n        flash('Article Updated', 'success')\n\n        return redirect(url_for('dashboard'))\n\n    return render_template('edit_article.html', form=form)\n\n# Delete Article\n@app.route('/delete_article/<string:id>', methods=['POST'])\n@is_logged_in\ndef delete_article(id):\n    # Create cursor\n    cur = mysql.connection.cursor()\n\n    # Execute\n    cur.execute(\"DELETE FROM articles WHERE id = %s\", [id])\n\n    # Commit to DB\n    mysql.connection.commit()\n\n    #Close connection\n    cur.close()\n\n    flash('Article Deleted', 'success')\n\n    return redirect(url_for('dashboard'))\n\nif __name__ == '__main__':\n    app.secret_key='secret123'\n    app.run(debug=True)\n`.trim();\nconst about = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>About Us</h1>\n  <p>Lorem culpa qui officia deserunt mollit anim id est laborum.</p>\n{% endblock %}\n`.trim();\nconst article = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Add Article</h1>\n  {% from \"includes/_formhelpers.html\" import render_field %}\n  <form method=\"POST\" action=\"\">\n    <div class=\"form-group\">\n      {{ render_field(form.title, class_=\"form-control\") }}\n    </div>\n    <div class=\"form-group\">\n      {{ render_field(form.body, class_=\"form-control\", id=\"editor\") }}\n    </div>\n    <p><input class=\"btn btn-primary\" type=\"submit\" value=\"Submit\">\n  </form>\n{% endblock %}\n`.trim();\nconst articles = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>{{article.title}}</h1>\n  <small>Written by {{article.author}} on {{article.create_date}}</small>\n  <hr>\n  <div>\n    {{article.body | safe}}\n  </div>\n{% endblock %}\n`.trim();\nconst articless = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Articles</h1>\n  <ul class=\"list-group\">\n    {% for article in articles %}\n      <li class=\"list-group-item\"><a href=\"article/{{article.id}}\">{{article.title}}</a></li>\n    {% endfor %}\n  </ul>\n{% endblock %}\n`.trim();\nconst dashboard = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Dashboard <small> Welcome {{session.username}}</small></h1>\n  <a class=\"btn btn-success\" href=\"/add_article\"> Add Article</a>\n  <hr>\n  <table class=\"table table-striped\">\n    <tr>\n      <th>ID</th>\n      <th>Title</th>\n      <th>Author</th>\n      <th>Date</th>\n      <th></th>\n      <th></th>\n    </tr>\n    {% for article in articles %}\n      <tr>\n        <td>{{article.id}}</td>\n        <td>{{article.title}}</td>\n        <td>{{article.author}}</td>\n        <td>{{article.create_date}}</td>\n        <td><a href=\"edit_article/{{article.id}}\" class=\"btn btn-default pull-right\">Edit</a></td>\n        <td>\n          <form action=\"{{url_for('delete_article', id=article.id)}}\" method=\"post\">\n            <input type=\"hidden\" name=\"_method\" value=\"DELETE\">\n            <input type=\"submit\" value=\"Delete\" class=\"btn btn-danger\">\n          </form>\n        </td>\n      </tr>\n    {% endfor %}\n  </table>\n{% endblock %}\n`.trim();\nconst edit = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Edit Article</h1>\n  {% from \"includes/_formhelpers.html\" import render_field %}\n  <form method=\"POST\" action=\"\">\n    <div class=\"form-group\">\n      {{ render_field(form.title, class_=\"form-control\") }}\n    </div>\n    <div class=\"form-group\">\n      {{ render_field(form.body, class_=\"form-control\", id=\"editor\") }}\n    </div>\n    <p><input class=\"btn btn-primary\" type=\"submit\" value=\"Submit\">\n  </form>\n{% endblock %}\n`.trim();\nconst home = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <div class=\"jumbotron text-center\">\n    <h1>Welcome To FlaskApp</h1>\n    <p class=\"lead\">This application YouTube series</p>\n    {% if session.logged_in == NULL %}\n      <a href=\"/register\" class=\"btn btn-primary btn-lg\">Register</a>\n      <a href=\"/login\" class=\"btn btn-success btn-lg\">Login</a>\n    {% endif %}\n  </div>\n{% endblock %}\n`.trim();\nconst layout = `\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>MyFlaskApp</title>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n  </head>\n  <body>\n    {% include 'includes/_navbar.html' %}\n    <div class=\"container\">\n      {% include 'includes/_messages.html' %}\n      {% block body %}{% endblock %}\n    </div>\n\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n    <script src=\"//cdn.ckeditor.com/4.6.2/basic/ckeditor.js\"></script>\n    <script type=\"text/javascript\">\n      CKEDITOR.replace('editor')\n    </script>\n  </body>\n</html>\n`.trim();\nconst login = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Login</h1>\n  <form action=\"\" method=\"POST\">\n    <div class=\"form-group\">\n      <label>Username</label>\n      <input type=\"text\" name=\"username\" class=\"form-control\" value={{request.form.username}}>\n    </div>\n    <div class=\"form-group\">\n      <label>Password</label>\n      <input type=\"password\" name=\"password\" class=\"form-control\" value={{request.form.password}}>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n  </form>\n{% endblock %}\n`.trim();\nconst register = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Register</h1>\n  {% from \"includes/_formhelpers.html\" import render_field %}\n  <form method=\"POST\" action=\"\">\n    <div class=\"form-group\">\n      {{render_field(form.name, class_=\"form-control\")}}\n    </div>\n    <div class=\"form-group\">\n      {{render_field(form.email, class_=\"form-control\")}}\n    </div>\n    <div class=\"form-group\">\n      {{render_field(form.username, class_=\"form-control\")}}\n    </div>\n    <div class=\"form-group\">\n      {{render_field(form.password, class_=\"form-control\")}}\n    </div>\n    <div class=\"form-group\">\n      {{render_field(form.confirm, class_=\"form-control\")}}\n    </div>\n    <p><input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\"></p>\n  </form>\n{% endblock %}\n`.trim();\nconst formhelpers = `\n{% macro render_field(field) %}\n  {{ field.label }}\n  {{ field(**kwargs)|safe }}\n  {% if field.errors %}\n    {% for error in field.errors %}\n      <span class=\"help-inline\">{{ error }}</span>\n    {% endfor %}\n  {% endif %}\n{% endmacro %}\n`.trim();\nconst messages = `\n{% with messages = get_flashed_messages(with_categories=true) %}\n  {% if messages %}\n    {% for category, message in messages %}\n      <div class=\"alert alert-{{ category }}\">{{ message }}</div>\n    {% endfor %}\n  {% endif %}\n{% endwith %}\n\n{% if error %}\n  <div class=\"alert alert-danger\">{{error}}</div>\n{% endif %}\n\n{% if msg %}\n  <div class=\"alert alert-success\">{{msg}}</div>\n{% endif %}\n`.trim();\nconst navbar = `\n<nav class=\"navbar navbar-default\">\n      <div class=\"container\">\n        <div class=\"navbar-header\">\n          <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" \n                        aria-expanded=\"false\" aria-controls=\"navbar\">\n            <span class=\"sr-only\">Toggle navigation</span>\n            <span class=\"icon-bar\"></span>\n            <span class=\"icon-bar\"></span>\n            <span class=\"icon-bar\"></span>\n          </button>\n          <a class=\"navbar-brand\" href=\"#\">MyFlaskApp</a>\n        </div>\n        <div id=\"navbar\" class=\"collapse navbar-collapse\">\n          <ul class=\"nav navbar-nav\">\n            <li><a href=\"/\">Home</a></li>\n            <li><a href=\"/about\">About</a></li>\n            <li><a href=\"/articles\">Articles</a></li>\n          </ul>\n\n          <ul class=\"nav navbar-nav navbar-right\">\n            {% if session.logged_in %}\n              <li><a href=\"/dashboard\">Dashboard</a></li>\n              <li><a href=\"/logout\">Logout</a></li>\n            {% else %}\n              <li><a href=\"/register\">Register</a></li>\n              <li><a href=\"/login\">Login</a></li>\n            {% endif %}\n\n          </ul>\n        </div><!--/.nav-collapse -->\n      </div>\n    </nav>\n`.trim();\n\nclass FlaskSignUp extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608\n      },\n      __self: this\n    }, \"SetUp\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: flasks,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619\n      },\n      __self: this\n    }, \"app.py\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: appy,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630\n      },\n      __self: this\n    }, \"templates/about.html\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: about,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642\n      },\n      __self: this\n    }, \"templates/add_article.html\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: article,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654\n      },\n      __self: this\n    }, \"templates/article.html\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: articles,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665\n      },\n      __self: this\n    }, \"templates/articles.html\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: articless,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676\n      },\n      __self: this\n    }, \"templates/dashboard.html\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: dashboard,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687\n      },\n      __self: this\n    }, \"templates/edit_article.html\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: edit,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698\n      },\n      __self: this\n    }, \"templates/home.html\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: home,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709\n      },\n      __self: this\n    }, \"templates/layout.html\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: layout,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720\n      },\n      __self: this\n    }, \"templates/login.html\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: login,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731\n      },\n      __self: this\n    }, \"templates/register.html\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: register,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742\n      },\n      __self: this\n    }, \"templates/includes/_formhelpers.html\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: formhelpers,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 753\n      },\n      __self: this\n    }, \"templates/includes/_messages.html\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: messages,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764\n      },\n      __self: this\n    }, \"templates/includes/_navbar.html\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: navbar,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(FlaskSignUp);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/pythone/deeppy/flask_signUp.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","flasks","trim","appy","about","article","articles","articless","dashboard","edit","home","layout","login","register","formhelpers","messages","navbar","FlaskSignUp","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst flasks = `\nTo check python: cmd => python --version\npy -m pip install flask\nflask.__version__\n\npip install vertualenv or py -m venv env\nactivate environment: (project name)env\\Scripts\\activate \npip install flask\ncreated file set to flask: set FLASK_APP=app.py\nflask run\nnot required to run every time: set FLASK_DEBUG=1\n\n\n//2\npip install vertualenv or pip install virtualenvwrapper-win\nvirtualenv env\n.\\env\\Scripts/activate.ps1\npip install flask\npython .\\app.py\n\nSet-ExecutionPolicy unrestricted\n\n\n`.trim();\n\nconst appy = `from flask import Flask, render_template, flash, redirect, url_for, session, request, logging\n#from data import Articles\nfrom flask_mysqldb import MySQL\nfrom wtforms import Form, StringField, TextAreaField, PasswordField, validators\nfrom passlib.hash import sha256_crypt\nfrom functools import wraps\n\napp = Flask(__name__)\n\n# Config MySQL\napp.config['MYSQL_HOST'] = 'localhost'\napp.config['MYSQL_USER'] = 'root'\napp.config['MYSQL_PASSWORD'] = ''\napp.config['MYSQL_DB'] = 'myflaskapp'\napp.config['MYSQL_CURSORCLASS'] = 'DictCursor'\n# init MYSQL\nmysql = MySQL(app)\n\n#Articles = Articles()\n\n# Index\n@app.route('/')\ndef index():\n    return render_template('home.html')\n\n\n# About\n@app.route('/about')\ndef about():\n    return render_template('about.html')\n\n\n# Articles\n@app.route('/articles')\ndef articles():\n    # Create cursor\n    cur = mysql.connection.cursor()\n\n    # Get articles\n    result = cur.execute(\"SELECT * FROM articles\")\n\n    articles = cur.fetchall()\n\n    if result > 0:\n        return render_template('articles.html', articles=articles)\n    else:\n        msg = 'No Articles Found'\n        return render_template('articles.html', msg=msg)\n    # Close connection\n    cur.close()\n\n\n#Single Article\n@app.route('/article/<string:id>/')\ndef article(id):\n    # Create cursor\n    cur = mysql.connection.cursor()\n\n    # Get article\n    result = cur.execute(\"SELECT * FROM articles WHERE id = %s\", [id])\n\n    article = cur.fetchone()\n\n    return render_template('article.html', article=article)\n\n\n# Register Form Class\nclass RegisterForm(Form):\n    name = StringField('Name', [validators.Length(min=1, max=50)])\n    username = StringField('Username', [validators.Length(min=4, max=25)])\n    email = StringField('Email', [validators.Length(min=6, max=50)])\n    password = PasswordField('Password', [\n        validators.DataRequired(),\n        validators.EqualTo('confirm', message='Passwords do not match')\n    ])\n    confirm = PasswordField('Confirm Password')\n\n\n# User Register\n@app.route('/register', methods=['GET', 'POST'])\ndef register():\n    form = RegisterForm(request.form)\n    if request.method == 'POST' and form.validate():\n        name = form.name.data\n        email = form.email.data\n        username = form.username.data\n        password = sha256_crypt.encrypt(str(form.password.data))\n\n        # Create cursor\n        cur = mysql.connection.cursor()\n\n        # Execute query\n        cur.execute(\"INSERT INTO users(name, email, username, password) VALUES(%s, %s, %s, %s)\", (name, email, \n                                        username, password))\n\n        # Commit to DB\n        mysql.connection.commit()\n\n        # Close connection\n        cur.close()\n\n        flash('You are now registered and can log in', 'success')\n\n        return redirect(url_for('login'))\n    return render_template('register.html', form=form)\n\n\n# User login\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    if request.method == 'POST':\n        # Get Form Fields\n        username = request.form['username']\n        password_candidate = request.form['password']\n\n        # Create cursor\n        cur = mysql.connection.cursor()\n\n        # Get user by username\n        result = cur.execute(\"SELECT * FROM users WHERE username = %s\", [username])\n\n        if result > 0:\n            # Get stored hash\n            data = cur.fetchone()\n            password = data['password']\n\n            # Compare Passwords\n            if sha256_crypt.verify(password_candidate, password):\n                # Passed\n                session['logged_in'] = True\n                session['username'] = username\n\n                flash('You are now logged in', 'success')\n                return redirect(url_for('dashboard'))\n            else:\n                error = 'Invalid login'\n                return render_template('login.html', error=error)\n            # Close connection\n            cur.close()\n        else:\n            error = 'Username not found'\n            return render_template('login.html', error=error)\n\n    return render_template('login.html')\n\n# Check if user logged in\ndef is_logged_in(f):\n    @wraps(f)\n    def wrap(*args, **kwargs):\n        if 'logged_in' in session:\n            return f(*args, **kwargs)\n        else:\n            flash('Unauthorized, Please login', 'danger')\n            return redirect(url_for('login'))\n    return wrap\n\n# Logout\n@app.route('/logout')\n@is_logged_in\ndef logout():\n    session.clear()\n    flash('You are now logged out', 'success')\n    return redirect(url_for('login'))\n\n# Dashboard\n@app.route('/dashboard')\n@is_logged_in\ndef dashboard():\n    # Create cursor\n    cur = mysql.connection.cursor()\n\n    # Get articles\n    #result = cur.execute(\"SELECT * FROM articles\")\n    # Show articles only from the user logged in \n    result = cur.execute(\"SELECT * FROM articles WHERE author = %s\", [session['username']])\n\n    articles = cur.fetchall()\n\n    if result > 0:\n        return render_template('dashboard.html', articles=articles)\n    else:\n        msg = 'No Articles Found'\n        return render_template('dashboard.html', msg=msg)\n    # Close connection\n    cur.close()\n\n# Article Form Class\nclass ArticleForm(Form):\n    title = StringField('Title', [validators.Length(min=1, max=200)])\n    body = TextAreaField('Body', [validators.Length(min=30)])\n\n# Add Article\n@app.route('/add_article', methods=['GET', 'POST'])\n@is_logged_in\ndef add_article():\n    form = ArticleForm(request.form)\n    if request.method == 'POST' and form.validate():\n        title = form.title.data\n        body = form.body.data\n\n        # Create Cursor\n        cur = mysql.connection.cursor()\n\n        # Execute\n        cur.execute(\"INSERT INTO articles(title, body, author) VALUES(%s, %s, %s)\",(title, body, session['username']))\n\n        # Commit to DB\n        mysql.connection.commit()\n\n        #Close connection\n        cur.close()\n\n        flash('Article Created', 'success')\n\n        return redirect(url_for('dashboard'))\n\n    return render_template('add_article.html', form=form)\n\n\n# Edit Article\n@app.route('/edit_article/<string:id>', methods=['GET', 'POST'])\n@is_logged_in\ndef edit_article(id):\n    # Create cursor\n    cur = mysql.connection.cursor()\n\n    # Get article by id\n    result = cur.execute(\"SELECT * FROM articles WHERE id = %s\", [id])\n\n    article = cur.fetchone()\n    cur.close()\n    # Get form\n    form = ArticleForm(request.form)\n\n    # Populate article form fields\n    form.title.data = article['title']\n    form.body.data = article['body']\n\n    if request.method == 'POST' and form.validate():\n        title = request.form['title']\n        body = request.form['body']\n\n        # Create Cursor\n        cur = mysql.connection.cursor()\n        app.logger.info(title)\n        # Execute\n        cur.execute (\"UPDATE articles SET title=%s, body=%s WHERE id=%s\",(title, body, id))\n        # Commit to DB\n        mysql.connection.commit()\n\n        #Close connection\n        cur.close()\n\n        flash('Article Updated', 'success')\n\n        return redirect(url_for('dashboard'))\n\n    return render_template('edit_article.html', form=form)\n\n# Delete Article\n@app.route('/delete_article/<string:id>', methods=['POST'])\n@is_logged_in\ndef delete_article(id):\n    # Create cursor\n    cur = mysql.connection.cursor()\n\n    # Execute\n    cur.execute(\"DELETE FROM articles WHERE id = %s\", [id])\n\n    # Commit to DB\n    mysql.connection.commit()\n\n    #Close connection\n    cur.close()\n\n    flash('Article Deleted', 'success')\n\n    return redirect(url_for('dashboard'))\n\nif __name__ == '__main__':\n    app.secret_key='secret123'\n    app.run(debug=True)\n`.trim();\n\nconst about = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>About Us</h1>\n  <p>Lorem culpa qui officia deserunt mollit anim id est laborum.</p>\n{% endblock %}\n`.trim();\n\nconst article = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Add Article</h1>\n  {% from \"includes/_formhelpers.html\" import render_field %}\n  <form method=\"POST\" action=\"\">\n    <div class=\"form-group\">\n      {{ render_field(form.title, class_=\"form-control\") }}\n    </div>\n    <div class=\"form-group\">\n      {{ render_field(form.body, class_=\"form-control\", id=\"editor\") }}\n    </div>\n    <p><input class=\"btn btn-primary\" type=\"submit\" value=\"Submit\">\n  </form>\n{% endblock %}\n`.trim();\n\nconst articles = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>{{article.title}}</h1>\n  <small>Written by {{article.author}} on {{article.create_date}}</small>\n  <hr>\n  <div>\n    {{article.body | safe}}\n  </div>\n{% endblock %}\n`.trim();\n\nconst articless = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Articles</h1>\n  <ul class=\"list-group\">\n    {% for article in articles %}\n      <li class=\"list-group-item\"><a href=\"article/{{article.id}}\">{{article.title}}</a></li>\n    {% endfor %}\n  </ul>\n{% endblock %}\n`.trim();\n\nconst dashboard = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Dashboard <small> Welcome {{session.username}}</small></h1>\n  <a class=\"btn btn-success\" href=\"/add_article\"> Add Article</a>\n  <hr>\n  <table class=\"table table-striped\">\n    <tr>\n      <th>ID</th>\n      <th>Title</th>\n      <th>Author</th>\n      <th>Date</th>\n      <th></th>\n      <th></th>\n    </tr>\n    {% for article in articles %}\n      <tr>\n        <td>{{article.id}}</td>\n        <td>{{article.title}}</td>\n        <td>{{article.author}}</td>\n        <td>{{article.create_date}}</td>\n        <td><a href=\"edit_article/{{article.id}}\" class=\"btn btn-default pull-right\">Edit</a></td>\n        <td>\n          <form action=\"{{url_for('delete_article', id=article.id)}}\" method=\"post\">\n            <input type=\"hidden\" name=\"_method\" value=\"DELETE\">\n            <input type=\"submit\" value=\"Delete\" class=\"btn btn-danger\">\n          </form>\n        </td>\n      </tr>\n    {% endfor %}\n  </table>\n{% endblock %}\n`.trim();\n\nconst edit = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Edit Article</h1>\n  {% from \"includes/_formhelpers.html\" import render_field %}\n  <form method=\"POST\" action=\"\">\n    <div class=\"form-group\">\n      {{ render_field(form.title, class_=\"form-control\") }}\n    </div>\n    <div class=\"form-group\">\n      {{ render_field(form.body, class_=\"form-control\", id=\"editor\") }}\n    </div>\n    <p><input class=\"btn btn-primary\" type=\"submit\" value=\"Submit\">\n  </form>\n{% endblock %}\n`.trim();\n\nconst home = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <div class=\"jumbotron text-center\">\n    <h1>Welcome To FlaskApp</h1>\n    <p class=\"lead\">This application YouTube series</p>\n    {% if session.logged_in == NULL %}\n      <a href=\"/register\" class=\"btn btn-primary btn-lg\">Register</a>\n      <a href=\"/login\" class=\"btn btn-success btn-lg\">Login</a>\n    {% endif %}\n  </div>\n{% endblock %}\n`.trim();\n\nconst layout = `\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>MyFlaskApp</title>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n  </head>\n  <body>\n    {% include 'includes/_navbar.html' %}\n    <div class=\"container\">\n      {% include 'includes/_messages.html' %}\n      {% block body %}{% endblock %}\n    </div>\n\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n    <script src=\"//cdn.ckeditor.com/4.6.2/basic/ckeditor.js\"></script>\n    <script type=\"text/javascript\">\n      CKEDITOR.replace('editor')\n    </script>\n  </body>\n</html>\n`.trim();\n\nconst login = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Login</h1>\n  <form action=\"\" method=\"POST\">\n    <div class=\"form-group\">\n      <label>Username</label>\n      <input type=\"text\" name=\"username\" class=\"form-control\" value={{request.form.username}}>\n    </div>\n    <div class=\"form-group\">\n      <label>Password</label>\n      <input type=\"password\" name=\"password\" class=\"form-control\" value={{request.form.password}}>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n  </form>\n{% endblock %}\n`.trim();\n\nconst register = `\n{% extends 'layout.html' %}\n\n{% block body %}\n  <h1>Register</h1>\n  {% from \"includes/_formhelpers.html\" import render_field %}\n  <form method=\"POST\" action=\"\">\n    <div class=\"form-group\">\n      {{render_field(form.name, class_=\"form-control\")}}\n    </div>\n    <div class=\"form-group\">\n      {{render_field(form.email, class_=\"form-control\")}}\n    </div>\n    <div class=\"form-group\">\n      {{render_field(form.username, class_=\"form-control\")}}\n    </div>\n    <div class=\"form-group\">\n      {{render_field(form.password, class_=\"form-control\")}}\n    </div>\n    <div class=\"form-group\">\n      {{render_field(form.confirm, class_=\"form-control\")}}\n    </div>\n    <p><input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\"></p>\n  </form>\n{% endblock %}\n`.trim();\n\nconst formhelpers = `\n{% macro render_field(field) %}\n  {{ field.label }}\n  {{ field(**kwargs)|safe }}\n  {% if field.errors %}\n    {% for error in field.errors %}\n      <span class=\"help-inline\">{{ error }}</span>\n    {% endfor %}\n  {% endif %}\n{% endmacro %}\n`.trim();\n\nconst messages = `\n{% with messages = get_flashed_messages(with_categories=true) %}\n  {% if messages %}\n    {% for category, message in messages %}\n      <div class=\"alert alert-{{ category }}\">{{ message }}</div>\n    {% endfor %}\n  {% endif %}\n{% endwith %}\n\n{% if error %}\n  <div class=\"alert alert-danger\">{{error}}</div>\n{% endif %}\n\n{% if msg %}\n  <div class=\"alert alert-success\">{{msg}}</div>\n{% endif %}\n`.trim();\n\nconst navbar = `\n<nav class=\"navbar navbar-default\">\n      <div class=\"container\">\n        <div class=\"navbar-header\">\n          <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" \n                        aria-expanded=\"false\" aria-controls=\"navbar\">\n            <span class=\"sr-only\">Toggle navigation</span>\n            <span class=\"icon-bar\"></span>\n            <span class=\"icon-bar\"></span>\n            <span class=\"icon-bar\"></span>\n          </button>\n          <a class=\"navbar-brand\" href=\"#\">MyFlaskApp</a>\n        </div>\n        <div id=\"navbar\" class=\"collapse navbar-collapse\">\n          <ul class=\"nav navbar-nav\">\n            <li><a href=\"/\">Home</a></li>\n            <li><a href=\"/about\">About</a></li>\n            <li><a href=\"/articles\">Articles</a></li>\n          </ul>\n\n          <ul class=\"nav navbar-nav navbar-right\">\n            {% if session.logged_in %}\n              <li><a href=\"/dashboard\">Dashboard</a></li>\n              <li><a href=\"/logout\">Logout</a></li>\n            {% else %}\n              <li><a href=\"/register\">Register</a></li>\n              <li><a href=\"/login\">Login</a></li>\n            {% endif %}\n\n          </ul>\n        </div><!--/.nav-collapse -->\n      </div>\n    </nav>\n`.trim();\n\n\nclass FlaskSignUp extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>SetUp</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={flasks}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>app.py</b>\n              <div style={titles}>\n                <PrismCode\n                  code={appy}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/about.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={about}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n\n              <b>templates/add_article.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={article}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n\n              <b>templates/article.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={articles}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/articles.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={articless}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/dashboard.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={dashboard}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/edit_article.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={edit}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/home.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={home}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/layout.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={layout}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/login.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={login}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/register.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={register}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/includes/_formhelpers.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={formhelpers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/includes/_messages.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={messages}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>templates/includes/_navbar.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={navbar}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(FlaskSignUp));\n"]},"metadata":{},"sourceType":"module"}