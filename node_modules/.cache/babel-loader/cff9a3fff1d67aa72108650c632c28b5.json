{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var Search=\"class SearchApi extends Component {\\n  state = {\\n    items: []\\n  }\\n\\nsearch=(key)=>{\\n  let url=\\\"http://localhost:5000/items?q=\\\";\\n  axios.get(url + key)\\n       .then(res => {\\n         const items = res.data;\\n         this.setState({ items })\\n       })\\n}\\ncomponentDidMount(){\\n  this.search()\\n}\\n\\nrender(){\\n  return(\\n    <div>\\n      <input type = \\\"text\\\" onChange = {(e) => this.search(e.target.value)} />\\n      {this.state.items ? \\n      <div>\\n        {this.state.items.map((data, id) => (\\n          <li key={id}>{data._id} - {data.name}</li>\\n        ))}\\n      </div>  \\n      : ''\\n        }\\n    </div>\\n    )\\n  }\\n}\".trim();var HeaderAuth=\"\\nclass ApiAuthentication extends Component {\\n  state = {\\n    items: []\\n  }\\n\\nsearch=(key)=>{\\n  let url=\\\"http://localhost:5000/items?q=\\\";\\n  const auth = \\\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2I0NGI1ZjNiZTY2YTQ1MTdmM\\n                jk2ODciLCJyb2xlSWQiOiI1YjA2NjMzNTVmYTMwZDY4Y2VkNmRkODgiLCJlbWFpbCI6InZpa2FzaEB5b3BtYWls\\\"\\n\\n  axios.get(url, {\\n    \\\"headers\\\": { \\\"Authorization\\\":\\\"bearer \\\"+ auth ,\\n      \\\"Access-Control-Allow-Headers\\\": \\\"*\\\",\\n      \\\"content-type\\\": \\\"application/json\\\",\\n      \\\"Accept\\\": \\\"*\\\"\\n      }\\n    })\\n       .then(res => {\\n         const items = res.data;\\n         this.setState({ items })\\n       })\\n       .catch(error => {\\n        throw(error);\\n      });\\n}\\ncomponentDidMount(){\\n  this.search()\\n}\\n\\nrender(){\\n  return(\\n    <div>\\n      <input type = \\\"text\\\" onChange = {(e) => this.search(e.target.value)} />\\n      {this.state.items ? \\n      <div>\\n        {this.state.items.map((data, id) => (\\n          <li key={id}>{data._id} - {data.name}</li>\\n        ))}\\n      </div>  \\n      : ''\\n        }\\n    </div>\\n    )\\n  }\\n}\".trim();var SortApi=\"\\nconst Row = ({id, title, priority, type, complete}) => (\\n  <div className=\\\"row\\\">\\n    <div>{id}</div>\\n    <div>{title}</div>\\n    <div>{priority}</div>\\n    <div>{type}</div>    \\n    <div>{complete}</div>    \\n  </div>\\n);\\n\\n\\n\\nclass SortCompo extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      items: []\\n    };\\n    \\n    this.compareBy.bind(this);\\n    this.sortBy.bind(this);\\n  }\\n  \\n  search=(key)=>{\\n    let url=\\\"http://localhost:5000/items\\\";\\n    axios.get(url)\\n         .then(res => {\\n           const items = res.data;\\n           this.setState({ items })\\n         })\\n  }\\n  componentDidMount(){\\n    this.search()\\n  }\\n  \\n  compareBy(key) {\\n    return function (a, b) {\\n      if (a[key] < b[key]) return -1;\\n      if (a[key] > b[key]) return 1;\\n      return 0;\\n    };\\n  }\\n \\n  sortBy(key) {\\n    let arrayCopy = [...this.state.items];\\n    arrayCopy.sort(this.compareBy(key));\\n    this.setState({data: arrayCopy});\\n  }\\n    \\n  render() {\\n    const rows =  this.state.items.map((data, id) => (\\n      <li key={id}>{data._id} - {data.name}</li>\\n    ))\\n\\n    return (\\n      <div className=\\\"table\\\">\\n        <div className=\\\"header\\\">\\n          <div onClick={() => this.sortBy('id')} >ID</div>\\n          <div onClick={() => this.sortBy('title')}>Title</div>\\n          <div onClick={() => this.sortBy('priority')}>Priority</div>\\n          <div onClick={() => this.sortBy('type')}>Issue Type</div>\\n          <div onClick={() => this.sortBy('complete')}>% Complete</div>\\n        </div>\\n        <div className=\\\"body\\\">\\n          {rows}\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\".trim();var SortStatic=\"const Row = ({id, title, priority, type, complete}) => (\\n  <div className=\\\"row\\\">\\n    <div>{id}</div>\\n    <div>{title}</div>\\n    <div>{priority}</div>\\n    <div>{type}</div>    \\n    <div>{complete}</div>    \\n  </div>\\n);\\n\\n\\nclass SortDemo extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      data: [\\n        {id: 403, title: 'Task 403', priority: 'High', type: 'Improvement', complete: 100}, \\n        {id: 532, title: 'Task 532', priority: 'Medium', type: 'Improvement', complete: 30}, \\n        {id: 240, title: 'Task 240', priority: 'High', type: 'Story', complete: 66},\\n      ],\\n    };\\n    \\n    this.compareBy.bind(this);\\n    this.sortBy.bind(this);\\n  }\\n  \\n  compareBy(key) {\\n    return function (a, b) {\\n      if (a[key] < b[key]) return -1;\\n      if (a[key] > b[key]) return 1;\\n      return 0;\\n    };\\n  }\\n \\n  sortBy(key) {\\n    let arrayCopy = [...this.state.data];\\n    arrayCopy.sort(this.compareBy(key));\\n    this.setState({data: arrayCopy});\\n  }\\n    \\n  render() {\\n    const rows = this.state.data.map( (rowData) => <Row {...rowData} />);\\n\\n    return (\\n      <div className=\\\"table\\\">\\n        <div className=\\\"header\\\">\\n          <div onClick={() => this.sortBy('id')} >ID</div>\\n          <div onClick={() => this.sortBy('title')}>Title</div>\\n          <div onClick={() => this.sortBy('priority')}>Priority</div>\\n          <div onClick={() => this.sortBy('type')}>Issue Type</div>\\n          <div onClick={() => this.sortBy('complete')}>% Complete</div>\\n        </div>\\n        <div className=\\\"body\\\">\\n          {rows}\\n        </div>\\n      </div>\\n    );\\n  }\\n}\".trim();var Post=\"const Posts = ({ posts, loading }) => {\\n  if (loading) {\\n    return <h2>Loading...</h2>;\\n  }\\n\\n  return (\\n    <ul className='list-group mb-4'>\\n      {posts.map(post => (\\n        <li key={post._id} className='list-group-item'>\\n          {post._id} - {post.name}\\n        </li>\\n      ))}\\n    </ul>\\n  );\\n};\".trim();var Paginations=\"const Pagination = ({ postsPerPage, totalPosts, paginate }) => {\\n  const pageNumbers = [];\\n\\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\\n    pageNumbers.push(i);\\n  }\\n\\n  return (\\n    <nav>\\n      <ul className='pagination'>\\n        {pageNumbers.map(number => (\\n          <li key={number} className='page-item'>\\n            <a onClick={() => paginate(number)} href='!#' className='page-link'>\\n              {number}\\n            </a>\\n          </li>\\n        ))}\\n      </ul>\\n    </nav>\\n  );\\n};\\n\\nexport default Pagination;\".trim();var MainComp=\"\\nconst MainComp = () => {\\n  const [posts, setPosts] = useState([]);\\n  const [loading, setLoading] = useState(false);\\n  const [currentPage, setCurrentPage] = useState(1);\\n  const [postsPerPage] = useState(10);\\n\\n  useEffect(() => {\\n    const fetchPosts = async () => {\\n      setLoading(true);\\n      const res = await axios.get('http://localhost:5000/items');\\n      setPosts(res.data);\\n      setLoading(false);\\n    };\\n\\n    fetchPosts();\\n  }, []);\\n\\n  // Get current posts\\n  const indexOfLastPost = currentPage * postsPerPage;\\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\\n\\n  // Change page\\n  const paginate = pageNumber => setCurrentPage(pageNumber);\\n\\n  return (\\n    <div className='container mt-5'>\\n      <h1 className='text-primary mb-3'>My Blog</h1>\\n      <Posts posts={currentPosts} loading={loading} />\\n      <Pagination\\n        postsPerPage={postsPerPage}\\n        totalPosts={posts.length}\\n        paginate={paginate}\\n      />\\n    </div>\\n  );\\n};\\n\".trim();var Pagination=/*#__PURE__*/function(_Component){_inherits(Pagination,_Component);function Pagination(){_classCallCheck(this,Pagination);return _possibleConstructorReturn(this,_getPrototypeOf(Pagination).apply(this,arguments));}_createClass(Pagination,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"b\",null,\"Search API\"),React.createElement(\"br\",null),\"Search.js\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:Search,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Token Authorization\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:HeaderAuth,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Sort Api\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:SortApi,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Sort Static\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:SortStatic,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Pagination\"),React.createElement(\"br\",null),\"post.js\",React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:Post,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),\"Pagination.js\",React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:Paginations,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),\"MainComp.js\",React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:MainComp,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return Pagination;}(Component);export default withStyles(styles)(Pagination);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/mern/projects/pagination.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","Search","trim","HeaderAuth","SortApi","SortStatic","Post","Paginations","MainComp","Pagination","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst Search = `class SearchApi extends Component {\n  state = {\n    items: []\n  }\n\nsearch=(key)=>{\n  let url=\"http://localhost:5000/items?q=\";\n  axios.get(url + key)\n       .then(res => {\n         const items = res.data;\n         this.setState({ items })\n       })\n}\ncomponentDidMount(){\n  this.search()\n}\n\nrender(){\n  return(\n    <div>\n      <input type = \"text\" onChange = {(e) => this.search(e.target.value)} />\n      {this.state.items ? \n      <div>\n        {this.state.items.map((data, id) => (\n          <li key={id}>{data._id} - {data.name}</li>\n        ))}\n      </div>  \n      : ''\n        }\n    </div>\n    )\n  }\n}`.trim()\n\nconst HeaderAuth = `\nclass ApiAuthentication extends Component {\n  state = {\n    items: []\n  }\n\nsearch=(key)=>{\n  let url=\"http://localhost:5000/items?q=\";\n  const auth = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2I0NGI1ZjNiZTY2YTQ1MTdmM\n                jk2ODciLCJyb2xlSWQiOiI1YjA2NjMzNTVmYTMwZDY4Y2VkNmRkODgiLCJlbWFpbCI6InZpa2FzaEB5b3BtYWls\"\n\n  axios.get(url, {\n    \"headers\": { \"Authorization\":\"bearer \"+ auth ,\n      \"Access-Control-Allow-Headers\": \"*\",\n      \"content-type\": \"application/json\",\n      \"Accept\": \"*\"\n      }\n    })\n       .then(res => {\n         const items = res.data;\n         this.setState({ items })\n       })\n       .catch(error => {\n        throw(error);\n      });\n}\ncomponentDidMount(){\n  this.search()\n}\n\nrender(){\n  return(\n    <div>\n      <input type = \"text\" onChange = {(e) => this.search(e.target.value)} />\n      {this.state.items ? \n      <div>\n        {this.state.items.map((data, id) => (\n          <li key={id}>{data._id} - {data.name}</li>\n        ))}\n      </div>  \n      : ''\n        }\n    </div>\n    )\n  }\n}`.trim()\n\nconst SortApi = `\nconst Row = ({id, title, priority, type, complete}) => (\n  <div className=\"row\">\n    <div>{id}</div>\n    <div>{title}</div>\n    <div>{priority}</div>\n    <div>{type}</div>    \n    <div>{complete}</div>    \n  </div>\n);\n\n\n\nclass SortCompo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n    \n    this.compareBy.bind(this);\n    this.sortBy.bind(this);\n  }\n  \n  search=(key)=>{\n    let url=\"http://localhost:5000/items\";\n    axios.get(url)\n         .then(res => {\n           const items = res.data;\n           this.setState({ items })\n         })\n  }\n  componentDidMount(){\n    this.search()\n  }\n  \n  compareBy(key) {\n    return function (a, b) {\n      if (a[key] < b[key]) return -1;\n      if (a[key] > b[key]) return 1;\n      return 0;\n    };\n  }\n \n  sortBy(key) {\n    let arrayCopy = [...this.state.items];\n    arrayCopy.sort(this.compareBy(key));\n    this.setState({data: arrayCopy});\n  }\n    \n  render() {\n    const rows =  this.state.items.map((data, id) => (\n      <li key={id}>{data._id} - {data.name}</li>\n    ))\n\n    return (\n      <div className=\"table\">\n        <div className=\"header\">\n          <div onClick={() => this.sortBy('id')} >ID</div>\n          <div onClick={() => this.sortBy('title')}>Title</div>\n          <div onClick={() => this.sortBy('priority')}>Priority</div>\n          <div onClick={() => this.sortBy('type')}>Issue Type</div>\n          <div onClick={() => this.sortBy('complete')}>% Complete</div>\n        </div>\n        <div className=\"body\">\n          {rows}\n        </div>\n      </div>\n    );\n  }\n}\n`.trim()\n\nconst SortStatic = `const Row = ({id, title, priority, type, complete}) => (\n  <div className=\"row\">\n    <div>{id}</div>\n    <div>{title}</div>\n    <div>{priority}</div>\n    <div>{type}</div>    \n    <div>{complete}</div>    \n  </div>\n);\n\n\nclass SortDemo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [\n        {id: 403, title: 'Task 403', priority: 'High', type: 'Improvement', complete: 100}, \n        {id: 532, title: 'Task 532', priority: 'Medium', type: 'Improvement', complete: 30}, \n        {id: 240, title: 'Task 240', priority: 'High', type: 'Story', complete: 66},\n      ],\n    };\n    \n    this.compareBy.bind(this);\n    this.sortBy.bind(this);\n  }\n  \n  compareBy(key) {\n    return function (a, b) {\n      if (a[key] < b[key]) return -1;\n      if (a[key] > b[key]) return 1;\n      return 0;\n    };\n  }\n \n  sortBy(key) {\n    let arrayCopy = [...this.state.data];\n    arrayCopy.sort(this.compareBy(key));\n    this.setState({data: arrayCopy});\n  }\n    \n  render() {\n    const rows = this.state.data.map( (rowData) => <Row {...rowData} />);\n\n    return (\n      <div className=\"table\">\n        <div className=\"header\">\n          <div onClick={() => this.sortBy('id')} >ID</div>\n          <div onClick={() => this.sortBy('title')}>Title</div>\n          <div onClick={() => this.sortBy('priority')}>Priority</div>\n          <div onClick={() => this.sortBy('type')}>Issue Type</div>\n          <div onClick={() => this.sortBy('complete')}>% Complete</div>\n        </div>\n        <div className=\"body\">\n          {rows}\n        </div>\n      </div>\n    );\n  }\n}`.trim()\n\nconst Post = `const Posts = ({ posts, loading }) => {\n  if (loading) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <ul className='list-group mb-4'>\n      {posts.map(post => (\n        <li key={post._id} className='list-group-item'>\n          {post._id} - {post.name}\n        </li>\n      ))}\n    </ul>\n  );\n};`.trim()\n\nconst Paginations = `const Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className='pagination'>\n        {pageNumbers.map(number => (\n          <li key={number} className='page-item'>\n            <a onClick={() => paginate(number)} href='!#' className='page-link'>\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;`.trim()\n\nconst MainComp = `\nconst MainComp = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get('http://localhost:5000/items');\n      setPosts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []);\n\n  // Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return (\n    <div className='container mt-5'>\n      <h1 className='text-primary mb-3'>My Blog</h1>\n      <Posts posts={currentPosts} loading={loading} />\n      <Pagination\n        postsPerPage={postsPerPage}\n        totalPosts={posts.length}\n        paginate={paginate}\n      />\n    </div>\n  );\n};\n`.trim()\n\n\nclass Pagination extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <b>Search API</b>\n              <br />\n              Search.js\n              <div style={titles}>\n                <PrismCode\n                  code={Search}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>Token Authorization</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={HeaderAuth}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>Sort Api</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={SortApi}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>Sort Static</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={SortStatic}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>Pagination</b>\n              <br />\n              post.js<br />\n              <div style={titles}>\n                <PrismCode\n                  code={Post}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              Pagination.js<br />\n              <div style={titles}>\n                <PrismCode\n                  code={Paginations}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              MainComp.js<br />\n              <div style={titles}>\n                <PrismCode\n                  code={MainComp}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Pagination));\n"]},"metadata":{},"sourceType":"module"}