{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var SearchSchema=\"\\nconst SearchSchema = new Schema({\\n  name: { type: String, required: true },\\n  date: { type: Date, default: Date.now }\\n});\\n\\nmodule.exports = Item = mongoose.model('item', SearchSchema);\".trim();var routesSearch=\"\\nconst Item = require('../models/search');\\n\\nrouter.get('/search', (req, res) => {\\n  Item.find()\\n    .sort({ date: -1 })\\n    .then(items => res.json(items));\\n});\\n\\nrouter.get(\\\"/search/:name\\\", (req, res) => {\\n  var regex = new RegExp(req.params.name, 'i');\\n  Item.find({ name: regex }).then((result) => {\\n    res.status(200).json(result)\\n  })\\n})\".trim();var inventory=\"\\nconst cursor = db.collection('inventory').find({});\\nSELECT * FROM inventory\\n\\nconst cursor = db.collection('inventory').find({ status: 'D' });\\nSELECT * FROM inventory WHERE status = \\\"D\\\"\\n\\nwhere status equals either \\\"A\\\" or \\\"D\\\":\\nconst cursor = db.collection('inventory').find({\\n  status: { $in: ['A', 'D'] }\\n});\\n\\nSELECT * FROM inventory WHERE status in (\\\"A\\\", \\\"D\\\")\\n\".trim();var specify=\"\\nconst cursor = db.collection('inventory').find({\\n  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]\\n});\\n\\nSELECT * FROM inventory WHERE status = \\\"A\\\" OR qty < 30\\n\\n\\n//And\\nconst cursor = db.collection('inventory').find({\\n  status: 'A',\\n  qty: { $lt: 30 }\\n});\\n\\nSELECT * FROM inventory WHERE status = \\\"A\\\" AND qty < 30\\n\\n\\n//Specify AND as well as OR Conditions\\nconst cursor = db.collection('inventory').find({\\n  status: 'D',\\n  $or: [{ qty: { $lt: 30 } }, { title: 'Niketh' }]\\n});\\n  \\nSELECT * FROM inventory WHERE status = \\\"A\\\" AND ( qty < 30 OR item LIKE \\\"p%\\\")\\n\".trim();var embedded=\"\\nconst cursor = db.collection('inventory').find({\\n  size: { h: 14, w: 21, uom: 'cm' }\\n});\\n\\n\\nconst cursor = db.collection('inventory').find({\\n  'size.h': { $lt: 15 }\\n});\\n\".trim();var indexing=\"\\ndb.products.createIndex(\\n  { item: 1, quantity: -1 } ,\\n  { name: \\\"query for inventory\\\" }\\n)\\n\".trim();var SearchErrorHandling=/*#__PURE__*/function(_Component){_inherits(SearchErrorHandling,_Component);function SearchErrorHandling(){_classCallCheck(this,SearchErrorHandling);return _possibleConstructorReturn(this,_getPrototypeOf(SearchErrorHandling).apply(this,arguments));}_createClass(SearchErrorHandling,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Search error Handling\"),React.createElement(\"b\",null,\"model/search.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:SearchSchema,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"routes/search.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:routesSearch,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Relate mySql with mongoDB\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:inventory,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Specify OR Conditions\"),React.createElement(\"br\",null),\"Using the $or operator, you can specify a compound query that joins each clause with a logical OR conjunction so that the query selects the documents in the collection that match at least one condition.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:specify,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"Match an Embedded/Nested Document\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:embedded,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"indexing\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:indexing,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return SearchErrorHandling;}(Component);export default withStyles(styles)(SearchErrorHandling);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/mongoDB/deepMongodb/searchErrorHandling.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","SearchSchema","trim","routesSearch","inventory","specify","embedded","indexing","SearchErrorHandling","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAGA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADgB,CAKvBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALa,CAQvBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARY,CAAL,EAApB,CAcA,GAAMC,CAAAA,YAAY,CAAG,kMAM0CC,IAN1C,EAArB,CAQA,GAAMC,CAAAA,YAAY,CAAG,yWAcjBD,IAdiB,EAArB,CAgBA,GAAME,CAAAA,SAAS,CAAG,mYAahBF,IAbgB,EAAlB,CAeA,GAAMG,CAAAA,OAAO,CAAG,wkBAwBdH,IAxBc,EAAhB,CA0BA,GAAMI,CAAAA,QAAQ,CAAG,qLASfJ,IATe,EAAjB,CAWA,GAAMK,CAAAA,QAAQ,CAAG,sGAKfL,IALe,EAAjB,C,GAQMM,CAAAA,mB,uVACgB,CAClBC,UAAU,CAAC,iBAAM3B,CAAAA,KAAK,CAAC4B,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAAChB,KAA1B,EACE,8BAAI,oBAAC,OAAD,MAAJ,CADF,CADF,CADF,CAME,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEgB,OAAO,CAAChB,KAA1B,EACE,oBAAC,IAAD,MACE,sDADF,CAEE,+CAFF,CAGE,2BAAK,KAAK,CAAEN,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEY,YADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAHF,CAUE,8BAVF,CAWE,8BAXF,CAaE,gDAbF,CAcE,2BAAK,KAAK,CAAEZ,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEc,YADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAdF,CAqBE,8BArBF,CAsBE,8BAtBF,CAwBE,yDAxBF,CAyBE,2BAAK,KAAK,CAAEd,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEe,SADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAzBF,CAgCE,8BAhCF,CAiCE,8BAjCF,CAmCE,qDAnCF,CAmC8B,8BAnC9B,8MAsCE,2BAAK,KAAK,CAAEf,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEgB,OADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAtCF,CA6CE,8BA7CF,CA8CE,8BA9CF,CAgDE,iEAhDF,CAiDE,2BAAK,KAAK,CAAEhB,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEiB,QADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAjDF,CAwDE,8BAxDF,CAyDE,8BAzDF,CA2DE,wCA3DF,CA4DE,2BAAK,KAAK,CAAEjB,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEkB,QADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CA5DF,CADF,CADF,CANF,CADF,CAiFD,C,iCAvF+B1B,S,EA0FlC,cAAgBI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBe,mBAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst SearchSchema = `\nconst SearchSchema = new Schema({\n  name: { type: String, required: true },\n  date: { type: Date, default: Date.now }\n});\n\nmodule.exports = Item = mongoose.model('item', SearchSchema);`.trim();\n\nconst routesSearch = `\nconst Item = require('../models/search');\n\nrouter.get('/search', (req, res) => {\n  Item.find()\n    .sort({ date: -1 })\n    .then(items => res.json(items));\n});\n\nrouter.get(\"/search/:name\", (req, res) => {\n  var regex = new RegExp(req.params.name, 'i');\n  Item.find({ name: regex }).then((result) => {\n    res.status(200).json(result)\n  })\n})`.trim();\n\nconst inventory = `\nconst cursor = db.collection('inventory').find({});\nSELECT * FROM inventory\n\nconst cursor = db.collection('inventory').find({ status: 'D' });\nSELECT * FROM inventory WHERE status = \"D\"\n\nwhere status equals either \"A\" or \"D\":\nconst cursor = db.collection('inventory').find({\n  status: { $in: ['A', 'D'] }\n});\n\nSELECT * FROM inventory WHERE status in (\"A\", \"D\")\n`.trim();\n\nconst specify = `\nconst cursor = db.collection('inventory').find({\n  $or: [{ status: 'A' }, { qty: { $lt: 30 } }]\n});\n\nSELECT * FROM inventory WHERE status = \"A\" OR qty < 30\n\n\n//And\nconst cursor = db.collection('inventory').find({\n  status: 'A',\n  qty: { $lt: 30 }\n});\n\nSELECT * FROM inventory WHERE status = \"A\" AND qty < 30\n\n\n//Specify AND as well as OR Conditions\nconst cursor = db.collection('inventory').find({\n  status: 'D',\n  $or: [{ qty: { $lt: 30 } }, { title: 'Niketh' }]\n});\n  \nSELECT * FROM inventory WHERE status = \"A\" AND ( qty < 30 OR item LIKE \"p%\")\n`.trim();\n\nconst embedded = `\nconst cursor = db.collection('inventory').find({\n  size: { h: 14, w: 21, uom: 'cm' }\n});\n\n\nconst cursor = db.collection('inventory').find({\n  'size.h': { $lt: 15 }\n});\n`.trim();\n\nconst indexing = `\ndb.products.createIndex(\n  { item: 1, quantity: -1 } ,\n  { name: \"query for inventory\" }\n)\n`.trim();\n\n\nclass SearchErrorHandling extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Search error Handling</h3>\n              <b>model/search.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={SearchSchema}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>routes/search.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={routesSearch}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>Relate mySql with mongoDB</b>\n              <div style={titles}>\n                <PrismCode\n                  code={inventory}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>Specify OR Conditions</b><br/>\n              Using the $or operator, you can specify a compound query that joins each clause with a logical OR conjunction so \n              that the query selects the documents in the collection that match at least one condition.\n              <div style={titles}>\n                <PrismCode\n                  code={specify}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>Match an Embedded/Nested Document</b>\n              <div style={titles}>\n                <PrismCode\n                  code={embedded}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>indexing</b>\n              <div style={titles}>\n                <PrismCode\n                  code={indexing}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(SearchErrorHandling));\n"]},"metadata":{},"sourceType":"module"}