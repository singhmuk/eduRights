{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/mongoDB/deepMongodb/mysqlCurd.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst envs = `\nhost = \"localhost\",\nuser = \"root\",\npassword = \"root\",\ndatabase = \"persons\"\nPORT = 5000`.trim();\nconst config = `\nconst mysql = require('mysql');\n\nconst dbConn = mysql.createConnection({\n    host:'localhost',\n    user:'root',\n    password:'root',\n    database:'persons'\n});\n\ndbConn.connect((err)=>{\n    if(err) throw err;\n    console.log('Database connected')\n});\n\nmodule.exports = dbConn;`.trim();\nconst models = `\nvar dbConn = require('../config/db');\n\nvar Order = function (obj) {\n    this.user=obj.user;\n    this.paymentMethod=obj.paymentMethod;\n    this.paymentResult=obj.paymentResult;\n    this.taxPrice=obj.taxPrice;\n    this.shippingPrice=obj.shippingPrice;\n    this.totalPrice=obj.totalPrice;\n    this.isPaid=obj.isPaid;\n    this.isDelivered=obj.isDelivered;\n    this.deliveredAt=obj.deliveredAt;\n};\n\nOrder.create = (newOrd, result) => {\n    dbConn.query(\"INSERT INTO ecommerce set ?\", newOrd, (err, res) => {\n        if (err) \n            result(err, null);\n        result(null, res.insertId);\n    });\n};\n\nOrder.allOrder = (result) => {\n    dbConn.query(\"Select * from ecommerce\", (err, res) => {\n        if (err) \n            result(null, err);\n        result(null, res);\n    });\n};\n\nOrder.orderById = (id,result) => {\n    dbConn.query(\"select * from ecommerce where id = ?\", id, (err,res)=>{\n        if(err)\n            result(null, err);\n        result(null, res);\n    })\n}\n\nOrder.delete = (id, result) => {\n    dbConn.query(\"delete from ecommerce where id = ?\", [id], (err, res)=>{\n        if(err)\n            result(null,err);\n        result(null, res);\n    })\n}\n\nOrder.updateOne = (id, ord, result) => {\n    dbConn.query(\"update ecommerce set user=?, paymentMethod=?, paymentResult=?, taxPrice=?, shippingPrice=?, \n    totalPrice=?, isPaid=?, isDelivered=?, deliveredAt=?, created_at=?, updated_at=? where id = ?\",\n    [ord.user, ord.paymentMethod, ord.paymentResult,ord.taxPrice, ord.shippingPrice, ord.totalPrice, \n      ord.isPaid, ord.isDelivered, ord.deliveredAt, ord.created_at, ord.updated_at, id], (err, res)=>{\n        if(err)\n            result(null,err);\n        result(null,res);\n    })\n}\n\nmodule.exports = Order;`.trim();\nconst controllers = `\nconst Order = require('../models/items');\n\n\nrouter.allOrder = (req, res) => {\n    Order.allOrder((err, results) =>{\n        if (err)\n            res.send(err);\n        res.send(results);\n    });\n};\n\nrouter.create = (req, res) => {\n    const nrw_order = new Order(req.body);\n    Order.create(nrw_order, (err, results) => {\n        if (err)\n            res.send(err);\n        res.json({ error: false, message: \"Order added successfully!\", data: results });\n    });\n};\n\nrouter.orderById = (req, res) => {\n    Order.orderById(req.params.id, (err, results) => {\n        if (err)\n            res.send(err);\n        res.json(results);\n    });\n};\n\nrouter.deletes = (req,res) => {\n    Order.delete(req.params.id, (err, result) => {\n        if(err)\n            res.send(err);\n        res.json({success:true, msg:\"Order is deleted\"})\n    })\n}\n\nrouter.updateOrder = (req,res) => {\n    const orderUpdate = new Order(req.body);\n    Order.updateOne(req.params.id, orderUpdate, (err,order)=>{\n        if(err)\n            res.send(err);\n        res.json({success:true, msg:\"Order updated successfully\"});\n    })\n}`.trim();\nconst routes = `\nnst orderController = require('../controllers/items');\n\nrouter.get('/', orderController.allOrder);\nrouter.post('/', orderController.create);\nrouter.get('/:id', orderController.orderById);\nrouter.delete('/:id', orderController.deletes)\nrouter.put('/:id',orderController.updateOrder);\n\nmodule.exports = router;\n`.trim();\nconst server = `\nrequire('dotenv').config();\nconst express = require('express');\nconst app = express();\nconst cors = require(\"cors\");\nconst session = require(\"express-session\");\n\nconst unionRoutes = require('./routes/items');\n\napp.use(express.urlencoded({ extended: true }))\napp.use(express.json());\n\napp.use(cors({\n      origin: [\"http://localhost:3000\"],\n      methods: [\"GET\", \"POST\"],\n      credentials: true,\n    }));\n\napp.use(session({\n    key: \"userId\",\n    secret: \"subscribe\",\n    resave: false,\n    saveUninitialized: false,\n    cookie: {\n      expires: 60 * 60 * 24,\n    },\n  })\n);\n\napp.use('/items', unionRoutes);\n\nconst port = process.env.PORT;\napp.listen(port,()=> console.log('Server is running on port '$'{port}''));`.trim();\nconst chanaModel = `\nvar Order = function (obj) {\n  this.name=obj.name;\n  this.carMake=obj.carMake;\n  this.model=obj.model;\n};\n\nOrder.create = (newOrd, result) => {\ndbConn.query(\"INSERT INTO selectData set ?\", newOrd, (err, res) => {\n    if (err) \n        result(err, null);\n    result(null, res.insertId);\n});\n};\n\nOrder.allOrder = (result) => {\ndbConn.query(\"Select * from selectData\", (err, res) => {\n    if (err) \n        result(null, err);\n    result(null, res);\n});\n};`.trim();\nconst chanaControllers = `\nconst Car = require('../models/union');\n\nrouter.allOrder = (req, res) => {\n  Car.allOrder((err, results) =>{\n      if (err)\n          res.send(err);\n      res.send(results);\n  });\n};\n\nrouter.create = (req, res) => {\n  const new_order = new Car(req.body);\n  Car.create(new_order, (err, results) => {\n      if (err)\n          res.send(err);\n      res.json({ error: false, message: \"Car added successfully!\", data: results });\n  });\n};`.trim();\nconst chanaRoutes = `\nconst orderController = require('../controllers/union');\n\nrouter.get('/', orderController.allOrder);\nrouter.post('/', orderController.create);`.trim();\nconst chanaServer = `\nconst unionRoutes = require('./routes/union');\n\napp.use(express.urlencoded({ extended: true }))\napp.use(express.json());\napp.use(cors());\n\napp.use('/union', unionRoutes);\n\nconst port = process.env.PORT || 5000;\napp.listen(port,()=>console.log('Server is running on port'));`.trim();\n\nclass MysqlCurd extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"MySqlCurd\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \".env\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: envs,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"config/db.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: config,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"models/items.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: models,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \"controllers/items.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: controllers,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"routes/items.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: routes,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, \"server.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: server,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"chainable-dropdown\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, \"models/union.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: chanaModel,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, \"controllers/union.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: chanaControllers,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \"routes/union.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: chanaRoutes,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"server.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: chanaServer,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(MysqlCurd);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/mongoDB/deepMongodb/mysqlCurd.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","envs","trim","config","models","controllers","routes","server","chanaModel","chanaControllers","chanaRoutes","chanaServer","MysqlCurd","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst envs = `\nhost = \"localhost\",\nuser = \"root\",\npassword = \"root\",\ndatabase = \"persons\"\nPORT = 5000`.trim();\n\nconst config = `\nconst mysql = require('mysql');\n\nconst dbConn = mysql.createConnection({\n    host:'localhost',\n    user:'root',\n    password:'root',\n    database:'persons'\n});\n\ndbConn.connect((err)=>{\n    if(err) throw err;\n    console.log('Database connected')\n});\n\nmodule.exports = dbConn;`.trim();\n\nconst models = `\nvar dbConn = require('../config/db');\n\nvar Order = function (obj) {\n    this.user=obj.user;\n    this.paymentMethod=obj.paymentMethod;\n    this.paymentResult=obj.paymentResult;\n    this.taxPrice=obj.taxPrice;\n    this.shippingPrice=obj.shippingPrice;\n    this.totalPrice=obj.totalPrice;\n    this.isPaid=obj.isPaid;\n    this.isDelivered=obj.isDelivered;\n    this.deliveredAt=obj.deliveredAt;\n};\n\nOrder.create = (newOrd, result) => {\n    dbConn.query(\"INSERT INTO ecommerce set ?\", newOrd, (err, res) => {\n        if (err) \n            result(err, null);\n        result(null, res.insertId);\n    });\n};\n\nOrder.allOrder = (result) => {\n    dbConn.query(\"Select * from ecommerce\", (err, res) => {\n        if (err) \n            result(null, err);\n        result(null, res);\n    });\n};\n\nOrder.orderById = (id,result) => {\n    dbConn.query(\"select * from ecommerce where id = ?\", id, (err,res)=>{\n        if(err)\n            result(null, err);\n        result(null, res);\n    })\n}\n\nOrder.delete = (id, result) => {\n    dbConn.query(\"delete from ecommerce where id = ?\", [id], (err, res)=>{\n        if(err)\n            result(null,err);\n        result(null, res);\n    })\n}\n\nOrder.updateOne = (id, ord, result) => {\n    dbConn.query(\"update ecommerce set user=?, paymentMethod=?, paymentResult=?, taxPrice=?, shippingPrice=?, \n    totalPrice=?, isPaid=?, isDelivered=?, deliveredAt=?, created_at=?, updated_at=? where id = ?\",\n    [ord.user, ord.paymentMethod, ord.paymentResult,ord.taxPrice, ord.shippingPrice, ord.totalPrice, \n      ord.isPaid, ord.isDelivered, ord.deliveredAt, ord.created_at, ord.updated_at, id], (err, res)=>{\n        if(err)\n            result(null,err);\n        result(null,res);\n    })\n}\n\nmodule.exports = Order;`.trim();\n\nconst controllers = `\nconst Order = require('../models/items');\n\n\nrouter.allOrder = (req, res) => {\n    Order.allOrder((err, results) =>{\n        if (err)\n            res.send(err);\n        res.send(results);\n    });\n};\n\nrouter.create = (req, res) => {\n    const nrw_order = new Order(req.body);\n    Order.create(nrw_order, (err, results) => {\n        if (err)\n            res.send(err);\n        res.json({ error: false, message: \"Order added successfully!\", data: results });\n    });\n};\n\nrouter.orderById = (req, res) => {\n    Order.orderById(req.params.id, (err, results) => {\n        if (err)\n            res.send(err);\n        res.json(results);\n    });\n};\n\nrouter.deletes = (req,res) => {\n    Order.delete(req.params.id, (err, result) => {\n        if(err)\n            res.send(err);\n        res.json({success:true, msg:\"Order is deleted\"})\n    })\n}\n\nrouter.updateOrder = (req,res) => {\n    const orderUpdate = new Order(req.body);\n    Order.updateOne(req.params.id, orderUpdate, (err,order)=>{\n        if(err)\n            res.send(err);\n        res.json({success:true, msg:\"Order updated successfully\"});\n    })\n}`.trim();\n\nconst routes = `\nnst orderController = require('../controllers/items');\n\nrouter.get('/', orderController.allOrder);\nrouter.post('/', orderController.create);\nrouter.get('/:id', orderController.orderById);\nrouter.delete('/:id', orderController.deletes)\nrouter.put('/:id',orderController.updateOrder);\n\nmodule.exports = router;\n`.trim();\n\nconst server = `\nrequire('dotenv').config();\nconst express = require('express');\nconst app = express();\nconst cors = require(\"cors\");\nconst session = require(\"express-session\");\n\nconst unionRoutes = require('./routes/items');\n\napp.use(express.urlencoded({ extended: true }))\napp.use(express.json());\n\napp.use(cors({\n      origin: [\"http://localhost:3000\"],\n      methods: [\"GET\", \"POST\"],\n      credentials: true,\n    }));\n\napp.use(session({\n    key: \"userId\",\n    secret: \"subscribe\",\n    resave: false,\n    saveUninitialized: false,\n    cookie: {\n      expires: 60 * 60 * 24,\n    },\n  })\n);\n\napp.use('/items', unionRoutes);\n\nconst port = process.env.PORT;\napp.listen(port,()=> console.log('Server is running on port '$'{port}''));`.trim();\n\nconst chanaModel = `\nvar Order = function (obj) {\n  this.name=obj.name;\n  this.carMake=obj.carMake;\n  this.model=obj.model;\n};\n\nOrder.create = (newOrd, result) => {\ndbConn.query(\"INSERT INTO selectData set ?\", newOrd, (err, res) => {\n    if (err) \n        result(err, null);\n    result(null, res.insertId);\n});\n};\n\nOrder.allOrder = (result) => {\ndbConn.query(\"Select * from selectData\", (err, res) => {\n    if (err) \n        result(null, err);\n    result(null, res);\n});\n};`.trim();\n\nconst chanaControllers = `\nconst Car = require('../models/union');\n\nrouter.allOrder = (req, res) => {\n  Car.allOrder((err, results) =>{\n      if (err)\n          res.send(err);\n      res.send(results);\n  });\n};\n\nrouter.create = (req, res) => {\n  const new_order = new Car(req.body);\n  Car.create(new_order, (err, results) => {\n      if (err)\n          res.send(err);\n      res.json({ error: false, message: \"Car added successfully!\", data: results });\n  });\n};`.trim();\n\nconst chanaRoutes = `\nconst orderController = require('../controllers/union');\n\nrouter.get('/', orderController.allOrder);\nrouter.post('/', orderController.create);`.trim();\n\nconst chanaServer = `\nconst unionRoutes = require('./routes/union');\n\napp.use(express.urlencoded({ extended: true }))\napp.use(express.json());\napp.use(cors());\n\napp.use('/union', unionRoutes);\n\nconst port = process.env.PORT || 5000;\napp.listen(port,()=>console.log('Server is running on port'));`.trim();\n\n\n\nclass MysqlCurd extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>MySqlCurd</h3>\n              <b>.env</b>\n              <div style={titles}>\n                <PrismCode\n                  code={envs}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>config/db.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={config}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>models/items.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={models}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>controllers/items.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={controllers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>routes/items.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={routes}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>server.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={server}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br/>\n              <br/>\n\n              <h3>chainable-dropdown</h3>\n              <b>models/union.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={chanaModel}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>controllers/union.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={chanaControllers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>routes/union.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={chanaRoutes}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>server.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={chanaServer}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(MysqlCurd));\n"]},"metadata":{},"sourceType":"module"}