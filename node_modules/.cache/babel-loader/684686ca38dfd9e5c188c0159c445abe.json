{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import PrismCode from\"../prismCode\";import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import\"../styles.css\";import Sidebar from\"../sidebar\";var titles={backgroundColor:\"#F0F8FF\",padding:\"1px\",fontSize:\"16px\"};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var contTimmer=\"\\nfunction App() {\\n  const [timer, setTimer] = useState(60);\\n  const [intervalId, setIntervalId] = useState(null);\\n\\n  const startTimer = () => {\\n    if (intervalId) return;\\n    const id = setInterval(() => {\\n      setTimer((t) => t - 1);\\n    }, 1000);\\n    setIntervalId(id);\\n  };\\n\\n  const pauseTimer = () => {\\n    if (!intervalId) return;\\n    clearInterval(intervalId);\\n    setIntervalId(null);\\n  };\\n\\n  useEffect(() => {\\n    if (timer === 0) {\\n      pauseTimer();\\n    }\\n  }, [timer]);\\n\\n  return (\\n    <div>\\n      <h1>{timer}</h1>\\n      <button onClick={startTimer}>{intervalId ? \\\"Pause\\\" : \\\"Start\\\"}</button>\\n      <button onClick={pauseTimer} disabled={!intervalId}>\\n        Pause\\n      </button>\\n    </div>\\n  );\\n}\\n\".trim();var fizzBuzz=\"\\nconst App = () => {\\n  const [counter, setCounter] = useState(1);\\n\\n  function handleCounter() {\\n    setCounter(counter + 1);\\n  }\\n\\n  return (\\n    <div>\\n      <h1>\\n        {counter % 3 === 0 ? \\\"Fizz\\\" : \\\"\\\"}\\n        {counter % 5 === 0 ? \\\"Buzz\\\" : \\\"\\\"}\\n        {counter % 3 !== 0 && counter % 5 !== 0 ? counter : \\\"\\\"}\\n      </h1>\\n      <button onClick={handleCounter}>Next</button>\\n    </div>\\n  );\\n};\\n\".trim();var ratings=\"\\nconst Star = ({ starId, marked }) => {\\n  return (\\n    <span\\n      star-id={starId}\\n      style={{ color: \\\"green\\\", cursor: \\\"pointer\\\" }}\\n    >\\n      {marked ? \\\"\\u2605\\\" : \\\"\\u2606\\\"}  // \\\"/u2605\\\" : \\\"/u2606\\\"\\n    </span>\\n  );\\n};\\n\\nconst App = () => {\\n  const [selection, setSelection] = React.useState(0);\\n\\n  const [rating, setRating] = React.useState(0);\\n\\n  const hoverOver = event => {\\n    let starId = 0;\\n    if (event && event.target && event.target.getAttribute(\\\"star-id\\\")) {\\n      starId = event.target.getAttribute(\\\"star-id\\\");\\n    }\\n    setSelection(starId);\\n  };\\n\\n  return (\\n    <div\\n      onMouseOver={hoverOver}\\n      onMouseOut={() => hoverOver(null)}\\n      onClick={event => setRating(event.target.getAttribute(\\\"star-id\\\"))}\\n    >\\n      {Array.from({ length: 5 }, (v, i) => (\\n        <Star starId={i + 1} marked={selection ? selection > i : rating > i} />\\n      ))}\\n    </div>\\n  );\\n};\".trim();var SortItems=/*#__PURE__*/function(_Component){_inherits(SortItems,_Component);function SortItems(){_classCallCheck(this,SortItems);return _possibleConstructorReturn(this,_getPrototypeOf(SortItems).apply(this,arguments));}_createClass(SortItems,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"b\",null,\"2. A click to start the countdown timer and a second one to Pause the timer in the same button\"),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:contTimmer,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"4. FizzBuzz :\"),\" If counter = 3, then print 'Fizz', counter = 5, 'Buzz' else print counter values.\",React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:fizzBuzz,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"b\",null,\"7. Start Rating\"),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:ratings,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return SortItems;}(Component);export default withStyles(styles)(SortItems);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/sortItems.js"],"names":["React","Component","PrismCode","Prism","Grid","Paper","withStyles","List","Sidebar","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","contTimmer","trim","fizzBuzz","ratings","SortItems","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,eAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CAEA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,QAAY,CACzBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADkB,CAKzBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALe,CAQzBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARc,CAAZ,EAAf,CAaA,GAAMC,CAAAA,UAAU,CAAG,mvBAmCjBC,IAnCiB,EAAnB,CAqCA,GAAMC,CAAAA,QAAQ,CAAG,yaAmBfD,IAnBe,EAAjB,CAqBA,GAAME,CAAAA,OAAO,CAAG,i7BAoCZF,IApCY,EAAhB,C,GAsCMG,CAAAA,S,qSACgB,CAClBC,UAAU,CAAC,iBAAMvB,CAAAA,KAAK,CAACwB,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACb,KAA1B,EACE,8BACE,oBAAC,OAAD,MADF,CADF,CADF,CADF,CAQE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEa,OAAO,CAACb,KAA1B,EACE,oBAAC,IAAD,MACE,8HADF,CAKE,8BALF,CAME,8BANF,CAOE,2BAAK,KAAK,CAAEN,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEY,UADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAPF,CAcE,8BAdF,CAeE,8BAfF,CAgBE,6CAhBF,sFAkBE,8BAlBF,CAmBE,8BAnBF,CAoBE,2BAAK,KAAK,CAAEZ,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEc,QADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CApBF,CA2BE,8BA3BF,CA4BE,+CA5BF,CA6BE,8BA7BF,CA8BE,8BA9BF,CA+BE,2BAAK,KAAK,CAAEd,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEe,OADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CA/BF,CADF,CADF,CARF,CADF,CAsDD,C,uBA5DqBvB,S,EA+DxB,cAAeK,CAAAA,UAAU,CAACO,MAAD,CAAV,CAAmBY,SAAnB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PrismCode from \"../prismCode\";\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport \"../styles.css\";\nimport Sidebar from \"../sidebar\";\n\nconst titles = { backgroundColor: \"#F0F8FF\", padding: \"1px\", fontSize: \"16px\" };\n\nconst styles = (theme) => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n});\n\nconst contTimmer = `\nfunction App() {\n  const [timer, setTimer] = useState(60);\n  const [intervalId, setIntervalId] = useState(null);\n\n  const startTimer = () => {\n    if (intervalId) return;\n    const id = setInterval(() => {\n      setTimer((t) => t - 1);\n    }, 1000);\n    setIntervalId(id);\n  };\n\n  const pauseTimer = () => {\n    if (!intervalId) return;\n    clearInterval(intervalId);\n    setIntervalId(null);\n  };\n\n  useEffect(() => {\n    if (timer === 0) {\n      pauseTimer();\n    }\n  }, [timer]);\n\n  return (\n    <div>\n      <h1>{timer}</h1>\n      <button onClick={startTimer}>{intervalId ? \"Pause\" : \"Start\"}</button>\n      <button onClick={pauseTimer} disabled={!intervalId}>\n        Pause\n      </button>\n    </div>\n  );\n}\n`.trim();\n\nconst fizzBuzz = `\nconst App = () => {\n  const [counter, setCounter] = useState(1);\n\n  function handleCounter() {\n    setCounter(counter + 1);\n  }\n\n  return (\n    <div>\n      <h1>\n        {counter % 3 === 0 ? \"Fizz\" : \"\"}\n        {counter % 5 === 0 ? \"Buzz\" : \"\"}\n        {counter % 3 !== 0 && counter % 5 !== 0 ? counter : \"\"}\n      </h1>\n      <button onClick={handleCounter}>Next</button>\n    </div>\n  );\n};\n`.trim();\n\nconst ratings = `\nconst Star = ({ starId, marked }) => {\n  return (\n    <span\n      star-id={starId}\n      style={{ color: \"green\", cursor: \"pointer\" }}\n    >\n      {marked ? \"â˜…\" : \"â˜†\"}  // \"/u2605\" : \"/u2606\"\n    </span>\n  );\n};\n\nconst App = () => {\n  const [selection, setSelection] = React.useState(0);\n\n  const [rating, setRating] = React.useState(0);\n\n  const hoverOver = event => {\n    let starId = 0;\n    if (event && event.target && event.target.getAttribute(\"star-id\")) {\n      starId = event.target.getAttribute(\"star-id\");\n    }\n    setSelection(starId);\n  };\n\n  return (\n    <div\n      onMouseOver={hoverOver}\n      onMouseOut={() => hoverOver(null)}\n      onClick={event => setRating(event.target.getAttribute(\"star-id\"))}\n    >\n      {Array.from({ length: 5 }, (v, i) => (\n        <Star starId={i + 1} marked={selection ? selection > i : rating > i} />\n      ))}\n    </div>\n  );\n};`.trim();\n\nclass SortItems extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4>\n              <Sidebar />\n            </h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <b>\n                2. A click to start the countdown timer and a second one to\n                Pause the timer in the same button\n              </b>\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={contTimmer}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>4. FizzBuzz :</b> If counter = 3, then print 'Fizz', counter =\n              5, 'Buzz' else print counter values.\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={fizzBuzz}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <b>7. Start Rating</b>\n              <br />\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={ratings}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(SortItems);\n"]},"metadata":{},"sourceType":"module"}