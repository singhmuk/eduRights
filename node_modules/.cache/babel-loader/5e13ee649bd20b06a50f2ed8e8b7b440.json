{"ast":null,"code":"import React, { Suspense, lazy } from 'react';\nconst IntroAngular = lazy(() => import('./deepAngularjs/introAngular'));\nconst AngularCompile = lazy(() => import('./deepAngularjs/angCompiler'));\nconst NeyralNetwork = lazy(() => import('./deepAngularjs/neural'));\nconst ActivationFuns = lazy(() => import('./deepAngularjs/activationFunctions'));\nconst Loss = lazy(() => import('./deepAngularjs/loss'));\nconst GradientNeural = lazy(() => import('./deepAngularjs/gradientNeural'));\nconst Stochastic = lazy(() => import('./deepAngularjs/stochastic'));\nconst Tensorboards = lazy(() => import('./deepAngularjs/tensors'));\nconst Benchmarking = lazy(() => import('./deepAngularjs/benchmarking'));\nconst Customer = lazy(() => import('./deepAngularjs/customer'));\nconst RegularizationDeep = lazy(() => import('./deepAngularjs/regularizationDeep'));\nconst Imbalanced = lazy(() => import('./deepAngularjs/imbalanced'));\nconst Imbalanced2 = lazy(() => import('./deepAngularjs/imbalanced2'));\nconst Convolutionals = lazy(() => import('./deepAngularjs/convolutionals'));\nconst dataAugmentation = lazy(() => import('./deepAngularjs/data_augmentation'));\nconst Transfer = lazy(() => import('./deepAngularjs/transfer'));\nconst WordEmbedding = lazy(() => import('./deepAngularjs/word_embedding'));\nconst TensorFlows = lazy(() => import('./deepAngularjs/tensorflow'));\nconst components = {\n  IntroAngular,\n  AngularCompile,\n  NeyralNetwork,\n  ActivationFuns,\n  Loss,\n  GradientNeural,\n  Stochastic,\n  Tensorboards,\n  Benchmarking,\n  Customer,\n  RegularizationDeep,\n  Imbalanced,\n  Imbalanced2,\n  Convolutionals,\n  dataAugmentation,\n  Transfer,\n  WordEmbedding,\n  TensorFlows\n};\nexport { components };","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/angularjs/index.js"],"names":["React","Suspense","lazy","IntroAngular","AngularCompile","NeyralNetwork","ActivationFuns","Loss","GradientNeural","Stochastic","Tensorboards","Benchmarking","Customer","RegularizationDeep","Imbalanced","Imbalanced2","Convolutionals","dataAugmentation","Transfer","WordEmbedding","TensorFlows","components"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,IAA1B,QAAsC,OAAtC;AAEA,MAAMC,YAAY,GAAGD,IAAI,CAAC,MAAM,OAAO,8BAAP,CAAP,CAAzB;AACA,MAAME,cAAc,GAAGF,IAAI,CAAC,MAAM,OAAO,6BAAP,CAAP,CAA3B;AACA,MAAMG,aAAa,GAAGH,IAAI,CAAC,MAAM,OAAO,wBAAP,CAAP,CAA1B;AACA,MAAMI,cAAc,GAAGJ,IAAI,CAAC,MAAM,OAAO,qCAAP,CAAP,CAA3B;AACA,MAAMK,IAAI,GAAGL,IAAI,CAAC,MAAM,OAAO,sBAAP,CAAP,CAAjB;AACA,MAAMM,cAAc,GAAGN,IAAI,CAAC,MAAM,OAAO,gCAAP,CAAP,CAA3B;AACA,MAAMO,UAAU,GAAGP,IAAI,CAAC,MAAM,OAAO,4BAAP,CAAP,CAAvB;AACA,MAAMQ,YAAY,GAAGR,IAAI,CAAC,MAAM,OAAO,yBAAP,CAAP,CAAzB;AACA,MAAMS,YAAY,GAAGT,IAAI,CAAC,MAAM,OAAO,8BAAP,CAAP,CAAzB;AACA,MAAMU,QAAQ,GAAGV,IAAI,CAAC,MAAM,OAAO,0BAAP,CAAP,CAArB;AACA,MAAMW,kBAAkB,GAAGX,IAAI,CAAC,MAAM,OAAO,oCAAP,CAAP,CAA/B;AACA,MAAMY,UAAU,GAAGZ,IAAI,CAAC,MAAM,OAAO,4BAAP,CAAP,CAAvB;AACA,MAAMa,WAAW,GAAGb,IAAI,CAAC,MAAM,OAAO,6BAAP,CAAP,CAAxB;AACA,MAAMc,cAAc,GAAGd,IAAI,CAAC,MAAM,OAAO,gCAAP,CAAP,CAA3B;AACA,MAAMe,gBAAgB,GAAGf,IAAI,CAAC,MAAM,OAAO,mCAAP,CAAP,CAA7B;AACA,MAAMgB,QAAQ,GAAGhB,IAAI,CAAC,MAAM,OAAO,0BAAP,CAAP,CAArB;AACA,MAAMiB,aAAa,GAAGjB,IAAI,CAAC,MAAM,OAAO,gCAAP,CAAP,CAA1B;AACA,MAAMkB,WAAW,GAAGlB,IAAI,CAAC,MAAM,OAAO,4BAAP,CAAP,CAAxB;AAGA,MAAMmB,UAAU,GAAG;AACjBlB,EAAAA,YADiB;AACHC,EAAAA,cADG;AACaC,EAAAA,aADb;AAC4BC,EAAAA,cAD5B;AAEjBC,EAAAA,IAFiB;AAEXC,EAAAA,cAFW;AAEKC,EAAAA,UAFL;AAEiBC,EAAAA,YAFjB;AAE+BC,EAAAA,YAF/B;AAE6CC,EAAAA,QAF7C;AAGjBC,EAAAA,kBAHiB;AAGGC,EAAAA,UAHH;AAGeC,EAAAA,WAHf;AAG4BC,EAAAA,cAH5B;AAG4CC,EAAAA,gBAH5C;AAG8DC,EAAAA,QAH9D;AAIjBC,EAAAA,aAJiB;AAIFC,EAAAA;AAJE,CAAnB;AAOA,SAASC,UAAT","sourcesContent":["import React, { Suspense, lazy } from 'react';\n\nconst IntroAngular = lazy(() => import('./deepAngularjs/introAngular'));\nconst AngularCompile = lazy(() => import('./deepAngularjs/angCompiler'));\nconst NeyralNetwork = lazy(() => import('./deepAngularjs/neural'));\nconst ActivationFuns = lazy(() => import('./deepAngularjs/activationFunctions'));\nconst Loss = lazy(() => import('./deepAngularjs/loss'));\nconst GradientNeural = lazy(() => import('./deepAngularjs/gradientNeural'));\nconst Stochastic = lazy(() => import('./deepAngularjs/stochastic'));\nconst Tensorboards = lazy(() => import('./deepAngularjs/tensors'));\nconst Benchmarking = lazy(() => import('./deepAngularjs/benchmarking'));\nconst Customer = lazy(() => import('./deepAngularjs/customer'));\nconst RegularizationDeep = lazy(() => import('./deepAngularjs/regularizationDeep'));\nconst Imbalanced = lazy(() => import('./deepAngularjs/imbalanced'));\nconst Imbalanced2 = lazy(() => import('./deepAngularjs/imbalanced2'));\nconst Convolutionals = lazy(() => import('./deepAngularjs/convolutionals'));\nconst dataAugmentation = lazy(() => import('./deepAngularjs/data_augmentation'));\nconst Transfer = lazy(() => import('./deepAngularjs/transfer'));\nconst WordEmbedding = lazy(() => import('./deepAngularjs/word_embedding'));\nconst TensorFlows = lazy(() => import('./deepAngularjs/tensorflow'));\n\n\nconst components = {\n  IntroAngular, AngularCompile, NeyralNetwork, ActivationFuns,\n  Loss, GradientNeural, Stochastic, Tensorboards, Benchmarking, Customer,\n  RegularizationDeep, Imbalanced, Imbalanced2, Convolutionals, dataAugmentation, Transfer,\n  WordEmbedding, TensorFlows\n};\n\nexport { components };"]},"metadata":{},"sourceType":"module"}