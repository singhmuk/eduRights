{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var trackBy=\"\\ntrackByStudentID(index: number, student: any): string{\\n  return student.studentID;\\n}\\n\\ntemplate: '<div *ngFor=\\\"let emp of students; let i=index; let f=first; let o=odd;\\n            TrackBy: trackById\\\">\\n            {{i}} - {{emp.name}} - {{f}} - {{o}}\\n          </div>\\n        <button (click) = \\\"getMoreStudents()\\\"> getStudets</button>\\n       ',})\\n\\nexport class AppComponent {\\n  students: any[];\\n  constructor(){\\n    this.students = [\\n    { \\\"id\\\": 1, \\\"name\\\": \\\"Leanne\\\", \\\"username\\\": \\\"Bret\\\", \\\"email\\\": \\\"Sincere@april.biz\\\" },\\n    { \\\"id\\\": 2,\\\"name\\\": \\\"Ervin\\\", \\\"username\\\": \\\"Antonette\\\", \\\"email\\\": \\\"Shanna@melissa.tv\\\" },\\n    { \\\"id\\\": 3,\\\"name\\\": \\\"Clement\\\",\\\"username\\\": \\\"Samantha\\\",\\\"email\\\": \\\"Nathan@yesenia.net\\\" },\\n    { \\\"id\\\": 4,\\\"name\\\": \\\"Patricia\\\",\\\"username\\\": \\\"Karianne\\\",\\\"email\\\": \\\"Julianne@kory.org\\\" },\\n    { \\\"id\\\": 5,\\\"name\\\": \\\"Chelsey\\\",\\\"username\\\": \\\"Kamren\\\",\\\"email\\\": \\\"Lucio@annie.ca\\\" }\\n  ]\\n  }\\n\\n  getMoreStudents(): void{\\n    this.students = [\\n    { \\\"id\\\": 1, \\\"name\\\": \\\"Leanne\\\", \\\"username\\\": \\\"Bret\\\", \\\"email\\\": \\\"Sincere@april.biz\\\" },\\n    { \\\"id\\\": 2,\\\"name\\\": \\\"Ervin\\\", \\\"username\\\": \\\"Antonette\\\", \\\"email\\\": \\\"Shanna@melissa.tv\\\" },\\n    { \\\"id\\\": 3,\\\"name\\\": \\\"Clement\\\",\\\"username\\\": \\\"Samantha\\\",\\\"email\\\": \\\"Nathan@yesenia.net\\\" },\\n    { \\\"id\\\": 4,\\\"name\\\": \\\"Patricia\\\",\\\"username\\\": \\\"Karianne\\\",\\\"email\\\": \\\"Julianne@kory.org\\\" },\\n    { \\\"id\\\": 5,\\\"name\\\": \\\"Chelsey\\\",\\\"username\\\": \\\"Kamren\\\",\\\"email\\\": \\\"Lucio@annie.ca\\\" },\\n    { \\\"id\\\": 6,\\\"name\\\": \\\"Chelsey6\\\",\\\"username\\\": \\\"Kamren6\\\",\\\"email\\\": \\\"Lucio6@annie.ca\\\" }\\n  ]\\n  }\\n\\n  trackById(index: number, students: any):string {\\n    return students.id\\n  }\\n}\".trim();var ngFor=\"\\ntemplate: '<div *ngFor=\\\"let emp of employees; let i=index; let f=first; let o=odd\\\">\\n            {{i}} - {{emp.name}} - {{f}} - {{o}}\\n           </div >',})\\n\\nexport class AppComponent {\\n  employees = [\\n    { \\\"id\\\": 1, \\\"name\\\": \\\"Leanne\\\", \\\"username\\\": \\\"Bret\\\", \\\"email\\\": \\\"Sincere@april.biz\\\" },\\n    { \\\"id\\\": 2,\\\"name\\\": \\\"Ervin\\\", \\\"username\\\": \\\"Antonette\\\", \\\"email\\\": \\\"Shanna@melissa.tv\\\" },\\n    { \\\"id\\\": 3,\\\"name\\\": \\\"Clement\\\",\\\"username\\\": \\\"Samantha\\\",\\\"email\\\": \\\"Nathan@yesenia.net\\\" },\\n    { \\\"id\\\": 4,\\\"name\\\": \\\"Patricia\\\",\\\"username\\\": \\\"Karianne\\\",\\\"email\\\": \\\"Julianne@kory.org\\\" },\\n    { \\\"id\\\": 5,\\\"name\\\": \\\"Chelsey\\\",\\\"username\\\": \\\"Kamren\\\",\\\"email\\\": \\\"Lucio@annie.ca\\\" }\\n  ]\\n}\".trim();var iterates=\"\\n//app.component.ts\\nimport { HEROES } from './data';\\n\\n@Component({\\n  selector: 'app-root',\\n  template: '<div *ngFor=\\\"let hero of data\\\">\\n               <li>{{hero.name}}</li>\\n            </div>',\\n              })\\n\\nexport class AppComponent {\\n  data=HEROES\\n\\n  OnInit(){\\n    console.log('ddddd', HEROES)\\n  }\\n}\\n\\n\\n//data.ts\\nexport interface Hero {\\n  id: number;\\n  name: string;\\n}\\n\\nexport const HEROES: Hero[] = [\\n  { id: 11, name: 'Dr Nice' },\\n  { id: 12, name: 'Narco' },\\n  { id: 13, name: 'Bombasto' },\\n  { id: 14, name: 'Celeritas' },\\n  { id: 15, name: 'Magneta' },\\n  { id: 16, name: 'RubberMan' },\\n  { id: 17, name: 'Dynama' },\\n  { id: 18, name: 'Dr IQ' },\\n  { id: 19, name: 'Magma' },\\n  { id: 20, name: 'Tornado' }\\n];\\n\".trim();// const projection = ``.trim();\nvar AngularFor=/*#__PURE__*/function(_Component){_inherits(AngularFor,_Component);function AngularFor(){_classCallCheck(this,AngularFor);return _possibleConstructorReturn(this,_getPrototypeOf(AngularFor).apply(this,arguments));}_createClass(AngularFor,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"1. TrackBy with *ngFor\"),React.createElement(\"ul\",null,React.createElement(\"li\",null,\"The use of TrackBy it's a performance optimization and is usually not needed by default. it use if running into performance issues.\"),React.createElement(\"li\",null,\"TrackBy help to track the items which have been added/ remove.\"),React.createElement(\"li\",null,\"TrackBy function take 2 arguments first is index and second is current item, return the unique identifier as a return argument.\")),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:trackBy,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"2. ngFor - Local variables\"),React.createElement(\"li\",null,React.createElement(\"b\",null,\"index:\"),\" Used for provide the index for current element while itertion.\"),React.createElement(\"li\",null,React.createElement(\"b\",null,\"First:\"),\" Return true if current element is first element in the itertion otherwise false.\"),React.createElement(\"li\",null,React.createElement(\"b\",null,\"Last:\"),\" Return true if current element is last element in the itertion otherwise false.\"),React.createElement(\"li\",null,React.createElement(\"b\",null,\"Even:\"),\" Return true if current element is even element based on index in the itertion otherwise false.\"),React.createElement(\"li\",null,React.createElement(\"b\",null,\"Odd:\"),\" Return true if current element is odd element based on index in the itertion otherwise false.\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:ngFor,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"3. Iterates\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:iterates,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return AngularFor;}(Component);export default withStyles(styles)(AngularFor);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/angularjsd/angular 12/ngFor.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","trackBy","trim","ngFor","iterates","AngularFor","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAGA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADgB,CAKvBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALa,CAQvBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARY,CAAL,EAApB,CAcA,GAAMC,CAAAA,OAAO,CAAG,4rDAsCbC,IAtCa,EAAhB,CAyCA,GAAMC,CAAAA,KAAK,CAAG,qtBAaXD,IAbW,EAAd,CAgBA,GAAME,CAAAA,QAAQ,CAAG,yvBAsCfF,IAtCe,EAAjB,CAwCA;GAIMG,CAAAA,U,0SACgB,CAClBC,UAAU,CAAC,iBAAMxB,CAAAA,KAAK,CAACyB,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACb,KAA1B,EACE,8BAAI,oBAAC,OAAD,MAAJ,CADF,CADF,CADF,CAME,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEa,OAAO,CAACb,KAA1B,EACE,oBAAC,IAAD,MACE,uDADF,CAEE,8BACE,oKADF,CAGE,+FAHF,CAIE,gKAJF,CAFF,CASE,2BAAK,KAAK,CAAEN,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEY,OADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CATF,CAgBE,8BAhBF,CAkBE,2DAlBF,CAmBE,8BAAI,sCAAJ,mEAnBF,CAoBE,8BAAI,sCAAJ,qFApBF,CAqBE,8BAAI,qCAAJ,oFArBF,CAsBE,8BAAI,qCAAJ,mGAtBF,CAuBE,8BAAI,oCAAJ,kGAvBF,CAwBE,2BAAK,KAAK,CAAEZ,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEc,KADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAxBF,CA+BE,8BA/BF,CAiCE,4CAjCF,CAkCE,2BAAK,KAAK,CAAEd,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEe,QADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAlCF,CADF,CADF,CANF,CADF,CAuDD,C,wBA7DsBvB,S,EAgEzB,cAAgBI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBY,UAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst trackBy = `\ntrackByStudentID(index: number, student: any): string{\n  return student.studentID;\n}\n\ntemplate: '<div *ngFor=\"let emp of students; let i=index; let f=first; let o=odd;\n            TrackBy: trackById\">\n            {{i}} - {{emp.name}} - {{f}} - {{o}}\n          </div>\n        <button (click) = \"getMoreStudents()\"> getStudets</button>\n       ',})\n\nexport class AppComponent {\n  students: any[];\n  constructor(){\n    this.students = [\n    { \"id\": 1, \"name\": \"Leanne\", \"username\": \"Bret\", \"email\": \"Sincere@april.biz\" },\n    { \"id\": 2,\"name\": \"Ervin\", \"username\": \"Antonette\", \"email\": \"Shanna@melissa.tv\" },\n    { \"id\": 3,\"name\": \"Clement\",\"username\": \"Samantha\",\"email\": \"Nathan@yesenia.net\" },\n    { \"id\": 4,\"name\": \"Patricia\",\"username\": \"Karianne\",\"email\": \"Julianne@kory.org\" },\n    { \"id\": 5,\"name\": \"Chelsey\",\"username\": \"Kamren\",\"email\": \"Lucio@annie.ca\" }\n  ]\n  }\n\n  getMoreStudents(): void{\n    this.students = [\n    { \"id\": 1, \"name\": \"Leanne\", \"username\": \"Bret\", \"email\": \"Sincere@april.biz\" },\n    { \"id\": 2,\"name\": \"Ervin\", \"username\": \"Antonette\", \"email\": \"Shanna@melissa.tv\" },\n    { \"id\": 3,\"name\": \"Clement\",\"username\": \"Samantha\",\"email\": \"Nathan@yesenia.net\" },\n    { \"id\": 4,\"name\": \"Patricia\",\"username\": \"Karianne\",\"email\": \"Julianne@kory.org\" },\n    { \"id\": 5,\"name\": \"Chelsey\",\"username\": \"Kamren\",\"email\": \"Lucio@annie.ca\" },\n    { \"id\": 6,\"name\": \"Chelsey6\",\"username\": \"Kamren6\",\"email\": \"Lucio6@annie.ca\" }\n  ]\n  }\n\n  trackById(index: number, students: any):string {\n    return students.id\n  }\n}`.trim();\n\n\nconst ngFor = `\ntemplate: '<div *ngFor=\"let emp of employees; let i=index; let f=first; let o=odd\">\n            {{i}} - {{emp.name}} - {{f}} - {{o}}\n           </div >',})\n\nexport class AppComponent {\n  employees = [\n    { \"id\": 1, \"name\": \"Leanne\", \"username\": \"Bret\", \"email\": \"Sincere@april.biz\" },\n    { \"id\": 2,\"name\": \"Ervin\", \"username\": \"Antonette\", \"email\": \"Shanna@melissa.tv\" },\n    { \"id\": 3,\"name\": \"Clement\",\"username\": \"Samantha\",\"email\": \"Nathan@yesenia.net\" },\n    { \"id\": 4,\"name\": \"Patricia\",\"username\": \"Karianne\",\"email\": \"Julianne@kory.org\" },\n    { \"id\": 5,\"name\": \"Chelsey\",\"username\": \"Kamren\",\"email\": \"Lucio@annie.ca\" }\n  ]\n}`.trim();\n\n\nconst iterates = `\n//app.component.ts\nimport { HEROES } from './data';\n\n@Component({\n  selector: 'app-root',\n  template: '<div *ngFor=\"let hero of data\">\n               <li>{{hero.name}}</li>\n            </div>',\n              })\n\nexport class AppComponent {\n  data=HEROES\n\n  OnInit(){\n    console.log('ddddd', HEROES)\n  }\n}\n\n\n//data.ts\nexport interface Hero {\n  id: number;\n  name: string;\n}\n\nexport const HEROES: Hero[] = [\n  { id: 11, name: 'Dr Nice' },\n  { id: 12, name: 'Narco' },\n  { id: 13, name: 'Bombasto' },\n  { id: 14, name: 'Celeritas' },\n  { id: 15, name: 'Magneta' },\n  { id: 16, name: 'RubberMan' },\n  { id: 17, name: 'Dynama' },\n  { id: 18, name: 'Dr IQ' },\n  { id: 19, name: 'Magma' },\n  { id: 20, name: 'Tornado' }\n];\n`.trim();\n\n// const projection = ``.trim();\n\n\n\nclass AngularFor extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. TrackBy with *ngFor</h3>\n              <ul>\n                <li>The use of TrackBy it's a performance optimization and is usually not needed by default.\n                  it use if running into performance issues.</li>\n                <li>TrackBy help to track the items which have been added/ remove.</li>\n                <li>TrackBy function take 2 arguments first is index and second is current item, return the unique identifier as\n                  a return argument.</li>\n              </ul>\n              <div style={titles}>\n                <PrismCode\n                  code={trackBy}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>2. ngFor - Local variables</h3>\n              <li><b>index:</b> Used for provide the index for current element while itertion.</li>\n              <li><b>First:</b> Return true if current element is first element in the itertion otherwise false.</li>\n              <li><b>Last:</b> Return true if current element is last element in the itertion otherwise false.</li>\n              <li><b>Even:</b> Return true if current element is even element based on index in the itertion otherwise false.</li>\n              <li><b>Odd:</b> Return true if current element is odd element based on index in the itertion otherwise false.</li>\n              <div style={titles}>\n                <PrismCode\n                  code={ngFor}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>3. Iterates</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={iterates}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(AngularFor));\n"]},"metadata":{},"sourceType":"module"}