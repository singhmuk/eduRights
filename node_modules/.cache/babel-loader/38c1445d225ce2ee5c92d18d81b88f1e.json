{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/like.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst unlike = `\nconst App = () => {\n  const [count, setCount] = useState(0);\n  const [color, setColor] = useState('green');\n  const [size, setSize] = useState(1);\n  \n  const handleSetCount = () => {\n    (count === 4) ? setCount(0) : setCount(count + 1); \n    (count === 4) ? setSize(1) : setSize(size + .05); \n  };\n  \n  const handleSetColor = () => {\n    if(count === 1) setColor('red');\n    if(count === 2) setColor('blue');\n    if(count === 3) setColor('pink');\n    if(count === 4) setColor('yellow');\n  };\n  \n  const heartStyle = {\n    color: color,\n    transform: 'scale('$'{size})'\n  };\n  \n  return (\n    <>\n      <button onClick={() => { handleSetCount(); handleSetColor() } }>\n        <i>Like</i>\n      </button>\n      <p style={heartStyle}>You have liked this {count} times</p>\n    </>\n  );\n}`.trim();\nconst checkbox = `\nconst App = () => {\n  const [isChecked, setIsChecked] = useState(false)\n\n  const handleClick = () => {\n    setIsChecked(isChecked => !isChecked);\n  }\n\n  return (\n    <div>\n      <input\n        type=\"checkbox\"\n        checked={isChecked}\n        onChange={handleClick} />\n    </div>\n  );\n}`.trim();\nconst radio = `\nconst App = () => {\n  const [size, setSize] = useState(\"\")\n\n  const handleChange = (e) => {\n    setSize(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    alert('You chose the '$'{size} pizza.');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <p className=\"title\">Select a pizza size:</p>\n      <label>Small</label>\n      <input type=\"radio\" value=\"small\" checked={size === \"small\"} onChange={handleChange} />\n      <label>Medium</label>\n      <input type=\"radio\" value=\"medium\" checked={size === \"medium\"} onChange={handleChange} />\n      <label>Large</label>\n      <input type=\"radio\" value=\"large\" checked={size === \"large\"} onChange={handleChange} />\n\n      <button>Make your choice</button>\n    </form>\n  );\n}`.trim();\nconst select = `\nconst options = [\"Select an Option\", \"First\", \"Second\", \"Third\"]\n\nconst App = () => {\n  const [value, setValue] = useState('Select an Option')\n\n  const onChange = (e) => {\n    setValue(e.target.value)\n  }\n  return (\n    <div>\n      <select value={value} onChange={onChange}>\n        {options.map(option => {\n          return <option value={option}>{option}</option>\n        })}\n      </select>\n    </div>\n  )\n}`.trim();\nconst scroll = `\nconst nestedItems = [\n  {\n    id: 1,\n    name: \"Item 1\",\n    subItems: [{ id: 11, name: \"Sub Item 1\" },{ id: 12, name: \"Sub Item 2\" },],\n  },\n  {\n    id: 2,\n    name: \"Item 2\",\n    subItems: [\n      {\n        id: 21,\n        name: \"Sub Item 1\",\n      },\n      {\n        id: 22,\n        name: \"Sub Item 2\",\n      },\n    ],\n  },\n];\n\nconst App = () => {\n  const [items, setItems] = useState(\"\");\n  const [items2, setItems2] = useState(\"\");\n\n  const handleItemChange = (event) => {\n    setItems(event.target.value);\n    setItems2(\"\");\n  };\n\n  const handleSubItemChange = (event) => {\n    setItems2(event.target.value);\n  };\n\n  return (\n    <div>\n      <select id=\"item\" value={items} onChange={handleItemChange}>\n        <option value=\"\">Select an item</option>\n        {nestedItems.map((item) => (\n          <option key={item.id} value={item.name}>\n            {item.name}\n          </option>\n        ))}\n      </select>\n      {items && (\n        <div>\n          <label htmlFor=\"subItem\">Select Sub Item:</label>\n          <select id=\"subItem\" value={items2} onChange={handleSubItemChange}>\n            <option value=\"\">Select a sub item</option>\n            {nestedItems\n              .find((item) => item.name === items)\n              .subItems.map((subItem) => (\n                <option key={subItem.id} value={subItem.name}>\n                  {subItem.name}\n                </option>\n              ))}\n          </select>\n        </div>\n      )}\n    </div>\n  );\n};\n`.trim();\nconst profiles = `\nclass App extends Component {\n  state = { selectedFile: null };\n  \n  onFileChange = (e) => {\n    this.setState({ selectedFile: e.target.files[0] });\n  };\n  \n  onFileUpload = () => {\n    // Create an object of formData\n    const formData = new FormData();\n  \n    formData.append(\n      \"myFile\",\n      this.state.selectedFile,\n    );\n  \n    // Request made to the backend api\n    axios.post(\"api/uploadfile\", formData);\n  };\n  \n  fileData = () => {\n    if (this.state.selectedFile) {\n      return (\n        <div>\n          <h2>File Details:</h2>\n          <p>File Name: {this.state.selectedFile.name}</p>\n          <p>File Type: {this.state.selectedFile.type}</p>\n\n          <p>\n            Last Modified:{\" \"}\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\n          </p>\n        </div>\n      );\n    } \n  };\n  \n  render() {\n    return (\n      <div>\n          <div>\n              <input type=\"file\" onChange={this.onFileChange} />\n              <button onClick={this.onFileUpload}>\n                Upload!\n              </button>\n          </div>\n        {this.fileData()}\n      </div>\n    );\n  }\n}`.trim();\nconst code = `\nconst moods = [\n  { name: \"Happy\", \"emoji\": \"😀\" }, \n  { name: \"Angry\", \"emoji\": \"😠\" },\n  { name: \"Really Angry\", \"emoji\": \"😡\" },\n  { name: \"Sad\", \"emoji\": \"🙁\" },\n  { name: \"Really Sad\", \"emoji\": \"☹️\" },\n  { name: \"Poop\", \"emoji\": \"💩\" }\n];\n\nclass App extends React.Component {\n  state = {\n    mood: { \n      name: \"Emoji\", \n      emoji: null \n    }\n  }\n\nhandleButtonClick = () => {\n    const mood = moods[Math.floor(Math.random() * moods.length)];\n    this.setState({ mood });\n}\n\nrender() {\n    return (\n        <div>\n          <div>{ this.state.mood.emoji }</div>\n          <div>{ this.state.mood.name }</div>\n          \n            <button onClick={this.handleButtonClick}>\n              Click\n            </button>\n        </div>\n    )\n  }\n}`.trim();\n\nclass Like extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"1. Like\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: unlike,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), \"2. checkbox.js\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: checkbox,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }), \"3. radio.js\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: radio,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"4. Select\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: select,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"5. Scroll\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: scroll,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"6. Upload Profile\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: profiles,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, \"7. EMJ\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: code,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(Like);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/like.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","unlike","trim","checkbox","radio","select","scroll","profiles","code","Like","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst unlike = `\nconst App = () => {\n  const [count, setCount] = useState(0);\n  const [color, setColor] = useState('green');\n  const [size, setSize] = useState(1);\n  \n  const handleSetCount = () => {\n    (count === 4) ? setCount(0) : setCount(count + 1); \n    (count === 4) ? setSize(1) : setSize(size + .05); \n  };\n  \n  const handleSetColor = () => {\n    if(count === 1) setColor('red');\n    if(count === 2) setColor('blue');\n    if(count === 3) setColor('pink');\n    if(count === 4) setColor('yellow');\n  };\n  \n  const heartStyle = {\n    color: color,\n    transform: 'scale('$'{size})'\n  };\n  \n  return (\n    <>\n      <button onClick={() => { handleSetCount(); handleSetColor() } }>\n        <i>Like</i>\n      </button>\n      <p style={heartStyle}>You have liked this {count} times</p>\n    </>\n  );\n}`.trim()\n\nconst checkbox = `\nconst App = () => {\n  const [isChecked, setIsChecked] = useState(false)\n\n  const handleClick = () => {\n    setIsChecked(isChecked => !isChecked);\n  }\n\n  return (\n    <div>\n      <input\n        type=\"checkbox\"\n        checked={isChecked}\n        onChange={handleClick} />\n    </div>\n  );\n}`.trim()\n\nconst radio = `\nconst App = () => {\n  const [size, setSize] = useState(\"\")\n\n  const handleChange = (e) => {\n    setSize(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    alert('You chose the '$'{size} pizza.');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <p className=\"title\">Select a pizza size:</p>\n      <label>Small</label>\n      <input type=\"radio\" value=\"small\" checked={size === \"small\"} onChange={handleChange} />\n      <label>Medium</label>\n      <input type=\"radio\" value=\"medium\" checked={size === \"medium\"} onChange={handleChange} />\n      <label>Large</label>\n      <input type=\"radio\" value=\"large\" checked={size === \"large\"} onChange={handleChange} />\n\n      <button>Make your choice</button>\n    </form>\n  );\n}`.trim()\n\nconst select = `\nconst options = [\"Select an Option\", \"First\", \"Second\", \"Third\"]\n\nconst App = () => {\n  const [value, setValue] = useState('Select an Option')\n\n  const onChange = (e) => {\n    setValue(e.target.value)\n  }\n  return (\n    <div>\n      <select value={value} onChange={onChange}>\n        {options.map(option => {\n          return <option value={option}>{option}</option>\n        })}\n      </select>\n    </div>\n  )\n}`.trim();\n\n\nconst scroll = `\nconst nestedItems = [\n  {\n    id: 1,\n    name: \"Item 1\",\n    subItems: [{ id: 11, name: \"Sub Item 1\" },{ id: 12, name: \"Sub Item 2\" },],\n  },\n  {\n    id: 2,\n    name: \"Item 2\",\n    subItems: [\n      {\n        id: 21,\n        name: \"Sub Item 1\",\n      },\n      {\n        id: 22,\n        name: \"Sub Item 2\",\n      },\n    ],\n  },\n];\n\nconst App = () => {\n  const [items, setItems] = useState(\"\");\n  const [items2, setItems2] = useState(\"\");\n\n  const handleItemChange = (event) => {\n    setItems(event.target.value);\n    setItems2(\"\");\n  };\n\n  const handleSubItemChange = (event) => {\n    setItems2(event.target.value);\n  };\n\n  return (\n    <div>\n      <select id=\"item\" value={items} onChange={handleItemChange}>\n        <option value=\"\">Select an item</option>\n        {nestedItems.map((item) => (\n          <option key={item.id} value={item.name}>\n            {item.name}\n          </option>\n        ))}\n      </select>\n      {items && (\n        <div>\n          <label htmlFor=\"subItem\">Select Sub Item:</label>\n          <select id=\"subItem\" value={items2} onChange={handleSubItemChange}>\n            <option value=\"\">Select a sub item</option>\n            {nestedItems\n              .find((item) => item.name === items)\n              .subItems.map((subItem) => (\n                <option key={subItem.id} value={subItem.name}>\n                  {subItem.name}\n                </option>\n              ))}\n          </select>\n        </div>\n      )}\n    </div>\n  );\n};\n`.trim();\n\nconst profiles = `\nclass App extends Component {\n  state = { selectedFile: null };\n  \n  onFileChange = (e) => {\n    this.setState({ selectedFile: e.target.files[0] });\n  };\n  \n  onFileUpload = () => {\n    // Create an object of formData\n    const formData = new FormData();\n  \n    formData.append(\n      \"myFile\",\n      this.state.selectedFile,\n    );\n  \n    // Request made to the backend api\n    axios.post(\"api/uploadfile\", formData);\n  };\n  \n  fileData = () => {\n    if (this.state.selectedFile) {\n      return (\n        <div>\n          <h2>File Details:</h2>\n          <p>File Name: {this.state.selectedFile.name}</p>\n          <p>File Type: {this.state.selectedFile.type}</p>\n\n          <p>\n            Last Modified:{\" \"}\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\n          </p>\n        </div>\n      );\n    } \n  };\n  \n  render() {\n    return (\n      <div>\n          <div>\n              <input type=\"file\" onChange={this.onFileChange} />\n              <button onClick={this.onFileUpload}>\n                Upload!\n              </button>\n          </div>\n        {this.fileData()}\n      </div>\n    );\n  }\n}`.trim();\n\n\nconst code = `\nconst moods = [\n  { name: \"Happy\", \"emoji\": \"😀\" }, \n  { name: \"Angry\", \"emoji\": \"😠\" },\n  { name: \"Really Angry\", \"emoji\": \"😡\" },\n  { name: \"Sad\", \"emoji\": \"🙁\" },\n  { name: \"Really Sad\", \"emoji\": \"☹️\" },\n  { name: \"Poop\", \"emoji\": \"💩\" }\n];\n\nclass App extends React.Component {\n  state = {\n    mood: { \n      name: \"Emoji\", \n      emoji: null \n    }\n  }\n\nhandleButtonClick = () => {\n    const mood = moods[Math.floor(Math.random() * moods.length)];\n    this.setState({ mood });\n}\n\nrender() {\n    return (\n        <div>\n          <div>{ this.state.mood.emoji }</div>\n          <div>{ this.state.mood.name }</div>\n          \n            <button onClick={this.handleButtonClick}>\n              Click\n            </button>\n        </div>\n    )\n  }\n}`.trim();\n\n\n\nclass Like extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <b>1. Like</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={unlike}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              2. checkbox.js\n              <div style={titles}>\n                <PrismCode\n                  code={checkbox}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              3. radio.js\n              <div style={titles}>\n                <PrismCode\n                  code={radio}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>4. Select</h3>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={select}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>5. Scroll</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={scroll}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>6. Upload Profile</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={profiles}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>7. EMJ</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={code}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Like));\n"]},"metadata":{},"sourceType":"module"}