{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/async_await.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst App = `\nconst App = () => {\n  const [mockdata, setMockdata] = useState([]);\n\n  const handleSearch = (e) => {\n    let value = e.target.value.toLowerCase();\n    let result = [];\n\n    result = mockdata.filter((data) => {\n      return data.title.search(value) != -1;\n    });\n    setMockdata(result);\n  }\n\n  useEffect(() => {\n    axios.get('https://jsonplaceholder.typicode.com/albums/1/photos')\n      .then(res => {\n        setMockdata(res.data);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }, []);\n\n  return (\n    <div>\n      <input type=\"text\" onChange={(event) => handleSearch(event)} />\n      {mockdata.map((items) => (\n        <li>{items.title}</li>\n      ))}\n    </div>\n  )\n}\n`.trim();\nconst multiple = `\nconst App = () => {\n  const [playerName, setPlayerName]=useState([]);\n  const [playerPic, setPlayerPic]=useState([]);\n \n  const getData = () => {\n   const playerAPI = \"https://www.balldontlie.io/api/v1/players/237\";\n   const PlayerPic = \"https://nba-players.herokuapp.com/players/james/lebron\";\n \n   const getPlayerApi = axios.get(playerAPI);\n   const getPlayerPic = axios.get(PlayerPic);\n \n   axios.all([getPlayerApi, getPlayerPic])\n         .then(axios.spread((...allData) => {\n           const allDataPlayer = allData[0].data.first_name\n           const getNbaPlayerPic = allData[1].config.url;\n \n           setPlayerName(allDataPlayer);\n           setPlayerPic(getNbaPlayerPic);\n         }))\n  }\n \n useEffect(()=>{\n   getData();\n },[])\n \n  return(\n   <div>\n     Player name: {playerName}\n     <img src={playerPic} /> \n   </div>\n  )\n }`.trim();\nconst Uncontroll = `\nconst App = () => {\n  const [employee, setEmployee] = useState([]);\n\n  useEffect(()=>{\n    fetch('https://jsonplaceholder.typicode.com/posts')\n        .then(res=>res.json())\n        .then(data=>setEmployee(data))\n  },[])\n\n  const handleSearch = (e) => {\n    let value = e.target.value.toLowerCase();\n\n    let result = [];\n    result = employee.filter(data=>{\n      return data.title.search(value) !=-1;\n    });\nsetEmployee(result);\n  }\n\n  return(\n    <div>\n      <input type=\"text\" onChange={e=>handleSearch(e)} />\n      {employee.map(val=>(\n        <li key={val.id}>{val.title}</li>\n      ))}\n    </div>\n  )\n}`.trim();\nconst mouseHovers = `\nconst App = () => {\n  const [isHovering, setHovering] = useState(false);\n\n  const handleMouseHover = () => {\n    setHovering(isHovering => !isHovering);\n  }\n\n  return (\n    <div>\n      <div\n        onMouseEnter={handleMouseHover}\n        onMouseLeave={handleMouseHover}\n      >\n        Hover Me\n      </div>\n      {isHovering && <div>Hovering right me</div>}\n    </div>\n  );\n}`.trim();\nconst getLists = `\nconst App =() => {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    await fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((data) => setUsers(data))\n      .catch((error) => console.log(error));\n  };\n\n  return(\n    <div>\n      {users.map(vals=>(\n        <li key={vals.id}>{vals.id}</li>\n      ))}\n    </div>\n  )\n}`.trim();\nconst MoveButton = `\nconst MoveButton = (props) => {\n  return (\n      <button onClick={props.onClick}>\n          Click To Move\n      </button>\n  );\n}\n\nconst BoxOne = () => <p>Box1</p>;\n\nconst BoxTwo = () => <p>Box2</p>;\n\n\nclass App extends Component {\nstate = { positions: 0 }\n\nhandleClick = () => {\n  this.setState({ positions: (this.state.positions + 1) % 3 })\n}\n\nrender () { \nconst positions = this.state.positions;\n  return (\n      <div>\n          { positions === 0 ? <MoveButton onClick={this.handleClick}/> : ''}\n          <BoxOne />\n          { positions === 1 ? <MoveButton onClick={this.handleClick}/> : ''}\n          <BoxTwo />\n          { positions === 2 ? <MoveButton onClick={this.handleClick}/> : ''}\n      </div>\n  );\n}\n}\n\nexport default App;`.trim();\nconst steps = `\nclass App extends Component {\n   state = { inputValue: \"\" };\n \n handleUpdate = (e) => {\n   if (e.target.validity.valid) {\n     this.setState({ inputValue: e.target.value }); \n   }\n }\n \n reset = () => {\n   this.setState({ inputValue: \"\" }); \n }\n \n render() {\n   return (\n     <div>\n       <input type=\"number\" value={this.state.inputValue} onChange={this.handleUpdate} step=\"any\" />\n       <button onClick={this.reset}>reset</button>\n     </div>\n   )\n }  \n }`.trim();\nconst dateTime = `\n //1\n function date_time() {\n   return Date();\n }\n \n //2\n function formatDate(dayOfWeek, day, month, year) {\n   var daysOfWeek = [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"];\n   var months = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n       return daysOfWeek[dayOfWeek] + \" \" + months[month] + \" \" + day + \" \" + year; }\n \n   var birthday = new Date(Date.UTC(2000,0,1)); \n   var birthDay = formatDate(birthday.getUTCDay(), birthday.getUTCDate(),     \n   birthday.getUTCMonth(), birthday.getUTCFullYear())\n \n \n export { date_time, birthDay }`.trim();\n\nclass AsyncAwait extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"1. Get Lists\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: getLists,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"2. Async-Await\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: App,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"3. Recived data from two different APIS in one function to multiple calls.\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: multiple,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"4. Search items\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: Uncontroll,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"5. Mouse Hover on Card\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: mouseHovers,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"6.onClick move button\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: MoveButton,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"7. Step Input\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: steps,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, \"8. Date_time\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: dateTime,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(AsyncAwait);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/ReactJs/reactJs_hooks/async_await.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","App","trim","multiple","Uncontroll","mouseHovers","getLists","MoveButton","steps","dateTime","AsyncAwait","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst App = `\nconst App = () => {\n  const [mockdata, setMockdata] = useState([]);\n\n  const handleSearch = (e) => {\n    let value = e.target.value.toLowerCase();\n    let result = [];\n\n    result = mockdata.filter((data) => {\n      return data.title.search(value) != -1;\n    });\n    setMockdata(result);\n  }\n\n  useEffect(() => {\n    axios.get('https://jsonplaceholder.typicode.com/albums/1/photos')\n      .then(res => {\n        setMockdata(res.data);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }, []);\n\n  return (\n    <div>\n      <input type=\"text\" onChange={(event) => handleSearch(event)} />\n      {mockdata.map((items) => (\n        <li>{items.title}</li>\n      ))}\n    </div>\n  )\n}\n`.trim();\n\nconst multiple = `\nconst App = () => {\n  const [playerName, setPlayerName]=useState([]);\n  const [playerPic, setPlayerPic]=useState([]);\n \n  const getData = () => {\n   const playerAPI = \"https://www.balldontlie.io/api/v1/players/237\";\n   const PlayerPic = \"https://nba-players.herokuapp.com/players/james/lebron\";\n \n   const getPlayerApi = axios.get(playerAPI);\n   const getPlayerPic = axios.get(PlayerPic);\n \n   axios.all([getPlayerApi, getPlayerPic])\n         .then(axios.spread((...allData) => {\n           const allDataPlayer = allData[0].data.first_name\n           const getNbaPlayerPic = allData[1].config.url;\n \n           setPlayerName(allDataPlayer);\n           setPlayerPic(getNbaPlayerPic);\n         }))\n  }\n \n useEffect(()=>{\n   getData();\n },[])\n \n  return(\n   <div>\n     Player name: {playerName}\n     <img src={playerPic} /> \n   </div>\n  )\n }`.trim();\n\nconst Uncontroll = `\nconst App = () => {\n  const [employee, setEmployee] = useState([]);\n\n  useEffect(()=>{\n    fetch('https://jsonplaceholder.typicode.com/posts')\n        .then(res=>res.json())\n        .then(data=>setEmployee(data))\n  },[])\n\n  const handleSearch = (e) => {\n    let value = e.target.value.toLowerCase();\n\n    let result = [];\n    result = employee.filter(data=>{\n      return data.title.search(value) !=-1;\n    });\nsetEmployee(result);\n  }\n\n  return(\n    <div>\n      <input type=\"text\" onChange={e=>handleSearch(e)} />\n      {employee.map(val=>(\n        <li key={val.id}>{val.title}</li>\n      ))}\n    </div>\n  )\n}`.trim();\n\nconst mouseHovers = `\nconst App = () => {\n  const [isHovering, setHovering] = useState(false);\n\n  const handleMouseHover = () => {\n    setHovering(isHovering => !isHovering);\n  }\n\n  return (\n    <div>\n      <div\n        onMouseEnter={handleMouseHover}\n        onMouseLeave={handleMouseHover}\n      >\n        Hover Me\n      </div>\n      {isHovering && <div>Hovering right me</div>}\n    </div>\n  );\n}`.trim();\n\n\n\nconst getLists = `\nconst App =() => {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    await fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((data) => setUsers(data))\n      .catch((error) => console.log(error));\n  };\n\n  return(\n    <div>\n      {users.map(vals=>(\n        <li key={vals.id}>{vals.id}</li>\n      ))}\n    </div>\n  )\n}`.trim();\n\nconst MoveButton = `\nconst MoveButton = (props) => {\n  return (\n      <button onClick={props.onClick}>\n          Click To Move\n      </button>\n  );\n}\n\nconst BoxOne = () => <p>Box1</p>;\n\nconst BoxTwo = () => <p>Box2</p>;\n\n\nclass App extends Component {\nstate = { positions: 0 }\n\nhandleClick = () => {\n  this.setState({ positions: (this.state.positions + 1) % 3 })\n}\n\nrender () { \nconst positions = this.state.positions;\n  return (\n      <div>\n          { positions === 0 ? <MoveButton onClick={this.handleClick}/> : ''}\n          <BoxOne />\n          { positions === 1 ? <MoveButton onClick={this.handleClick}/> : ''}\n          <BoxTwo />\n          { positions === 2 ? <MoveButton onClick={this.handleClick}/> : ''}\n      </div>\n  );\n}\n}\n\nexport default App;`.trim();\n\nconst steps = `\nclass App extends Component {\n   state = { inputValue: \"\" };\n \n handleUpdate = (e) => {\n   if (e.target.validity.valid) {\n     this.setState({ inputValue: e.target.value }); \n   }\n }\n \n reset = () => {\n   this.setState({ inputValue: \"\" }); \n }\n \n render() {\n   return (\n     <div>\n       <input type=\"number\" value={this.state.inputValue} onChange={this.handleUpdate} step=\"any\" />\n       <button onClick={this.reset}>reset</button>\n     </div>\n   )\n }  \n }`.trim();\n\nconst dateTime = `\n //1\n function date_time() {\n   return Date();\n }\n \n //2\n function formatDate(dayOfWeek, day, month, year) {\n   var daysOfWeek = [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"];\n   var months = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n       return daysOfWeek[dayOfWeek] + \" \" + months[month] + \" \" + day + \" \" + year; }\n \n   var birthday = new Date(Date.UTC(2000,0,1)); \n   var birthDay = formatDate(birthday.getUTCDay(), birthday.getUTCDate(),     \n   birthday.getUTCMonth(), birthday.getUTCFullYear())\n \n \n export { date_time, birthDay }`.trim();\n\n\nclass AsyncAwait extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. Get Lists</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={getLists}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br/>\n\n              <h3>2. Async-Await</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={App}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br/>\n\n              <h3>3. Recived data from two different APIS in one function to multiple calls.</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={multiple}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>4. Search items</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={Uncontroll}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>5. Mouse Hover on Card</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={mouseHovers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>6.onClick move button</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={MoveButton}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>7. Step Input</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={steps}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              \n              <h3>8. Date_time</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={dateTime}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(AsyncAwait));\n"]},"metadata":{},"sourceType":"module"}