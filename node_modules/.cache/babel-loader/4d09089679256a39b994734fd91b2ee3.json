{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var weakMap=\"\\nlet owners = new WeakMap();\\nlet task = { title: \\\"Big Project\\\" };\\nowners.set(task, 'John');\\n\\nfunction owner(task) {\\n    if (owners.has(task)) {\\n        return console.log(owners.get(task));\\n    }\\n    console.log(\\\"No owner for this task.\\\");\\n}\\nowner(task);                                                            // \\\"John\\\" \\nowner({});                                                              // \\\"No owner for this task\\\".\\n\".trim();var async=\"\\nconst add = (a, b) => {\\n  return new Promise((resolve, reject) => {\\n      setTimeout(() => {\\n          if (a < 0 || b < 0) {\\n              return reject('Numbers must be non-negative')\\n          }\\n\\n          resolve(a + b)\\n      }, 2000)\\n  })\\n}\\n\\nconst doWork = async () => {\\n  const sum = await add(1, -99)\\n  const sum2 = await add(sum, 50)\\n  const sum3 = await add(sum2, -3)\\n  return sum3\\n}\\n\\ndoWork().then((result) => {\\n  console.log('result', result)\\n}).catch((e) => {\\n  console.log('e', e)\\n})\".trim();var addNum=\"\\nconst express = require('express');\\nconst bodyParser = require('body-parser');\\nconst app = express();\\n\\napp.use(bodyParser.urlencoded({ extended: true }));\\n\\napp.get(\\\"/\\\", (req, res) => {\\n  res.sendFile(__dirname + \\\"/index.html\\\");\\n});\\n\\napp.post(\\\"/\\\", (req, res) => {\\n  var num = Number(req.body.num);\\n  var num2 = Number(req.body.num2);\\n\\n  var result = num + num2;\\n\\n  res.send(\\\"Sum is\\\" + result);\\n});\\n\\napp.listen(4000, () => console.log('server running on port 4000'));\\n\\n\\n//index.html\\n<head>\\n    <body>\\n      <form action=\\\"/\\\" method=\\\"post\\\">\\n        <input type=\\\"text\\\" name=\\\"num\\\" placeholder=\\\"num\\\">\\n        <input type=\\\"text\\\" name=\\\"num2\\\" placeholder=\\\"num2\\\">\\n        <button type=\\\"submit\\\" name=\\\"submit\\\">sum</button>\\n      </form>\\n    </body>\\n  </head>\\n\".trim();var promises=\"\\nconst p1 = new Promise((res, rej) => {\\n  setTimeout(() => {\\n    res(\\\"Promise 1\\\")\\n  }, 2000)\\n})\\n\\nconst p2 = new Promise((res, rej) => {\\n  setTimeout(() => {\\n    res(\\\"Promise 2\\\")\\n  }, 2000)\\n})\\n\\nconst p3 = new Promise((res, rej) => {\\n  setTimeout(() => {\\n    res(\\\"Promise 3\\\")\\n  }, 2000)\\n})\\n\\nPromise.all([p1, p2, p3]).then((prMSG) => {\\n  console.log(prMSG)\\n}).catch((err) => {\\n  console.log(err)\\n})\\n\\nPromise.allSettled([p1, p2, p3]).then((prMSG) => {\\n  console.log(prMSG)\\n}).catch((err) => {\\n  console.log(err)\\n})\\n\\nPromise.race([p1, p2, p3]).then((prMSG) => {\\n  console.log(prMSG)\\n}).catch((err) => {\\n  console.log(err)\\n})\\n\".trim();var Tur1=/*#__PURE__*/function(_Component){_inherits(Tur1,_Component);function Tur1(){_classCallCheck(this,Tur1);return _possibleConstructorReturn(this,_getPrototypeOf(Tur1).apply(this,arguments));}_createClass(Tur1,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"1. WeakMap\"),\"ES6's weakMap allows the use of non-strings as keys in a HashMap:\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:weakMap,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"h3\",null,\"2. Async-Await\"),React.createElement(\"ul\",null,React.createElement(\"li\",null,\"It's an easier way to deal with Promises.\"),React.createElement(\"li\",null,\"Promises is an easier way to deal with CB.\"),React.createElement(\"li\",null,\"To handle an asynchronous process, we return a Promis object from a function.\"),React.createElement(\"li\",null,\"By default any function without \",React.createElement(\"b\",null,\"return\"),\" statement return \",React.createElement(\"b\",null,\"undefined\"),\" in javascript.\"),React.createElement(\"li\",null,\"By writing async function don't need to write return statement.\"),React.createElement(\"li\",null,\"await make sure to wait till a Promise is settled, be resolved/ rejected.\"),React.createElement(\"li\",null,\"The way we write then() for handling promise, now in await we can remove than() and replace it with await.\")),\"server.js\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:async,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"ul\",null,React.createElement(\"li\",null,React.createElement(\"b\",null,\"promise.all(): \"),\"When we have multiple promises as i/p it should return a single promise after all promises are resolved, then use the all() method.\"),React.createElement(\"li\",null,\"all() is settled with only resolve promises, so if any promise returns error then it won't work.\"),React.createElement(\"br\",null),React.createElement(\"li\",null,React.createElement(\"b\",null,\"allSettled(): \"),\"Waits for all promises regardless of their state & returns promises at the end.\"),React.createElement(\"li\",null,React.createElement(\"b\",null,\"race(): \"),\"Return a promise as soon as  any of the promise returns the state from the iterable list.\")),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:promises,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"3. Add two numbers\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:addNum,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return Tur1;}(Component);export default withStyles(styles)(Tur1);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/nodeJs/nodeDeep/tut_1.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","weakMap","trim","async","addNum","promises","Tur1","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst weakMap = `\nlet owners = new WeakMap();\nlet task = { title: \"Big Project\" };\nowners.set(task, 'John');\n\nfunction owner(task) {\n    if (owners.has(task)) {\n        return console.log(owners.get(task));\n    }\n    console.log(\"No owner for this task.\");\n}\nowner(task);                                                            // \"John\" \nowner({});                                                              // \"No owner for this task\".\n`.trim();\n\nconst async = `\nconst add = (a, b) => {\n  return new Promise((resolve, reject) => {\n      setTimeout(() => {\n          if (a < 0 || b < 0) {\n              return reject('Numbers must be non-negative')\n          }\n\n          resolve(a + b)\n      }, 2000)\n  })\n}\n\nconst doWork = async () => {\n  const sum = await add(1, -99)\n  const sum2 = await add(sum, 50)\n  const sum3 = await add(sum2, -3)\n  return sum3\n}\n\ndoWork().then((result) => {\n  console.log('result', result)\n}).catch((e) => {\n  console.log('e', e)\n})`.trim();\n\n\nconst addNum = `\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst app = express();\n\napp.use(bodyParser.urlencoded({ extended: true }));\n\napp.get(\"/\", (req, res) => {\n  res.sendFile(__dirname + \"/index.html\");\n});\n\napp.post(\"/\", (req, res) => {\n  var num = Number(req.body.num);\n  var num2 = Number(req.body.num2);\n\n  var result = num + num2;\n\n  res.send(\"Sum is\" + result);\n});\n\napp.listen(4000, () => console.log('server running on port 4000'));\n\n\n//index.html\n<head>\n    <body>\n      <form action=\"/\" method=\"post\">\n        <input type=\"text\" name=\"num\" placeholder=\"num\">\n        <input type=\"text\" name=\"num2\" placeholder=\"num2\">\n        <button type=\"submit\" name=\"submit\">sum</button>\n      </form>\n    </body>\n  </head>\n`.trim();\n\nconst promises = `\nconst p1 = new Promise((res, rej) => {\n  setTimeout(() => {\n    res(\"Promise 1\")\n  }, 2000)\n})\n\nconst p2 = new Promise((res, rej) => {\n  setTimeout(() => {\n    res(\"Promise 2\")\n  }, 2000)\n})\n\nconst p3 = new Promise((res, rej) => {\n  setTimeout(() => {\n    res(\"Promise 3\")\n  }, 2000)\n})\n\nPromise.all([p1, p2, p3]).then((prMSG) => {\n  console.log(prMSG)\n}).catch((err) => {\n  console.log(err)\n})\n\nPromise.allSettled([p1, p2, p3]).then((prMSG) => {\n  console.log(prMSG)\n}).catch((err) => {\n  console.log(err)\n})\n\nPromise.race([p1, p2, p3]).then((prMSG) => {\n  console.log(prMSG)\n}).catch((err) => {\n  console.log(err)\n})\n`.trim();\n\n\n\nclass Tur1 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1. WeakMap</h3>\n              ES6's weakMap allows the use of non-strings as keys in a HashMap:\n              <div style={titles}>\n                <PrismCode\n                  code={weakMap}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n\n              <h3>2. Async-Await</h3>\n              <ul>\n                <li>It's an easier way to deal with Promises.</li>\n                <li>Promises is an easier way to deal with CB.</li>\n                <li>To handle an asynchronous process, we return a Promis object from a function.</li>\n                <li>By default any function without <b>return</b> statement return <b>undefined</b> in javascript.</li>\n                <li>By writing async function don't need to write return statement.</li>\n                <li>await make sure to wait till a Promise is settled, be resolved/ rejected.</li>\n                <li>The way we write then() for handling promise, now in await we can remove than() and replace it with await.</li>\n              </ul>\n              server.js\n              <div style={titles}>\n                <PrismCode\n                  code={async}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <ul>\n                <li><b>promise.all(): </b>When we have multiple promises as i/p it should return a single promise after all promises are resolved,\n                  then use the all() method.</li>\n                <li>all() is settled with only resolve promises, so if any promise returns error then it won't work.</li>\n                <br />\n                <li><b>allSettled(): </b>Waits for all promises regardless of their state & returns promises at the end.</li>\n                <li><b>race(): </b>Return a promise as soon as  any of the promise returns the state from the iterable list.</li>\n              </ul>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={promises}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>3. Add two numbers</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={addNum}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Tur1));\n"]},"metadata":{},"sourceType":"module"}