{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/client/src/components/mern/projects/mernSocial.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst configuration = `\nif (process.env.NODE_ENV === 'test') {\n  module.exports = {\n    JWT_SECRET: 'codeworkrauthentication',\n    oauth: {\n      google: { clientID: 'number', clientSecret: 'string' },\n      facebook: { clientID: 'number', clientSecret: 'string' },\n    },\n  };\n} else {\n  module.exports = {\n    JWT_SECRET: 'codeworkrauthentication',\n    oauth: {\n      google: { clientID: 'number', clientSecret: 'string' },\n      facebook: { clientID: 'number', clientSecret: 'string' },\n    },\n  };\n}`.trim();\nconst helpers = `\nconst Joi = require('joi');\n\nmodule.exports = {\n  validateBody: (schema) => {\n    return (req, res, next) => {\n      const result = Joi.validate(req.body, schema);\n      if (result.error) {\n        return res.status(400).json(result.error);\n      }\n\n      if (!req.value) { req.value = {}; }\n      req.value['body'] = result.value;\n      next();\n    }\n  },\n\n  schemas: {\n    authSchema: Joi.object().keys({\n      email: Joi.string().email().required(),\n      password: Joi.string().required()\n    })\n  }\n}`.trim();\nconst models = `\nconst mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\nconst Schema = mongoose.Schema;\n\nconst userSchema = new Schema({\n  methods: { type: [String], required: true },\n  local: {\n    email: { type: String, lowercase: true },\n    password: { type: String }\n  },\n  google: {\n    id: { type: String },\n    email: { type: String, lowercase: true }\n  },\n  facebook: {\n    id: { type: String },\n    email: { type: String, lowercase: true }\n  }\n});\n\nuserSchema.pre('save', async function (next) {\n  try {\n    console.log('entered');\n    if (!this.methods.includes('local')) {\n      next();\n    }\n    \n    const user = this;\n    if (!user.isModified('local.password')) {\n      next();\n    }\n\n    const salt = await bcrypt.genSalt(10);\n    const passwordHash = await bcrypt.hash(this.local.password, salt);\n    this.local.password = passwordHash;\n    console.log('exited');\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\nuserSchema.methods.isValidPassword = async function (newPassword) {\n  try {\n    return await bcrypt.compare(newPassword, this.local.password);\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nconst User = mongoose.model('user', userSchema);\n\nmodule.exports = User;`.trim();\nconst controllers = `\nconst JWT = require('jsonwebtoken');\nconst User = require('../models/user');\nconst { JWT_SECRET } = require('../configuration');\n\nsignToken = user => {\n  return JWT.sign({\n    iss: 'CodeWorkr',\n    sub: user.id,\n    iat: new Date().getTime(),\n    exp: new Date().setDate(new Date().getDate() + 1) // current time + 1 day ahead\n  }, JWT_SECRET);\n}\n\nmodule.exports = {\n  signUp: async (req, res, next) => {\n    const { email, password } = req.value.body;\n\n    // Check if there is a user with the same email\n    let foundUser = await User.findOne({ \"local.email\": email });\n    if (foundUser) {\n      return res.status(403).json({ error: 'Email is already in use' });\n    }\n\n    // Is there a Google account with the same email?\n    foundUser = await User.findOne({\n      $or: [\n        { \"google.email\": email },\n        { \"facebook.email\": email },\n      ]\n    });\n    if (foundUser) {\n      foundUser.methods.push('local')\n      foundUser.local = {\n        email: email,\n        password: password\n      }\n      await foundUser.save()\n      \n      const token = signToken(foundUser);\n      res.cookie('access_token', token, {\n        httpOnly: true\n      });\n      res.status(200).json({ success: true });\n    }\n\n    // Is there a Google account with the same email?\n    foundUser = await User.findOne({ \"facebook.email\": email });\n    if (foundUser) {\n      foundUser.methods.push('local')\n      foundUser.local = {\n        email: email,\n        password: password\n      }\n      await foundUser.save()\n     \n      const token = signToken(foundUser);\n      res.status(200).json({ token });\n    }\n\n    const newUser = new User({\n      methods: ['local'],\n      local: {\n        email: email,\n        password: password\n      }\n    });\n\n    await newUser.save();\n\n    \n    const token = signToken(newUser);\n    res.cookie('access_token', token, {\n      httpOnly: true\n    });\n    res.status(200).json({ success: true });\n  },\n\n  signIn: async (req, res, next) => {\n    \n    const token = signToken(req.user);\n    res.cookie('access_token', token, {\n      httpOnly: true\n    });\n    res.status(200).json({ success: true });\n  },\n\n  signOut: async (req, res, next) => {\n    res.clearCookie('access_token');\n    res.json({ success: true });\n  },\n\n  googleOAuth: async (req, res, next) => {\n    const token = signToken(req.user);\n    res.cookie('access_token', token, {\n      httpOnly: true\n    });\n    res.status(200).json({ success: true });\n  },\n\n  linkGoogle: async (req, res, next) => {\n    res.json({\n      success: true,\n      methods: req.user.methods,\n      message: 'Successfully linked account with Google'\n    });\n  },\n\n  unlinkGoogle: async (req, res, next) => {\n    if (req.user.google) {\n      req.user.google = undefined\n    }\n\n    const googleStrPos = req.user.methods.indexOf('google')\n    if (googleStrPos >= 0) {\n      req.user.methods.splice(googleStrPos, 1)\n    }\n    await req.user.save()\n\n    res.json({\n      success: true,\n      methods: req.user.methods,\n      message: 'Successfully unlinked account from Google'\n    });\n  },\n\n  facebookOAuth: async (req, res, next) => {\n    const token = signToken(req.user);\n    res.cookie('access_token', token, {\n      httpOnly: true\n    });\n    res.status(200).json({ success: true });\n  },\n\n  linkFacebook: async (req, res, next) => {\n    res.json({\n      success: true,\n      methods: req.user.methods,\n      message: 'Successfully linked account with Facebook'\n    });\n  },\n\n  unlinkFacebook: async (req, res, next) => {\n    if (req.user.facebook) {\n      req.user.facebook = undefined\n    }\n    \n    const facebookStrPos = req.user.methods.indexOf('facebook')\n    if (facebookStrPos >= 0) {\n      req.user.methods.splice(facebookStrPos, 1)\n    }\n    await req.user.save()\n\n    res.json({\n      success: true,\n      methods: req.user.methods,\n      message: 'Successfully unlinked account from Facebook'\n    });\n  },\n\n  dashboard: async (req, res, next) => {\n    console.log('I managed to get here!');\n    res.json({\n      secret: \"resource\",\n      methods: req.user.methods\n    });\n  },\n\n  checkAuth: async (req, res, next) => {\n    console.log('I managed to get here!');\n    res.json({ success: true });\n  }\n}`.trim();\nconst routes = `\nconst express = require('express');\nconst router = require('express-promise-router')();\nconst passport = require('passport');\nconst passportConf = require('../passport');\n\nconst { validateBody, schemas } = require('../helpers/routeHelpers');\nconst UsersController = require('../controllers/users');\nconst passportSignIn = passport.authenticate('local', { session: false });\nconst passportJWT = passport.authenticate('jwt', { session: false });\n\nrouter.route('/signup')\n  .post(validateBody(schemas.authSchema), UsersController.signUp);\n\nrouter.route('/signin')\n  .post(validateBody(schemas.authSchema), passportSignIn, UsersController.signIn);\n\nrouter.route('/signout')\n  .get(passportJWT, UsersController.signOut);\n\nrouter.route('/oauth/google')\n  .post(passport.authenticate('googleToken', { session: false }), UsersController.googleOAuth);\n\nrouter.route('/oauth/facebook')\n  .post(passport.authenticate('facebookToken', { session: false }), UsersController.facebookOAuth);\n\nrouter.route('/oauth/link/google')\n  .post(passportJWT, passport.authorize('googleToken', { session: false }), UsersController.linkGoogle)\n\nrouter.route('/oauth/unlink/google')\n  .post(passportJWT, UsersController.unlinkGoogle);\n\nrouter.route('/oauth/link/facebook')\n  .post(passportJWT, passport.authorize('facebookToken', { session: false }), UsersController.linkFacebook)\n\nrouter.route('/oauth/unlink/facebook')\n  .post(passportJWT, UsersController.unlinkFacebook);\n\nrouter.route('/dashboard')\n  .get(passportJWT, UsersController.dashboard);\n\nrouter.route('/status')\n  .get(passportJWT, UsersController.checkAuth);\n\nmodule.exports = router;`.trim();\nconst passport = `\nconst passport = require('passport');\nconst JwtStrategy = require('passport-jwt').Strategy;\nconst { ExtractJwt } = require('passport-jwt');\nconst LocalStrategy = require('passport-local').Strategy;\nconst GooglePlusTokenStrategy = require('passport-google-plus-token');\nconst FacebookTokenStrategy = require('passport-facebook-token');\nconst config = require('./configuration');\nconst User = require('./models/user');\n\nconst cookieExtractor = req => {\n  let token = null;\n  if (req && req.cookies) {\n    token = req.cookies['access_token'];\n  }\n  return token;\n}\n\npassport.use(new JwtStrategy({\n  jwtFromRequest: cookieExtractor,\n  secretOrKey: config.JWT_SECRET,\n  passReqToCallback: true\n}, async (req, payload, done) => {\n  try {\n    const user = await User.findById(payload.sub);\n\n    if (!user) {\n      return done(null, false);\n    }\n\n    req.user = user;\n    done(null, user);\n  } catch(error) {\n    done(error, false);\n  }\n}));\n\n// Google OAuth Strategy\npassport.use('googleToken', new GooglePlusTokenStrategy({\n  clientID: config.oauth.google.clientID,\n  clientSecret: config.oauth.google.clientSecret,\n  passReqToCallback: true,\n}, async (req, accessToken, refreshToken, profile, done) => {\n  try {\n    console.log('profile', profile);\n    console.log('accessToken', accessToken);\n    console.log('refreshToken', refreshToken);\n\n    if (req.user) {\n      req.user.methods.push('google')\n      req.user.google = {\n        id: profile.id,\n        email: profile.emails[0].value\n      }\n      await req.user.save()\n      return done(null, req.user);\n    } \n    else {\n      let existingUser = await User.findOne({ \"google.id\": profile.id });\n      if (existingUser) {\n        return done(null, existingUser);\n      }\n\n      existingUser = await User.findOne({ \"local.email\": profile.emails[0].value })\n      if (existingUser) {\n        existingUser.methods.push('google')\n        existingUser.google = {\n          id: profile.id,\n          email: profile.emails[0].value\n        }\n        await existingUser.save()\n        return done(null, existingUser);\n      }\n\n      const newUser = new User({\n        methods: ['google'],\n        google: {\n          id: profile.id,\n          email: profile.emails[0].value\n        }\n      });\n\n      await newUser.save();\n      done(null, newUser);\n    }\n  } catch(error) {\n    done(error, false, error.message);\n  }\n}));\n\npassport.use('facebookToken', new FacebookTokenStrategy({\n  clientID: config.oauth.facebook.clientID,\n  clientSecret: config.oauth.facebook.clientSecret,\n  passReqToCallback: true\n}, async (req, accessToken, refreshToken, profile, done) => {\n  try {\n    console.log('profile', profile);\n    console.log('accessToken', accessToken);\n    console.log('refreshToken', refreshToken);\n\n    if (req.user) {\n      req.user.methods.push('facebook')\n      req.user.facebook = {\n        id: profile.id,\n        email: profile.emails[0].value\n      }\n      await req.user.save();\n      return done(null, req.user);\n    } \n    else {\n      let existingUser = await User.findOne({ \"facebook.id\": profile.id });\n      if (existingUser) {\n        return done(null, existingUser);\n      }\n\n      existingUser = await User.findOne({ \"local.email\": profile.emails[0].value })\n      if (existingUser) {\n        existingUser.methods.push('facebook')\n        existingUser.facebook = {\n          id: profile.id,\n          email: profile.emails[0].value\n        }\n        await existingUser.save()\n        return done(null, existingUser);\n      }\n\n      const newUser = new User({\n        methods: ['facebook'],\n        facebook: {\n          id: profile.id,\n          email: profile.emails[0].value\n        }\n      });\n\n      await newUser.save();\n      done(null, newUser);\n    }\n  } catch(error) {\n    done(error, false, error.message);\n  }\n}));\n\n// LOCAL STRATEGY\npassport.use(new LocalStrategy({\n  usernameField: 'email'\n}, async (email, password, done) => {\n  try {\n    const user = await User.findOne({ \"local.email\": email });\n\n    if (!user) {\n      return done(null, false);\n    }\n\n    const isMatch = await user.isValidPassword(password);\n\n    if (!isMatch) {\n      return done(null, false);\n    }\n\n    done(null, user);\n  } catch(error) {\n    done(error, false);\n  }\n}));`.trim();\nconst appServer = `\nconst express = require(\"express\");\nconst morgan = require(\"morgan\");\nconst mongoose = require(\"mongoose\");\nconst cors = require(\"cors\");\nconst cookieParser = require(\"cookie-parser\");\n\nmongoose.Promise = global.Promise;\nif (process.env.NODE_ENV === \"test\") {\n  mongoose.connect(\"mongodb://localhost/googleFacebookAuth\", {\n    useNewUrlParser: true\n  });\n} else {\n  mongoose.connect(\"mongodb://localhost/googleFacebookAuth\", {\n    useNewUrlParser: true\n  });\n}\n\nconst app = express();\napp.use(cookieParser());\napp.use(\n  cors({\n    origin: \"http://localhost:3000\",\n    credentials: true\n  })\n);\n\nif (!process.env.NODE_ENV === \"test\") {\n  app.use(morgan(\"dev\"));\n}\n\napp.use(express.json());\napp.use(\"/users\", require(\"./routes/users\"));\n\nmodule.exports = app;\n`.trim();\nconst actions = `\n//actions/types.js\nexport const AUTH_SIGN_UP = 'AUTH_SIGN_UP';\nexport const AUTH_SIGN_OUT = 'AUTH_SIGN_OUT';\nexport const AUTH_SIGN_IN = 'AUTH_SIGN_IN';\nexport const AUTH_LINK_GOOGLE = 'AUTH_LINK_GOOGLE';\nexport const AUTH_LINK_FACEBOOK = 'AUTH_LINK_FACEBOOK';\nexport const AUTH_UNLINK_GOOGLE = 'AUTH_UNLINK_GOOGLE';\nexport const AUTH_UNLINK_FACEBOOK = 'AUTH_UNLINK_FACEBOOK';\n\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const DASHBOARD_GET_DATA = 'DASHBOARD_GET_DATA';\n\n\n//actions/index.js\nimport axios from 'axios';\nimport {\n  AUTH_SIGN_UP,\n  AUTH_SIGN_OUT,\n  AUTH_SIGN_IN,\n  AUTH_LINK_GOOGLE,\n  AUTH_LINK_FACEBOOK,\n  AUTH_UNLINK_GOOGLE,\n  AUTH_UNLINK_FACEBOOK,\n  AUTH_ERROR,\n  DASHBOARD_GET_DATA } from './types';\n\nexport const oauthGoogle = data => {\n  return async dispatch => {\n    await axios.post('http://localhost:5000/users/oauth/google', {\n      access_token: data\n    });\n\n    dispatch({\n      type: AUTH_SIGN_UP\n    });\n  };\n}\n\nexport const linkGoogle = data => {\n  return async dispatch => {\n    const res = await axios.post('http://localhost:5000/users/oauth/link/google', {\n      access_token: data\n    });\n\n    dispatch({\n      type: AUTH_LINK_GOOGLE,\n      payload: res.data\n    });\n  };\n}\n\nexport const unlinkGoogle = data => {\n  return async dispatch => {\n    const res = await axios.post('http://localhost:5000/users/oauth/unlink/google');\n\n    dispatch({\n      type: AUTH_UNLINK_GOOGLE,\n      payload: res.data\n    });\n  };\n}\n\nexport const linkFacebook = data => {\n  return async dispatch => {\n    const res = await axios.post('http://localhost:5000/users/oauth/link/facebook', {\n      access_token: data\n    });\n\n    dispatch({\n      type: AUTH_LINK_FACEBOOK,\n      payload: res.data\n    });\n  };\n}\n\nexport const unlinkFacebook = data => {\n  return async dispatch => {\n    const res = await axios.post('http://localhost:5000/users/oauth/unlink/facebook');\n\n    dispatch({\n      type: AUTH_UNLINK_FACEBOOK,\n      payload: res.data\n    });\n  };\n}\n\nexport const oauthFacebook = data => {\n  return async dispatch => {\n    await axios.post('http://localhost:5000/users/oauth/facebook', {\n      access_token: data\n    });\n\n    dispatch({\n      type: AUTH_SIGN_UP\n    });\n  };\n}\n\nexport const signUp = data => {\n  return async dispatch => {\n    try {\n      await axios.post('http://localhost:5000/users/signup', data);\n\n      dispatch({\n        type: AUTH_SIGN_UP\n      });\n    } catch(err) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: 'Email is already in use'\n      })\n    }\n  };\n}\n\nexport const signIn = data => {\n  return async dispatch => {\n    try {\n      await axios.post('http://localhost:5000/users/signin', data);\n\n      dispatch({\n        type: AUTH_SIGN_IN\n      });\n    } catch(err) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: 'Email and password combination isn\\'t valid'\n      })\n    }\n  };\n}\n\nexport const checkAuth = () => {\n  return async dispatch => {\n    try {\n      await axios.get('http://localhost:5000/users/status');\n\n      dispatch({\n        type: AUTH_SIGN_IN\n      });\n\n      console.log('user is auth-ed')\n    } catch(err) {\n      console.log('error', err)\n    }\n  };\n}\n\nexport const getDashboard = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.get('http://localhost:5000/users/dashboard')\n\n      dispatch({\n        type: DASHBOARD_GET_DATA,\n        payload: res.data\n      })\n\n    } catch(err) {\n      console.error('err', err)\n    }\n  }\n}\n\nexport const signOut = () => {\n  return async dispatch => {\n    await axios.get('http://localhost:5000/users/signout');\n\n    dispatch({\n      type: AUTH_SIGN_OUT\n    })\n  };\n}\n`.trim();\nconst reducers = `\n//reducers/auth.js\nimport {\n  AUTH_SIGN_UP,\n  AUTH_SIGN_OUT,\n  AUTH_SIGN_IN,\n  AUTH_ERROR } from '../actions/types';\n\nconst DEFAULT_STATE = {\n  isAuthenticated: false,\n  errorMessage: ''\n}\n\nexport default (state = DEFAULT_STATE, action) => {\n  switch(action.type) {\n    case AUTH_SIGN_UP:\n      return { ...state, isAuthenticated: true, errorMessage: '' }\n    case AUTH_SIGN_IN:\n      return { ...state, isAuthenticated: true, errorMessage: '' }\n    case AUTH_SIGN_OUT:\n      return { ...state, isAuthenticated: false, errorMessage: '' }\n    case AUTH_ERROR:\n      return { ...state, errorMessage: action.payload }\n    default:\n      return state\n  }\n}\n\n\n\n//reducers/dashboard.js\nimport {\n  DASHBOARD_GET_DATA,\n  AUTH_LINK_GOOGLE,\n  AUTH_LINK_FACEBOOK,\n  AUTH_UNLINK_GOOGLE,\n  AUTH_UNLINK_FACEBOOK\n} from '../actions/types';\n\nconst DEFAULT_STATE = {\n  secret: '',\n  methods: []\n}\n\nexport default (state = DEFAULT_STATE, action) => {\n  switch(action.type) {\n    case AUTH_LINK_GOOGLE:\n      return { ...state, methods: action.payload.methods }\n    case AUTH_LINK_FACEBOOK:\n      return { ...state, methods: action.payload.methods }\n    case AUTH_UNLINK_GOOGLE:\n      return { ...state, methods: action.payload.methods }\n    case AUTH_UNLINK_FACEBOOK:\n      return { ...state, methods: action.payload.methods }\n    case DASHBOARD_GET_DATA:\n      return { ...state, secret: action.payload.secret, methods: action.payload.methods }\n    default:\n      return state\n  }\n}\n\n\n\n//reducers/index.js\nimport { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from './auth';\nimport dashboardReducer from './dashboard';\n\nexport default combineReducers({\n  form: formReducer,\n  auth: authReducer,\n  dash: dashboardReducer\n});`.trim();\nconst authGuard = `\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nexport default (OriginalComponent) => {\n  class MixedComponent extends Component {\n\n    checkAuth() {\n      if (!this.props.isAuth && !this.props.jwtToken) {\n        this.props.history.push('/');\n      }\n    }\n\n    componentDidMount() { this.checkAuth(); }\n    componentDidUpdate() { this.checkAuth(); }\n\n    render() {\n      return <OriginalComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state) {\n    return {\n      isAuth: state.auth.isAuthenticated,\n      jwtToken: state.auth.token\n    }\n  }\n\n  return connect(mapStateToProps)(MixedComponent);\n};`.trim();\nconst customInput = `\nimport React, { Component } from 'react';\n\nexport default class CustomInput extends Component {\n  render() {\n    const { input: { value, onChange } } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label htmlFor={this.props.id}>{this.props.label}</label>\n        <input\n          name={this.props.name}\n          id={this.props.id}\n          placeholder={this.props.placeholder}\n          className=\"form-control\"\n          type={this.props.type}\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n    );\n  }\n}`.trim();\nconst dashboard = `\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n\nimport * as actions from '../actions';\n\nclass Dashboard extends Component {\n  async componentDidMount() {\n    this.props.getDashboard()\n  }\n\n  linkFacebook = async (res) => {\n    console.log('Link with Facebook', res)\n    await this.props.linkFacebook(res.accessToken);\n  }\n\n  linkGoogle = async (res) => {\n    console.log('Link with Google', res)\n    await this.props.linkGoogle(res.accessToken);\n  }\n\n  unlinkGoogle = async () => {\n    console.log('Unlink Google')\n    await this.props.unlinkGoogle();\n  }\n\n  unlinkFacebook = async (res) => {\n    console.log('Unlink Facebook')\n    await this.props.unlinkFacebook();\n  }\n\n  render() {\n    return (\n      <div>\n        This is a Dashboard component\n        <br />\n        Our secret: <h3>{this.props.secret}</h3>\n\n        <h2>Link your social media accounts</h2>\n        <FacebookLogin\n          appId=\"171335970085090\"\n          disabled={true}\n          render={renderProps => (\n            <button style={{ marginRight: 15 }} className=\"btn btn-primary\" onClick={renderProps.onClick} \n                  disabled={this.props.dashboard.methods.includes('facebook') ? true : false}>Link with Facebook\n            </button>\n          )}\n          fields=\"name,email,picture\"\n          callback={this.linkFacebook}\n          cssClass=\"btn btn-outline-primary\"\n        />\n        <GoogleLogin\n          clientId=\"499420307488-hj9l9h3amt5into76m9i0ntkaqcg9q4t.apps.googleusercontent.com\"\n          disabled={this.props.dashboard.methods.includes('google') ? true : false}\n          render={renderProps => (\n            <button className=\"btn btn-danger\" onClick={renderProps.onClick} \n                disabled={renderProps.disabled}>Link with Google\n            </button>\n          )}\n          onSuccess={this.linkGoogle}\n          onFailure={this.linkGoogle}\n        />\n        <br />\n       \n        <h2>Unlink your social media accounts</h2>\n        <button\n          style={{ marginRight: 15 }}\n          className=\"btn btn-primary\"\n          onClick={() => this.unlinkFacebook()}\n          disabled={this.props.dashboard.methods.includes('facebook') ? false : true}\n        >\n          Unlink with Facebook\n        </button>\n        <button\n          className=\"btn btn-danger\"\n          onClick={() => this.unlinkGoogle()}\n          disabled={this.props.dashboard.methods.includes('google') ? false : true}\n        >\n          Unlink with Google\n        </button>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  console.log('state', state)\n  return {\n    secret: state.dash.secret,\n    dashboard: state.dash,\n    auth: state.auth\n  }\n}\n\nexport default connect(mapStateToProps, actions)(Dashboard);\n`.trim();\nconst header = `\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../actions';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.signOut = this.signOut.bind(this);\n  }\n\n  signOut() { this.props.signOut() }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\" style={{ marginBottom: '30px' }}>\n        <Link className=\"navbar-brand\" to=\"/\">CodeWorkr API Auth</Link>\n\n        <div className=\"collapse navbar-collapse\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/dashboard\">Dashboard</Link>\n            </li>\n          </ul>\n\n          <ul className=\"nav navbar-nav ml-auto\">\n            {!this.props.isAuth ?\n              [<li className=\"nav-item\" key=\"signup\">\n                <Link className=\"nav-link\" to=\"/signup\">Sign Up</Link>\n              </li>,\n              <li className=\"nav-item\" key=\"signin\">\n                <Link className=\"nav-link\" to=\"/signin\">Sign In</Link>\n              </li>] : null}\n\n            {this.props.isAuth ?\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/signout\" onClick={this.signOut}>Sign Out</Link>\n              </li> : null}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuth: state.auth.isAuthenticated\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Header);`.trim();\nconst signIn = `\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n\nimport * as actions from '../actions';\nimport CustomInput from './CustomInput';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.responseGoogle = this.responseGoogle.bind(this);\n    this.responseFacebook = this.responseFacebook.bind(this);\n  }\n\n  async onSubmit(formData) {\n    await this.props.signIn(formData);\n    if (!this.props.errorMessage) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  async responseGoogle(res) {\n    await this.props.oauthGoogle(res.accessToken);\n    if (!this.props.errorMessage) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  async responseFacebook(res) {\n    await this.props.oauthFacebook(res.accessToken);\n    if (!this.props.errorMessage) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <div className=\"row\">\n        <div className=\"col\">\n          <form onSubmit={handleSubmit(this.onSubmit)}>\n            <fieldset>\n              <Field\n                name=\"email\"\n                type=\"text\"\n                id=\"email\"\n                label=\"Enter your email\"\n                placeholder=\"example@example.com\"\n                component={ CustomInput } />\n            </fieldset>\n            <fieldset>\n              <Field\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                label=\"Enter your password\"\n                placeholder=\"yoursuperpassword\"\n                component={ CustomInput } />\n            </fieldset>\n\n            { this.props.errorMessage ?\n            <div className=\"alert alert-danger\">\n              { this.props.errorMessage }\n            </div> : null }\n\n            <button type=\"submit\" className=\"btn btn-primary\">Sign In</button>\n          </form>\n        </div>\n        <div className=\"col\">\n          <div className=\"text-center\">\n            <div className=\"alert alert-primary\">\n              Or sign in using third-party services\n            </div>\n            <FacebookLogin\n              appId=\"number\"\n              render={renderProps => (\n                <button style={{ marginRight: 15 }} className=\"btn btn-primary\" onClick={renderProps.onClick}>Fb</button>\n              )}\n              fields=\"name,email,picture\"\n              callback={this.responseFacebook}\n              cssClass=\"btn btn-outline-primary\"\n            />\n            <GoogleLogin\n              clientId=\"number\"\n              render={renderProps => (\n              <button className=\"btn btn-danger\" onClick={renderProps.onClick} disabled={renderProps.disabled}>Go</button>\n              )}\n              onSuccess={this.responseGoogle}\n              onFailure={this.responseGoogle}\n              className=\"btn btn-outline-danger\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.auth.errorMessage\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, actions),\n  reduxForm({ form: 'signin' })\n)(SignIn)\n`.trim();\nconst signUp = `\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n\nimport * as actions from '../actions';\nimport CustomInput from './CustomInput';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.responseGoogle = this.responseGoogle.bind(this);\n    this.responseFacebook = this.responseFacebook.bind(this);\n  }\n\n  async onSubmit(formData) {\n    await this.props.signUp(formData);\n    if (!this.props.errorMessage) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  async responseGoogle(res) {\n    await this.props.oauthGoogle(res.accessToken);\n    if (!this.props.errorMessage) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  async responseFacebook(res) {\n    await this.props.oauthFacebook(res.accessToken);\n    if (!this.props.errorMessage) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <div className=\"row\">\n        <div className=\"col\">\n          <form onSubmit={handleSubmit(this.onSubmit)}>\n            <fieldset>\n              <Field\n                name=\"email\"\n                type=\"text\"\n                id=\"email\"\n                label=\"Enter your email\"\n                placeholder=\"example@example.com\"\n                component={ CustomInput } />\n            </fieldset>\n            <fieldset>\n              <Field\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                label=\"Enter your password\"\n                placeholder=\"yoursuperpassword\"\n                component={ CustomInput } />\n            </fieldset>\n\n            { this.props.errorMessage ?\n            <div className=\"alert alert-danger\">\n              { this.props.errorMessage }\n            </div> : null }\n\n            <button type=\"submit\" className=\"btn btn-primary\">Sign Up</button>\n          </form>\n        </div>\n        <div className=\"col\">\n          <div className=\"text-center\">\n            <div className=\"alert alert-primary\">\n              Or sign up using third-party services\n            </div>\n            <FacebookLogin\n              appId=\"number\"\n              render={renderProps => (\n                <button style={{ marginRight: 15 }} className=\"btn btn-primary\" onClick={renderProps.onClick}>Fb</button>\n              )}\n              fields=\"name,email,picture\"\n              callback={this.responseFacebook}\n              cssClass=\"btn btn-outline-primary\"\n            />\n            <GoogleLogin\n              clientId=\"number\"\n              render={renderProps => (\n                <button className=\"btn btn-danger\" onClick={renderProps.onClick} disabled={renderProps.disabled}>Go</button>\n              )}\n              onSuccess={this.responseGoogle}\n              onFailure={this.responseGoogle}\n              className=\"btn btn-outline-danger\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.auth.errorMessage\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, actions),\n  reduxForm({ form: 'signup' })\n)(SignUp)\n`.trim();\nconst ClientApp = `\n//components/Home.js\nimport React from 'react';\n\nexport default () => {\n  return <p>Welcome to our home page!</p>\n};\n\n\n//components/App.js\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Header from './Header';\nimport * as actions from '../actions';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.checkAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"container\">\n        { this.props.children }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, actions)(App);\n`.trim();\nconst MainIndex = `\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport axios from 'axios';\n\nimport App from './components/App';\nimport Home from './components/Home';\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport Dashboard from './components/Dashboard';\nimport reducers from './reducers';\n\nimport authGuard from './components/HOCs/authGuard';\n\naxios.defaults.withCredentials = true;\n\nReactDOM.render(\n  <Provider store={createStore(reducers, {}, applyMiddleware(reduxThunk))}>\n    <BrowserRouter>\n      <App>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/signup\" component={SignUp} />\n        <Route exact path=\"/signin\" component={SignIn} />\n        <Route exact path=\"/dashboard\" component={authGuard(Dashboard)} />\n      </App>\n    </BrowserRouter>\n  </Provider>,\n  document.querySelector('#root'));\n`.trim();\n\nclass MernSocial extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1315\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1316\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1317\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1318\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1318\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1321\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1322\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1323\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1324\n      },\n      __self: this\n    }, \"Server\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1325\n      },\n      __self: this\n    }, \"configuration/index.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1326\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: configuration,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1327\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1333\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1334\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1336\n      },\n      __self: this\n    }, \"helpers/routeHelpers.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1337\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1338\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: helpers,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1339\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1345\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1346\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1348\n      },\n      __self: this\n    }, \"models/user.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1349\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1350\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: models,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1351\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1357\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1358\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1360\n      },\n      __self: this\n    }, \"controllers/users.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1361\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1362\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: controllers,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1363\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1369\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1370\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1372\n      },\n      __self: this\n    }, \"routes/users.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1373\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1374\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: routes,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1375\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1381\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1382\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1384\n      },\n      __self: this\n    }, \"passport.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1385\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1386\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: passport,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1387\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1393\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1394\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1396\n      },\n      __self: this\n    }, \"app.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1397\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1398\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: appServer,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1399\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1405\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1406\n      },\n      __self: this\n    }, \"Client\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1407\n      },\n      __self: this\n    }, \"actions/types.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1408\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: actions,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1409\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1415\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1416\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1418\n      },\n      __self: this\n    }, \"reducers/\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1419\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1420\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: reducers,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1421\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1427\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1428\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1430\n      },\n      __self: this\n    }, \"components/HOC/authGuard.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1431\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1432\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: authGuard,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1433\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1439\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1440\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1442\n      },\n      __self: this\n    }, \"components/CustomInput.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1443\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1444\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: customInput,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1445\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1451\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1452\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1454\n      },\n      __self: this\n    }, \"components/Dashboard.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1455\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1456\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: dashboard,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1457\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1463\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1464\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1466\n      },\n      __self: this\n    }, \"components/Header.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1467\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1468\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: header,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1469\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1475\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1476\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1478\n      },\n      __self: this\n    }, \"components/SignIn.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1479\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1480\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: signIn,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1481\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1487\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1488\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1490\n      },\n      __self: this\n    }, \"components/SignUp.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1491\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1492\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: signUp,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1493\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1499\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1500\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1502\n      },\n      __self: this\n    }, \"components/App.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1503\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1504\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: ClientApp,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1505\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1511\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1512\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1514\n      },\n      __self: this\n    }, \"index.js\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1515\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1516\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: MainIndex,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1517\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(MernSocial);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/client/src/components/mern/projects/mernSocial.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","configuration","trim","helpers","models","controllers","routes","passport","appServer","actions","reducers","authGuard","customInput","dashboard","header","signIn","signUp","ClientApp","MainIndex","MernSocial","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst configuration = `\nif (process.env.NODE_ENV === 'test') {\n  module.exports = {\n    JWT_SECRET: 'codeworkrauthentication',\n    oauth: {\n      google: { clientID: 'number', clientSecret: 'string' },\n      facebook: { clientID: 'number', clientSecret: 'string' },\n    },\n  };\n} else {\n  module.exports = {\n    JWT_SECRET: 'codeworkrauthentication',\n    oauth: {\n      google: { clientID: 'number', clientSecret: 'string' },\n      facebook: { clientID: 'number', clientSecret: 'string' },\n    },\n  };\n}`.trim();\n\nconst helpers = `\nconst Joi = require('joi');\n\nmodule.exports = {\n  validateBody: (schema) => {\n    return (req, res, next) => {\n      const result = Joi.validate(req.body, schema);\n      if (result.error) {\n        return res.status(400).json(result.error);\n      }\n\n      if (!req.value) { req.value = {}; }\n      req.value['body'] = result.value;\n      next();\n    }\n  },\n\n  schemas: {\n    authSchema: Joi.object().keys({\n      email: Joi.string().email().required(),\n      password: Joi.string().required()\n    })\n  }\n}`.trim();\n\nconst models = `\nconst mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\nconst Schema = mongoose.Schema;\n\nconst userSchema = new Schema({\n  methods: { type: [String], required: true },\n  local: {\n    email: { type: String, lowercase: true },\n    password: { type: String }\n  },\n  google: {\n    id: { type: String },\n    email: { type: String, lowercase: true }\n  },\n  facebook: {\n    id: { type: String },\n    email: { type: String, lowercase: true }\n  }\n});\n\nuserSchema.pre('save', async function (next) {\n  try {\n    console.log('entered');\n    if (!this.methods.includes('local')) {\n      next();\n    }\n    \n    const user = this;\n    if (!user.isModified('local.password')) {\n      next();\n    }\n\n    const salt = await bcrypt.genSalt(10);\n    const passwordHash = await bcrypt.hash(this.local.password, salt);\n    this.local.password = passwordHash;\n    console.log('exited');\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\nuserSchema.methods.isValidPassword = async function (newPassword) {\n  try {\n    return await bcrypt.compare(newPassword, this.local.password);\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nconst User = mongoose.model('user', userSchema);\n\nmodule.exports = User;`.trim();\n\nconst controllers = `\nconst JWT = require('jsonwebtoken');\nconst User = require('../models/user');\nconst { JWT_SECRET } = require('../configuration');\n\nsignToken = user => {\n  return JWT.sign({\n    iss: 'CodeWorkr',\n    sub: user.id,\n    iat: new Date().getTime(),\n    exp: new Date().setDate(new Date().getDate() + 1) // current time + 1 day ahead\n  }, JWT_SECRET);\n}\n\nmodule.exports = {\n  signUp: async (req, res, next) => {\n    const { email, password } = req.value.body;\n\n    // Check if there is a user with the same email\n    let foundUser = await User.findOne({ \"local.email\": email });\n    if (foundUser) {\n      return res.status(403).json({ error: 'Email is already in use' });\n    }\n\n    // Is there a Google account with the same email?\n    foundUser = await User.findOne({\n      $or: [\n        { \"google.email\": email },\n        { \"facebook.email\": email },\n      ]\n    });\n    if (foundUser) {\n      foundUser.methods.push('local')\n      foundUser.local = {\n        email: email,\n        password: password\n      }\n      await foundUser.save()\n      \n      const token = signToken(foundUser);\n      res.cookie('access_token', token, {\n        httpOnly: true\n      });\n      res.status(200).json({ success: true });\n    }\n\n    // Is there a Google account with the same email?\n    foundUser = await User.findOne({ \"facebook.email\": email });\n    if (foundUser) {\n      foundUser.methods.push('local')\n      foundUser.local = {\n        email: email,\n        password: password\n      }\n      await foundUser.save()\n     \n      const token = signToken(foundUser);\n      res.status(200).json({ token });\n    }\n\n    const newUser = new User({\n      methods: ['local'],\n      local: {\n        email: email,\n        password: password\n      }\n    });\n\n    await newUser.save();\n\n    \n    const token = signToken(newUser);\n    res.cookie('access_token', token, {\n      httpOnly: true\n    });\n    res.status(200).json({ success: true });\n  },\n\n  signIn: async (req, res, next) => {\n    \n    const token = signToken(req.user);\n    res.cookie('access_token', token, {\n      httpOnly: true\n    });\n    res.status(200).json({ success: true });\n  },\n\n  signOut: async (req, res, next) => {\n    res.clearCookie('access_token');\n    res.json({ success: true });\n  },\n\n  googleOAuth: async (req, res, next) => {\n    const token = signToken(req.user);\n    res.cookie('access_token', token, {\n      httpOnly: true\n    });\n    res.status(200).json({ success: true });\n  },\n\n  linkGoogle: async (req, res, next) => {\n    res.json({\n      success: true,\n      methods: req.user.methods,\n      message: 'Successfully linked account with Google'\n    });\n  },\n\n  unlinkGoogle: async (req, res, next) => {\n    if (req.user.google) {\n      req.user.google = undefined\n    }\n\n    const googleStrPos = req.user.methods.indexOf('google')\n    if (googleStrPos >= 0) {\n      req.user.methods.splice(googleStrPos, 1)\n    }\n    await req.user.save()\n\n    res.json({\n      success: true,\n      methods: req.user.methods,\n      message: 'Successfully unlinked account from Google'\n    });\n  },\n\n  facebookOAuth: async (req, res, next) => {\n    const token = signToken(req.user);\n    res.cookie('access_token', token, {\n      httpOnly: true\n    });\n    res.status(200).json({ success: true });\n  },\n\n  linkFacebook: async (req, res, next) => {\n    res.json({\n      success: true,\n      methods: req.user.methods,\n      message: 'Successfully linked account with Facebook'\n    });\n  },\n\n  unlinkFacebook: async (req, res, next) => {\n    if (req.user.facebook) {\n      req.user.facebook = undefined\n    }\n    \n    const facebookStrPos = req.user.methods.indexOf('facebook')\n    if (facebookStrPos >= 0) {\n      req.user.methods.splice(facebookStrPos, 1)\n    }\n    await req.user.save()\n\n    res.json({\n      success: true,\n      methods: req.user.methods,\n      message: 'Successfully unlinked account from Facebook'\n    });\n  },\n\n  dashboard: async (req, res, next) => {\n    console.log('I managed to get here!');\n    res.json({\n      secret: \"resource\",\n      methods: req.user.methods\n    });\n  },\n\n  checkAuth: async (req, res, next) => {\n    console.log('I managed to get here!');\n    res.json({ success: true });\n  }\n}`.trim();\n\nconst routes = `\nconst express = require('express');\nconst router = require('express-promise-router')();\nconst passport = require('passport');\nconst passportConf = require('../passport');\n\nconst { validateBody, schemas } = require('../helpers/routeHelpers');\nconst UsersController = require('../controllers/users');\nconst passportSignIn = passport.authenticate('local', { session: false });\nconst passportJWT = passport.authenticate('jwt', { session: false });\n\nrouter.route('/signup')\n  .post(validateBody(schemas.authSchema), UsersController.signUp);\n\nrouter.route('/signin')\n  .post(validateBody(schemas.authSchema), passportSignIn, UsersController.signIn);\n\nrouter.route('/signout')\n  .get(passportJWT, UsersController.signOut);\n\nrouter.route('/oauth/google')\n  .post(passport.authenticate('googleToken', { session: false }), UsersController.googleOAuth);\n\nrouter.route('/oauth/facebook')\n  .post(passport.authenticate('facebookToken', { session: false }), UsersController.facebookOAuth);\n\nrouter.route('/oauth/link/google')\n  .post(passportJWT, passport.authorize('googleToken', { session: false }), UsersController.linkGoogle)\n\nrouter.route('/oauth/unlink/google')\n  .post(passportJWT, UsersController.unlinkGoogle);\n\nrouter.route('/oauth/link/facebook')\n  .post(passportJWT, passport.authorize('facebookToken', { session: false }), UsersController.linkFacebook)\n\nrouter.route('/oauth/unlink/facebook')\n  .post(passportJWT, UsersController.unlinkFacebook);\n\nrouter.route('/dashboard')\n  .get(passportJWT, UsersController.dashboard);\n\nrouter.route('/status')\n  .get(passportJWT, UsersController.checkAuth);\n\nmodule.exports = router;`.trim();\n\nconst passport = `\nconst passport = require('passport');\nconst JwtStrategy = require('passport-jwt').Strategy;\nconst { ExtractJwt } = require('passport-jwt');\nconst LocalStrategy = require('passport-local').Strategy;\nconst GooglePlusTokenStrategy = require('passport-google-plus-token');\nconst FacebookTokenStrategy = require('passport-facebook-token');\nconst config = require('./configuration');\nconst User = require('./models/user');\n\nconst cookieExtractor = req => {\n  let token = null;\n  if (req && req.cookies) {\n    token = req.cookies['access_token'];\n  }\n  return token;\n}\n\npassport.use(new JwtStrategy({\n  jwtFromRequest: cookieExtractor,\n  secretOrKey: config.JWT_SECRET,\n  passReqToCallback: true\n}, async (req, payload, done) => {\n  try {\n    const user = await User.findById(payload.sub);\n\n    if (!user) {\n      return done(null, false);\n    }\n\n    req.user = user;\n    done(null, user);\n  } catch(error) {\n    done(error, false);\n  }\n}));\n\n// Google OAuth Strategy\npassport.use('googleToken', new GooglePlusTokenStrategy({\n  clientID: config.oauth.google.clientID,\n  clientSecret: config.oauth.google.clientSecret,\n  passReqToCallback: true,\n}, async (req, accessToken, refreshToken, profile, done) => {\n  try {\n    console.log('profile', profile);\n    console.log('accessToken', accessToken);\n    console.log('refreshToken', refreshToken);\n\n    if (req.user) {\n      req.user.methods.push('google')\n      req.user.google = {\n        id: profile.id,\n        email: profile.emails[0].value\n      }\n      await req.user.save()\n      return done(null, req.user);\n    } \n    else {\n      let existingUser = await User.findOne({ \"google.id\": profile.id });\n      if (existingUser) {\n        return done(null, existingUser);\n      }\n\n      existingUser = await User.findOne({ \"local.email\": profile.emails[0].value })\n      if (existingUser) {\n        existingUser.methods.push('google')\n        existingUser.google = {\n          id: profile.id,\n          email: profile.emails[0].value\n        }\n        await existingUser.save()\n        return done(null, existingUser);\n      }\n\n      const newUser = new User({\n        methods: ['google'],\n        google: {\n          id: profile.id,\n          email: profile.emails[0].value\n        }\n      });\n\n      await newUser.save();\n      done(null, newUser);\n    }\n  } catch(error) {\n    done(error, false, error.message);\n  }\n}));\n\npassport.use('facebookToken', new FacebookTokenStrategy({\n  clientID: config.oauth.facebook.clientID,\n  clientSecret: config.oauth.facebook.clientSecret,\n  passReqToCallback: true\n}, async (req, accessToken, refreshToken, profile, done) => {\n  try {\n    console.log('profile', profile);\n    console.log('accessToken', accessToken);\n    console.log('refreshToken', refreshToken);\n\n    if (req.user) {\n      req.user.methods.push('facebook')\n      req.user.facebook = {\n        id: profile.id,\n        email: profile.emails[0].value\n      }\n      await req.user.save();\n      return done(null, req.user);\n    } \n    else {\n      let existingUser = await User.findOne({ \"facebook.id\": profile.id });\n      if (existingUser) {\n        return done(null, existingUser);\n      }\n\n      existingUser = await User.findOne({ \"local.email\": profile.emails[0].value })\n      if (existingUser) {\n        existingUser.methods.push('facebook')\n        existingUser.facebook = {\n          id: profile.id,\n          email: profile.emails[0].value\n        }\n        await existingUser.save()\n        return done(null, existingUser);\n      }\n\n      const newUser = new User({\n        methods: ['facebook'],\n        facebook: {\n          id: profile.id,\n          email: profile.emails[0].value\n        }\n      });\n\n      await newUser.save();\n      done(null, newUser);\n    }\n  } catch(error) {\n    done(error, false, error.message);\n  }\n}));\n\n// LOCAL STRATEGY\npassport.use(new LocalStrategy({\n  usernameField: 'email'\n}, async (email, password, done) => {\n  try {\n    const user = await User.findOne({ \"local.email\": email });\n\n    if (!user) {\n      return done(null, false);\n    }\n\n    const isMatch = await user.isValidPassword(password);\n\n    if (!isMatch) {\n      return done(null, false);\n    }\n\n    done(null, user);\n  } catch(error) {\n    done(error, false);\n  }\n}));`.trim();\n\nconst appServer = `\nconst express = require(\"express\");\nconst morgan = require(\"morgan\");\nconst mongoose = require(\"mongoose\");\nconst cors = require(\"cors\");\nconst cookieParser = require(\"cookie-parser\");\n\nmongoose.Promise = global.Promise;\nif (process.env.NODE_ENV === \"test\") {\n  mongoose.connect(\"mongodb://localhost/googleFacebookAuth\", {\n    useNewUrlParser: true\n  });\n} else {\n  mongoose.connect(\"mongodb://localhost/googleFacebookAuth\", {\n    useNewUrlParser: true\n  });\n}\n\nconst app = express();\napp.use(cookieParser());\napp.use(\n  cors({\n    origin: \"http://localhost:3000\",\n    credentials: true\n  })\n);\n\nif (!process.env.NODE_ENV === \"test\") {\n  app.use(morgan(\"dev\"));\n}\n\napp.use(express.json());\napp.use(\"/users\", require(\"./routes/users\"));\n\nmodule.exports = app;\n`.trim();\n\nconst actions = `\n//actions/types.js\nexport const AUTH_SIGN_UP = 'AUTH_SIGN_UP';\nexport const AUTH_SIGN_OUT = 'AUTH_SIGN_OUT';\nexport const AUTH_SIGN_IN = 'AUTH_SIGN_IN';\nexport const AUTH_LINK_GOOGLE = 'AUTH_LINK_GOOGLE';\nexport const AUTH_LINK_FACEBOOK = 'AUTH_LINK_FACEBOOK';\nexport const AUTH_UNLINK_GOOGLE = 'AUTH_UNLINK_GOOGLE';\nexport const AUTH_UNLINK_FACEBOOK = 'AUTH_UNLINK_FACEBOOK';\n\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const DASHBOARD_GET_DATA = 'DASHBOARD_GET_DATA';\n\n\n//actions/index.js\nimport axios from 'axios';\nimport {\n  AUTH_SIGN_UP,\n  AUTH_SIGN_OUT,\n  AUTH_SIGN_IN,\n  AUTH_LINK_GOOGLE,\n  AUTH_LINK_FACEBOOK,\n  AUTH_UNLINK_GOOGLE,\n  AUTH_UNLINK_FACEBOOK,\n  AUTH_ERROR,\n  DASHBOARD_GET_DATA } from './types';\n\nexport const oauthGoogle = data => {\n  return async dispatch => {\n    await axios.post('http://localhost:5000/users/oauth/google', {\n      access_token: data\n    });\n\n    dispatch({\n      type: AUTH_SIGN_UP\n    });\n  };\n}\n\nexport const linkGoogle = data => {\n  return async dispatch => {\n    const res = await axios.post('http://localhost:5000/users/oauth/link/google', {\n      access_token: data\n    });\n\n    dispatch({\n      type: AUTH_LINK_GOOGLE,\n      payload: res.data\n    });\n  };\n}\n\nexport const unlinkGoogle = data => {\n  return async dispatch => {\n    const res = await axios.post('http://localhost:5000/users/oauth/unlink/google');\n\n    dispatch({\n      type: AUTH_UNLINK_GOOGLE,\n      payload: res.data\n    });\n  };\n}\n\nexport const linkFacebook = data => {\n  return async dispatch => {\n    const res = await axios.post('http://localhost:5000/users/oauth/link/facebook', {\n      access_token: data\n    });\n\n    dispatch({\n      type: AUTH_LINK_FACEBOOK,\n      payload: res.data\n    });\n  };\n}\n\nexport const unlinkFacebook = data => {\n  return async dispatch => {\n    const res = await axios.post('http://localhost:5000/users/oauth/unlink/facebook');\n\n    dispatch({\n      type: AUTH_UNLINK_FACEBOOK,\n      payload: res.data\n    });\n  };\n}\n\nexport const oauthFacebook = data => {\n  return async dispatch => {\n    await axios.post('http://localhost:5000/users/oauth/facebook', {\n      access_token: data\n    });\n\n    dispatch({\n      type: AUTH_SIGN_UP\n    });\n  };\n}\n\nexport const signUp = data => {\n  return async dispatch => {\n    try {\n      await axios.post('http://localhost:5000/users/signup', data);\n\n      dispatch({\n        type: AUTH_SIGN_UP\n      });\n    } catch(err) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: 'Email is already in use'\n      })\n    }\n  };\n}\n\nexport const signIn = data => {\n  return async dispatch => {\n    try {\n      await axios.post('http://localhost:5000/users/signin', data);\n\n      dispatch({\n        type: AUTH_SIGN_IN\n      });\n    } catch(err) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: 'Email and password combination isn\\'t valid'\n      })\n    }\n  };\n}\n\nexport const checkAuth = () => {\n  return async dispatch => {\n    try {\n      await axios.get('http://localhost:5000/users/status');\n\n      dispatch({\n        type: AUTH_SIGN_IN\n      });\n\n      console.log('user is auth-ed')\n    } catch(err) {\n      console.log('error', err)\n    }\n  };\n}\n\nexport const getDashboard = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.get('http://localhost:5000/users/dashboard')\n\n      dispatch({\n        type: DASHBOARD_GET_DATA,\n        payload: res.data\n      })\n\n    } catch(err) {\n      console.error('err', err)\n    }\n  }\n}\n\nexport const signOut = () => {\n  return async dispatch => {\n    await axios.get('http://localhost:5000/users/signout');\n\n    dispatch({\n      type: AUTH_SIGN_OUT\n    })\n  };\n}\n`.trim();\n\nconst reducers = `\n//reducers/auth.js\nimport {\n  AUTH_SIGN_UP,\n  AUTH_SIGN_OUT,\n  AUTH_SIGN_IN,\n  AUTH_ERROR } from '../actions/types';\n\nconst DEFAULT_STATE = {\n  isAuthenticated: false,\n  errorMessage: ''\n}\n\nexport default (state = DEFAULT_STATE, action) => {\n  switch(action.type) {\n    case AUTH_SIGN_UP:\n      return { ...state, isAuthenticated: true, errorMessage: '' }\n    case AUTH_SIGN_IN:\n      return { ...state, isAuthenticated: true, errorMessage: '' }\n    case AUTH_SIGN_OUT:\n      return { ...state, isAuthenticated: false, errorMessage: '' }\n    case AUTH_ERROR:\n      return { ...state, errorMessage: action.payload }\n    default:\n      return state\n  }\n}\n\n\n\n//reducers/dashboard.js\nimport {\n  DASHBOARD_GET_DATA,\n  AUTH_LINK_GOOGLE,\n  AUTH_LINK_FACEBOOK,\n  AUTH_UNLINK_GOOGLE,\n  AUTH_UNLINK_FACEBOOK\n} from '../actions/types';\n\nconst DEFAULT_STATE = {\n  secret: '',\n  methods: []\n}\n\nexport default (state = DEFAULT_STATE, action) => {\n  switch(action.type) {\n    case AUTH_LINK_GOOGLE:\n      return { ...state, methods: action.payload.methods }\n    case AUTH_LINK_FACEBOOK:\n      return { ...state, methods: action.payload.methods }\n    case AUTH_UNLINK_GOOGLE:\n      return { ...state, methods: action.payload.methods }\n    case AUTH_UNLINK_FACEBOOK:\n      return { ...state, methods: action.payload.methods }\n    case DASHBOARD_GET_DATA:\n      return { ...state, secret: action.payload.secret, methods: action.payload.methods }\n    default:\n      return state\n  }\n}\n\n\n\n//reducers/index.js\nimport { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from './auth';\nimport dashboardReducer from './dashboard';\n\nexport default combineReducers({\n  form: formReducer,\n  auth: authReducer,\n  dash: dashboardReducer\n});`.trim();\n\nconst authGuard = `\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nexport default (OriginalComponent) => {\n  class MixedComponent extends Component {\n\n    checkAuth() {\n      if (!this.props.isAuth && !this.props.jwtToken) {\n        this.props.history.push('/');\n      }\n    }\n\n    componentDidMount() { this.checkAuth(); }\n    componentDidUpdate() { this.checkAuth(); }\n\n    render() {\n      return <OriginalComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state) {\n    return {\n      isAuth: state.auth.isAuthenticated,\n      jwtToken: state.auth.token\n    }\n  }\n\n  return connect(mapStateToProps)(MixedComponent);\n};`.trim();\n\nconst customInput = `\nimport React, { Component } from 'react';\n\nexport default class CustomInput extends Component {\n  render() {\n    const { input: { value, onChange } } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label htmlFor={this.props.id}>{this.props.label}</label>\n        <input\n          name={this.props.name}\n          id={this.props.id}\n          placeholder={this.props.placeholder}\n          className=\"form-control\"\n          type={this.props.type}\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n    );\n  }\n}`.trim();\n\nconst dashboard = `\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n\nimport * as actions from '../actions';\n\nclass Dashboard extends Component {\n  async componentDidMount() {\n    this.props.getDashboard()\n  }\n\n  linkFacebook = async (res) => {\n    console.log('Link with Facebook', res)\n    await this.props.linkFacebook(res.accessToken);\n  }\n\n  linkGoogle = async (res) => {\n    console.log('Link with Google', res)\n    await this.props.linkGoogle(res.accessToken);\n  }\n\n  unlinkGoogle = async () => {\n    console.log('Unlink Google')\n    await this.props.unlinkGoogle();\n  }\n\n  unlinkFacebook = async (res) => {\n    console.log('Unlink Facebook')\n    await this.props.unlinkFacebook();\n  }\n\n  render() {\n    return (\n      <div>\n        This is a Dashboard component\n        <br />\n        Our secret: <h3>{this.props.secret}</h3>\n\n        <h2>Link your social media accounts</h2>\n        <FacebookLogin\n          appId=\"171335970085090\"\n          disabled={true}\n          render={renderProps => (\n            <button style={{ marginRight: 15 }} className=\"btn btn-primary\" onClick={renderProps.onClick} \n                  disabled={this.props.dashboard.methods.includes('facebook') ? true : false}>Link with Facebook\n            </button>\n          )}\n          fields=\"name,email,picture\"\n          callback={this.linkFacebook}\n          cssClass=\"btn btn-outline-primary\"\n        />\n        <GoogleLogin\n          clientId=\"499420307488-hj9l9h3amt5into76m9i0ntkaqcg9q4t.apps.googleusercontent.com\"\n          disabled={this.props.dashboard.methods.includes('google') ? true : false}\n          render={renderProps => (\n            <button className=\"btn btn-danger\" onClick={renderProps.onClick} \n                disabled={renderProps.disabled}>Link with Google\n            </button>\n          )}\n          onSuccess={this.linkGoogle}\n          onFailure={this.linkGoogle}\n        />\n        <br />\n       \n        <h2>Unlink your social media accounts</h2>\n        <button\n          style={{ marginRight: 15 }}\n          className=\"btn btn-primary\"\n          onClick={() => this.unlinkFacebook()}\n          disabled={this.props.dashboard.methods.includes('facebook') ? false : true}\n        >\n          Unlink with Facebook\n        </button>\n        <button\n          className=\"btn btn-danger\"\n          onClick={() => this.unlinkGoogle()}\n          disabled={this.props.dashboard.methods.includes('google') ? false : true}\n        >\n          Unlink with Google\n        </button>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  console.log('state', state)\n  return {\n    secret: state.dash.secret,\n    dashboard: state.dash,\n    auth: state.auth\n  }\n}\n\nexport default connect(mapStateToProps, actions)(Dashboard);\n`.trim();\n\nconst header = `\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../actions';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.signOut = this.signOut.bind(this);\n  }\n\n  signOut() { this.props.signOut() }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\" style={{ marginBottom: '30px' }}>\n        <Link className=\"navbar-brand\" to=\"/\">CodeWorkr API Auth</Link>\n\n        <div className=\"collapse navbar-collapse\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/dashboard\">Dashboard</Link>\n            </li>\n          </ul>\n\n          <ul className=\"nav navbar-nav ml-auto\">\n            {!this.props.isAuth ?\n              [<li className=\"nav-item\" key=\"signup\">\n                <Link className=\"nav-link\" to=\"/signup\">Sign Up</Link>\n              </li>,\n              <li className=\"nav-item\" key=\"signin\">\n                <Link className=\"nav-link\" to=\"/signin\">Sign In</Link>\n              </li>] : null}\n\n            {this.props.isAuth ?\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/signout\" onClick={this.signOut}>Sign Out</Link>\n              </li> : null}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuth: state.auth.isAuthenticated\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Header);`.trim();\n\nconst signIn = `\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n\nimport * as actions from '../actions';\nimport CustomInput from './CustomInput';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.responseGoogle = this.responseGoogle.bind(this);\n    this.responseFacebook = this.responseFacebook.bind(this);\n  }\n\n  async onSubmit(formData) {\n    await this.props.signIn(formData);\n    if (!this.props.errorMessage) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  async responseGoogle(res) {\n    await this.props.oauthGoogle(res.accessToken);\n    if (!this.props.errorMessage) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  async responseFacebook(res) {\n    await this.props.oauthFacebook(res.accessToken);\n    if (!this.props.errorMessage) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <div className=\"row\">\n        <div className=\"col\">\n          <form onSubmit={handleSubmit(this.onSubmit)}>\n            <fieldset>\n              <Field\n                name=\"email\"\n                type=\"text\"\n                id=\"email\"\n                label=\"Enter your email\"\n                placeholder=\"example@example.com\"\n                component={ CustomInput } />\n            </fieldset>\n            <fieldset>\n              <Field\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                label=\"Enter your password\"\n                placeholder=\"yoursuperpassword\"\n                component={ CustomInput } />\n            </fieldset>\n\n            { this.props.errorMessage ?\n            <div className=\"alert alert-danger\">\n              { this.props.errorMessage }\n            </div> : null }\n\n            <button type=\"submit\" className=\"btn btn-primary\">Sign In</button>\n          </form>\n        </div>\n        <div className=\"col\">\n          <div className=\"text-center\">\n            <div className=\"alert alert-primary\">\n              Or sign in using third-party services\n            </div>\n            <FacebookLogin\n              appId=\"number\"\n              render={renderProps => (\n                <button style={{ marginRight: 15 }} className=\"btn btn-primary\" onClick={renderProps.onClick}>Fb</button>\n              )}\n              fields=\"name,email,picture\"\n              callback={this.responseFacebook}\n              cssClass=\"btn btn-outline-primary\"\n            />\n            <GoogleLogin\n              clientId=\"number\"\n              render={renderProps => (\n              <button className=\"btn btn-danger\" onClick={renderProps.onClick} disabled={renderProps.disabled}>Go</button>\n              )}\n              onSuccess={this.responseGoogle}\n              onFailure={this.responseGoogle}\n              className=\"btn btn-outline-danger\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.auth.errorMessage\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, actions),\n  reduxForm({ form: 'signin' })\n)(SignIn)\n`.trim();\n\nconst signUp = `\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n\nimport * as actions from '../actions';\nimport CustomInput from './CustomInput';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.responseGoogle = this.responseGoogle.bind(this);\n    this.responseFacebook = this.responseFacebook.bind(this);\n  }\n\n  async onSubmit(formData) {\n    await this.props.signUp(formData);\n    if (!this.props.errorMessage) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  async responseGoogle(res) {\n    await this.props.oauthGoogle(res.accessToken);\n    if (!this.props.errorMessage) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  async responseFacebook(res) {\n    await this.props.oauthFacebook(res.accessToken);\n    if (!this.props.errorMessage) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <div className=\"row\">\n        <div className=\"col\">\n          <form onSubmit={handleSubmit(this.onSubmit)}>\n            <fieldset>\n              <Field\n                name=\"email\"\n                type=\"text\"\n                id=\"email\"\n                label=\"Enter your email\"\n                placeholder=\"example@example.com\"\n                component={ CustomInput } />\n            </fieldset>\n            <fieldset>\n              <Field\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                label=\"Enter your password\"\n                placeholder=\"yoursuperpassword\"\n                component={ CustomInput } />\n            </fieldset>\n\n            { this.props.errorMessage ?\n            <div className=\"alert alert-danger\">\n              { this.props.errorMessage }\n            </div> : null }\n\n            <button type=\"submit\" className=\"btn btn-primary\">Sign Up</button>\n          </form>\n        </div>\n        <div className=\"col\">\n          <div className=\"text-center\">\n            <div className=\"alert alert-primary\">\n              Or sign up using third-party services\n            </div>\n            <FacebookLogin\n              appId=\"number\"\n              render={renderProps => (\n                <button style={{ marginRight: 15 }} className=\"btn btn-primary\" onClick={renderProps.onClick}>Fb</button>\n              )}\n              fields=\"name,email,picture\"\n              callback={this.responseFacebook}\n              cssClass=\"btn btn-outline-primary\"\n            />\n            <GoogleLogin\n              clientId=\"number\"\n              render={renderProps => (\n                <button className=\"btn btn-danger\" onClick={renderProps.onClick} disabled={renderProps.disabled}>Go</button>\n              )}\n              onSuccess={this.responseGoogle}\n              onFailure={this.responseGoogle}\n              className=\"btn btn-outline-danger\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.auth.errorMessage\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, actions),\n  reduxForm({ form: 'signup' })\n)(SignUp)\n`.trim();\n\nconst ClientApp = `\n//components/Home.js\nimport React from 'react';\n\nexport default () => {\n  return <p>Welcome to our home page!</p>\n};\n\n\n//components/App.js\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Header from './Header';\nimport * as actions from '../actions';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.checkAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"container\">\n        { this.props.children }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, actions)(App);\n`.trim();\n\nconst MainIndex = `\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport axios from 'axios';\n\nimport App from './components/App';\nimport Home from './components/Home';\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport Dashboard from './components/Dashboard';\nimport reducers from './reducers';\n\nimport authGuard from './components/HOCs/authGuard';\n\naxios.defaults.withCredentials = true;\n\nReactDOM.render(\n  <Provider store={createStore(reducers, {}, applyMiddleware(reduxThunk))}>\n    <BrowserRouter>\n      <App>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/signup\" component={SignUp} />\n        <Route exact path=\"/signin\" component={SignIn} />\n        <Route exact path=\"/dashboard\" component={authGuard(Dashboard)} />\n      </App>\n    </BrowserRouter>\n  </Provider>,\n  document.querySelector('#root'));\n`.trim();\n\n\n\nclass MernSocial extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Server</h3>\n              <b>configuration/index.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={configuration}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>helpers/routeHelpers.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={helpers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>models/user.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={models}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>controllers/users.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={controllers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>routes/users.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={routes}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>passport.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={passport}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>app.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={appServer}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Client</h3>\n              <b>actions/types.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={actions}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>reducers/</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={reducers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>components/HOC/authGuard.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={authGuard}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>components/CustomInput.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={customInput}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>components/Dashboard.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={dashboard}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>components/Header.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={header}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>components/SignIn.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={signIn}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>components/SignUp.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={signUp}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>components/App.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={ClientApp}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>index.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={MainIndex}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(MernSocial));\n"]},"metadata":{},"sourceType":"module"}