{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var modelOps=\"\\n//html\\n<script src=\\\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\\\" type=\\\"text/javascript\\\"></script>\\n<script src=\\\"http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.3.3/underscore-min.js\\\" type=\\\"text/javascript\\\"></script>\\n<script src=\\\"http://cdnjs.cloudflare.com/ajax/libs/backbone.js/0.9.2/backbone-min.js\\\" type=\\\"text/javascript\\\"></script>\\n<script src=\\\"http://cdnjs.cloudflare.com/ajax/libs/backbone-localstorage.js/1.0/backbone.localStorage-min.js\\\" \\ntype=\\\"text/javascript\\\"></script>  \\n\\n\\n//\\nvar modelOp = Backbone.Model.extend({\\n  initialize: function () {\\n    console.log('Model created')\\n  }\\n});\\n\\nvar obj = new modelOp();\\n\\n\\n//2\\nvar modelOp = Backbone.Model.extend();\\n\\nvar obj = new modelOp({\\n  name: 'Tushar Garg',\\n  teach: 'Backbone js',\\n  platform: 'YouTube'\\n});\\n\\n\\n//3\\nvar modelOp = Backbone.Model.extend();\\nvar obj = new modelOp();\\n\\n// obj.set(\\\"name\\\", \\\"Tushar\\\");                                                           //set use to store/set data\\n\\nobj.set({                                                                               //set json data\\n  name: 'Tushar Garg',\\n  teach: 'Backbone Js'\\n});\\n\\n/*\\nobj.get(\\\"teach\\\")\\nobj.toJSON()\\nobj.unset('teach')\\nobj.has('teach')\\nobj.clear()\\n*/\\n\\n\\n//4\\nvar modelOp = Backbone.Model.extend({\\n  defaults: {\\n    platform: 'youtube'\\n  }\\n});\\n\\nvar obj = new modelOp();\\n\\nobj.set({\\n  name: 'Tushar Garg',\\n  teach: 'Backbone Js'\\n});\\n\".trim();var modelInheritance=\"\\nvar modelInheri = Backbone.Model.extend({\\n  show: function () {\\n    console.log(\\\"colors Tv\\\");\\n  }\\n});\\n\\n\\nvar modelInheritance = modelInheri.extend({\\n  show: function () {\\n    modelInheri.prototype.show.apply();                                                     //extends super class function\\n    console.log('Sony Tv');\\n  }\\n});\\n\\nvar obj = new modelInheritance();\\n\\n//obj.show()\\n\".trim();var modelVals=\"\\nvar modelOp = Backbone.Model.extend({\\n  validate: function (attrs) {\\n    if (attrs.age < 1) {\\n      return \\\"age should not be negative\\\";\\n    }\\n  }\\n});\\n\\nvar obj = new modelOp({\\n  name: 'Tushar Garg',\\n  age: -1\\n});\\n\\n\\n//obj.isValid()\\nobj.validate\\n\".trim();var modelCols=\"\\nvar Team = Backbone.Model.extend();                                                             //create model\\n\\nvar player1 = new Team({\\n  Name: 'Dhoni',\\n  PlayedFrom: 'India',\\n  Performance: 'Excellent',\\n  runs: 98\\n});\\n\\nvar player2 = new Team({\\n  Name: 'Virat Kholi',\\n  PlayedFrom: 'India',\\n  Performance: 'Good',\\n  runs: 75\\n});\\n\\nvar players = Backbone.Collection.extend();                                                    //create collection\\nvar p = new players([\\n  player1,\\n  player2\\n]);\\n\\n\\n/*\\np\\np.add({'name':'Kishan','PlayedFrom':'Mumbai'})\\np.unshift({'name':'Kishan','PlayedFrom':'Mumbai'})\\np.add(new Team({'name':'Kishan','PlayedFrom':'Mumbai'}),{at:2})                               // at specific index\\np.pop()\\np.remove('c1')\\n*/\\n\\n\\n//2\\nvar Team = Backbone.Model.extend();                                                           //create model\\n\\nvar player1 = new Team({\\n  Name: 'Dhoni',\\n  PlayedFrom: 'India',\\n  Performance: 'Excellent',\\n  runs: 98\\n});\\n\\nvar player2 = new Team({\\n  Name: 'Virat Kholi',\\n  PlayedFrom: 'India',\\n  Performance: 'Good',\\n  runs: 75\\n});\\n\\nvar players = Backbone.Collection.extend();                                                 //create collection\\nvar p = new players([\\n  player1,\\n  player2\\n]);\\n\\nvar res = p.where(function (player) {\\n  return player.get('runs') > 74;\\n});\\n\\nvar res1 = p.filter(function (player) {\\n  return player.get('runs') > 74;\\n});\\n\\n\\n/*\\np\\np.add({'name':'Kishan','PlayedFrom':'Mumbai'})\\np.unshift({'name':'Kishan','PlayedFrom':'Mumbai'})\\np.add(new Team({'name':'Kishan','PlayedFrom':'Mumbai'}),{at:2})                            // at specific index\\np.pop()\\np.remove('c1')\\np.where({'Name':'Dhoni'})\\nres1\\n\\np.each(function(player){\\n    console.log(player);\\n});\\n*/\\n\\n\\n//3\\nvar students = Backbone.Model.extend({\\n  initialize: function () {\\n    this.bind('change:name', function (model) {                                           //run console only if name change\\n      console.log(\\\"Model Changed\\\");\\n    })\\n    // console.log(\\\"Working\\\");\\n  }\\n});\\n\\nvar student = new students({\\n  name: 'Tushar Garg',\\n  RollNo: 1\\n});\\n\\n\\n//student.set('name','tutorials')\\n\".trim();var custmEvent=\"\\nvar Objects = {\\n  test: function () {\\n    this.trigger(\\\"alerts\\\", \\\"an event\\\")\\n    this.trigger(\\\"title\\\", \\\"an title\\\")\\n  }\\n};\\n\\n_.extend(Objects, Backbone.Events);\\nObjects.on(\\\"alerts title\\\", function (msg) {\\n  alert('Alert msg', msg)\\n  console.log('Title')\\n})\\n\\nObjects.trigger(\\\"alert\\\", \\\"an event\\\")\\n\\n\\n//2\\nvar Objects = {\\n  test: function () {\\n    this.trigger(\\\"alerts\\\", \\\"an event\\\")\\n    this.trigger(\\\"title\\\", \\\"an title\\\")\\n  }\\n};\\n\\n_.extend(Objects, Backbone.Events);\\nObjects.on(\\\"all\\\", function (msg) {\\n  alert('Alert msg', msg)\\n  console.log('Title')\\n})\\n\".trim();var dataChange=\"\\nvar students = Backbone.Model.extend({\\n  initialize: function () {\\n    this.bind('change:name', function (model) {                                           //run console only if name change\\n      console.log(\\\"Model Changed\\\");\\n    })\\n    // console.log(\\\"Working\\\");\\n  }\\n});\\n\\nvar obj = new students({\\n  name: 'Tushar Garg',\\n  RollNo: 1\\n});\\n\\n\\n//obj.set('name','tutorials')\\n\".trim();var eventHandler=\"\\n//html\\n<div id=\\\"demo\\\"></div>\\n\\n\\n//js\\nvar firstModel = Backbone.Model.extend();\\n\\nvar fm = new firstModel({\\n  Title: 'Jugnu',\\n  artist: 'Baadshah'\\n});\\n\\n\\nvar Song = Backbone.View.extend({\\n  events: {\\n    'click': 'Onclick',\\n    'click .btnStop': 'OnClickStop'\\n  },\\n  Onclick: function () {\\n    console.log(\\\"Song Played\\\");\\n  },\\n  OnClickStop: function (e) {\\n    e.stopPropagation();\\n    console.log(\\\"Song Stopped\\\");\\n\\n  },\\n  render: function () {\\n    this.$el.html(this.model.get('Title') + \\\"<button>Play</button> <button class='btnStop'>Stop</button>\\\");\\n  }\\n});\\n\\nvar song = new Song({\\n  el: '#demo',\\n  model: fm\\n});\\nsong.render();\\n\".trim();var modelView=\"\\n//html\\n<div id=\\\"demo\\\"></div>\\n  <div id=\\\"testing\\\"></div>\\n  <script src=\\\"main_4.js\\\"></script>\\n  \\n  \\n//js\\nvar firstView = Backbone.View.extend({\\n  render: function () {\\n    console.log(\\\"Hello\\\");\\n  }\\n});\\n\\nvar obj = new firstView();\\nobj.render(); \\n\\n\\n//2\\nvar firstView = Backbone.View.extend({\\n  initialize: function () {\\n    this.render();\\n  },\\n  render: function () {\\n    console.log(\\\"Hello\\\");\\n  }\\n});\\n\\nvar obj = new firstView();\\n\\n\\n//3\\nvar firstView = Backbone.View.extend({\\n  initialize: function () {\\n    this.render();\\n  },\\n  render: function () {\\n    this.$el.html(\\\"Backbone Js View Demo\\\");\\n  }\\n});\\n\\nvar obj = new firstView({ el: '#demo' });\\n\\n\\n//4\\nvar firstView = Backbone.View.extend({\\n  el: '#testing',\\n  tagName: 'h1',\\n  initialize: function () {\\n    this.render();\\n  },\\n  render: function () {\\n    // console.log(\\\"Hello\\\");\\n    this.$el.html(\\\"Backbone Js View Demo\\\");\\n    console.log(this.el);                                                       //contain div element its DOM element\\n    console.log(this.$el);                                                      //jQuery object\\n  }\\n});\\n\\nvar obj = new firstView({ el: '#demo' });\\n\".trim();var addLists=\"\\n//html\\n<input type=\\\"text\\\" placeholder=\\\"Enter friend's name\\\" id=\\\"input\\\" />\\n<button id=\\\"add-input\\\">Add Friend</button>\\n<ul id=\\\"friends-list\\\"></ul>\\n  \\n//2\\n<div id=\\\"container\\\">Loading...</div>\\n<div id=\\\"container\\\"></div>\\n\\n\\n//js\\n$(function () {\\n  FriendList = Backbone.Collection.extend({\\n    initialize: function () {\\n    }\\n  });\\n\\n  FriendView = Backbone.View.extend({\\n    tagName: 'li',\\n    events: {\\n      'click #add-input': 'getFriend',\\n    },\\n\\n    initialize: function () {\\n      var thisView = this;\\n      this.friendslist = new FriendList;\\n      _.bindAll(this, 'render');\\n      this.friendslist.bind(\\\"add\\\", function (model) {\\n        alert(\\\"hey\\\");\\n        thisView.render(model);\\n      })\\n    },\\n\\n    getFriend: function () {\\n      var friend_name = $('#input').val();\\n      this.friendslist.add({ name: friend_name });\\n    },\\n\\n    render: function (model) {\\n      $(\\\"#friends-list\\\").append(\\\"<li>\\\" + model.get(\\\"name\\\") + \\\"</li>\\\");\\n      console.log('rendered')\\n    },\\n  });\\n\\n  var view = new FriendView({ el: 'body' });\\n});\\n\\n\\n//2\\nvar Song = Backbone.Model.extend();\\n\\nvar SongView = Backbone.View.extend({\\n  render: function () {\\n    this.$el.html(this.model.get(\\\"title\\\") + \\\"<button>Listen</button>\\\")\\n    return this;\\n  }\\n});\\n\\nvar song = new Song({ title: \\\"Blue in Green\\\" });\\nvar songView = new SongView({ el: \\\"#container\\\", model: song })\\nsongView.render()\\n\".trim();var passingData=\"\\nvar Player = Backbone.Model.extend();\\n\\nvar player1 = new Player({\\n  Name: 'Dhoni',\\n  playedFrom: 'India'\\n});\\n\\nvar PlayerView = Backbone.View.extend({\\n  render: function () {\\n    this.$el.html('Passing data');\\n  }\\n});\\n\\nvar obj = new PlayerView({ el: '#demo' });\\nobj.render();\\n\\n\\n//2\\nvar Player = Backbone.Model.extend();\\n\\nvar player = new Player({\\n  Name: 'Dhoni',\\n  playedFrom: 'India'\\n});\\n\\nvar PlayerView = Backbone.View.extend({\\n  render: function () {\\n    this.$el.html('Passing data');\\n    this.$el.html(this.model.get('Name'));\\n    // this.$el.html(this.model.get('playedFrom'));\\n  }\\n});\\n\\n\\nvar pv = new PlayerView({\\n  el: '#demo',\\n  model: player\\n});\\npv.render();\\n\".trim();var templates=\"\\n//html\\n<div id=\\\"demo\\\"></div>\\n<script id=\\\"demoTemplate\\\" type=\\\"text/html\\\">This is the external template example</script>\\n\\n\\n//js\\nvar view = Backbone.View.extend({\\n  template: _.template(\\\"This is Inline Templates Example\\\"),\\n\\n  initialize: function () {\\n    this.render();\\n  },\\n  render: function () {\\n    this.$el.html(this.template());\\n  }\\n});\\n\\nvar v = new view({ el: '#demo' });\\n\\n\\n//2\\nvar view = Backbone.View.extend({\\n\\n  template: _.template($('#demoTemplate').html()),\\n  initialize: function () {\\n    this.render();\\n  },\\n  render: function () {\\n    this.$el.html(this.template());\\n  }\\n});\\n\\nvar v = new view({ el: '#demo' });\\n\".trim();var templatesCon=\"\\n//html\\n<div id=\\\"container\\\"></div>\\n<script id=\\\"songTemplate\\\" type=\\\"text/html\\\">\\n   <%= title %>\\n   <button>Listen</button>\\n   \\n   <% if(plays >1000){%>\\n    <span class=\\\"popular\\\">Popular</span>\\n <%}%>\\n</script>\\n<script src=\\\"main.js\\\"></script>\\n  \\n \\n//js\\nvar Song = Backbone.Model.extend();\\n\\nvar SongView = Backbone.View.extend({\\n  render: function () {\\n    var template = _.template($(\\\"#songTemplate\\\").html())\\n    var html = template(this.model.toJSON())\\n    this.$el.html(html)\\n    return this;\\n  }\\n});\\n\\nvar song = new Song({ title: \\\"Blue in Green\\\", plays: 1001 });\\nvar songView = new SongView({ el: \\\"#container\\\", model: song })\\nsongView.render()\\n\".trim();var routers=\"\\n//html\\n<div id=\\\"demo\\\"></div>\\n<vav id=\\\"orderNav\\\">\\n <ul>\\n   <li data-url=\\\"firstOrder\\\">First Order</li>\\n   <li data-url=\\\"secondOrder\\\">Second Order</li>\\n   <li data-url=\\\"thirdOrder\\\">Third Order</li>\\n </ul>\\n</vav>\\n<script src=\\\"main.js\\\"></script>\\n\\n\\n//2\\n<div id=\\\"demo\\\"></div>\\n<ul>\\n <li><a href=\\\"#/first/10\\\">First</a></li>\\n <li><a href=\\\"#/second\\\">Second</a></li>\\n <li><a href=\\\"#/third/10/anythings\\\">Third</a></li>\\n</ul>\\n\\n\\n//js\\nvar routeExample = Backbone.Router.extend({\\n  routes: {\\n    'view1': 'firstView',\\n    'view2': 'secondView',\\n    '': 'thirdView'\\n  },\\n  firstView: function () {\\n    console.log(\\\"This is our first View\\\");\\n  },\\n  secondView: function () {\\n    console.log(\\\"This is our second View\\\");\\n  },\\n  thirdView: function () {\\n    console.log(\\\"This is our thired View\\\");\\n  }\\n});\\n\\nvar router = new routeExample();\\nBackbone.history.start();\\n\\n//file:///D:/Qc/backbone/docs/router/index.html#/view1\\n  \\n\\n//3\\nvar first = Backbone.View.extend({\\n  initialize: function () {\\n    this.render();\\n  },\\n  render: function () {\\n    console.log(\\\"This is our first View\\\");\\n  }\\n});\\n\\n\\nvar second = Backbone.View.extend({\\n  initialize: function () {\\n    this.render();\\n  },\\n  render: function () {\\n    console.log(\\\"This is our second View\\\");\\n  }\\n});\\n\\n\\nvar third = Backbone.View.extend({\\n  initialize: function () {\\n    this.render();\\n  },\\n  render: function () {\\n    console.log(\\\"This is our third View\\\");\\n  }\\n});\\n\\n\\nvar routeExample = Backbone.Router.extend({\\n  routes: {\\n    'view1': 'firstView',\\n    'view2': 'secondView',\\n    '': 'thirdView'\\n  },\\n  firstView: function () {\\n    var fv = new first();\\n  },\\n  secondView: function () {\\n    var sv = new second();\\n  },\\n  thirdView: function () {\\n    var tv = new third();\\n  }\\n});\\n\\nvar router = new routeExample();\\nBackbone.history.start();\\n\\n\\n//4\\nvar pizza = Backbone.View.extend({\\n  render: function () {\\n    this.$el.html(\\\"You ordered Pizza\\\");\\n  }\\n});\\nvar momos = Backbone.View.extend({\\n  render: function () {\\n    this.$el.html(\\\"You ordered momos\\\");\\n  }\\n});\\nvar burger = Backbone.View.extend({\\n  render: function () {\\n    this.$el.html(\\\"You ordered burger\\\");\\n  }\\n});\\n\\n\\nvar routerDemo = Backbone.Router.extend({\\n  routes: {\\n    'firstOrder': 'pizzaOrder',\\n    'secondOrder': 'momosOrder',\\n    'thirdOrder': 'burgerOrder',\\n    '*other': 'default'\\n  },\\n  pizzaOrder: function () {\\n    var view = new pizza({\\n      el: '#demo'\\n    });\\n\\n    view.render();\\n  },\\n  momosOrder: function () {\\n    var view = new momos({\\n      el: '#demo'\\n    });\\n\\n    view.render();\\n  },\\n  burgerOrder: function () {\\n    var view = new burger({\\n      el: '#demo'\\n    });\\n\\n    view.render();\\n  },\\n  default: function () {\\n    console.log(\\\"You ordered Nothing\\\");\\n  },\\n\\n});\\n\\nvar router = new routerDemo();\\nBackbone.history.start();\\n\\n//for ui routing\\nvar foodCourt = Backbone.View.extend({\\n  events: {\\n    'click': 'onClick'\\n  },\\n  onClick: function (e) {\\n    var $li = $(e.target);\\n    router.navigate($li.attr(\\\"data-url\\\"), { trigger: true });\\n  }\\n});\\n\\nvar v = new foodCourt({\\n  el: '#orderNav'\\n});\\n\".trim();var Backbonejs=/*#__PURE__*/function(_Component){_inherits(Backbonejs,_Component);function Backbonejs(){_classCallCheck(this,Backbonejs);return _possibleConstructorReturn(this,_getPrototypeOf(Backbonejs).apply(this,arguments));}_createClass(Backbonejs,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Model\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:modelOps,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Model Inheritance\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:modelInheritance,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Model Validations\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:modelVals,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Collection\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:modelCols,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Custom Event\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:custmEvent,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Data Change on custm Event\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:dataChange,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Event Handler\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:eventHandler,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"View\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:modelView,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Add List\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:addLists,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"View Passing Data\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:passingData,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Template\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:templates,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Template Conditions\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:templatesCon,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Router\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:routers,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return Backbonejs;}(Component);export default withStyles(styles)(Backbonejs);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/express/deepExpress/backbonejs.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","modelOps","trim","modelInheritance","modelVals","modelCols","custmEvent","dataChange","eventHandler","modelView","addLists","passingData","templates","templatesCon","routers","Backbonejs","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\nconst modelOps = `\n//html\n<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\" type=\"text/javascript\"></script>\n<script src=\"http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.3.3/underscore-min.js\" type=\"text/javascript\"></script>\n<script src=\"http://cdnjs.cloudflare.com/ajax/libs/backbone.js/0.9.2/backbone-min.js\" type=\"text/javascript\"></script>\n<script src=\"http://cdnjs.cloudflare.com/ajax/libs/backbone-localstorage.js/1.0/backbone.localStorage-min.js\" \ntype=\"text/javascript\"></script>  \n\n\n//\nvar modelOp = Backbone.Model.extend({\n  initialize: function () {\n    console.log('Model created')\n  }\n});\n\nvar obj = new modelOp();\n\n\n//2\nvar modelOp = Backbone.Model.extend();\n\nvar obj = new modelOp({\n  name: 'Tushar Garg',\n  teach: 'Backbone js',\n  platform: 'YouTube'\n});\n\n\n//3\nvar modelOp = Backbone.Model.extend();\nvar obj = new modelOp();\n\n// obj.set(\"name\", \"Tushar\");                                                           //set use to store/set data\n\nobj.set({                                                                               //set json data\n  name: 'Tushar Garg',\n  teach: 'Backbone Js'\n});\n\n/*\nobj.get(\"teach\")\nobj.toJSON()\nobj.unset('teach')\nobj.has('teach')\nobj.clear()\n*/\n\n\n//4\nvar modelOp = Backbone.Model.extend({\n  defaults: {\n    platform: 'youtube'\n  }\n});\n\nvar obj = new modelOp();\n\nobj.set({\n  name: 'Tushar Garg',\n  teach: 'Backbone Js'\n});\n`.trim();\n\nconst modelInheritance = `\nvar modelInheri = Backbone.Model.extend({\n  show: function () {\n    console.log(\"colors Tv\");\n  }\n});\n\n\nvar modelInheritance = modelInheri.extend({\n  show: function () {\n    modelInheri.prototype.show.apply();                                                     //extends super class function\n    console.log('Sony Tv');\n  }\n});\n\nvar obj = new modelInheritance();\n\n//obj.show()\n`.trim();\n\nconst modelVals = `\nvar modelOp = Backbone.Model.extend({\n  validate: function (attrs) {\n    if (attrs.age < 1) {\n      return \"age should not be negative\";\n    }\n  }\n});\n\nvar obj = new modelOp({\n  name: 'Tushar Garg',\n  age: -1\n});\n\n\n//obj.isValid()\nobj.validate\n`.trim();\n\nconst modelCols = `\nvar Team = Backbone.Model.extend();                                                             //create model\n\nvar player1 = new Team({\n  Name: 'Dhoni',\n  PlayedFrom: 'India',\n  Performance: 'Excellent',\n  runs: 98\n});\n\nvar player2 = new Team({\n  Name: 'Virat Kholi',\n  PlayedFrom: 'India',\n  Performance: 'Good',\n  runs: 75\n});\n\nvar players = Backbone.Collection.extend();                                                    //create collection\nvar p = new players([\n  player1,\n  player2\n]);\n\n\n/*\np\np.add({'name':'Kishan','PlayedFrom':'Mumbai'})\np.unshift({'name':'Kishan','PlayedFrom':'Mumbai'})\np.add(new Team({'name':'Kishan','PlayedFrom':'Mumbai'}),{at:2})                               // at specific index\np.pop()\np.remove('c1')\n*/\n\n\n//2\nvar Team = Backbone.Model.extend();                                                           //create model\n\nvar player1 = new Team({\n  Name: 'Dhoni',\n  PlayedFrom: 'India',\n  Performance: 'Excellent',\n  runs: 98\n});\n\nvar player2 = new Team({\n  Name: 'Virat Kholi',\n  PlayedFrom: 'India',\n  Performance: 'Good',\n  runs: 75\n});\n\nvar players = Backbone.Collection.extend();                                                 //create collection\nvar p = new players([\n  player1,\n  player2\n]);\n\nvar res = p.where(function (player) {\n  return player.get('runs') > 74;\n});\n\nvar res1 = p.filter(function (player) {\n  return player.get('runs') > 74;\n});\n\n\n/*\np\np.add({'name':'Kishan','PlayedFrom':'Mumbai'})\np.unshift({'name':'Kishan','PlayedFrom':'Mumbai'})\np.add(new Team({'name':'Kishan','PlayedFrom':'Mumbai'}),{at:2})                            // at specific index\np.pop()\np.remove('c1')\np.where({'Name':'Dhoni'})\nres1\n\np.each(function(player){\n    console.log(player);\n});\n*/\n\n\n//3\nvar students = Backbone.Model.extend({\n  initialize: function () {\n    this.bind('change:name', function (model) {                                           //run console only if name change\n      console.log(\"Model Changed\");\n    })\n    // console.log(\"Working\");\n  }\n});\n\nvar student = new students({\n  name: 'Tushar Garg',\n  RollNo: 1\n});\n\n\n//student.set('name','tutorials')\n`.trim();\n\nconst custmEvent = `\nvar Objects = {\n  test: function () {\n    this.trigger(\"alerts\", \"an event\")\n    this.trigger(\"title\", \"an title\")\n  }\n};\n\n_.extend(Objects, Backbone.Events);\nObjects.on(\"alerts title\", function (msg) {\n  alert('Alert msg', msg)\n  console.log('Title')\n})\n\nObjects.trigger(\"alert\", \"an event\")\n\n\n//2\nvar Objects = {\n  test: function () {\n    this.trigger(\"alerts\", \"an event\")\n    this.trigger(\"title\", \"an title\")\n  }\n};\n\n_.extend(Objects, Backbone.Events);\nObjects.on(\"all\", function (msg) {\n  alert('Alert msg', msg)\n  console.log('Title')\n})\n`.trim();\n\nconst dataChange = `\nvar students = Backbone.Model.extend({\n  initialize: function () {\n    this.bind('change:name', function (model) {                                           //run console only if name change\n      console.log(\"Model Changed\");\n    })\n    // console.log(\"Working\");\n  }\n});\n\nvar obj = new students({\n  name: 'Tushar Garg',\n  RollNo: 1\n});\n\n\n//obj.set('name','tutorials')\n`.trim();\n\nconst eventHandler = `\n//html\n<div id=\"demo\"></div>\n\n\n//js\nvar firstModel = Backbone.Model.extend();\n\nvar fm = new firstModel({\n  Title: 'Jugnu',\n  artist: 'Baadshah'\n});\n\n\nvar Song = Backbone.View.extend({\n  events: {\n    'click': 'Onclick',\n    'click .btnStop': 'OnClickStop'\n  },\n  Onclick: function () {\n    console.log(\"Song Played\");\n  },\n  OnClickStop: function (e) {\n    e.stopPropagation();\n    console.log(\"Song Stopped\");\n\n  },\n  render: function () {\n    this.$el.html(this.model.get('Title') + \"<button>Play</button> <button class='btnStop'>Stop</button>\");\n  }\n});\n\nvar song = new Song({\n  el: '#demo',\n  model: fm\n});\nsong.render();\n`.trim();\n\nconst modelView = `\n//html\n<div id=\"demo\"></div>\n  <div id=\"testing\"></div>\n  <script src=\"main_4.js\"></script>\n  \n  \n//js\nvar firstView = Backbone.View.extend({\n  render: function () {\n    console.log(\"Hello\");\n  }\n});\n\nvar obj = new firstView();\nobj.render(); \n\n\n//2\nvar firstView = Backbone.View.extend({\n  initialize: function () {\n    this.render();\n  },\n  render: function () {\n    console.log(\"Hello\");\n  }\n});\n\nvar obj = new firstView();\n\n\n//3\nvar firstView = Backbone.View.extend({\n  initialize: function () {\n    this.render();\n  },\n  render: function () {\n    this.$el.html(\"Backbone Js View Demo\");\n  }\n});\n\nvar obj = new firstView({ el: '#demo' });\n\n\n//4\nvar firstView = Backbone.View.extend({\n  el: '#testing',\n  tagName: 'h1',\n  initialize: function () {\n    this.render();\n  },\n  render: function () {\n    // console.log(\"Hello\");\n    this.$el.html(\"Backbone Js View Demo\");\n    console.log(this.el);                                                       //contain div element its DOM element\n    console.log(this.$el);                                                      //jQuery object\n  }\n});\n\nvar obj = new firstView({ el: '#demo' });\n`.trim();\n\nconst addLists = `\n//html\n<input type=\"text\" placeholder=\"Enter friend's name\" id=\"input\" />\n<button id=\"add-input\">Add Friend</button>\n<ul id=\"friends-list\"></ul>\n  \n//2\n<div id=\"container\">Loading...</div>\n<div id=\"container\"></div>\n\n\n//js\n$(function () {\n  FriendList = Backbone.Collection.extend({\n    initialize: function () {\n    }\n  });\n\n  FriendView = Backbone.View.extend({\n    tagName: 'li',\n    events: {\n      'click #add-input': 'getFriend',\n    },\n\n    initialize: function () {\n      var thisView = this;\n      this.friendslist = new FriendList;\n      _.bindAll(this, 'render');\n      this.friendslist.bind(\"add\", function (model) {\n        alert(\"hey\");\n        thisView.render(model);\n      })\n    },\n\n    getFriend: function () {\n      var friend_name = $('#input').val();\n      this.friendslist.add({ name: friend_name });\n    },\n\n    render: function (model) {\n      $(\"#friends-list\").append(\"<li>\" + model.get(\"name\") + \"</li>\");\n      console.log('rendered')\n    },\n  });\n\n  var view = new FriendView({ el: 'body' });\n});\n\n\n//2\nvar Song = Backbone.Model.extend();\n\nvar SongView = Backbone.View.extend({\n  render: function () {\n    this.$el.html(this.model.get(\"title\") + \"<button>Listen</button>\")\n    return this;\n  }\n});\n\nvar song = new Song({ title: \"Blue in Green\" });\nvar songView = new SongView({ el: \"#container\", model: song })\nsongView.render()\n`.trim();\n\nconst passingData = `\nvar Player = Backbone.Model.extend();\n\nvar player1 = new Player({\n  Name: 'Dhoni',\n  playedFrom: 'India'\n});\n\nvar PlayerView = Backbone.View.extend({\n  render: function () {\n    this.$el.html('Passing data');\n  }\n});\n\nvar obj = new PlayerView({ el: '#demo' });\nobj.render();\n\n\n//2\nvar Player = Backbone.Model.extend();\n\nvar player = new Player({\n  Name: 'Dhoni',\n  playedFrom: 'India'\n});\n\nvar PlayerView = Backbone.View.extend({\n  render: function () {\n    this.$el.html('Passing data');\n    this.$el.html(this.model.get('Name'));\n    // this.$el.html(this.model.get('playedFrom'));\n  }\n});\n\n\nvar pv = new PlayerView({\n  el: '#demo',\n  model: player\n});\npv.render();\n`.trim();\n\nconst templates = `\n//html\n<div id=\"demo\"></div>\n<script id=\"demoTemplate\" type=\"text/html\">This is the external template example</script>\n\n\n//js\nvar view = Backbone.View.extend({\n  template: _.template(\"This is Inline Templates Example\"),\n\n  initialize: function () {\n    this.render();\n  },\n  render: function () {\n    this.$el.html(this.template());\n  }\n});\n\nvar v = new view({ el: '#demo' });\n\n\n//2\nvar view = Backbone.View.extend({\n\n  template: _.template($('#demoTemplate').html()),\n  initialize: function () {\n    this.render();\n  },\n  render: function () {\n    this.$el.html(this.template());\n  }\n});\n\nvar v = new view({ el: '#demo' });\n`.trim();\n\nconst templatesCon = `\n//html\n<div id=\"container\"></div>\n<script id=\"songTemplate\" type=\"text/html\">\n   <%= title %>\n   <button>Listen</button>\n   \n   <% if(plays >1000){%>\n    <span class=\"popular\">Popular</span>\n <%}%>\n</script>\n<script src=\"main.js\"></script>\n  \n \n//js\nvar Song = Backbone.Model.extend();\n\nvar SongView = Backbone.View.extend({\n  render: function () {\n    var template = _.template($(\"#songTemplate\").html())\n    var html = template(this.model.toJSON())\n    this.$el.html(html)\n    return this;\n  }\n});\n\nvar song = new Song({ title: \"Blue in Green\", plays: 1001 });\nvar songView = new SongView({ el: \"#container\", model: song })\nsongView.render()\n`.trim();\n\nconst routers = `\n//html\n<div id=\"demo\"></div>\n<vav id=\"orderNav\">\n <ul>\n   <li data-url=\"firstOrder\">First Order</li>\n   <li data-url=\"secondOrder\">Second Order</li>\n   <li data-url=\"thirdOrder\">Third Order</li>\n </ul>\n</vav>\n<script src=\"main.js\"></script>\n\n\n//2\n<div id=\"demo\"></div>\n<ul>\n <li><a href=\"#/first/10\">First</a></li>\n <li><a href=\"#/second\">Second</a></li>\n <li><a href=\"#/third/10/anythings\">Third</a></li>\n</ul>\n\n\n//js\nvar routeExample = Backbone.Router.extend({\n  routes: {\n    'view1': 'firstView',\n    'view2': 'secondView',\n    '': 'thirdView'\n  },\n  firstView: function () {\n    console.log(\"This is our first View\");\n  },\n  secondView: function () {\n    console.log(\"This is our second View\");\n  },\n  thirdView: function () {\n    console.log(\"This is our thired View\");\n  }\n});\n\nvar router = new routeExample();\nBackbone.history.start();\n\n//file:///D:/Qc/backbone/docs/router/index.html#/view1\n  \n\n//3\nvar first = Backbone.View.extend({\n  initialize: function () {\n    this.render();\n  },\n  render: function () {\n    console.log(\"This is our first View\");\n  }\n});\n\n\nvar second = Backbone.View.extend({\n  initialize: function () {\n    this.render();\n  },\n  render: function () {\n    console.log(\"This is our second View\");\n  }\n});\n\n\nvar third = Backbone.View.extend({\n  initialize: function () {\n    this.render();\n  },\n  render: function () {\n    console.log(\"This is our third View\");\n  }\n});\n\n\nvar routeExample = Backbone.Router.extend({\n  routes: {\n    'view1': 'firstView',\n    'view2': 'secondView',\n    '': 'thirdView'\n  },\n  firstView: function () {\n    var fv = new first();\n  },\n  secondView: function () {\n    var sv = new second();\n  },\n  thirdView: function () {\n    var tv = new third();\n  }\n});\n\nvar router = new routeExample();\nBackbone.history.start();\n\n\n//4\nvar pizza = Backbone.View.extend({\n  render: function () {\n    this.$el.html(\"You ordered Pizza\");\n  }\n});\nvar momos = Backbone.View.extend({\n  render: function () {\n    this.$el.html(\"You ordered momos\");\n  }\n});\nvar burger = Backbone.View.extend({\n  render: function () {\n    this.$el.html(\"You ordered burger\");\n  }\n});\n\n\nvar routerDemo = Backbone.Router.extend({\n  routes: {\n    'firstOrder': 'pizzaOrder',\n    'secondOrder': 'momosOrder',\n    'thirdOrder': 'burgerOrder',\n    '*other': 'default'\n  },\n  pizzaOrder: function () {\n    var view = new pizza({\n      el: '#demo'\n    });\n\n    view.render();\n  },\n  momosOrder: function () {\n    var view = new momos({\n      el: '#demo'\n    });\n\n    view.render();\n  },\n  burgerOrder: function () {\n    var view = new burger({\n      el: '#demo'\n    });\n\n    view.render();\n  },\n  default: function () {\n    console.log(\"You ordered Nothing\");\n  },\n\n});\n\nvar router = new routerDemo();\nBackbone.history.start();\n\n//for ui routing\nvar foodCourt = Backbone.View.extend({\n  events: {\n    'click': 'onClick'\n  },\n  onClick: function (e) {\n    var $li = $(e.target);\n    router.navigate($li.attr(\"data-url\"), { trigger: true });\n  }\n});\n\nvar v = new foodCourt({\n  el: '#orderNav'\n});\n`.trim();\n\n\nclass Backbonejs extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Model</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={modelOps}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Model Inheritance</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={modelInheritance}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Model Validations</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={modelVals}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Collection</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={modelCols}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Custom Event</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={custmEvent}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Data Change on custm Event</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={dataChange}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Event Handler</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={eventHandler}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>View</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={modelView}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Add List</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={addLists}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>View Passing Data</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={passingData}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Template</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={templates}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Template Conditions</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={templatesCon}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Router</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={routers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Backbonejs));\n"]},"metadata":{},"sourceType":"module"}