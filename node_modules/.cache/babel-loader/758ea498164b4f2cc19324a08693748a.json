{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/nodeJs/nodeDeep/nodetext.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst modules = `\nconst express = require('express');\nconst app = express();\nconst ejs = require('ejs');\nconst Nexmo = require('nexmo');\nconst socketio = require('socket.io');\n\n// Init Nexmo\nconst nexmo = new Nexmo({\n  apiKey: 'YOURAPIKEY',\n  apiSecret: 'YOURAPISECRET'\n}, { debug: true });\n\n// Template engine setup\napp.set('view engine', 'html');\napp.engine('html', ejs.renderFile);\n\n// Public folder setup\napp.use(express.static(__dirname + '/public'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\n// Index route\napp.get('/', (req, res) => {\n  res.render('index');\n});\n\n// Catch form submit\napp.post('/', (req, res) => {\n  // res.send(req.body);\n  const { number, text } = req.body;\n\n  nexmo.message.sendSms(\n    'YOURVURTUALNUMBER', number, text, { type: 'unicode' },\n    (err, responseData) => {\n      if(err) {\n        console.log(err);\n      } else {\n        const { messages } = responseData;\n        const { ['message-id']: id, ['to']: number, ['error-text']: error  } = messages[0];\n        console.dir(responseData);\n        // Get data from response\n        const data = {\n          id,\n          number,\n          error\n        };\n\n        // Emit to the client\n        io.emit('smsStatus', data);\n      }\n    }\n  );\n});\n\n\nconst port = 5000;\nconst server = app.listen(port, () => console.log('Server started on port.'));\n\n// Connect to socket.io\nconst io = socketio(server);\nio.on('connection', (socket) => {\n  console.log('Connected');\n  io.on('disconnect', () => {\n    console.log('Disconnected');\n  })\n});\n`.trim();\nconst views = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/skeleton/2.0.4/skeleton.css\" />\n  <title>Node SMS Texting</title>\n</head>\n<body>\n  <div class=\"container\">\n    <h2>Send SMS Message</h2>\n    <input type=\"tel\" name=\"number\" id=\"number\" placeholder=\"Enter Phone Number...\">\n    <input type=\"text\" name=\"msg\" id=\"msg\" placeholder=\"Enter Text Message...\">\n    <select name=\"schedule\" id=\"schedule\">\n      <option value=\"0\">Schedule time to send a message</option>\n      <option value=\"1\">After 1 minutes</option>\n      <option value=\"3\">After 3 minutes</option>\n      <option value=\"5\">After 5 minutes</option>\n    </select>\n    <input type=\"button\" id=\"button\" value=\"Send Text\" class=\"button button-primary\">\n    <p class=\"response\"></p>\n  </div>\n\n  <script src=\"/socket.io/socket.io.js\"></script>\n  <script src=\"js/main.js\"></script>\n</body>\n</html>`.trim();\n\nclass Nodetext extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Nodetext App\"), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"server.js\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: modules,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"views/index.html\"), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: views,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(Nodetext);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/nodeJs/nodeDeep/nodetext.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","modules","trim","views","Nodetext","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,EAAkCC,IAAlC,QAA8C,mBAA9C;AAEA,OAAO,0BAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAGA,MAAMC,MAAM,GAAG;AAAEC,EAAAA,eAAe,EAAE,SAAnB;AAA8BC,EAAAA,OAAO,EAAE,KAAvC;AAA8CC,EAAAA,QAAQ,EAAE;AAAxD,CAAf;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH;AAELN,IAAAA,OAAO,EAAEG,KAAK,CAACG,OAAN,CAAc,CAAd;AAFJ,GADgB;AAKvBC,EAAAA,QAAQ,EAAE;AACRF,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADA,GALa;AAQvBE,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF;AARY,CAAL,CAApB;;AAcA,MAAMC,OAAO,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAD,CAmEdC,IAnEc,EAAhB;AAqEA,MAAMC,KAAK,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAAD,CA4BLD,IA5BK,EAAd;;AA+BA,MAAME,QAAN,SAAuBvB,SAAvB,CAAiC;AAC/BwB,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,UAAU,CAAC,MAAMxB,KAAK,CAACyB,YAAN,EAAP,EAA6B,CAA7B,CAAV;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,WACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAED,OAAO,CAACd,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CADF,CADF,CADF,EAME,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEc,OAAO,CAACd,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE;AAAK,MAAA,KAAK,EAAEN,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEY,OADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAbF,EAcE;AAAK,MAAA,KAAK,EAAEZ,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEc,KADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAdF,CADF,CADF,CANF,CADF;AAmCD;;AAzC8B;;AA4CjC,eAAgBlB,UAAU,CAACQ,MAAD,CAAV,CAAmBW,QAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst modules = `\nconst express = require('express');\nconst app = express();\nconst ejs = require('ejs');\nconst Nexmo = require('nexmo');\nconst socketio = require('socket.io');\n\n// Init Nexmo\nconst nexmo = new Nexmo({\n  apiKey: 'YOURAPIKEY',\n  apiSecret: 'YOURAPISECRET'\n}, { debug: true });\n\n// Template engine setup\napp.set('view engine', 'html');\napp.engine('html', ejs.renderFile);\n\n// Public folder setup\napp.use(express.static(__dirname + '/public'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\n// Index route\napp.get('/', (req, res) => {\n  res.render('index');\n});\n\n// Catch form submit\napp.post('/', (req, res) => {\n  // res.send(req.body);\n  const { number, text } = req.body;\n\n  nexmo.message.sendSms(\n    'YOURVURTUALNUMBER', number, text, { type: 'unicode' },\n    (err, responseData) => {\n      if(err) {\n        console.log(err);\n      } else {\n        const { messages } = responseData;\n        const { ['message-id']: id, ['to']: number, ['error-text']: error  } = messages[0];\n        console.dir(responseData);\n        // Get data from response\n        const data = {\n          id,\n          number,\n          error\n        };\n\n        // Emit to the client\n        io.emit('smsStatus', data);\n      }\n    }\n  );\n});\n\n\nconst port = 5000;\nconst server = app.listen(port, () => console.log('Server started on port.'));\n\n// Connect to socket.io\nconst io = socketio(server);\nio.on('connection', (socket) => {\n  console.log('Connected');\n  io.on('disconnect', () => {\n    console.log('Disconnected');\n  })\n});\n`.trim();\n\nconst views = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/skeleton/2.0.4/skeleton.css\" />\n  <title>Node SMS Texting</title>\n</head>\n<body>\n  <div class=\"container\">\n    <h2>Send SMS Message</h2>\n    <input type=\"tel\" name=\"number\" id=\"number\" placeholder=\"Enter Phone Number...\">\n    <input type=\"text\" name=\"msg\" id=\"msg\" placeholder=\"Enter Text Message...\">\n    <select name=\"schedule\" id=\"schedule\">\n      <option value=\"0\">Schedule time to send a message</option>\n      <option value=\"1\">After 1 minutes</option>\n      <option value=\"3\">After 3 minutes</option>\n      <option value=\"5\">After 5 minutes</option>\n    </select>\n    <input type=\"button\" id=\"button\" value=\"Send Text\" class=\"button button-primary\">\n    <p class=\"response\"></p>\n  </div>\n\n  <script src=\"/socket.io/socket.io.js\"></script>\n  <script src=\"js/main.js\"></script>\n</body>\n</html>`.trim();\n\n\nclass Nodetext extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Nodetext App</h3>\n              <b>server.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={modules}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>views/index.html</b>\n              <div style={titles}>\n                <PrismCode\n                  code={views}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Nodetext));\n"]},"metadata":{},"sourceType":"module"}