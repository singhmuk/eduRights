{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/nodeJs/nodeDeep/tut_2.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst geocode = `\nconst request = require('request')\n\nconst url = 'https://api.darksky.net/forecast/5d82708dedf7f790ac891b3ce2a9c50a/37.8267,-122.4233'\n\nrequest({ url: url, json: true }, (error, response) => {\n    // console.log(response.body.daily.data[0].summary + ' It is currently ' + response.body.currently.temperature + \n        ' degress out. There is a ' + response.body.currently.precipProbability + '% chance of rain.')\n    console.log(response.body.daily)\n})\n\n// Geocoding\n// Address -> Lat/Long -> Weather\n\nconst geocodeURL = 'https://api.mapbox.com/geocoding/v5/mapbox.places/Los%20Angeles.json?access_token=pk.\n      eyJ1IjoiYW5kcmV3bWVhZDEiLCJhIjoiY2pvOG8ybW90MDFhazNxcnJ4OTYydzJlOSJ9.njY7HvaalLEVhEOIghPTlw&limit=1'\n\nrequest({ url: geocodeURL, json: true }, (error, response) => {\n    const latitude = response.body.features[0].center[0]\n    const longitude = response.body.features[0].center[1]\n    console.log(latitude, longitude)\n})`.trim();\nconst errors = `\nconst request = require('request')\n\n\nconst geocodeURL = 'https://api.mapbox.com/geocoding/v5/mapbox.places/philadelphia.json?access_token=pk.\n          eyJ1IjoiYW5kcmV3bWVhZDEiLCJhIjoiY2pvOG8ybW90MDFhazNxcnJ4OTYydzJlOSJ9.njY7HvaalLEVhEOIghPTlw&limit=1'\n\nrequest({ url: geocodeURL, json: true }, (error, response) => {\n    if (error) {\n        console.log('Unable to connect to location services!')\n    } else if (response.body.features.length === 0) {\n        console.log('Unable to find location. Try another search.')\n    } else {\n        const latitude = response.body.features[0].center[0]\n        const longitude = response.body.features[0].center[1]\n        console.log(latitude, longitude)\n    }\n})`.trim();\nconst geocode_2 = `const request = require('request')\n\nconst geocode = (address, callback) => {\n    const url = 'https://api.mapbox.com/geocoding/v5/mapbox.places/' + address + '.json?access_token=pk.\n              eyJ1IjoiYW5kcmV3bWVhZDEiLCJhIjoiY2pvOG8ybW90MDFhazNxcnJ4OTYydzJlOSJ9.njY7HvaalLEVhEOIghPTlw&limit=1'\n\n    request({ url: url, json: true }, (error, response) => {\n        if (error) {\n            callback('Unable to connect to location services!', undefined)\n        } else if (response.body.features.length === 0) {\n            callback('Unable to find location. Try another search.', undefined)\n        } else {\n            callback(undefined, {\n                latitude: response.body.features[0].center[0],\n                longitude: response.body.features[0].center[1],\n                location: response.body.features[0].place_name\n            })\n        }\n    })\n}\n\nmodule.exports = geocode`.trim();\nconst callBackAbs = `\nconst request = require('request')\nconst geocode = require('./utils/geocode')\n\n\ngeocode('Boston', (error, data) => {\n    console.log('Error', error)\n    console.log('Data', data)\n})`.trim();\nconst forecast = `\nconst request = require('request')\n\nconst forecast = (latitude, longitude, callback) => {\n    const url = 'https://api.darksky.net/forecast/9d1465c6f3bb7a6c71944bdd8548d026/' + latitude + ',' + longitude\n\n    request({ url: url, json: true }, (error, response) => {\n        if (error) {\n            callback('Unable to connect to weather service!', undefined)\n        } else if (response.body.error) {\n            callback('Unable to find location', undefined)\n        } else {\n            callback(undefined, response.body.daily.data[0].summary + ' It is currently ' + response.body.currently.\n            temperature + ' degress out. There is a ' + response.body.currently.precipProbability + '% chance of rain.')\n        }\n    })\n}\n\nmodule.exports = forecast`.trim();\nconst callBacksAbs_2 = `\nconst geocode = require('./utils/geocode')\nconst forecast = require('./utils/forecast')\n\ngeocode('Boston', (error, data) => {\n    console.log('Error', error)\n    console.log('Data', data)\n})\n\nforecast(-75.7088, 44.1545, (error, data) => {\n    console.log('Error', error)\n    console.log('Data', data)\n})`.trim();\nconst chainingCall = `\nconst geocode = require('./utils/geocode')\nconst forecast = require('./utils/forecast')\n\nconst address = process.argv[2]\n\nif (!address) {\n    console.log('Please provide an address')\n} else {\n    geocode(address, (error, data) => {\n        if (error) {\n            return console.log(error)\n        }\n\n        forecast(data.latitude, data.longitude, (error, forecastData) => {\n            if (error) {\n                return console.log(error)\n            }\n\n            console.log(data.location)\n            console.log(forecastData)\n        })\n    })\n}\n`.trim();\nconst npmPackages = `\nvar http = require('http');\nvar uc = require('upper-case');\nhttp.createServer(function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/html'});\n  res.write(uc(\"Text convert to upper case\"));\n  res.end();\n}).listen(4000);`.trim();\nconst UploadFilesServer = `\nvar http = require('http');\nvar formidable = require('formidable');\nvar fs = require('fs');\n\nhttp.createServer(function (req, res) {\n  if (req.url == '/fileupload') {\n    var form = new formidable.IncomingForm();\n    form.parse(req, function (err, fields, files) {\n      var oldpath = files.filetoupload.path;\n      var newpath = 'C:/Users/Your Name/' + files.filetoupload.name;\n      fs.rename(oldpath, newpath, function (err) {\n        if (err) throw err;\n        res.write('File uploaded and moved!');\n        res.end();\n      });\n });\n  } else {\n    res.writeHead(200, {'Content-Type': 'text/html'});\n    res.write('<form action=\"fileupload\" method=\"post\" enctype=\"multipart/form-data\">');\n    res.write('<input type=\"file\" name=\"filetoupload\"><br>');\n    res.write('<input type=\"submit\">');\n    res.write('</form>');\n    return res.end();\n  }\n}).listen(8080);`.trim();\n\nclass Tut2 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Geocode\"), \"Server.js\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: geocode,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Errors\"), \"Server.js\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: errors,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"CallBack Abstraction\"), \"geocode_2.js\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: geocode_2,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), \"Server.js\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: callBackAbs,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"CallBack Abstraction_2\"), \"forecast.js\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: forecast,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), \"Server.js\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: callBacksAbs_2,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Chaining Callback\"), \"Server.js\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: chainingCall,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"NPM Packages\"), \"Server.js\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: npmPackages,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Upload Files On Server\"), React.createElement(\"hl\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"When a file is successfully uploaded to the server, it is placed on a temporary folder.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"The path to this directory can be found in the \\\"files\\\" object, passed as the third argument in the parse() method's callback function.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"To move the file to the folder of your choice, use the File System module, and rename the file:\")), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: UploadFilesServer,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(Tut2);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/nodeJs/nodeDeep/tut_2.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","geocode","trim","errors","geocode_2","callBackAbs","forecast","callBacksAbs_2","chainingCall","npmPackages","UploadFilesServer","Tut2","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst geocode = `\nconst request = require('request')\n\nconst url = 'https://api.darksky.net/forecast/5d82708dedf7f790ac891b3ce2a9c50a/37.8267,-122.4233'\n\nrequest({ url: url, json: true }, (error, response) => {\n    // console.log(response.body.daily.data[0].summary + ' It is currently ' + response.body.currently.temperature + \n        ' degress out. There is a ' + response.body.currently.precipProbability + '% chance of rain.')\n    console.log(response.body.daily)\n})\n\n// Geocoding\n// Address -> Lat/Long -> Weather\n\nconst geocodeURL = 'https://api.mapbox.com/geocoding/v5/mapbox.places/Los%20Angeles.json?access_token=pk.\n      eyJ1IjoiYW5kcmV3bWVhZDEiLCJhIjoiY2pvOG8ybW90MDFhazNxcnJ4OTYydzJlOSJ9.njY7HvaalLEVhEOIghPTlw&limit=1'\n\nrequest({ url: geocodeURL, json: true }, (error, response) => {\n    const latitude = response.body.features[0].center[0]\n    const longitude = response.body.features[0].center[1]\n    console.log(latitude, longitude)\n})`.trim()\n\nconst errors = `\nconst request = require('request')\n\n\nconst geocodeURL = 'https://api.mapbox.com/geocoding/v5/mapbox.places/philadelphia.json?access_token=pk.\n          eyJ1IjoiYW5kcmV3bWVhZDEiLCJhIjoiY2pvOG8ybW90MDFhazNxcnJ4OTYydzJlOSJ9.njY7HvaalLEVhEOIghPTlw&limit=1'\n\nrequest({ url: geocodeURL, json: true }, (error, response) => {\n    if (error) {\n        console.log('Unable to connect to location services!')\n    } else if (response.body.features.length === 0) {\n        console.log('Unable to find location. Try another search.')\n    } else {\n        const latitude = response.body.features[0].center[0]\n        const longitude = response.body.features[0].center[1]\n        console.log(latitude, longitude)\n    }\n})`.trim()\n\nconst geocode_2 = `const request = require('request')\n\nconst geocode = (address, callback) => {\n    const url = 'https://api.mapbox.com/geocoding/v5/mapbox.places/' + address + '.json?access_token=pk.\n              eyJ1IjoiYW5kcmV3bWVhZDEiLCJhIjoiY2pvOG8ybW90MDFhazNxcnJ4OTYydzJlOSJ9.njY7HvaalLEVhEOIghPTlw&limit=1'\n\n    request({ url: url, json: true }, (error, response) => {\n        if (error) {\n            callback('Unable to connect to location services!', undefined)\n        } else if (response.body.features.length === 0) {\n            callback('Unable to find location. Try another search.', undefined)\n        } else {\n            callback(undefined, {\n                latitude: response.body.features[0].center[0],\n                longitude: response.body.features[0].center[1],\n                location: response.body.features[0].place_name\n            })\n        }\n    })\n}\n\nmodule.exports = geocode`.trim()\n\nconst callBackAbs = `\nconst request = require('request')\nconst geocode = require('./utils/geocode')\n\n\ngeocode('Boston', (error, data) => {\n    console.log('Error', error)\n    console.log('Data', data)\n})`.trim()\n\nconst forecast = `\nconst request = require('request')\n\nconst forecast = (latitude, longitude, callback) => {\n    const url = 'https://api.darksky.net/forecast/9d1465c6f3bb7a6c71944bdd8548d026/' + latitude + ',' + longitude\n\n    request({ url: url, json: true }, (error, response) => {\n        if (error) {\n            callback('Unable to connect to weather service!', undefined)\n        } else if (response.body.error) {\n            callback('Unable to find location', undefined)\n        } else {\n            callback(undefined, response.body.daily.data[0].summary + ' It is currently ' + response.body.currently.\n            temperature + ' degress out. There is a ' + response.body.currently.precipProbability + '% chance of rain.')\n        }\n    })\n}\n\nmodule.exports = forecast`.trim()\n\nconst callBacksAbs_2 = `\nconst geocode = require('./utils/geocode')\nconst forecast = require('./utils/forecast')\n\ngeocode('Boston', (error, data) => {\n    console.log('Error', error)\n    console.log('Data', data)\n})\n\nforecast(-75.7088, 44.1545, (error, data) => {\n    console.log('Error', error)\n    console.log('Data', data)\n})`.trim()\n\nconst chainingCall = `\nconst geocode = require('./utils/geocode')\nconst forecast = require('./utils/forecast')\n\nconst address = process.argv[2]\n\nif (!address) {\n    console.log('Please provide an address')\n} else {\n    geocode(address, (error, data) => {\n        if (error) {\n            return console.log(error)\n        }\n\n        forecast(data.latitude, data.longitude, (error, forecastData) => {\n            if (error) {\n                return console.log(error)\n            }\n\n            console.log(data.location)\n            console.log(forecastData)\n        })\n    })\n}\n`.trim();\n\nconst npmPackages = `\nvar http = require('http');\nvar uc = require('upper-case');\nhttp.createServer(function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/html'});\n  res.write(uc(\"Text convert to upper case\"));\n  res.end();\n}).listen(4000);`.trim();\n\nconst UploadFilesServer = `\nvar http = require('http');\nvar formidable = require('formidable');\nvar fs = require('fs');\n\nhttp.createServer(function (req, res) {\n  if (req.url == '/fileupload') {\n    var form = new formidable.IncomingForm();\n    form.parse(req, function (err, fields, files) {\n      var oldpath = files.filetoupload.path;\n      var newpath = 'C:/Users/Your Name/' + files.filetoupload.name;\n      fs.rename(oldpath, newpath, function (err) {\n        if (err) throw err;\n        res.write('File uploaded and moved!');\n        res.end();\n      });\n });\n  } else {\n    res.writeHead(200, {'Content-Type': 'text/html'});\n    res.write('<form action=\"fileupload\" method=\"post\" enctype=\"multipart/form-data\">');\n    res.write('<input type=\"file\" name=\"filetoupload\"><br>');\n    res.write('<input type=\"submit\">');\n    res.write('</form>');\n    return res.end();\n  }\n}).listen(8080);`.trim();\n\n\nclass Tut2 extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Geocode</h3>\n      Server.js\n      <div style={titles}>\n                <PrismCode\n                  code={geocode}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Errors</h3>\n      Server.js\n      <div style={titles}>\n                <PrismCode\n                  code={errors}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>CallBack Abstraction</h3>\n      geocode_2.js\n      <div style={titles}>\n                <PrismCode\n                  code={geocode_2}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n      Server.js\n      <div style={titles}>\n                <PrismCode\n                  code={callBackAbs}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>CallBack Abstraction_2</h3>\n      forecast.js\n      <div style={titles}>\n                <PrismCode\n                  code={forecast}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n      Server.js\n      <div style={titles}>\n                <PrismCode\n                  code={callBacksAbs_2}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Chaining Callback</h3>\n      Server.js\n      <div style={titles}>\n                <PrismCode\n                  code={chainingCall}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>NPM Packages</h3>\n      Server.js\n      <div style={titles}>\n                <PrismCode\n                  code={npmPackages}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <h3>Upload Files On Server</h3>\n              <hl>\n                <li>When a file is successfully uploaded to the server, it is placed on a temporary folder.</li>\n                <li>The path to this directory can be found in the \"files\" object, passed as the third argument in the parse() method's callback function.</li>\n                <li>To move the file to the folder of your choice, use the File System module, and rename the file:</li>\n              </hl>\n              <div style={titles}>\n                <PrismCode\n                  code={UploadFilesServer}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Tut2));\n"]},"metadata":{},"sourceType":"module"}