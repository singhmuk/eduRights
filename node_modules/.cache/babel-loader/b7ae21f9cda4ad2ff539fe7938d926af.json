{"ast":null,"code":"var _jsxFileName = \"/home/mukeshs/Projects/edurights/src/components/mern/projects/pagination.js\";\nimport React, { Component } from 'react';\nimport Prism from \"prismjs\";\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\nimport '../../ReactJs/styles.css';\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\nconst titles = {\n  backgroundColor: '#F0F8FF',\n  padding: '1px',\n  fontSize: '16px'\n};\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst Search = `class SearchApi extends Component {\n  state = {\n    items: []\n  }\n\nsearch=(key)=>{\n  let url=\"http://localhost:5000/items?q=\";\n  axios.get(url + key)\n       .then(res => {\n         const items = res.data;\n         this.setState({ items })\n       })\n}\ncomponentDidMount(){\n  this.search()\n}\n\nrender(){\n  return(\n    <div>\n      <input type = \"text\" onChange = {(e) => this.search(e.target.value)} />\n      {this.state.items ? \n      <div>\n        {this.state.items.map((data, id) => (\n          <li key={id}>{data._id} - {data.name}</li>\n        ))}\n      </div>  \n      : ''\n        }\n    </div>\n    )\n  }\n}`.trim();\nconst HeaderAuth = `\nclass ApiAuthentication extends Component {\n  state = {\n    items: []\n  }\n\nsearch=(key)=>{\n  let url=\"http://localhost:5000/items?q=\";\n  const auth = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2I0NGI1ZjNiZTY2YTQ1MTdmM\n                jk2ODciLCJyb2xlSWQiOiI1YjA2NjMzNTVmYTMwZDY4Y2VkNmRkODgiLCJlbWFpbCI6InZpa2FzaEB5b3BtYWls\"\n\n  axios.get(url, {\n    \"headers\": { \"Authorization\":\"bearer \"+ auth ,\n      \"Access-Control-Allow-Headers\": \"*\",\n      \"content-type\": \"application/json\",\n      \"Accept\": \"*\"\n      }\n    })\n       .then(res => {\n         const items = res.data;\n         this.setState({ items })\n       })\n       .catch(error => {\n        throw(error);\n      });\n}\ncomponentDidMount(){\n  this.search()\n}\n\nrender(){\n  return(\n    <div>\n      <input type = \"text\" onChange = {(e) => this.search(e.target.value)} />\n      {this.state.items ? \n      <div>\n        {this.state.items.map((data, id) => (\n          <li key={id}>{data._id} - {data.name}</li>\n        ))}\n      </div>  \n      : ''\n        }\n    </div>\n    )\n  }\n}`.trim();\nconst SortApi = `\nconst Row = ({id, title, priority, type, complete}) => (\n  <div className=\"row\">\n    <div>{id}</div>\n    <div>{title}</div>\n    <div>{priority}</div>\n    <div>{type}</div>    \n    <div>{complete}</div>    \n  </div>\n);\n\n\n\nclass SortCompo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n    \n    this.compareBy.bind(this);\n    this.sortBy.bind(this);\n  }\n  \n  search=(key)=>{\n    let url=\"http://localhost:5000/items\";\n    axios.get(url)\n         .then(res => {\n           const items = res.data;\n           this.setState({ items })\n         })\n  }\n  componentDidMount(){\n    this.search()\n  }\n  \n  compareBy(key) {\n    return function (a, b) {\n      if (a[key] < b[key]) return -1;\n      if (a[key] > b[key]) return 1;\n      return 0;\n    };\n  }\n \n  sortBy(key) {\n    let arrayCopy = [...this.state.items];\n    arrayCopy.sort(this.compareBy(key));\n    this.setState({data: arrayCopy});\n  }\n    \n  render() {\n    const rows =  this.state.items.map((data, id) => (\n      <li key={id}>{data._id} - {data.name}</li>\n    ))\n\n    return (\n      <div className=\"table\">\n        <div className=\"header\">\n          <div onClick={() => this.sortBy('id')} >ID</div>\n          <div onClick={() => this.sortBy('title')}>Title</div>\n          <div onClick={() => this.sortBy('priority')}>Priority</div>\n          <div onClick={() => this.sortBy('type')}>Issue Type</div>\n          <div onClick={() => this.sortBy('complete')}>% Complete</div>\n        </div>\n        <div className=\"body\">\n          {rows}\n        </div>\n      </div>\n    );\n  }\n}\n`.trim();\nconst SortStatic = `const Row = ({id, title, priority, type, complete}) => (\n  <div className=\"row\">\n    <div>{id}</div>\n    <div>{title}</div>\n    <div>{priority}</div>\n    <div>{type}</div>    \n    <div>{complete}</div>    \n  </div>\n);\n\n\nclass SortDemo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [\n        {id: 403, title: 'Task 403', priority: 'High', type: 'Improvement', complete: 100}, \n        {id: 532, title: 'Task 532', priority: 'Medium', type: 'Improvement', complete: 30}, \n        {id: 240, title: 'Task 240', priority: 'High', type: 'Story', complete: 66},\n      ],\n    };\n    \n    this.compareBy.bind(this);\n    this.sortBy.bind(this);\n  }\n  \n  compareBy(key) {\n    return function (a, b) {\n      if (a[key] < b[key]) return -1;\n      if (a[key] > b[key]) return 1;\n      return 0;\n    };\n  }\n \n  sortBy(key) {\n    let arrayCopy = [...this.state.data];\n    arrayCopy.sort(this.compareBy(key));\n    this.setState({data: arrayCopy});\n  }\n    \n  render() {\n    const rows = this.state.data.map( (rowData) => <Row {...rowData} />);\n\n    return (\n      <div className=\"table\">\n        <div className=\"header\">\n          <div onClick={() => this.sortBy('id')} >ID</div>\n          <div onClick={() => this.sortBy('title')}>Title</div>\n          <div onClick={() => this.sortBy('priority')}>Priority</div>\n          <div onClick={() => this.sortBy('type')}>Issue Type</div>\n          <div onClick={() => this.sortBy('complete')}>% Complete</div>\n        </div>\n        <div className=\"body\">\n          {rows}\n        </div>\n      </div>\n    );\n  }\n}`.trim();\nconst Post = `const Posts = ({ posts, loading }) => {\n  if (loading) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <ul className='list-group mb-4'>\n      {posts.map(post => (\n        <li key={post._id} className='list-group-item'>\n          {post._id} - {post.name}\n        </li>\n      ))}\n    </ul>\n  );\n};`.trim();\nconst Paginations = `const Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className='pagination'>\n        {pageNumbers.map(number => (\n          <li key={number} className='page-item'>\n            <a onClick={() => paginate(number)} href='!#' className='page-link'>\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;`.trim();\nconst MainComp = `\nconst MainComp = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get('http://localhost:5000/items');\n      setPosts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []);\n\n  // Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return (\n    <div className='container mt-5'>\n      <h1 className='text-primary mb-3'>My Blog</h1>\n      <Posts posts={currentPosts} loading={loading} />\n      <Pagination\n        postsPerPage={postsPerPage}\n        totalPosts={posts.length}\n        paginate={paginate}\n      />\n    </div>\n  );\n};\n`.trim();\n\nclass Pagination extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, \"Search API\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }), \"Search.js\", React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: Search,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, \"Token Authorization\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: HeaderAuth,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, \"Sort Api\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: SortApi,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \"Sort Static\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: SortStatic,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"Pagination\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }), \"post.js\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: Post,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }), \"Pagination.js\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: Paginations,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }), \"MainComp.js\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(PrismCode, {\n      code: MainComp,\n      language: \"js\",\n      plugins: [\"line-numbers\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(Pagination);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/mern/projects/pagination.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","Search","trim","HeaderAuth","SortApi","SortStatic","Post","Paginations","MainComp","Pagination","componentDidMount","setTimeout","highlightAll","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst Search = `class SearchApi extends Component {\n  state = {\n    items: []\n  }\n\nsearch=(key)=>{\n  let url=\"http://localhost:5000/items?q=\";\n  axios.get(url + key)\n       .then(res => {\n         const items = res.data;\n         this.setState({ items })\n       })\n}\ncomponentDidMount(){\n  this.search()\n}\n\nrender(){\n  return(\n    <div>\n      <input type = \"text\" onChange = {(e) => this.search(e.target.value)} />\n      {this.state.items ? \n      <div>\n        {this.state.items.map((data, id) => (\n          <li key={id}>{data._id} - {data.name}</li>\n        ))}\n      </div>  \n      : ''\n        }\n    </div>\n    )\n  }\n}`.trim()\n\nconst HeaderAuth = `\nclass ApiAuthentication extends Component {\n  state = {\n    items: []\n  }\n\nsearch=(key)=>{\n  let url=\"http://localhost:5000/items?q=\";\n  const auth = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2I0NGI1ZjNiZTY2YTQ1MTdmM\n                jk2ODciLCJyb2xlSWQiOiI1YjA2NjMzNTVmYTMwZDY4Y2VkNmRkODgiLCJlbWFpbCI6InZpa2FzaEB5b3BtYWls\"\n\n  axios.get(url, {\n    \"headers\": { \"Authorization\":\"bearer \"+ auth ,\n      \"Access-Control-Allow-Headers\": \"*\",\n      \"content-type\": \"application/json\",\n      \"Accept\": \"*\"\n      }\n    })\n       .then(res => {\n         const items = res.data;\n         this.setState({ items })\n       })\n       .catch(error => {\n        throw(error);\n      });\n}\ncomponentDidMount(){\n  this.search()\n}\n\nrender(){\n  return(\n    <div>\n      <input type = \"text\" onChange = {(e) => this.search(e.target.value)} />\n      {this.state.items ? \n      <div>\n        {this.state.items.map((data, id) => (\n          <li key={id}>{data._id} - {data.name}</li>\n        ))}\n      </div>  \n      : ''\n        }\n    </div>\n    )\n  }\n}`.trim()\n\nconst SortApi = `\nconst Row = ({id, title, priority, type, complete}) => (\n  <div className=\"row\">\n    <div>{id}</div>\n    <div>{title}</div>\n    <div>{priority}</div>\n    <div>{type}</div>    \n    <div>{complete}</div>    \n  </div>\n);\n\n\n\nclass SortCompo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n    \n    this.compareBy.bind(this);\n    this.sortBy.bind(this);\n  }\n  \n  search=(key)=>{\n    let url=\"http://localhost:5000/items\";\n    axios.get(url)\n         .then(res => {\n           const items = res.data;\n           this.setState({ items })\n         })\n  }\n  componentDidMount(){\n    this.search()\n  }\n  \n  compareBy(key) {\n    return function (a, b) {\n      if (a[key] < b[key]) return -1;\n      if (a[key] > b[key]) return 1;\n      return 0;\n    };\n  }\n \n  sortBy(key) {\n    let arrayCopy = [...this.state.items];\n    arrayCopy.sort(this.compareBy(key));\n    this.setState({data: arrayCopy});\n  }\n    \n  render() {\n    const rows =  this.state.items.map((data, id) => (\n      <li key={id}>{data._id} - {data.name}</li>\n    ))\n\n    return (\n      <div className=\"table\">\n        <div className=\"header\">\n          <div onClick={() => this.sortBy('id')} >ID</div>\n          <div onClick={() => this.sortBy('title')}>Title</div>\n          <div onClick={() => this.sortBy('priority')}>Priority</div>\n          <div onClick={() => this.sortBy('type')}>Issue Type</div>\n          <div onClick={() => this.sortBy('complete')}>% Complete</div>\n        </div>\n        <div className=\"body\">\n          {rows}\n        </div>\n      </div>\n    );\n  }\n}\n`.trim()\n\nconst SortStatic = `const Row = ({id, title, priority, type, complete}) => (\n  <div className=\"row\">\n    <div>{id}</div>\n    <div>{title}</div>\n    <div>{priority}</div>\n    <div>{type}</div>    \n    <div>{complete}</div>    \n  </div>\n);\n\n\nclass SortDemo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [\n        {id: 403, title: 'Task 403', priority: 'High', type: 'Improvement', complete: 100}, \n        {id: 532, title: 'Task 532', priority: 'Medium', type: 'Improvement', complete: 30}, \n        {id: 240, title: 'Task 240', priority: 'High', type: 'Story', complete: 66},\n      ],\n    };\n    \n    this.compareBy.bind(this);\n    this.sortBy.bind(this);\n  }\n  \n  compareBy(key) {\n    return function (a, b) {\n      if (a[key] < b[key]) return -1;\n      if (a[key] > b[key]) return 1;\n      return 0;\n    };\n  }\n \n  sortBy(key) {\n    let arrayCopy = [...this.state.data];\n    arrayCopy.sort(this.compareBy(key));\n    this.setState({data: arrayCopy});\n  }\n    \n  render() {\n    const rows = this.state.data.map( (rowData) => <Row {...rowData} />);\n\n    return (\n      <div className=\"table\">\n        <div className=\"header\">\n          <div onClick={() => this.sortBy('id')} >ID</div>\n          <div onClick={() => this.sortBy('title')}>Title</div>\n          <div onClick={() => this.sortBy('priority')}>Priority</div>\n          <div onClick={() => this.sortBy('type')}>Issue Type</div>\n          <div onClick={() => this.sortBy('complete')}>% Complete</div>\n        </div>\n        <div className=\"body\">\n          {rows}\n        </div>\n      </div>\n    );\n  }\n}`.trim()\n\nconst Post = `const Posts = ({ posts, loading }) => {\n  if (loading) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <ul className='list-group mb-4'>\n      {posts.map(post => (\n        <li key={post._id} className='list-group-item'>\n          {post._id} - {post.name}\n        </li>\n      ))}\n    </ul>\n  );\n};`.trim()\n\nconst Paginations = `const Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className='pagination'>\n        {pageNumbers.map(number => (\n          <li key={number} className='page-item'>\n            <a onClick={() => paginate(number)} href='!#' className='page-link'>\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;`.trim()\n\nconst MainComp = `\nconst MainComp = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get('http://localhost:5000/items');\n      setPosts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []);\n\n  // Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return (\n    <div className='container mt-5'>\n      <h1 className='text-primary mb-3'>My Blog</h1>\n      <Posts posts={currentPosts} loading={loading} />\n      <Pagination\n        postsPerPage={postsPerPage}\n        totalPosts={posts.length}\n        paginate={paginate}\n      />\n    </div>\n  );\n};\n`.trim()\n\n\nclass Pagination extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <b>Search API</b>\n              <br />\n              Search.js\n              <div style={titles}>\n                <PrismCode\n                  code={Search}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>Token Authorization</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={HeaderAuth}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>Sort Api</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={SortApi}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>Sort Static</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={SortStatic}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              <b>Pagination</b>\n              <br />\n              post.js<br />\n              <div style={titles}>\n                <PrismCode\n                  code={Post}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              Pagination.js<br />\n              <div style={titles}>\n                <PrismCode\n                  code={Paginations}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n              MainComp.js<br />\n              <div style={titles}>\n                <PrismCode\n                  code={MainComp}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Pagination));\n"]},"metadata":{},"sourceType":"module"}