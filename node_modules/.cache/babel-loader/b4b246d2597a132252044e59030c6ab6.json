{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var Gallery=\"\\nconst gallerySchema = new Schema({\\n  name: { type: String, required: true },\\n  description: { type: String, required: false },\\n  images: { type: [String], required: false, }\\n});\\n\\nmodule.exports = mongoose.model(\\\"galleries\\\", gallerySchema);\\n\".trim();var multer=\"\\nconst multer = require(\\\"multer\\\");\\n\\nconst storage = multer.diskStorage({\\n  destination: function (req, file, cb) {\\n    cb(null, \\\"./server/uploads\\\");\\n  },\\n  filename: (req, file, cb) => {\\n    cb(null, ''$'{Date.now()}_'$'{file.originalname}');\\n  },\\n});\\n\\nconst fileFilter = (req, file, cb) => {\\n  if (\\n    file.mimetype === \\\"image/jpeg\\\" ||\\n    file.mimetype === \\\"image/png\\\" ||\\n    file.mimetype === \\\"image/jpg\\\"\\n  ) {\\n    cb(null, true);\\n  } else {\\n    cb({ message: \\\"Unsupported file format\\\" }, false);\\n  }\\n};\\n\\nconst upload = multer({\\n  storage: storage,\\n  limits: { fileSize: 1024 * 1024 },\\n  fileFilter: fileFilter,\\n});\\n\\nmodule.exports = upload;\\n\".trim();var gallerys=\"\\nconst Gallery = require(\\\"../models/Gallery\\\");\\nconst upload = require(\\\"../middlewares/multer\\\");\\nconst fs = require(\\\"fs\\\");\\n\\nrouter.get(\\\"/\\\", (req, res) => {\\n  Gallery.find().exec((err, galleries) => {\\n    if (err)\\n      return res.json({\\n        status: false,\\n        message: \\\"Server errors\\\",\\n        result: err,\\n      });\\n    return res.json({\\n      status: false,\\n      message: \\\"Data found\\\",\\n      result: galleries,\\n    });\\n  });\\n});\\n\\nrouter.post(\\\"/add\\\", (req, res) => {\\n  const gallery = new Gallery(req.body);\\n  gallery.save((err, newGallery) => {\\n    if (err)\\n      return res.json({\\n        status: false,\\n        message: \\\"Server errors\\\",\\n        result: err,\\n      });\\n    return res.json({\\n      status: true,\\n      message: \\\"Gallery added\\\",\\n      result: newGallery,\\n    });\\n  });\\n});\\n\\nrouter.put(\\\"/upload/:galleryId\\\", upload.array(\\\"image\\\", 3), async (req, res) => {\\n  const inputfiles = req.files;\\n  const images = [];\\n  inputfiles.map((file) => {\\n    images.push(file.filename);\\n  });\\n  const galleryId = req.params.galleryId;\\n\\n  Gallery.findOneAndUpdate(\\n    { _id: galleryId },\\n    { $push: { images: images } },\\n    { new: true },\\n    function (err, data) {\\n      if (err) {\\n        res.status(500).json({\\n          status: false,\\n          message: \\\"Upload error\\\",\\n          result: err,\\n        });\\n      } else {\\n        res.status(200).json({\\n          status: true,\\n          message: \\\"Upload successfully!\\\",\\n          result: data,\\n        });\\n      }\\n    }\\n  );\\n});\\n\\nrouter.get(\\\"/detail/:galleryId\\\", (req, res) => {\\n  const galleryId = req.params.galleryId;\\n  Gallery.findOne({ _id: galleryId }, function (err, gallery) {\\n    if (err) {\\n      res.status(500).json({\\n        status: false,\\n        message: \\\"Get gallery error\\\",\\n        result: err,\\n      });\\n    } else {\\n      res.status(200).json({\\n        status: true,\\n        message: \\\"Get gallery successfully!\\\",\\n        result: gallery,\\n      });\\n    }\\n  });\\n});\\n\\nrouter.put(\\\"/removeImage/:galleryId\\\", async (req, res) => {\\n  const fileName = req.body.fileName;\\n  console.log(\\\"~~~fileName: \\\", fileName);\\n\\n  const galleryId = req.params.galleryId;\\n\\n  Gallery.findOneAndUpdate(\\n    { _id: galleryId },\\n    { $pull: { images: fileName } },\\n    { new: true },\\n    function (err, data) {\\n      if (err) {\\n        res.status(500).json({\\n          status: false,\\n          message: \\\"Remove image error\\\",\\n          result: err,\\n        });\\n      } else {\\n        const path = \\\"server/uploads/\\\" + fileName;\\n        fs.unlinkSync(path);\\n        res.status(200).json({\\n          status: true,\\n          message: \\\"Remove image successfully!\\\",\\n          result: data,\\n        });\\n      }\\n    }\\n  );\\n});\\n\\nmodule.exports = router;\\n\".trim();var serverComp=\"\\nvar path = require(\\\"path\\\");\\nconst bodyParser = require(\\\"body-parser\\\");\\n\\napp.use(cors());\\n\\napp.use(bodyParser.urlencoded({ extended: true }));\\napp.use(bodyParser.json());\\napp.use(express.static(path.join(__dirname, \\\"uploads\\\")));\\n\\nvar URIstring = \\\"mongodb://localhost:27017/uploads\\\";\\n\\napp.use(\\\"/galleries\\\", require(\\\"./routes/gallery\\\"));\\n\\nmongoose.connect(URIstring, {\\n  useFindAndModify: false,\\n  useNewUrlParser: true,\\n  useUnifiedTopology: true,\\n  useCreateIndex: true,\\n});\\n\\napp.use(\\\"./uploads\\\", express.static(\\\"uploads\\\"));\\n\\nconst PORT = process.env.PORT || 5000;\\nmodule.exports = app.listen(PORT, () => {\\n  console.log(\\\"Server listening in port:\\\" + PORT);\\n});\\n\".trim();var types=\"\\nexport const FETCH_ALBUMS = \\\"FETCH_ALBUMS\\\";\\nexport const FETCH_ALBUM_DETAIL = \\\"FETCH_ALBUM_DETAIL\\\";\\nexport const ADD_ALBUM = \\\"ADD_ALBUM\\\";\\nexport const UPLOAD_IMAGE = \\\"UPLOAD_IMAGE\\\";\\nexport const REMOVE_IMAGE = \\\"REMOVE_IMAGE\\\";\\n\".trim();var album=\"\\nimport axios from \\\"axios\\\";\\nimport {\\n  FETCH_ALBUMS,\\n  FETCH_ALBUM_DETAIL,\\n  ADD_ALBUM,\\n  UPLOAD_IMAGE,\\n  REMOVE_IMAGE,\\n} from \\\"./types\\\";\\n\\nexport const fetchAlbums = () => {\\n  const req = axios.get(\\\"/galleries\\\").then((res) => res.data);\\n  return {\\n    type: FETCH_ALBUMS,\\n    payload: req,\\n  };\\n};\\n\\nexport const fetchAlbumDetail = (id) => {\\n  const req = axios.get('/galleries/detail/'$'{id}').then((res) => res.data);\\n  return {\\n    type: FETCH_ALBUM_DETAIL,\\n    payload: req,\\n  };\\n};\\n\\nexport const addAlbum = (data) => {\\n  const req = axios.post(\\\"/galleries/add\\\", data).then((res) => res.data);\\n  return {\\n    type: ADD_ALBUM,\\n    payload: req,\\n  };\\n};\\n\\nexport const uploadImages = (id, data, config) => {\\n  const req = axios.put('/galleries/upload/'$'{id}', data, config)\\n    .then((res) => res.data);\\n  return {\\n    type: UPLOAD_IMAGE,\\n    payload: req,\\n  };\\n};\\n\\nexport const removeImage = (id, imageName) => {\\n  const req = axios.put('/galleries/removeImage/'$'{id}', { fileName: imageName })\\n    .then((res) => res.data);\\n  return {\\n    type: REMOVE_IMAGE,\\n    payload: req,\\n  };\\n};\\n\".trim();var albumReducer=\"\\nimport * as ACTION_TYPES from \\\"../actions/types\\\";\\n\\nconst initialState = {\\n  albumList: [],\\n  albumDetail: {},\\n  addedAlbum: {},\\n};\\nconst albumReducer = (state = initialState, action) => {\\n  switch (action.type) {\\n    case ACTION_TYPES.FETCH_ALBUMS:\\n      return {\\n        albumList: [...action.payload.result],\\n      };\\n    case ACTION_TYPES.FETCH_ALBUM_DETAIL:\\n      return {\\n        albumDetail: action.payload.result,\\n      };\\n    case ACTION_TYPES.ADD_ALBUM:\\n      return {\\n        ...state,\\n        addedAlbum: action.payload,\\n      };\\n    case ACTION_TYPES.UPLOAD_IMAGE:\\n      return {\\n        albumDetail: action.payload.result,\\n      };\\n    case ACTION_TYPES.REMOVE_IMAGE:\\n      return {\\n        albumDetail: action.payload.result,\\n      };\\n    default:\\n      return state;\\n  }\\n};\\nexport default albumReducer;\\n\".trim();var AddAlbum=\"\\nimport React, { useState, useEffect } from \\\"react\\\";\\nimport { Fragment } from \\\"react\\\";\\nimport { useDispatch, useSelector } from \\\"react-redux\\\";\\nimport { toast } from \\\"react-toastify\\\";\\nimport { addAlbum } from \\\"../actions/album\\\";\\n\\nfunction AddAlbum(props) {\\n  const dispatch = useDispatch();\\n  const [values, setvalues] = useState({});\\n  const handleInputChange = (e) => {\\n    const { name, value } = e.target;\\n    setvalues({\\n      ...values,\\n      [name]: value,\\n    });\\n  };\\n  const handleSubmit = (e) => {\\n    e.preventDefault();\\n    dispatch(addAlbum(values)).then((res) => {\\n      if (res.payload.status) {\\n        // toast.success(res.payload.message);\\n        console.log(\\\"~~~~data: \\\", res.payload.result._id);\\n\\n        props.history.push('/upload/'$'{res.payload.result._id}');\\n      }\\n    });\\n  };\\n  return (\\n    <Fragment>\\n      <nav aria-label=\\\"breadcrumb\\\">\\n        <ol class=\\\"breadcrumb\\\">\\n          <li class=\\\"breadcrumb-item\\\">\\n            <a href=\\\"/\\\">Albums</a>\\n          </li>\\n          <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">\\n            Add\\n          </li>\\n        </ol>\\n      </nav>\\n      <div className=\\\"card shadow-sm\\\">\\n        <div className=\\\"card title p-2 bg-light\\\">\\n          <h5>Add Album</h5>\\n        </div>\\n        <div className=\\\"card-body\\\">\\n          <div className=\\\"mb-3\\\">\\n            <label className=\\\"form-label\\\">Album Name</label>\\n            <input\\n              type=\\\"text\\\"\\n              name=\\\"name\\\"\\n              className=\\\"form-control\\\"\\n              placeholder=\\\"Enter album name\\\"\\n              onChange={handleInputChange}\\n            />\\n          </div>\\n          <div className=\\\"mb-3\\\">\\n            <label className=\\\"form-label\\\">Description</label>\\n            <textarea\\n              className=\\\"form-control\\\"\\n              name=\\\"description\\\"\\n              rows=\\\"3\\\"\\n              onChange={handleInputChange}\\n            ></textarea>\\n          </div>\\n          <div className=\\\"form-group\\\">\\n            <button\\n              type=\\\"button\\\"\\n              onClick={handleSubmit}\\n              className=\\\"btn btn-success\\\"\\n            >\\n              <i class=\\\"fas fa-plus\\\"></i> Save and next\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </Fragment>\\n  );\\n}\\n\\nexport default AddAlbum;\\n\".trim();var AlbumList=\"\\nimport React, { useState, useEffect } from \\\"react\\\";\\nimport { useDispatch, useSelector } from \\\"react-redux\\\";\\nimport { toast } from \\\"react-toastify\\\";\\nimport { fetchAlbums } from \\\"../actions/album\\\";\\n\\nfunction AlbumList() {\\n  const dispatch = useDispatch();\\n  useEffect(() => {\\n    dispatch(fetchAlbums());\\n  }, []);\\n  const albumList = useSelector((state) => state.album.albumList);\\n  return (\\n    <div className=\\\"card shadow-sm\\\">\\n      <div className=\\\"card-header\\\">\\n        <h5>Album List</h5>\\n      </div>\\n      <div className=\\\"card-title p-4\\\">\\n        <a className=\\\"btn btn-success\\\" href=\\\"/add\\\">\\n          Add Album\\n        </a>\\n      </div>\\n      <div className=\\\"card-body p-4\\\">\\n        <table class=\\\"table border\\\">\\n          <thead class=\\\"table-dark\\\">\\n            <tr>\\n              <td>No</td>\\n              <td>Album Name</td>\\n              <td>Description</td>\\n              <td>Image Count</td>\\n              <td>Actions</td>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            {albumList.map((album, index) => (\\n              <tr>\\n                <th scope=\\\"row\\\">{index + 1}</th>\\n                <td>{album.name}</td>\\n                <td>{album.description}</td>\\n                <td>{album.images.length}</td>\\n                <td>\\n                  <a class=\\\"btn btn-info\\\" href={'/upload/'$'{album._id}'}>\\n                    <i class=\\\"fas fa-image\\\"></i>\\n                  </a>\\n                </td>\\n              </tr>\\n            ))}\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default AlbumList;\\n\".trim();var UploadImage=\"\\nimport React, { useState, useEffect } from \\\"react\\\";\\nimport Dropzone from \\\"react-dropzone\\\";\\nimport { useDispatch, useSelector } from \\\"react-redux\\\";\\nimport { toast } from \\\"react-toastify\\\";\\nimport { uploadImages, fetchAlbumDetail, removeImage } from \\\"../actions/album\\\";\\n\\nfunction UploadImage(props) {\\n  const dispatch = useDispatch();\\n  const albumId = props.match.params.id;\\n  //   const [albumInfo, setAlbumInfo] = useState({});\\n  const albumDetail = useSelector((state) => state.album.albumDetail);\\n\\n  useEffect(() => {\\n    dispatch(fetchAlbumDetail(albumId));\\n  }, []);\\n\\n  const onDrop = (files) => {\\n    let formData = new FormData();\\n    const config = {\\n      header: { \\\"content-type\\\": \\\"multipart/form-data\\\" },\\n    };\\n    files.map((file, index) => {\\n      formData.append(\\\"image\\\", file);\\n    });\\n\\n    dispatch(uploadImages(albumId, formData, config)).then((res) => {\\n      if (res.payload.status) {\\n        toast.success(res.payload.message);\\n      }\\n    });\\n  };\\n\\n  const handleDelete = (albumId, imageName) => {\\n    dispatch(removeImage(albumId, imageName)).then((res) => {\\n      if (res.payload.status) {\\n        toast.success(res.payload.message);\\n      }\\n    });\\n  };\\n  return (\\n    <div>\\n      <nav aria-label=\\\"breadcrumb\\\">\\n        <ol class=\\\"breadcrumb\\\">\\n          <li class=\\\"breadcrumb-item\\\">\\n            <a href=\\\"/\\\">Albums</a>\\n          </li>\\n          <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">\\n            Upload\\n          </li>\\n        </ol>\\n      </nav>\\n      <div className=\\\"card shadow-sm\\\">\\n        <div className=\\\"card-header\\\">\\n          <h5>Upload Image for Album {albumDetail.name}</h5>\\n        </div>\\n        <div className=\\\"card-body\\\">\\n          <Dropzone onDrop={onDrop}>\\n            {({ getRootProps, getInputProps }) => (\\n              <div\\n                className=\\\"m-1\\\"\\n                style={{\\n                  width: \\\"350px\\\",\\n                  height: \\\"240px\\\",\\n                  border: \\\"1px solid lightgray\\\",\\n                  display: \\\"flex\\\",\\n                  alignItems: \\\"center\\\",\\n                  justifyContent: \\\"center\\\",\\n                }}\\n                {...getRootProps()}\\n              >\\n                <input {...getInputProps()} />\\n                <p>Drag and drop files here or click to upload</p>\\n              </div>\\n            )}\\n          </Dropzone>\\n          <div className=\\\"row m-1\\\">\\n            {albumDetail.images &&\\n              albumDetail.images.map((image, index) => (\\n                <div className=\\\"card col-md-3 mb-2\\\">\\n                  <div className=\\\"card-header bg-white\\\">\\n                    <span>{image}</span>\\n                    <button\\n                      type=\\\"button\\\"\\n                      className=\\\"btn btn-danger float-end\\\"\\n                      onClick={() => handleDelete(albumId, image)}\\n                    >\\n                      <i class=\\\"fas fa-backspace\\\"></i>\\n                    </button>\\n                  </div>\\n                  <div className=\\\"card-body p-1\\\">\\n                    <img\\n                      style={{ width: \\\"100%\\\", maxHeight: \\\"180px\\\" }}\\n                      class=\\\"img-thumbnail\\\"\\n                      src={'http://localhost:5000/'$'{image}'}\\n                    />\\n                  </div>\\n                </div>\\n              ))}\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default UploadImage;\\n\".trim();var AppComp=\"\\nimport React from \\\"react\\\";\\nimport AlbumList from \\\"./components/AlbumList\\\";\\nimport { BrowserRouter, Route } from \\\"react-router-dom\\\";\\nimport AddAlbum from \\\"./components/AddAlbum\\\";\\nimport { ToastContainer } from \\\"react-toastify\\\";\\nimport \\\"react-toastify/dist/ReactToastify.css\\\";\\nimport UploadImage from \\\"./components/UploadImage\\\";\\n\\nfunction App() {\\n  return (\\n    <BrowserRouter>\\n      <ToastContainer />\\n      <div className=\\\"container\\\">\\n        <Route path=\\\"/\\\" exact component={AlbumList} />\\n        <Route path=\\\"/add\\\" exact component={AddAlbum} />\\n        <Route path=\\\"/upload/:id\\\" exact component={UploadImage} />\\n      </div>\\n    </BrowserRouter>\\n  );\\n}\\n\\nexport default App;\\n\".trim();var ImageGallery=/*#__PURE__*/function(_Component){_inherits(ImageGallery,_Component);function ImageGallery(){_classCallCheck(this,ImageGallery);return _possibleConstructorReturn(this,_getPrototypeOf(ImageGallery).apply(this,arguments));}_createClass(ImageGallery,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"1.Image Gallery\"),React.createElement(\"b\",null,\"models/Gallery.js\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:Gallery,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"middlewares/multer.js\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:multer,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"routes/gallery.js\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:gallerys,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"server\"),React.createElement(\"br\",null),\"Create a folder \\\"uploads\\\" with server.js file.\",React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:serverComp,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Client\"),React.createElement(\"b\",null,\"actions/types.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:types,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"actions/album.js\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:album,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"reducers/albumReducer.js\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:albumReducer,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"components/AddAlbum.js\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:AddAlbum,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"components/AlbumList.js\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:AlbumList,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"components/UploadImage.js\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:UploadImage,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"components/App.js\"),React.createElement(\"br\",null),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:AppComp,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return ImageGallery;}(Component);export default withStyles(styles)(ImageGallery);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/mern/projects/imageGallery.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","Gallery","trim","multer","gallerys","serverComp","types","album","albumReducer","AddAlbum","AlbumList","UploadImage","AppComp","ImageGallery","setTimeout","highlightAll","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst Gallery = `\nconst gallerySchema = new Schema({\n  name: { type: String, required: true },\n  description: { type: String, required: false },\n  images: { type: [String], required: false, }\n});\n\nmodule.exports = mongoose.model(\"galleries\", gallerySchema);\n`.trim();\n\nconst multer = `\nconst multer = require(\"multer\");\n\nconst storage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, \"./server/uploads\");\n  },\n  filename: (req, file, cb) => {\n    cb(null, ''$'{Date.now()}_'$'{file.originalname}');\n  },\n});\n\nconst fileFilter = (req, file, cb) => {\n  if (\n    file.mimetype === \"image/jpeg\" ||\n    file.mimetype === \"image/png\" ||\n    file.mimetype === \"image/jpg\"\n  ) {\n    cb(null, true);\n  } else {\n    cb({ message: \"Unsupported file format\" }, false);\n  }\n};\n\nconst upload = multer({\n  storage: storage,\n  limits: { fileSize: 1024 * 1024 },\n  fileFilter: fileFilter,\n});\n\nmodule.exports = upload;\n`.trim();\n\nconst gallerys = `\nconst Gallery = require(\"../models/Gallery\");\nconst upload = require(\"../middlewares/multer\");\nconst fs = require(\"fs\");\n\nrouter.get(\"/\", (req, res) => {\n  Gallery.find().exec((err, galleries) => {\n    if (err)\n      return res.json({\n        status: false,\n        message: \"Server errors\",\n        result: err,\n      });\n    return res.json({\n      status: false,\n      message: \"Data found\",\n      result: galleries,\n    });\n  });\n});\n\nrouter.post(\"/add\", (req, res) => {\n  const gallery = new Gallery(req.body);\n  gallery.save((err, newGallery) => {\n    if (err)\n      return res.json({\n        status: false,\n        message: \"Server errors\",\n        result: err,\n      });\n    return res.json({\n      status: true,\n      message: \"Gallery added\",\n      result: newGallery,\n    });\n  });\n});\n\nrouter.put(\"/upload/:galleryId\", upload.array(\"image\", 3), async (req, res) => {\n  const inputfiles = req.files;\n  const images = [];\n  inputfiles.map((file) => {\n    images.push(file.filename);\n  });\n  const galleryId = req.params.galleryId;\n\n  Gallery.findOneAndUpdate(\n    { _id: galleryId },\n    { $push: { images: images } },\n    { new: true },\n    function (err, data) {\n      if (err) {\n        res.status(500).json({\n          status: false,\n          message: \"Upload error\",\n          result: err,\n        });\n      } else {\n        res.status(200).json({\n          status: true,\n          message: \"Upload successfully!\",\n          result: data,\n        });\n      }\n    }\n  );\n});\n\nrouter.get(\"/detail/:galleryId\", (req, res) => {\n  const galleryId = req.params.galleryId;\n  Gallery.findOne({ _id: galleryId }, function (err, gallery) {\n    if (err) {\n      res.status(500).json({\n        status: false,\n        message: \"Get gallery error\",\n        result: err,\n      });\n    } else {\n      res.status(200).json({\n        status: true,\n        message: \"Get gallery successfully!\",\n        result: gallery,\n      });\n    }\n  });\n});\n\nrouter.put(\"/removeImage/:galleryId\", async (req, res) => {\n  const fileName = req.body.fileName;\n  console.log(\"~~~fileName: \", fileName);\n\n  const galleryId = req.params.galleryId;\n\n  Gallery.findOneAndUpdate(\n    { _id: galleryId },\n    { $pull: { images: fileName } },\n    { new: true },\n    function (err, data) {\n      if (err) {\n        res.status(500).json({\n          status: false,\n          message: \"Remove image error\",\n          result: err,\n        });\n      } else {\n        const path = \"server/uploads/\" + fileName;\n        fs.unlinkSync(path);\n        res.status(200).json({\n          status: true,\n          message: \"Remove image successfully!\",\n          result: data,\n        });\n      }\n    }\n  );\n});\n\nmodule.exports = router;\n`.trim();\n\nconst serverComp = `\nvar path = require(\"path\");\nconst bodyParser = require(\"body-parser\");\n\napp.use(cors());\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(express.static(path.join(__dirname, \"uploads\")));\n\nvar URIstring = \"mongodb://localhost:27017/uploads\";\n\napp.use(\"/galleries\", require(\"./routes/gallery\"));\n\nmongoose.connect(URIstring, {\n  useFindAndModify: false,\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n});\n\napp.use(\"./uploads\", express.static(\"uploads\"));\n\nconst PORT = process.env.PORT || 5000;\nmodule.exports = app.listen(PORT, () => {\n  console.log(\"Server listening in port:\" + PORT);\n});\n`.trim();\n\nconst types = `\nexport const FETCH_ALBUMS = \"FETCH_ALBUMS\";\nexport const FETCH_ALBUM_DETAIL = \"FETCH_ALBUM_DETAIL\";\nexport const ADD_ALBUM = \"ADD_ALBUM\";\nexport const UPLOAD_IMAGE = \"UPLOAD_IMAGE\";\nexport const REMOVE_IMAGE = \"REMOVE_IMAGE\";\n`.trim();\n\nconst album = `\nimport axios from \"axios\";\nimport {\n  FETCH_ALBUMS,\n  FETCH_ALBUM_DETAIL,\n  ADD_ALBUM,\n  UPLOAD_IMAGE,\n  REMOVE_IMAGE,\n} from \"./types\";\n\nexport const fetchAlbums = () => {\n  const req = axios.get(\"/galleries\").then((res) => res.data);\n  return {\n    type: FETCH_ALBUMS,\n    payload: req,\n  };\n};\n\nexport const fetchAlbumDetail = (id) => {\n  const req = axios.get('/galleries/detail/'$'{id}').then((res) => res.data);\n  return {\n    type: FETCH_ALBUM_DETAIL,\n    payload: req,\n  };\n};\n\nexport const addAlbum = (data) => {\n  const req = axios.post(\"/galleries/add\", data).then((res) => res.data);\n  return {\n    type: ADD_ALBUM,\n    payload: req,\n  };\n};\n\nexport const uploadImages = (id, data, config) => {\n  const req = axios.put('/galleries/upload/'$'{id}', data, config)\n    .then((res) => res.data);\n  return {\n    type: UPLOAD_IMAGE,\n    payload: req,\n  };\n};\n\nexport const removeImage = (id, imageName) => {\n  const req = axios.put('/galleries/removeImage/'$'{id}', { fileName: imageName })\n    .then((res) => res.data);\n  return {\n    type: REMOVE_IMAGE,\n    payload: req,\n  };\n};\n`.trim();\n\nconst albumReducer = `\nimport * as ACTION_TYPES from \"../actions/types\";\n\nconst initialState = {\n  albumList: [],\n  albumDetail: {},\n  addedAlbum: {},\n};\nconst albumReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.FETCH_ALBUMS:\n      return {\n        albumList: [...action.payload.result],\n      };\n    case ACTION_TYPES.FETCH_ALBUM_DETAIL:\n      return {\n        albumDetail: action.payload.result,\n      };\n    case ACTION_TYPES.ADD_ALBUM:\n      return {\n        ...state,\n        addedAlbum: action.payload,\n      };\n    case ACTION_TYPES.UPLOAD_IMAGE:\n      return {\n        albumDetail: action.payload.result,\n      };\n    case ACTION_TYPES.REMOVE_IMAGE:\n      return {\n        albumDetail: action.payload.result,\n      };\n    default:\n      return state;\n  }\n};\nexport default albumReducer;\n`.trim();\n\nconst AddAlbum = `\nimport React, { useState, useEffect } from \"react\";\nimport { Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { addAlbum } from \"../actions/album\";\n\nfunction AddAlbum(props) {\n  const dispatch = useDispatch();\n  const [values, setvalues] = useState({});\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setvalues({\n      ...values,\n      [name]: value,\n    });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addAlbum(values)).then((res) => {\n      if (res.payload.status) {\n        // toast.success(res.payload.message);\n        console.log(\"~~~~data: \", res.payload.result._id);\n\n        props.history.push('/upload/'$'{res.payload.result._id}');\n      }\n    });\n  };\n  return (\n    <Fragment>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a href=\"/\">Albums</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            Add\n          </li>\n        </ol>\n      </nav>\n      <div className=\"card shadow-sm\">\n        <div className=\"card title p-2 bg-light\">\n          <h5>Add Album</h5>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Album Name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              className=\"form-control\"\n              placeholder=\"Enter album name\"\n              onChange={handleInputChange}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Description</label>\n            <textarea\n              className=\"form-control\"\n              name=\"description\"\n              rows=\"3\"\n              onChange={handleInputChange}\n            ></textarea>\n          </div>\n          <div className=\"form-group\">\n            <button\n              type=\"button\"\n              onClick={handleSubmit}\n              className=\"btn btn-success\"\n            >\n              <i class=\"fas fa-plus\"></i> Save and next\n            </button>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default AddAlbum;\n`.trim();\n\nconst AlbumList = `\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { fetchAlbums } from \"../actions/album\";\n\nfunction AlbumList() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAlbums());\n  }, []);\n  const albumList = useSelector((state) => state.album.albumList);\n  return (\n    <div className=\"card shadow-sm\">\n      <div className=\"card-header\">\n        <h5>Album List</h5>\n      </div>\n      <div className=\"card-title p-4\">\n        <a className=\"btn btn-success\" href=\"/add\">\n          Add Album\n        </a>\n      </div>\n      <div className=\"card-body p-4\">\n        <table class=\"table border\">\n          <thead class=\"table-dark\">\n            <tr>\n              <td>No</td>\n              <td>Album Name</td>\n              <td>Description</td>\n              <td>Image Count</td>\n              <td>Actions</td>\n            </tr>\n          </thead>\n          <tbody>\n            {albumList.map((album, index) => (\n              <tr>\n                <th scope=\"row\">{index + 1}</th>\n                <td>{album.name}</td>\n                <td>{album.description}</td>\n                <td>{album.images.length}</td>\n                <td>\n                  <a class=\"btn btn-info\" href={'/upload/'$'{album._id}'}>\n                    <i class=\"fas fa-image\"></i>\n                  </a>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default AlbumList;\n`.trim();\n\nconst UploadImage = `\nimport React, { useState, useEffect } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { uploadImages, fetchAlbumDetail, removeImage } from \"../actions/album\";\n\nfunction UploadImage(props) {\n  const dispatch = useDispatch();\n  const albumId = props.match.params.id;\n  //   const [albumInfo, setAlbumInfo] = useState({});\n  const albumDetail = useSelector((state) => state.album.albumDetail);\n\n  useEffect(() => {\n    dispatch(fetchAlbumDetail(albumId));\n  }, []);\n\n  const onDrop = (files) => {\n    let formData = new FormData();\n    const config = {\n      header: { \"content-type\": \"multipart/form-data\" },\n    };\n    files.map((file, index) => {\n      formData.append(\"image\", file);\n    });\n\n    dispatch(uploadImages(albumId, formData, config)).then((res) => {\n      if (res.payload.status) {\n        toast.success(res.payload.message);\n      }\n    });\n  };\n\n  const handleDelete = (albumId, imageName) => {\n    dispatch(removeImage(albumId, imageName)).then((res) => {\n      if (res.payload.status) {\n        toast.success(res.payload.message);\n      }\n    });\n  };\n  return (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a href=\"/\">Albums</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            Upload\n          </li>\n        </ol>\n      </nav>\n      <div className=\"card shadow-sm\">\n        <div className=\"card-header\">\n          <h5>Upload Image for Album {albumDetail.name}</h5>\n        </div>\n        <div className=\"card-body\">\n          <Dropzone onDrop={onDrop}>\n            {({ getRootProps, getInputProps }) => (\n              <div\n                className=\"m-1\"\n                style={{\n                  width: \"350px\",\n                  height: \"240px\",\n                  border: \"1px solid lightgray\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n                {...getRootProps()}\n              >\n                <input {...getInputProps()} />\n                <p>Drag and drop files here or click to upload</p>\n              </div>\n            )}\n          </Dropzone>\n          <div className=\"row m-1\">\n            {albumDetail.images &&\n              albumDetail.images.map((image, index) => (\n                <div className=\"card col-md-3 mb-2\">\n                  <div className=\"card-header bg-white\">\n                    <span>{image}</span>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-danger float-end\"\n                      onClick={() => handleDelete(albumId, image)}\n                    >\n                      <i class=\"fas fa-backspace\"></i>\n                    </button>\n                  </div>\n                  <div className=\"card-body p-1\">\n                    <img\n                      style={{ width: \"100%\", maxHeight: \"180px\" }}\n                      class=\"img-thumbnail\"\n                      src={'http://localhost:5000/'$'{image}'}\n                    />\n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UploadImage;\n`.trim();\n\nconst AppComp = `\nimport React from \"react\";\nimport AlbumList from \"./components/AlbumList\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport AddAlbum from \"./components/AddAlbum\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport UploadImage from \"./components/UploadImage\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <ToastContainer />\n      <div className=\"container\">\n        <Route path=\"/\" exact component={AlbumList} />\n        <Route path=\"/add\" exact component={AddAlbum} />\n        <Route path=\"/upload/:id\" exact component={UploadImage} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n`.trim();\n\n\nclass ImageGallery extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>1.Image Gallery</h3>\n              <b>models/Gallery.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={Gallery}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>middlewares/multer.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={multer}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>routes/gallery.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={gallerys}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>server</b>\n              <br />\n              Create a folder \"uploads\" with server.js file.\n              <div style={titles}>\n                <PrismCode\n                  code={serverComp}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Client</h3>\n              <b>actions/types.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={types}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>actions/album.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={album}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>reducers/albumReducer.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={albumReducer}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>components/AddAlbum.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={AddAlbum}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>components/AlbumList.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={AlbumList}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>components/UploadImage.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={UploadImage}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>components/App.js</b>\n              <br />\n              <div style={titles}>\n                <PrismCode\n                  code={AppComp}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(ImageGallery));\n"]},"metadata":{},"sourceType":"module"}