{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var controllers=\"\\nconst stripe = require('stripe')(process.env.STRIPE_KEY);\\n\\nconst stripeController = async (req, res) => {\\n  const { purchase, total_amount, shipping_fee } = req.body;\\n\\n  const calculateOrderAmount = () => {\\n    return total_amount + shipping_fee;\\n  };\\n\\n  const paymentIntent = await stripe.paymentIntents.create({\\n    amount: calculateOrderAmount(),\\n    currency: 'usd',\\n  });\\n\\n  res.json({ clientSecret: paymentIntent.client_secret });\\n};\\n\\nmodule.exports = stripeController;\\n\".trim();var server=\"\\nrequire('express-async-errors');\\nconst dbCon = require('./db/db');\\nconst stripeController = require('./controllers/stripeController');\\nconst notFoundMiddleware = require('./middleware/not-found');\\nconst errorHandlerMiddleware = require('./middleware/error-handler');\\n\\n\\ndbCon;\\napp.post('/stripe', stripeController);\\napp.use(notFoundMiddleware);\\napp.use(errorHandlerMiddleware);\\n\".trim();var StripePayment=/*#__PURE__*/function(_Component){_inherits(StripePayment,_Component);function StripePayment(){_classCallCheck(this,StripePayment);return _possibleConstructorReturn(this,_getPrototypeOf(StripePayment).apply(this,arguments));}_createClass(StripePayment,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Stripe Payment\"),React.createElement(\"b\",null,\"controllers/\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:controllers,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"b\",null,\"server.js\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:server,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return StripePayment;}(Component);export default withStyles(styles)(StripePayment);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/nodeJs/nodeDeep/stripe_payment.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","controllers","trim","server","StripePayment","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAGA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADgB,CAKvBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALa,CAQvBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARY,CAAL,EAApB,CAcA,GAAMC,CAAAA,WAAW,CAAG,mfAmBlBC,IAnBkB,EAApB,CAqBA,GAAMC,CAAAA,MAAM,CAAG,yYAYbD,IAZa,EAAf,C,GAeME,CAAAA,a,yTACgB,CAClBC,UAAU,CAAC,iBAAMvB,CAAAA,KAAK,CAACwB,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACZ,KAA1B,EACE,8BAAI,oBAAC,OAAD,MAAJ,CADF,CADF,CADF,CAME,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEY,OAAO,CAACZ,KAA1B,EACE,oBAAC,IAAD,MACE,+CADF,CAEE,4CAFF,CAGE,2BAAK,KAAK,CAAEN,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEY,WADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAHF,CAUE,8BAVF,CAWE,8BAXF,CAaE,yCAbF,CAcE,2BAAK,KAAK,CAAEZ,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEc,MADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAdF,CADF,CADF,CANF,CADF,CAmCD,C,2BAzCyBtB,S,EA4C5B,cAAgBI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBW,aAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst controllers = `\nconst stripe = require('stripe')(process.env.STRIPE_KEY);\n\nconst stripeController = async (req, res) => {\n  const { purchase, total_amount, shipping_fee } = req.body;\n\n  const calculateOrderAmount = () => {\n    return total_amount + shipping_fee;\n  };\n\n  const paymentIntent = await stripe.paymentIntents.create({\n    amount: calculateOrderAmount(),\n    currency: 'usd',\n  });\n\n  res.json({ clientSecret: paymentIntent.client_secret });\n};\n\nmodule.exports = stripeController;\n`.trim();\n\nconst server = `\nrequire('express-async-errors');\nconst dbCon = require('./db/db');\nconst stripeController = require('./controllers/stripeController');\nconst notFoundMiddleware = require('./middleware/not-found');\nconst errorHandlerMiddleware = require('./middleware/error-handler');\n\n\ndbCon;\napp.post('/stripe', stripeController);\napp.use(notFoundMiddleware);\napp.use(errorHandlerMiddleware);\n`.trim();\n\n\nclass StripePayment extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Stripe Payment</h3>\n              <b>controllers/</b>\n              <div style={titles}>\n                <PrismCode\n                  code={controllers}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n              <br />\n\n              <b>server.js</b>\n              <div style={titles}>\n                <PrismCode\n                  code={server}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(StripePayment));\n"]},"metadata":{},"sourceType":"module"}