{"ast":null,"code":"import _classCallCheck from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mukeshs/Projects/edurights/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Prism from\"prismjs\";import{Grid,Paper,withStyles,List}from\"@material-ui/core\";import'../../ReactJs/styles.css';import Sidebar from'../sidebar';import PrismCode from'../../ReactJs/prismCode';var titles={backgroundColor:'#F0F8FF',padding:'1px',fontSize:'16px'};var styles=function styles(theme){return{paper:{margin:theme.spacing(1),padding:theme.spacing(1)},smMargin:{margin:theme.spacing(1)},actionDiv:{textAlign:\"center\"}};};var bitcoin=\"\\n//server.js\\nconst express = require('express');\\nconst bodyParser = require('body-parser');\\nconst request = require('request');\\nconst ba = require('bitcoinaverage');\\n\\nconst app = express();\\n\\nvar publicKey = 'YOURKEYHERE';\\nvar secretKey = 'YOURKEYHERE';\\nvar restClient = ba.restfulClient(publicKey, secretKey);\\n\\napp.use(bodyParser.urlencoded({\\n  extended: true\\n}));\\n\\napp.get(\\\"/\\\", function (req, res) {\\n  res.sendFile(__dirname + \\\"/index.html\\\");\\n});\\n\\napp.post(\\\"/\\\", function (req, res) {\\n  console.log(req.body.cryptoSelection);\\n  console.log(req.body.currencySelection);\\n\\n  var cryptoFiat = req.body.cryptoSelection + req.body.currencySelection\\n\\n  restClient.getTickerDataPerSymbol('global',req.body.cryptoSelection +req.body.currencySelection,function (res){\\n    console.log(res);\\n\\n    var data = JSON.parse(res);\\n    var currentData = data.display_timestamp;\\n    var price = data.last;\\nintegrity=\\\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\\\" crossorigin=\\\"anonymou\\n    console.log(price);\\n\\n    res.write(\\\"<p>The current data is \\\" + currentData + \\\"</p>\\\");\\n    res.write(\\\"<h1>The price of \\\" + req.body.cryptoSelection + \\\" is \\\" + price + \\\" \\\" + \\n              req.body.currencySelection + \\\"</h1>\\\");\\n\\n    res.send();\\n\\n  }, function (error) {\\n    console.log(error);\\n  });\\n});\\n\\napp.listen(3000, function () {\\n  console.log(\\\"Server is running on port 3000.\\\");\\n});\\n\\n// Utility Methods\\nvar getBitcoinURLFromSelection = function (crypto, currency) {\\n  return \\\"https://apiv2.bitcoinaverage.com/indices/global/ticker/all?crypto=\\\" + crypto + \\\"&fiat=\\\" + currency;\\n}\\n\\n\\n//config.js\\n\\nvar config = {\\n  PUBLIC_KEY : 'OWVjMzEwZTk3MWQxNDU5NTljZjZhM2Q0ZWVkZDRkZDU',\\n  SECRET_KEY : 'ZjQ0NjljM2UwZTYzNGFlN2E3OTY5MWJmYmNmZTIyY2FiYTM5NDZlNzc0MGU0NDY0YjA1YzA2YWJjODk1NGU1Mg'\\n};\\n\\n\\n\\n//index.html\\n<form action=\\\"/\\\" method=\\\"post\\\">\\n    <select name=\\\"cryptoSelection\\\">\\n      <option value=\\\"BTC\\\">BitCoin</option>\\n      <option value=\\\"ETH\\\">Ethereum</option>\\n      <option value=\\\"LTH\\\">LiteCoin</option>\\n    </select>\\n\\n    <select name=\\\"currencySelection\\\">\\n      <option value=\\\"USD\\\">US Dollar</option>\\n      <option value=\\\"GBP\\\">GB Pound</option>\\n      <option value=\\\"EUR\\\">EU Euros</option>\\n    </select>\\n\\n    <button type=\\\"submit\\\" name=\\\"submitButton\\\">Submit</button>\\n  </form>\\n\\n  <script type='text/javascript' src='config.js'></script>\\n  <script type='text/javascript' src='index.js'></script>\".trim();var newsletter=\"\\n//server.js\\nconst express = require('express');\\nconst bodyParser = require('body-parser');\\nconst request = require('request');\\n\\nconst app = express();\\n\\napp.use(bodyParser.urlencoded({\\n  extended: true\\n}));\\napp.use(express.static(\\\"public\\\"));\\n\\napp.get(\\\"/\\\", function (req, res) {\\n  res.sendFile(__dirname + \\\"/signup.html\\\");\\n});\\n\\napp.post(\\\"/\\\", function (req, res) {\\n  var firstName = req.body.fName;\\n  var lastName = req.body.lName;\\n  var email = req.body.email;\\n\\n  var data = {\\n    'members': [\\n      {\\n        email_address: email,\\n        status: 'subscribed',\\n        merge_fields: {\\n          FNAME: firstName,\\n          LNAME: lastName\\n        }\\n      }\\n    ],\\n  }\\n\\n  var jsonData = JSON.stringify(data)\\n\\n  console.log(firstName, lastName, email);\\n\\n  // The API KEY BELOW HAS BEEN DISABLED ON MAILCHIMP\\n\\n  var options = {\\n    url: 'https://us3.api.mailchimp.com/3.0/lists/c88fb2ef24',\\n    method: 'POST',\\n    headers: {\\n      'Authorization': \\\"anand1 8a8caf31357e4496e62d3e3690b8797b-us3\\\"\\n    },\\n    body: jsonData\\n  }\\n\\n  request(options, function (error, res, body) {\\n    if (error) {\\n      console.log(error);\\n      res.sendFile(__dirname + \\\"/failure.html\\\");\\n    } else {\\n      if (res.statusCode == 200) {\\n        res.sendFile(__dirname + \\\"/success.html\\\");\\n      } else {\\n        res.sendFile(__dirname + \\\"/failure.html\\\");\\n      }\\n    }\\n  });\\n});\\n\\napp.post(\\\"/failure.html\\\", function (req, res) {\\n  res.redirect(\\\"/\\\");\\n});\\n\\napp.listen(process.env.PORT || 3000, function () {\\n  console.log(\\\"Server is running\\\");\\n});\\n\\n// 8a8caf31357e4496e62d3e3690b8797b-us3\\n\\n// ID for List/Audience:\\n// c88fb2ef24\\n\\n\\n\\n//signup.html\\n   <link rel=\\\"canonical\\\" href=\\\"https://getbootstrap.com/docs/4.0/examples/sign-in/\\\">\\n\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\\\" \\n      integrity=\\\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\\\" crossorigin=\\\"anonymous\\\">\\n    \\n    <script src=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\\\" \\n      integrity=\\\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\\\" crossorigin=\\\"anonymous\\\">\\n      </script>\\n\\n    <link href=\\\"css/signin.css\\\" rel=\\\"stylesheet\\\">\\n  </head>\\n\\n  <body class=\\\"text-center\\\">\\n    <form class=\\\"form-signin\\\" method=\\\"POST\\\" action=\\\"/\\\">\\n      <img class=\\\"mb-4\\\" src=\\\"imgs/email-newsletter.jpeg\\\" alt=\\\"\\\" width=\\\"144\\\" height=\\\"72\\\">\\n      <h1 class=\\\"h3 mb-3 font-weight-normal\\\">Sign Up to Our Newsletter</h1>\\n\\n      <input type=\\\"text\\\" id=\\\"inputFirstName\\\" name=\\\"fName\\\" class=\\\"form-control top\\\" placeholder=\\\"First \\n          Name\\\" required autofocus>\\n      <input type=\\\"text\\\" id=\\\"inputLastName\\\" name=\\\"lName\\\" class=\\\"form-control middle\\\" placeholder=\\\"Last Name\\\" \\n          required autofocus>\\n      <input type=\\\"email\\\" id=\\\"inputEmail\\\" name=\\\"email\\\" class=\\\"form-control bottom\\\" placeholder=\\\"Email address\\\" \\n          required autofocus>\\n\\n      <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Sign Up</button>\\n      <p class=\\\"mt-5 mb-3 text-muted\\\">&copy; 2019</p>\\n    </form>\\n  </body>\\n  \\n  \\n  \\n  //success.html\\n  <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Awesome!!</h1>\\n      <p class=\\\"lead\\\">You have successfully signed up to the newsletter</p>\\n    </div>\\n    \\n    \\n  //failure.html\\n  <link rel=\\\"stylesheet\\\" href=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\\\" \\n  integrity=\\\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\\\" crossorigin=\\\"anonymous\\\">\\n  \\n  <script src=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\\\" \\n  integrity=\\\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\\\" crossorigin=\\\"anonymous\\\">\\n  </script>\\n</head>\\n\\n<body>\\n  <div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Uh Oh!</h1>\\n      <p class=\\\"lead\\\">Looks like there was an error signing up! Please try again</p>\\n\\n      <form action=\\\"/failure.html\\\" method=\\\"post\\\">\\n        <button class=\\\"btn btn-large btn-warning\\\" type=\\\"submit\\\" name=\\\"button\\\">Try again</button>\\n      </form>\\n    </div>\".trim();var wikiapi=\"\\nconst express = require(\\\"express\\\");\\nconst bodyParser = require(\\\"body-parser\\\");\\nconst mongoose = require(\\\"mongoose\\\");\\nconst ejs = require(\\\"ejs\\\");\\n\\nconst app = express();\\n\\napp.set('view engine', 'ejs');\\n\\napp.use(bodyParser.urlencoded({\\n  extended: true\\n}));\\napp.use(express.static(\\\"public\\\"));\\n\\nmongoose.connect(\\\"mongodb://localhost:27017/wikiDB\\\", {\\n  userNewUrlParser: true\\n});\\n\\nconst articleSchema = {\\n  title: String,\\n  content: String\\n};\\n\\nconst Article = mongoose.model(\\\"Article\\\", articleSchema);\\n\\n// // GET all articles\\n// app.get(\\\"/articles\\\", function(req, res){\\n//   Article.find(function(err, foundArticles){\\n//     if(!err){\\n//       console.log(foundArticles);\\n//\\n//       res.send(foundArticles);\\n//     }else{\\n//       res.send(err);\\n//     }\\n//   });\\n// });\\n//\\n// // POST a New Article\\n// app.post(\\\"/articles\\\", function(req, res) {\\n//   const newArticle = new Article({\\n//     title: req.body.title,\\n//     content: req.body.content\\n//   });\\n//\\n//   newArticle.save(function(err){\\n//     if(!err){\\n//       res.send(\\\"Successfully added a new article.\\\");\\n//     } else{\\n//       res.send(err);\\n//     }\\n//   });\\n// });\\n//\\n// // DELETE All Articles\\n// app.delete(\\\"/articles\\\", function(req, res){\\n//   Article.deleteMany(function(err){\\n//     if(!err){\\n//       res.send(\\\"Successfully deleted all articles.\\\");\\n//     }else{\\n//       res.send(err);\\n//     }\\n//   });\\n// });\\n\\napp.route(\\\"/articles\\\").get(function (req, res) {\\n  Article.find(function (err, foundArticles) {\\n    if (!err) {\\n      console.log(foundArticles);\\n\\n      res.send(foundArticles);\\n    } else {\\n      res.send(err);\\n    }\\n  });\\n}).post(function (req, res) {\\n  const newArticle = new Article({\\n    title: req.body.title,\\n    content: req.body.content\\n  });\\n\\n  newArticle.save(function (err) {\\n    if (!err) {\\n      res.send(\\\"Successfully added a new article.\\\");\\n    } else {\\n      res.send(err);\\n    }\\n  });\\n}).delete(function (req, res) {\\n  Article.deleteMany(function (err) {\\n    if (!err) {\\n      res.send(\\\"Successfully deleted all articles.\\\");\\n    } else {\\n      res.send(err);\\n    }\\n  });\\n});\\n\\napp.route(\\\"/articles/:articleTitle\\\")\\n\\n  .get(function (req, res) {\\n    Article.findOne({\\n      title: req.params.articleTitle\\n    }, function (err, foundArticle) {\\n      if (!err) {\\n        res.send(foundArticle);\\n      } else {\\n        res.send(\\\"No articles matching that title was found\\\");\\n      }\\n    })\\n  })\\n\\n  .put(function (req, res) {\\n    Article.update({\\n      title: req.params.articleTitle\\n    }, {\\n      title: req.body.title,\\n      content: req.body.content\\n    }, {\\n      overwrite: true\\n    },\\n      function (err) {\\n        if (!err) {\\n          res.send(\\\"Successfully updated article.\\\")\\n        }\\n      });\\n  })\\n\\n  .patch(function (req, res) {\\n    Article.update({\\n      title: req.params.articleTitle\\n    }, {\\n      $set: req.body\\n    },\\n      function (err) {\\n        if (!err) {\\n          res.send(\\\"Successfully updated article.\\\");\\n        } else {\\n          res.send(err);\\n        }\\n      }\\n    );\\n  })\\n\\n  .delete(function (req, res) {\\n    Article.deleteOne({\\n      title: req.params.articleTitle\\n    }, function (err) {\\n      if (!err) {\\n        res.send(\\\"Successfully deleted article.\\\");\\n      } else {\\n        res.send(err);\\n      }\\n    })\\n  });\\n\\napp.listen(3000, function () {\\n  console.log(\\\"Server started on port 3000\\\");\\n});\\n\".trim();var Udemy=/*#__PURE__*/function(_Component){_inherits(Udemy,_Component);function Udemy(){_classCallCheck(this,Udemy);return _possibleConstructorReturn(this,_getPrototypeOf(Udemy).apply(this,arguments));}_createClass(Udemy,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(function(){return Prism.highlightAll();},0);}},{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:2},React.createElement(Paper,{className:classes.paper},React.createElement(\"h4\",null,React.createElement(Sidebar,null)))),React.createElement(Grid,{item:true,xs:10},React.createElement(Paper,{className:classes.paper},React.createElement(List,null,React.createElement(\"h3\",null,\"Bitcoin-Ticker\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:bitcoin,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Newsletter-Signup\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:newsletter,language:\"js\",plugins:[\"line-numbers\"]})),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"Wiki-API\"),React.createElement(\"div\",{style:titles},React.createElement(PrismCode,{code:wikiapi,language:\"js\",plugins:[\"line-numbers\"]}))))));}}]);return Udemy;}(Component);export default withStyles(styles)(Udemy);","map":{"version":3,"sources":["/home/mukeshs/Projects/edurights/src/components/nodeJs/nodeDeep/udemy.js"],"names":["React","Component","Prism","Grid","Paper","withStyles","List","Sidebar","PrismCode","titles","backgroundColor","padding","fontSize","styles","theme","paper","margin","spacing","smMargin","actionDiv","textAlign","bitcoin","trim","newsletter","wikiapi","Udemy","setTimeout","highlightAll","classes","props"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,UAAtB,CAAkCC,IAAlC,KAA8C,mBAA9C,CAEA,MAAO,0BAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAGA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,eAAe,CAAE,SAAnB,CAA8BC,OAAO,CAAE,KAAvC,CAA8CC,QAAQ,CAAE,MAAxD,CAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,KAAK,CAAE,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELN,OAAO,CAAEG,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ,CADgB,CAKvBC,QAAQ,CAAE,CACRF,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA,CALa,CAQvBE,SAAS,CAAE,CACTC,SAAS,CAAE,QADF,CARY,CAAL,EAApB,CAcA,GAAMC,CAAAA,OAAO,CAAG,y9EAoF2CC,IApF3C,EAAhB,CAsFA,GAAMC,CAAAA,UAAU,CAAG,6vIAwIPD,IAxIO,EAAnB,CA0IA,GAAME,CAAAA,OAAO,CAAG,48GAgKdF,IAhKc,EAAhB,C,GAmKMG,CAAAA,K,iRACgB,CAClBC,UAAU,CAAC,iBAAMxB,CAAAA,KAAK,CAACyB,YAAN,EAAN,EAAD,CAA6B,CAA7B,CAAV,CACD,C,uCACQ,IACCC,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAEP,MACE,qBAAC,IAAD,EAAM,SAAS,KAAf,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEA,OAAO,CAACb,KAA1B,EACE,8BAAI,oBAAC,OAAD,MAAJ,CADF,CADF,CADF,CAME,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEa,OAAO,CAACb,KAA1B,EACE,oBAAC,IAAD,MACE,+CADF,CAEE,2BAAK,KAAK,CAAEN,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEY,OADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAFF,CASE,8BATF,CAWE,kDAXF,CAYE,2BAAK,KAAK,CAAEZ,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEc,UADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAZF,CAmBE,8BAnBF,CAqBE,yCArBF,CAsBE,2BAAK,KAAK,CAAEd,MAAZ,EACE,oBAAC,SAAD,EACE,IAAI,CAAEe,OADR,CAEE,QAAQ,CAAC,IAFX,CAGE,OAAO,CAAE,CAAC,cAAD,CAHX,EADF,CAtBF,CADF,CADF,CANF,CADF,CA2CD,C,mBAjDiBvB,S,EAoDpB,cAAgBI,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBY,KAAnB,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Prism from \"prismjs\"\nimport { Grid, Paper, withStyles, List } from \"@material-ui/core\";\n\nimport '../../ReactJs/styles.css'\nimport Sidebar from '../sidebar';\nimport PrismCode from '../../ReactJs/prismCode';\n\n\nconst titles = { backgroundColor: '#F0F8FF', padding: '1px', fontSize: '16px' }\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n})\n\n\nconst bitcoin = `\n//server.js\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst request = require('request');\nconst ba = require('bitcoinaverage');\n\nconst app = express();\n\nvar publicKey = 'YOURKEYHERE';\nvar secretKey = 'YOURKEYHERE';\nvar restClient = ba.restfulClient(publicKey, secretKey);\n\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\n\napp.get(\"/\", function (req, res) {\n  res.sendFile(__dirname + \"/index.html\");\n});\n\napp.post(\"/\", function (req, res) {\n  console.log(req.body.cryptoSelection);\n  console.log(req.body.currencySelection);\n\n  var cryptoFiat = req.body.cryptoSelection + req.body.currencySelection\n\n  restClient.getTickerDataPerSymbol('global',req.body.cryptoSelection +req.body.currencySelection,function (res){\n    console.log(res);\n\n    var data = JSON.parse(res);\n    var currentData = data.display_timestamp;\n    var price = data.last;\nintegrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymou\n    console.log(price);\n\n    res.write(\"<p>The current data is \" + currentData + \"</p>\");\n    res.write(\"<h1>The price of \" + req.body.cryptoSelection + \" is \" + price + \" \" + \n              req.body.currencySelection + \"</h1>\");\n\n    res.send();\n\n  }, function (error) {\n    console.log(error);\n  });\n});\n\napp.listen(3000, function () {\n  console.log(\"Server is running on port 3000.\");\n});\n\n// Utility Methods\nvar getBitcoinURLFromSelection = function (crypto, currency) {\n  return \"https://apiv2.bitcoinaverage.com/indices/global/ticker/all?crypto=\" + crypto + \"&fiat=\" + currency;\n}\n\n\n//config.js\n\nvar config = {\n  PUBLIC_KEY : 'OWVjMzEwZTk3MWQxNDU5NTljZjZhM2Q0ZWVkZDRkZDU',\n  SECRET_KEY : 'ZjQ0NjljM2UwZTYzNGFlN2E3OTY5MWJmYmNmZTIyY2FiYTM5NDZlNzc0MGU0NDY0YjA1YzA2YWJjODk1NGU1Mg'\n};\n\n\n\n//index.html\n<form action=\"/\" method=\"post\">\n    <select name=\"cryptoSelection\">\n      <option value=\"BTC\">BitCoin</option>\n      <option value=\"ETH\">Ethereum</option>\n      <option value=\"LTH\">LiteCoin</option>\n    </select>\n\n    <select name=\"currencySelection\">\n      <option value=\"USD\">US Dollar</option>\n      <option value=\"GBP\">GB Pound</option>\n      <option value=\"EUR\">EU Euros</option>\n    </select>\n\n    <button type=\"submit\" name=\"submitButton\">Submit</button>\n  </form>\n\n  <script type='text/javascript' src='config.js'></script>\n  <script type='text/javascript' src='index.js'></script>`.trim();\n\nconst newsletter = `\n//server.js\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst request = require('request');\n\nconst app = express();\n\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(express.static(\"public\"));\n\napp.get(\"/\", function (req, res) {\n  res.sendFile(__dirname + \"/signup.html\");\n});\n\napp.post(\"/\", function (req, res) {\n  var firstName = req.body.fName;\n  var lastName = req.body.lName;\n  var email = req.body.email;\n\n  var data = {\n    'members': [\n      {\n        email_address: email,\n        status: 'subscribed',\n        merge_fields: {\n          FNAME: firstName,\n          LNAME: lastName\n        }\n      }\n    ],\n  }\n\n  var jsonData = JSON.stringify(data)\n\n  console.log(firstName, lastName, email);\n\n  // The API KEY BELOW HAS BEEN DISABLED ON MAILCHIMP\n\n  var options = {\n    url: 'https://us3.api.mailchimp.com/3.0/lists/c88fb2ef24',\n    method: 'POST',\n    headers: {\n      'Authorization': \"anand1 8a8caf31357e4496e62d3e3690b8797b-us3\"\n    },\n    body: jsonData\n  }\n\n  request(options, function (error, res, body) {\n    if (error) {\n      console.log(error);\n      res.sendFile(__dirname + \"/failure.html\");\n    } else {\n      if (res.statusCode == 200) {\n        res.sendFile(__dirname + \"/success.html\");\n      } else {\n        res.sendFile(__dirname + \"/failure.html\");\n      }\n    }\n  });\n});\n\napp.post(\"/failure.html\", function (req, res) {\n  res.redirect(\"/\");\n});\n\napp.listen(process.env.PORT || 3000, function () {\n  console.log(\"Server is running\");\n});\n\n// 8a8caf31357e4496e62d3e3690b8797b-us3\n\n// ID for List/Audience:\n// c88fb2ef24\n\n\n\n//signup.html\n   <link rel=\"canonical\" href=\"https://getbootstrap.com/docs/4.0/examples/sign-in/\">\n\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" \n      integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\n    \n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\" \n      integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\" crossorigin=\"anonymous\">\n      </script>\n\n    <link href=\"css/signin.css\" rel=\"stylesheet\">\n  </head>\n\n  <body class=\"text-center\">\n    <form class=\"form-signin\" method=\"POST\" action=\"/\">\n      <img class=\"mb-4\" src=\"imgs/email-newsletter.jpeg\" alt=\"\" width=\"144\" height=\"72\">\n      <h1 class=\"h3 mb-3 font-weight-normal\">Sign Up to Our Newsletter</h1>\n\n      <input type=\"text\" id=\"inputFirstName\" name=\"fName\" class=\"form-control top\" placeholder=\"First \n          Name\" required autofocus>\n      <input type=\"text\" id=\"inputLastName\" name=\"lName\" class=\"form-control middle\" placeholder=\"Last Name\" \n          required autofocus>\n      <input type=\"email\" id=\"inputEmail\" name=\"email\" class=\"form-control bottom\" placeholder=\"Email address\" \n          required autofocus>\n\n      <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign Up</button>\n      <p class=\"mt-5 mb-3 text-muted\">&copy; 2019</p>\n    </form>\n  </body>\n  \n  \n  \n  //success.html\n  <div class=\"container\">\n      <h1 class=\"display-4\">Awesome!!</h1>\n      <p class=\"lead\">You have successfully signed up to the newsletter</p>\n    </div>\n    \n    \n  //failure.html\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" \n  integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\n  \n  <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\" \n  integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\" crossorigin=\"anonymous\">\n  </script>\n</head>\n\n<body>\n  <div class=\"jumbotron jumbotron-fluid\">\n    <div class=\"container\">\n      <h1 class=\"display-4\">Uh Oh!</h1>\n      <p class=\"lead\">Looks like there was an error signing up! Please try again</p>\n\n      <form action=\"/failure.html\" method=\"post\">\n        <button class=\"btn btn-large btn-warning\" type=\"submit\" name=\"button\">Try again</button>\n      </form>\n    </div>`.trim();\n\nconst wikiapi = `\nconst express = require(\"express\");\nconst bodyParser = require(\"body-parser\");\nconst mongoose = require(\"mongoose\");\nconst ejs = require(\"ejs\");\n\nconst app = express();\n\napp.set('view engine', 'ejs');\n\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(express.static(\"public\"));\n\nmongoose.connect(\"mongodb://localhost:27017/wikiDB\", {\n  userNewUrlParser: true\n});\n\nconst articleSchema = {\n  title: String,\n  content: String\n};\n\nconst Article = mongoose.model(\"Article\", articleSchema);\n\n// // GET all articles\n// app.get(\"/articles\", function(req, res){\n//   Article.find(function(err, foundArticles){\n//     if(!err){\n//       console.log(foundArticles);\n//\n//       res.send(foundArticles);\n//     }else{\n//       res.send(err);\n//     }\n//   });\n// });\n//\n// // POST a New Article\n// app.post(\"/articles\", function(req, res) {\n//   const newArticle = new Article({\n//     title: req.body.title,\n//     content: req.body.content\n//   });\n//\n//   newArticle.save(function(err){\n//     if(!err){\n//       res.send(\"Successfully added a new article.\");\n//     } else{\n//       res.send(err);\n//     }\n//   });\n// });\n//\n// // DELETE All Articles\n// app.delete(\"/articles\", function(req, res){\n//   Article.deleteMany(function(err){\n//     if(!err){\n//       res.send(\"Successfully deleted all articles.\");\n//     }else{\n//       res.send(err);\n//     }\n//   });\n// });\n\napp.route(\"/articles\").get(function (req, res) {\n  Article.find(function (err, foundArticles) {\n    if (!err) {\n      console.log(foundArticles);\n\n      res.send(foundArticles);\n    } else {\n      res.send(err);\n    }\n  });\n}).post(function (req, res) {\n  const newArticle = new Article({\n    title: req.body.title,\n    content: req.body.content\n  });\n\n  newArticle.save(function (err) {\n    if (!err) {\n      res.send(\"Successfully added a new article.\");\n    } else {\n      res.send(err);\n    }\n  });\n}).delete(function (req, res) {\n  Article.deleteMany(function (err) {\n    if (!err) {\n      res.send(\"Successfully deleted all articles.\");\n    } else {\n      res.send(err);\n    }\n  });\n});\n\napp.route(\"/articles/:articleTitle\")\n\n  .get(function (req, res) {\n    Article.findOne({\n      title: req.params.articleTitle\n    }, function (err, foundArticle) {\n      if (!err) {\n        res.send(foundArticle);\n      } else {\n        res.send(\"No articles matching that title was found\");\n      }\n    })\n  })\n\n  .put(function (req, res) {\n    Article.update({\n      title: req.params.articleTitle\n    }, {\n      title: req.body.title,\n      content: req.body.content\n    }, {\n      overwrite: true\n    },\n      function (err) {\n        if (!err) {\n          res.send(\"Successfully updated article.\")\n        }\n      });\n  })\n\n  .patch(function (req, res) {\n    Article.update({\n      title: req.params.articleTitle\n    }, {\n      $set: req.body\n    },\n      function (err) {\n        if (!err) {\n          res.send(\"Successfully updated article.\");\n        } else {\n          res.send(err);\n        }\n      }\n    );\n  })\n\n  .delete(function (req, res) {\n    Article.deleteOne({\n      title: req.params.articleTitle\n    }, function (err) {\n      if (!err) {\n        res.send(\"Successfully deleted article.\");\n      } else {\n        res.send(err);\n      }\n    })\n  });\n\napp.listen(3000, function () {\n  console.log(\"Server started on port 3000\");\n});\n`.trim();\n\n\nclass Udemy extends Component {\n  componentDidMount() {\n    setTimeout(() => Prism.highlightAll(), 0)\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container>\n        <Grid item xs={2}>\n          <Paper className={classes.paper}>\n            <h4><Sidebar /></h4>\n          </Paper>\n        </Grid>\n        <Grid item xs={10}>\n          <Paper className={classes.paper}>\n            <List>\n              <h3>Bitcoin-Ticker</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={bitcoin}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Newsletter-Signup</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={newsletter}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n              <br />\n\n              <h3>Wiki-API</h3>\n              <div style={titles}>\n                <PrismCode\n                  code={wikiapi}\n                  language=\"js\"\n                  plugins={[\"line-numbers\"]}\n                />\n              </div>\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Udemy));\n"]},"metadata":{},"sourceType":"module"}