{"map":{"version":3,"sources":["static/js/23.b814c71b.chunk.js"],"names":["this","push","344","module","__webpack_exports__","__webpack_require__","d","Sidebar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_MenuList__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__","useStyles","Object","theme","root","display","paper","marginRight","spacing","line","textDecoration","classes","a","createElement","className","to","360","exports","p","475","r","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_5___default","prismjs__WEBPACK_IMPORTED_MODULE_6__","prismjs__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","_sidebar__WEBPACK_IMPORTED_MODULE_12__","_ReactJs_prismCode__WEBPACK_IMPORTED_MODULE_13__","_assets_AI_daisy2_JPG__WEBPACK_IMPORTED_MODULE_14__","_assets_AI_daisy2_JPG__WEBPACK_IMPORTED_MODULE_14___default","titles","backgroundColor","padding","fontSize","redesign","height","width","childsFile","trim","flowers","split","convolutional","augmentation","generated","dataAugmentation","_Component","apply","arguments","key","value","setTimeout","highlightAll","props","container","item","xs","src","alt","style","code","language","plugins","margin","smMargin","actionDiv","textAlign"],"mappings":"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"},"code":"(this[\"webpackJsonpmern-stack-client\"]=this[\"webpackJsonpmern-stack-client\"]||[]).push([[23],{344:function(e,a,n){\"use strict\";n.d(a,\"a\",(function(){return m}));var t=n(0),l=n.n(t),r=n(12),s=n(14),i=n(50),o=n(49),c=Object(o.a)((function(e){return{root:{display:\"flex\"},paper:{marginRight:e.spacing(2)},line:{textDecoration:\"none\"}}}));function m(){var e=c();return l.a.createElement(\"div\",{className:e.root},l.a.createElement(i.a,null,l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/introAngular\",className:e.line},\"AI\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/tensorflow\",className:e.line},\"Tensorflow\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/tensors\",className:e.line},\"Tensorboards\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/angCompiler\",className:e.line},\"Compiler\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/neural\",className:e.line},\"NeuralKeras\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/activationFunctions\",className:e.line},\"activationFuncs\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/loss\",className:e.line},\"Loss\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/gradientNeural\",className:e.line},\"GradientNeural\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/stochastic\",className:e.line},\"Stochastic\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/benchmarking\",className:e.line},\"Benchmarking\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/customer\",className:e.line},\"Customer\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/regularizationDeep\",className:e.line},\"Regularization Deep\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/imbalanced\",className:e.line},\"Imbalanced\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/imbalanced2\",className:e.line},\"Imbalanced2\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/convolutionals\",className:e.line},\"Convolutionals\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/data_augmentation\",className:e.line},\"data Augmentation\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/transfer\",className:e.line},\"Transfer\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/word_embedding\",className:e.line},\"Embedding\"))),l.a.createElement(\"div\",null))}},360:function(e,a,n){e.exports=n.p+\"static/media/daisy2.4cc88bac.JPG\"},475:function(e,a,n){\"use strict\";n.r(a);var t=n(4),l=n(3),r=n(5),s=n(6),i=n(8),o=n(0),c=n.n(o),m=n(7),u=n.n(m),d=n(2),g=n(9),p=n(13),E=n(11),_=(n(16),n(344)),b=n(1),f=n(360),y=n.n(f),h={backgroundColor:\"#F0F8FF\",padding:\"1px\",fontSize:\"16px\"},v={height:200,width:500},w=\"\\ndataset_url = \\\"https://storage.googleapis.com/download.tensorflow.org/example_images/flower_photos.tgz\\\"\\ndata_dir = tf.keras.utils.get_file('flower_photos', origin=dataset_url,  cache_dir='.', untar=True)\\ndata_dir\\n\\nimport pathlib\\ndata_dir = pathlib.Path(data_dir)\\n\\nlist(data_dir.glob('*/*.jpg'))[:5]\\n\\nimage_count = len(list(data_dir.glob('*/*.jpg')))\\n\\nroses = list(data_dir.glob('roses/*'))\\nroses[:5]\\n\\nPIL.Image.open(str(roses[1]))\\n\\ntulips = list(data_dir.glob('tulips/*'))\\nPIL.Image.open(str(tulips[0]))\\n\".trim(),N=\"\\nflowers_images_dict = {\\n  'roses': list(data_dir.glob('roses/*')),\\n  'daisy': list(data_dir.glob('daisy/*')),\\n  'dandelion': list(data_dir.glob('dandelion/*')),\\n  'sunflowers': list(data_dir.glob('sunflowers/*')),\\n  'tulips': list(data_dir.glob('tulips/*')),\\n}\\n\\n\\nflowers_labels_dict = {\\n  'roses': 0,\\n  'daisy': 1,\\n  'dandelion': 2,\\n  'sunflowers': 3,\\n  'tulips': 4,\\n}\\n\\nflowers_images_dict['roses'][:5]\\n\\nstr(flowers_images_dict['roses'][0])\\nimg = cv2.imread(str(flowers_images_dict['roses'][0]))\\n\\ncv2.resize(img,(180,180)).shape\\nX, y = [], []\\n\\nfor flower_name, images in flowers_images_dict.items():\\n    for image in images:\\n        img = cv2.imread(str(image))\\n        resized_img = cv2.resize(img,(180,180))\\n        X.append(resized_img)\\n        y.append(flowers_labels_dict[flower_name])\\n        \\n        \\nX = np.array(X)\\ny = np.array(y)\\n\".trim(),D=\"\\nfrom sklearn.model_selection import train_test_split\\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)\\n\\nX_train_scaled = X_train / 255                                                            #Preprocessing: scale images.\\nX_test_scaled = X_test / 255\\n\".trim(),x=\"\\nnum_classes = 5\\n\\nmodel = Sequential([\\n  layers.Conv2D(16, 3, padding='same', activation='relu'),\\n  layers.MaxPooling2D(),\\n  layers.Conv2D(32, 3, padding='same', activation='relu'),\\n  layers.MaxPooling2D(),\\n  layers.Conv2D(64, 3, padding='same', activation='relu'),\\n  layers.MaxPooling2D(),\\n  layers.Flatten(),\\n  layers.Dense(128, activation='relu'),\\n  layers.Dense(num_classes)\\n])\\n\\nmodel.compile(optimizer='adam', loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True), metrics=['accuracy'])\\n              \\nmodel.fit(X_train_scaled, y_train, epochs=30) \\nmodel.evaluate(X_test_scaled,y_test) \\n\\npredictions = model.predict(X_test_scaled)\\nscore = tf.nn.softmax(predictions[0])\\nnp.argmax(score)\\n\\ny_test[0]\\n\".trim(),C=\"\\ndata_augmentation = keras.Sequential(\\n  [\\n    layers.experimental.preprocessing.RandomFlip(\\\"horizontal\\\", input_shape=(img_height, img_width, 3)),\\n    layers.experimental.preprocessing.RandomRotation(0.1),\\n    layers.experimental.preprocessing.RandomZoom(0.1),\\n  ]\\n)\\n\\n\\nplt.axis('off')                                                                                   #Original Image.\\nplt.imshow(X[0])                     \\n\".trim(),X=\"\\nplt.axis('off')\\nplt.imshow(data_augmentation(X)[0].numpy().astype(\\\"uint8\\\"))\\n\\nnum_classes = 5\\n\\nmodel = Sequential([\\n  data_augmentation,\\n  layers.Conv2D(16, 3, padding='same', activation='relu'),\\n  layers.MaxPooling2D(),\\n  layers.Conv2D(32, 3, padding='same', activation='relu'),\\n  layers.MaxPooling2D(),\\n  layers.Conv2D(64, 3, padding='same', activation='relu'),\\n  layers.MaxPooling2D(),\\n  layers.Dropout(0.2),\\n  layers.Flatten(),\\n  layers.Dense(128, activation='relu'),\\n  layers.Dense(num_classes)\\n])\\n\\nmodel.compile(optimizer='adam', loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True), metrics=['accuracy'])\\n              \\nmodel.fit(X_train_scaled, y_train, epochs=30)  \\nmodel.evaluate(X_test_scaled,y_test)\\n\".trim(),k=function(e){function a(){return Object(t.a)(this,a),Object(r.a)(this,Object(s.a)(a).apply(this,arguments))}return Object(i.a)(a,e),Object(l.a)(a,[{key:\"componentDidMount\",value:function(){setTimeout((function(){return u.a.highlightAll()}),0)}},{key:\"render\",value:function(){var e=this.props.classes;return c.a.createElement(d.a,{container:!0},c.a.createElement(d.a,{item:!0,xs:2},c.a.createElement(g.a,{className:e.paper},c.a.createElement(\"h4\",null,c.a.createElement(_.a,null)))),c.a.createElement(d.a,{item:!0,xs:10},c.a.createElement(g.a,{className:e.paper},c.a.createElement(p.a,null,c.a.createElement(\"h3\",null,\"Data Augmentation To Address Overfitting In Flower Classification CNN\"),\"Data augmentation is a process of generating new training samples from current training dataset using transformations such as zoom, rotations, change in contrast etc.\",c.a.createElement(\"br\",null),c.a.createElement(\"i\",null,\"We build a CNN to classify flower images. Also see how our model overfits and overfitting can be addressed using data augmentation.\"),c.a.createElement(\"br\",null),c.a.createElement(\"br\",null),c.a.createElement(\"b\",null,\"4 new training samples are generated from original sample using different transformations.\"),c.a.createElement(\"br\",null),c.a.createElement(\"br\",null),c.a.createElement(\"img\",{src:y.a,alt:\"Theata\",className:\"responsive2\",style:v}),c.a.createElement(\"br\",null),c.a.createElement(\"br\",null),c.a.createElement(\"b\",null,\"Load flowers dataset.\"),c.a.createElement(\"br\",null),c.a.createElement(\"div\",{style:h},c.a.createElement(b.a,{code:w,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Read flowers images from disk into numpy array using opencv.\"),c.a.createElement(\"div\",{style:h},c.a.createElement(b.a,{code:N,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Train test split\"),c.a.createElement(\"div\",{style:h},c.a.createElement(b.a,{code:D,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Build convolutional neural network and train it.\"),c.a.createElement(\"div\",{style:h},c.a.createElement(b.a,{code:x,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Improve Test Accuracy Using Data Augmentation\"),c.a.createElement(\"div\",{style:h},c.a.createElement(b.a,{code:C,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Newly generated training sample using data augmentation\"),c.a.createElement(\"div\",{style:h},c.a.createElement(b.a,{code:X,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"i\",null,\"By using data augmentation and drop out layer the accuracy of test set predictions is increased to 73.74%.\")))))}}]),a}(o.Component);a.default=Object(E.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:\"center\"}}}))(k)}}]);","extractedComments":[]}