{"map":{"version":3,"sources":["static/js/90.0c4ed63a.chunk.js"],"names":["this","push","342","module","__webpack_exports__","__webpack_require__","d","Sidebar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_MenuList__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__","useStyles","Object","theme","root","display","paper","marginRight","spacing","line","textDecoration","classes","a","createElement","className","to","521","r","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_5___default","prismjs__WEBPACK_IMPORTED_MODULE_6__","prismjs__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","_sidebar__WEBPACK_IMPORTED_MODULE_12__","_ReactJs_prismCode__WEBPACK_IMPORTED_MODULE_13__","titles","backgroundColor","padding","fontSize","sklearn","trim","accuracy","trains","stack","LogisticReg","_Component","apply","arguments","key","value","setTimeout","highlightAll","props","container","item","xs","style","code","language","plugins","margin","smMargin","actionDiv","textAlign"],"mappings":"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"},"code":"(this[\"webpackJsonpmern-stack-client\"]=this[\"webpackJsonpmern-stack-client\"]||[]).push([[90],{342:function(e,a,n){\"use strict\";n.d(a,\"a\",(function(){return m}));var t=n(0),l=n.n(t),r=n(12),i=n(14),s=n(50),o=n(49),c=Object(o.a)((function(e){return{root:{display:\"flex\"},paper:{marginRight:e.spacing(2)},line:{textDecoration:\"none\"}}}));function m(){var e=c();return l.a.createElement(\"div\",{className:e.root},l.a.createElement(s.a,null,l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/infoMl\",className:e.line},\"InfoMl\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/gredient_decents\",className:e.line},\"Gredient Decents\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/training\",className:e.line},\"Traning\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/regularizations\",className:e.line},\"Regularizations\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/featuresEng\",className:e.line},\"FeaturesEng\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/adaboost\",className:e.line},\"Adaboots\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/greedSearch\",className:e.line},\"Greed Search\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/perceptron\",className:e.line},\"Perceptron\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/pcaPy\",className:e.line},\"PCA\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/leanearRegression\",className:e.line},\"Leanear Regression\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/logisticReg\",className:e.line},\"Logistic Regression\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/lda\",className:e.line},\"Lda\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/knn\",className:e.line},\"Knn\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/k_meanClustring\",className:e.line},\"K_Mean\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/naiveBar\",className:e.line},\"Naive Bayes\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/randomForest\",className:e.line},\"Random Forest\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/decisiontree\",className:e.line},\"Decision Tree\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/svmPy\",className:e.line},\"SVM\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/numpyPy\",className:e.line},\"Numpy\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/pandas\",className:e.line},\"Pandas\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/bagging\",className:e.line},\"Matplotlib\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/logisticRegrations\",className:e.line},\"Scikit Learn\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/regrations\",className:e.line},\"SciPy\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/libraries\",className:e.line},\"OpenCV\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/capture\",className:e.line},\"Capture\")),l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/joinImages\",className:e.line},\"JoinImages\")),l.a.createElement(\"br\",null),\"Deep Learning\",l.a.createElement(i.a,null,l.a.createElement(r.b,{to:\"/superwise\",className:e.line},\"Superwise\"))),l.a.createElement(\"div\",null))}},521:function(e,a,n){\"use strict\";n.r(a);var t=n(4),l=n(3),r=n(5),i=n(6),s=n(8),o=n(0),c=n.n(o),m=n(7),u=n.n(m),d=n(2),p=n(9),g=n(13),E=n(11),f=(n(16),n(342)),b=n(1),_={backgroundColor:\"#F0F8FF\",padding:\"1px\",fontSize:\"16px\"},h='\\nfrom sklearn.datasets import load_iris\\n\\niris = load_iris()\\nX = iris.data\\ny = iris.target\\n\\nfeature_names = iris.feature_names\\ntarget_names = iris.target_names\\n\\nprint(\"Feature names:\", feature_names)\\nprint(\"Target names:\", target_names)\\nprint(\"First 10 rows of X\", X[:10])\\n'.trim(),k=\"\\nfrom sklearn.model_selection import train_test_split\\n\\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 1)\\n\\nX_train.shape\\nX_test.shape\\n\\ny_train.shape\\ny_test.shape\\n\".trim(),v='\\nfrom sklearn.neighbors import KNeighborsClassifier\\nfrom sklearn import metrics\\n\\nclassifier_knn = KNeighborsClassifier(n_neighbors = 3)\\nclassifier_knn.fit(X_train, y_train)\\ny_pred = classifier_knn.predict(X_test)\\n\\n# Finding accuracy by comparing actual response values(y_test)with predicted response value(y_pred)\\nprint(\"Accuracy:\", metrics.accuracy_score(y_test, y_pred))\\n\\n# Providing sample data and the model will make prediction out of that data\\nsample = [[5, 5, 3, 2], [2, 4, 3, 5]]\\npreds = classifier_knn.predict(sample)\\n'.trim(),y=\"\\nfrom sklearn import linear_model\\nreg = linear_model.LinearRegression()  \\n\\nfrom sklearn.linear_model import LinearRegression\\nmodel = LinearRegression()\\nmodel.fit(X_train, Y_train)                       \\n\\nfrom sklearn.preprocessing import StandardScaler  \\nsc_X = StandardScaler()\\n\\nfrom sklearn.linear_model import LogisticRegression\\nmodel = LogisticRegression()\\n\\nfrom sklearn.svm import SVC\\nsvm = SVC(gamma='auto') \\n\\nfrom sklearn.svm import SVC\\nmodel = SVC()\\nmodel.fit(X_train, y_train)\\n\\nfrom sklearn.ensemble import RandomForestClassifier\\nrf = RandomForestClassifier(n_estimators=40)                                                      \\n\\nfrom sklearn.model_selection import KFold\\nkf = KFold(n_splits=3)\\n\\nfrom sklearn.neighbors import KNeighborsClassifier \\nknn = KNeighborsClassifier(n_neighbors=10)\\n\\nfrom sklearn.preprocessing import MinMaxScaler\\nscaler = MinMaxScaler()\\nscaler.fit(df[['Income($)']])\\n\\nfrom sklearn.pipeline import Pipeline\\nclf = Pipeline([('vectorizer', CountVectorizer()),('nb', MultinomialNB())])\\nclf.fit(X_train, y_train)\\n\\nfrom sklearn.preprocessing import LabelEncoder\\nle_company = LabelEncoder()\\n\\nfrom sklearn import tree\\nmodel = tree.DecisionTreeClassifier()\\nmodel.fit(inputs_n, target)\\n\\nfrom sklearn.decomposition import PCA\\npca = PCA(0.95)\\nX_pca = pca.fit_transform(X)\\n\\nfrom sklearn import preprocessing\\nencoder = preprocessing.LabelEncoder()\\nencoder.fit(input_labels)\\n\\nfrom sklearn.linear_model import Ridge                                                  \\nridge_reg= Ridge(alpha=50, max_iter=100, tol=0.1) \\nridge_reg.fit(train_X, train_y)\\n\\nfrom sklearn.preprocessing import StandardScaler\\nscaler = StandardScaler()\\nX_scaled = scaler.fit_transform(X)\\n\\nfrom sklearn.model_selection import cross_val_score\\nfrom sklearn.tree import DecisionTreeClassifier\\nscores = cross_val_score(DecisionTreeClassifier(), X, y, cv=5)\\n\\nfrom sklearn.model_selection import GridSearchCV\\nclf = GridSearchCV(svm.SVC(gamma='auto'), {'C': [1,10,20], 'kernel': ['rbf','linear']}, cv=5, return_train_score=False)\\nclf.fit(iris.data, iris.target)\\n\\nfrom sklearn.model_selection import RandomizedSearchCV\\nrs = RandomizedSearchCV(svm.SVC(gamma='auto'), {'C': [1,10,20],'kernel': ['rbf','linear']}, \\n    cv=5, return_train_score=False, n_iter=2)\\nrs.fit(iris.data, iris.target)\\n\\nfrom sklearn.ensemble import BaggingClassifier\\n\\nbag_model = BaggingClassifier(\\n    base_estimator=DecisionTreeClassifier(), \\n    n_estimators=100, \\n    max_samples=0.8, \\n    oob_score=True,\\n    random_state=0\\n)\\nbag_model.fit(X_train, y_train)\\n\".trim(),N=function(e){function a(){return Object(t.a)(this,a),Object(r.a)(this,Object(i.a)(a).apply(this,arguments))}return Object(s.a)(a,e),Object(l.a)(a,[{key:\"componentDidMount\",value:function(){setTimeout((function(){return u.a.highlightAll()}),0)}},{key:\"render\",value:function(){var e=this.props.classes;return c.a.createElement(d.a,{container:!0},c.a.createElement(d.a,{item:!0,xs:2},c.a.createElement(p.a,{className:e.paper},c.a.createElement(\"h4\",null,c.a.createElement(f.a,null)))),c.a.createElement(d.a,{item:!0,xs:10},c.a.createElement(p.a,{className:e.paper},c.a.createElement(g.a,null,c.a.createElement(\"h3\",null,\"Scikit Learn (common algoritham) - Modelling Process\"),\"Rather than focusing on loading, manipulating and summarising data, Scikit-learn library is focused on modeling the data. Some of the most popular groups of models provided by Sklearn are as follows \\u2212\",c.a.createElement(\"br\",null),c.a.createElement(\"br\",null),\"We can do following with scikit Learn.\",c.a.createElement(\"ul\",null,c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Classification: \"),\"SVM, nearest neighbors, random forest, logistic regression, etc.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Regression: \"),\"Lasso, ridge regression, etc.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Clustering: \"),\"k-means, spectral clustering, etc.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Dimensionality reduction: \"),\"PCA, feature selection, matrix factorization, etc.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Model selection: \"),\"Grid search, cross-validation, metrics.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Preprocessing: \"),\".Feature extraction, normalization\")),c.a.createElement(\"br\",null),c.a.createElement(\"b\",null,\"Dataset Loading:\"),\"A collection of data is called dataset. It is having the following two components.\",c.a.createElement(\"br\",null),\"Dataset having the following two components.\",c.a.createElement(\"ul\",null,c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Features: \"),\"The variables of data are called its features.\"),c.a.createElement(\"ul\",null,c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Feature matrix: \"),\"It is the collection of features, in case there are more than one.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Feature Names: \"),\"It is the list of all the names of the features.\")),c.a.createElement(\"br\",null),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Response: \"),\"It is the output variable that basically depends upon the feature variables.\"),c.a.createElement(\"ul\",null,c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Response Vector: \"),\"It is used to represent response column. Generally, we have just one response column.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Target Names: \"),\"It represent the possible values taken by a response vector.\"))),c.a.createElement(\"div\",{style:_},c.a.createElement(b.a,{code:h,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"br\",null),c.a.createElement(\"b\",null,\"Some popular groups of models provided by scikit-learn include:\"),c.a.createElement(\"ul\",null,c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Clustering: \"),\"For grouping unlabeled data such as KMeans.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Cross Validation: \"),\"For estimating the performance of supervised models on unseen data.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Datasets: \"),\"For test datasets and for generating datasets with specific properties for investigating model behavior.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Dimensionality Reduction: \"),\"For reducing the number of attributes in data for summarization, visualization and feature selection such as Principal component analysis.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Ensemble methods: \"),\"For combining the predictions of multiple supervised models.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Feature extraction: \"),\"For defining attributes in image and text data.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Feature selection: \"),\"For identifying meaningful attributes from which to create supervised models.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Parameter Tuning: \"),\"For getting the most out of supervised models.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Manifold Learning: \"),\"For summarizing and depicting complex multi-dimensional data.\")),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Splitting the dataset\"),\"To check the accuracy of our model, we can split the dataset into two pieces-a training set and a testing set.\",c.a.createElement(\"div\",{style:_},c.a.createElement(b.a,{code:k,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Train the Model\"),\"Next, we can use our dataset to train some prediction-model. ML algorithms have a consistent interface for fitting, predicting accuracy, recall etc.\",c.a.createElement(\"div\",{style:_},c.a.createElement(b.a,{code:v,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"sklearn Models\"),c.a.createElement(\"div\",{style:_},c.a.createElement(b.a,{code:y,language:\"js\",plugins:[\"line-numbers\"]}))))))}}]),a}(o.Component);a.default=Object(E.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:\"center\"}}}))(N)}}]);","extractedComments":[]}