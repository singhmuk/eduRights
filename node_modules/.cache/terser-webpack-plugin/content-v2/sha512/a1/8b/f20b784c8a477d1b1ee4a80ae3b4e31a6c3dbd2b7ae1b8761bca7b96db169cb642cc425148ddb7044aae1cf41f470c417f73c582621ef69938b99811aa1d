{"map":{"version":3,"sources":["static/js/245.e90049b8.chunk.js"],"names":["this","push","140","module","__webpack_exports__","__webpack_require__","d","PrismCode","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_5___default","n","prismjs__WEBPACK_IMPORTED_MODULE_6__","prismjs__WEBPACK_IMPORTED_MODULE_6___default","_React$Component","props","_this","Object","call","highlight","ref","current","a","highlightElement","createRef","key","value","_this$props","code","language","plugins","createElement","className","concat","trim","Component","141","exports","147","Sidebar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_MenuList__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__","useStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","classes","to","417","r","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","_sidebar__WEBPACK_IMPORTED_MODULE_12__","_ReactJs_prismCode__WEBPACK_IMPORTED_MODULE_13__","titles","backgroundColor","padding","fontSize","createTuples","usefuls","unpack","compare","list","copylists","comprehension","format","unions","differences","updatings","subsets","frozenset","create","checkItem","looping","mergrs","possibles","Tuples","_Component","apply","arguments","setTimeout","highlightAll","container","item","xs","style","margin","smMargin","actionDiv","textAlign"],"mappings":"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"},"code":"(this[\"webpackJsonpmern-stack-client\"]=this[\"webpackJsonpmern-stack-client\"]||[]).push([[245],{140:function(e,t,n){\"use strict\";n.d(t,\"a\",(function(){return p}));var l=n(45),a=n(28),r=n(136),i=n(137),s=n(139),m=n(0),c=n.n(m),u=n(138),o=n.n(u),p=(n(59),function(e){function t(e){var n;return Object(l.a)(this,t),(n=Object(r.a)(this,Object(i.a)(t).call(this,e))).highlight=function(){n.ref&&n.ref.current&&o.a.highlightElement(n.ref.current)},n.ref=c.a.createRef(),n}return Object(s.a)(t,e),Object(a.a)(t,[{key:\"componentDidMount\",value:function(){this.highlight()}},{key:\"componentDidUpdate\",value:function(){this.highlight()}},{key:\"render\",value:function(){var e=this.props,t=e.code,n=(e.plugins,e.language);return c.a.createElement(\"pre\",{className:\"code-prism\"},c.a.createElement(\"code\",{ref:this.ref,className:\"language-\".concat(n)},t.trim()))}}]),t}(c.a.Component))},141:function(e,t,n){},147:function(e,t,n){\"use strict\";n.d(t,\"a\",(function(){return u}));var l=n(0),a=n.n(l),r=n(26),i=n(296),s=n(294),m=n(114),c=Object(m.a)((function(e){return{root:{display:\"flex\"},paper:{marginRight:e.spacing(2)},line:{textDecoration:\"none\"}}}));function u(){var e=c();return a.a.createElement(\"div\",{className:e.root},a.a.createElement(s.a,null,a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/introPython\",className:e.line},\"intro Python\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/tuples\",className:e.line},\"Tuples\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/stringPy\",className:e.line},\"Strings\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/iteratorsPy\",className:e.line},\"Iterators\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/json\",className:e.line},\"Json\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/mathematics\",className:e.line},\"Mathematics\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/oops_\",className:e.line},\"Oops\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/abstract\",className:e.line},\"Abstract\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/exceptionsPy\",className:e.line},\"ExceptionsHandling\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/pyIntro\",className:e.line},\"Pickle\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/threadings\",className:e.line},\"Thread\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/collections\",className:e.line},\"Collections\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/logging\",className:e.line},\"Logging\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/regex\",className:e.line},\"Regex\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/tkinter\",className:e.line},\"TKinter\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/logicalspy\",className:e.line},\"Logicals\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/pyLogic\",className:e.line},\"PyLogic\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/csv\",className:e.line},\"CsvPython\")),a.a.createElement(\"br\",null),\"Flask\",a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/conroutes\",className:e.line},\"routes\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/httpsMethods\",className:e.line},\"Https\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/flasksIn\",className:e.line},\"Interviews\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/flask_signUp\",className:e.line},\"Flask_signUp\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/get_search\",className:e.line},\"Get_Search\")),a.a.createElement(i.a,null,a.a.createElement(r.b,{to:\"/load_search\",className:e.line},\"Load_Search\"))),a.a.createElement(\"div\",null))}},417:function(e,t,n){\"use strict\";n.r(t);var l=n(45),a=n(28),r=n(136),i=n(137),s=n(139),m=n(0),c=n.n(m),u=n(138),o=n.n(u),p=n(120),d=n(57),E=n(295),y=n(5),b=(n(141),n(147)),h=n(140),f={backgroundColor:\"#F0F8FF\",padding:\"1px\",fontSize:\"16px\"},_='\\nmy_tuple = (\"Max\", 28, \"New York\")\\nmy_tuple_2 = \"Linda\", 25, \"Miami\"                                              # Parentheses are optional\\nmy_tuple_3 = (25, 1, 2, 3, 4,)\\n\\nx = my_tuple.count(\\'Max\\')\\nx = my_tuple[-1]\\nx = my_tuple.index(28)                                                         # Return index of first item of 28.\\nx = len(my_tuple)\\nx = max(my_tuple_3)\\nx = min(my_tuple_3)\\nx = any(my_tuple_3)\\nx = all(my_tuple_3)\\nx = enumerate(my_tuple_3)\\nx = sum(my_tuple_3)\\nx = sorted(my_tuple_3)\\nx = tuple(my_tuple_3)                                                         # Convert an iterable to a tuple.\\n\\nname, age, city = my_tuple\\n\\nprint(x)\\nprint(name, age, city)\\n\\n\\n#2\\ntuple_4 = tuple([1,2,3])                     # convert an iterable (list, dict, string) with the built-in tuple function\\nprint(tuple_4)'.trim(),g=\"\\nmy_tuple = ('a', 'b') * 5                                          \\nprint(my_tuple)\\n\\n\\n#2 convert list to a tuple.\\nmy_list = ['a', 'b', 'c', 'd']\\nlist_to_tuple = tuple(my_list)\\nprint(list_to_tuple)\\n\\ntuple_to_list = list(list_to_tuple)\\nprint(tuple_to_list)\\n\\n\\n#3 convert string to tuple.\\nstring_to_tuple = tuple('Hello')\\nprint(string_to_tuple)\".trim(),v=\"\\nmy_tuple = (0, 1, 2, 3, 4, 5)\\nfirst, *items_between, last = my_tuple\\nprint(first, items_between, last)\\n\\n\\n#2. Nested tuples\\na = ((0, 1), ('age', 'height'))\\nprint(a[0])\\n\".trim(),x='\\n# compare the size\\nimport sys\\nmy_list = [0, 1, 2, \"hello\", True]\\nmy_tuple = (0, 1, 2, \"hello\", True)\\nprint(sys.getsizeof(my_list), \"bytes\")\\nprint(sys.getsizeof(my_tuple), \"bytes\")\\n\\n# compare the execution time of a list vs. tuple creation statement\\nimport timeit\\nprint(timeit.timeit(stmt=\"[0, 1, 2, 3, 4, 5]\", number=1000000))\\nprint(timeit.timeit(stmt=\"(0, 1, 2, 3, 4, 5)\", number=1000000))'.trim(),k='\\nmy_list = [\"banana\", \"cherry\", \"apple\", 5, True, 0, 1, 1]\\nprint(my_list)\\n\\nlist_2 = list()                                                       # Or create an empty list with the list function\\nprint(list_2)\\n\\nx = my_list.append(\"orange\")                                              \\nx = my_list.index(1)                                              \\nx = my_list.insert(1, \"blueberry\")                                        \\nx = my_list.pop()                                                        \\nx = my_list.remove(\"cherry\")                                              \\nx = my_list.clear()                                                       \\nx = my_list.reverse()                                                    \\nx = my_list.sort()  \\nx = my_list.count(0)  \\nx = sum(my_list)  \\nx = max(my_list)  \\nx = min(my_list)  \\nx = all(my_list)  \\nx = any(my_list)  \\nx = len(my_list)  \\nx = enumerate(my_list)  \\n\\nprint(x)  \\n\\n\\nlist_with_zeros = [0] * 5                                             # create list with repeated elements\\nlist_concat = list_with_zeros + my_list\\nstring_to_list = list(\\'Hello\\')                                        # convert string to list\\n'.trim(),w='\\nlist_org = [\"banana\", \"cherry\", \"apple\"]\\nlist_copy = list_org.copy()\\nlist_copy.append(True)                                                # modifying the copy not affects the original\\n\\nprint(list_org)\\nprint(list_copy)\\n'.trim(),A=\"\\na = [1, 2, 3, 4, 5, 6, 7, 8]\\nb = [i * i for i in a] \\nprint(b)\\n\\n\\n# nested Lists\\na = [[1, 2], [3, 4]]\\nprint(a)\\nprint(a[0])\\n\".trim(),N='\\nmy_set = {\"apple\", \"banana\", \"cherry\"}\\nmy_set_2 = set([\"one\", \"two\", \"three\"])                         # or use the set function and create from an iterable\\nmy_set_3 = set(\"aaabbbcccdddeeeeeffff\")\\n\\nmy_set.add(\"three\") \\nmy_set.remove(\"three\") \\nmy_set.discard(\"three\")                                         # removes x\\nmy_set.pop()                                                    # removes x\\nmy_set.clear()  \\n\\nprint(my_set)\\n'.trim(),j=\"\\nodds = {1, 3, 5, 7, 9}\\nevens = {0, 2, 4, 6, 8}\\n\\nu = odds.union(evens)\\ni = odds.intersection(evens)\\n\\nprint(u)\".trim(),B=\"\\nsetA = {1, 2, 3, 4, 5, 6, 7, 8, 9}\\nsetB = {1, 2, 3, 10, 11, 12}\\n\\ndiff_set = setA.difference(setB)\\ndiff_set = setB.difference(setA)\\ndiff_set = setA.symmetric_difference(setB)\\ndiff_set = setB.symmetric_difference(setA)\\nprint(diff_set)\".trim(),R=\"\\nsetA = {1, 2, 3, 4, 5, 6, 7, 8, 9}\\nsetB = {1, 2, 3, 10, 11, 12}\\n\\nsetA.update(setB)\\n\\nsetA = {1, 2, 3, 4, 5, 6, 7, 8, 9}\\nsetA.intersection_update(setB)\\n\\nsetA = {1, 2, 3, 4, 5, 6, 7, 8, 9}\\nsetA.difference_update(setB)\\n\\nsetA = {1, 2, 3, 4, 5, 6, 7, 8, 9}\\nsetA.symmetric_difference_update(setB)\\n\\nsetA.update([1, 2, 3, 4, 5, 6])\".trim(),T=\"\\nsetA = {1, 2, 3, 4, 5, 6}\\nsetB = {1, 2, 3}\\n\\nprint(setA.issubset(setB))\\nprint(setB.issubset(setA))                                  # issubset(setX): Returns True if setX contains the set\\n\\n\\nprint(setA.issuperset(setB))                                # issuperset(setX): Returns True if the set contains setX\\nprint(setB.issuperset(setA))\\n\\n\\nsetC = {7, 8, 9}\\nprint(setA.isdisjoint(setB))                                # True if both sets have a null intersection\\nprint(setA.isdisjoint(setC))\".trim(),U=\"\\nodds = frozenset({1, 3, 5, 7, 9})\\nevens = frozenset({0, 2, 4, 6, 8})\\n\\nprint(odds.union(evens))\\nprint(odds.intersection(evens))\\nprint(odds.difference(evens))\".trim(),C='\\nmy_dict = {\"name\":\"Max\", \"age\":28, \"city\":\"New York\"}\\nmy_dict_2 = dict(name=\"Lisa\", age=27, city=\"Boston\")    \\n     \\nname_in_dict = my_dict[\"name\"]    \\nmy_dict[\"email\"] = \"max@xyz.com\"                                          # add a new key.\\nmy_dict[\"email\"] = \"coolmax@xyz.com\"                                      # overwrite the existing key.\\ndel my_dict[\"email\"]                                                      # delete a key-value pair.\\n\\nprint(my_dict)\\nprint(\"popped value:\", my_dict.pop(\"age\"))                                # removes the last inserted key-value pair. \\nprint(\"popped item:\", my_dict.popitem())\\n'.trim(),z='\\nmy_dict = {\"name\":\"Max\", \"age\":28, \"city\":\"New York\"}\\n\\nif \"name\" in my_dict:\\n    print(my_dict[\"name\"])\\n\\ntry:\\n    print(my_dict[\"firstname\"])\\nexcept KeyError:\\n    print(\"No key found\")'.trim(),L=\"\\nfor key in my_dict:\\n    print(key, my_dict[key])\\n\\n\\nfor key in my_dict.keys():\\n    print(key)\\n\\n\\nfor value in my_dict.values():                                                    # loop over values\\n    print(value)\\n\\n\\nfor key, value in my_dict.items():                                                # loop over keys and values\\n    print(key, value)\".trim(),O='\\nmy_dict = {\"name\":\"Max\", \"age\":28, \"email\":\"max@xyz.com\"}\\nmy_dict_2 = dict(name=\"Lisa\", age=27, city=\"Boston\")\\n\\nmy_dict.update(my_dict_2)\\nprint(my_dict)'.trim(),M=\"\\nmy_dict = {3: 9, 6: 36, 9:81}                                   # use numbers as key, but be careful\\nprint(my_dict[3], my_dict[6], my_dict[9])\\n\\nmy_tuple = (8, 7)                                               # use a tuple with immutable elements (e.g. number, string)\\nmy_dict = {my_tuple: 15}\\n\\nprint(my_dict[my_tuple])\\nprint(my_dict[8, 7])\\n\\n\\n# my_list = [8, 7]                                              # a list is not possible because it is not immutable\\n# my_dict = {my_list: 15}\".trim(),P=function(e){function t(){return Object(l.a)(this,t),Object(r.a)(this,Object(i.a)(t).apply(this,arguments))}return Object(s.a)(t,e),Object(a.a)(t,[{key:\"componentDidMount\",value:function(){setTimeout((function(){return o.a.highlightAll()}),0)}},{key:\"render\",value:function(){var e=this.props.classes;return c.a.createElement(p.a,{container:!0},c.a.createElement(p.a,{item:!0,xs:2},c.a.createElement(d.a,{className:e.paper},c.a.createElement(\"h4\",null,c.a.createElement(b.a,null)))),c.a.createElement(p.a,{item:!0,xs:10},c.a.createElement(d.a,{className:e.paper},c.a.createElement(E.a,null,c.a.createElement(\"h3\",null),c.a.createElement(\"ul\",null,c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Tuple: \"),\"A tuple is a collection of objects which is ordered and immutable. \"),c.a.createElement(\"ul\",null,c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,'my_tuple = (\"Max\", 28, \"New York\")')),c.a.createElement(\"li\",null,\"Values of a tuple are separated by \\u2018commas\\u2019. Although it is not necessary.\"),c.a.createElement(\"li\",null,\"Creation of tuple without the use of parentheses is known as Tuple Packing.\"),c.a.createElement(\"li\",null,\"Add/ change items, Not possible and will raise a TypeError.\")),c.a.createElement(\"br\",null),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"List: \"),\"List is a collection data type which is ordered and mutable.\"),c.a.createElement(\"ul\",null,c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,'my_list = [\"banana\", \"cherry\", \"apple\"]')),c.a.createElement(\"li\",null,\"Useful for preserving a sequence of data and further iterating over it.\")),c.a.createElement(\"br\",null),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Set: \"),\"A Set is an unordered , unindexed, mutable, and has no duplicate elements.\"),c.a.createElement(\"ul\",null,c.a.createElement(\"li\",null,\"Use curly braces or the built-in set function to create a set.\"),c.a.createElement(\"li\",null,\"An empty set cannot be created with Curly braces, as this is interpreted as dict use set().\")),c.a.createElement(\"br\",null),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Dictionary: \"),\"Is an unordered, mutable and indexed. No duplicate members.\"),c.a.createElement(\"ul\",null,c.a.createElement(\"li\",null,\"Collection of key-value pairs.\"),c.a.createElement(\"li\",null,\"Dictionary keys are case sensitive.\"),c.a.createElement(\"li\",null,\"Create a dictionary with braces, or with the built-in dict funtion.\"))),c.a.createElement(\"br\",null),c.a.createElement(\"b\",null,\"Reasons to use a tuple over a list\"),c.a.createElement(\"ul\",null,c.a.createElement(\"li\",null,\"Use tuple for heterogeneous (different) datatypes and list for homogeneous datatypes.\"),c.a.createElement(\"li\",null,\"Since tuple are immutable, iterating through tuple is faster than list.\"),c.a.createElement(\"li\",null,\"Tuples with their immutable elements can be used as key for a dictionary. This is not possible with lists.\")),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Create a tuple\"),c.a.createElement(\"b\",null,\"Special case:\"),\" A tuple with only one element needs to have a comma at the end, otherwise it is not recognized as tuple\",c.a.createElement(\"div\",{style:f},c.a.createElement(h.a,{code:_,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Tuple Usefule methods\"),c.a.createElement(\"div\",{style:f},c.a.createElement(h.a,{code:g,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Unpack tuple\"),c.a.createElement(\"ul\",null,c.a.createElement(\"li\",null,\"Number of variables have to match number of tuple elements.\"),c.a.createElement(\"li\",null,\"Unpack multiple elements to a list with *.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Nested tuples: \"),\"Tuples can contain other tuples (or other container types).\")),c.a.createElement(\"br\",null),c.a.createElement(\"div\",{style:f},c.a.createElement(h.a,{code:v,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Compare tuple and list\"),c.a.createElement(\"div\",{style:f},c.a.createElement(h.a,{code:x,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Creating A List\"),c.a.createElement(\"ul\",null,c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"Extend() :\"),\"Add all elements of a list to the another list.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"copy() :\"),\"Returns a copy of the list.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"reduce() :\"),\"apply a particular function passed in its argument to all of the list elements stores the intermediate result and only returns the final summation value.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"ord() :\"),\"Returns an integer representing the Unicode code point of the given Unicode character.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"cmp() :\"),\"This function returns 1, if first list is \\u201cgreater\\u201d than second list.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"enumerate() :\"),\"Returns enumerate object of list.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"accumulate() :\"),\"apply a particular function passed in its argument to all of the list elements returns a list containing the intermediate results.\")),c.a.createElement(\"br\",null),c.a.createElement(\"div\",{style:f},c.a.createElement(h.a,{code:k,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Copy a list\"),c.a.createElement(\"div\",{style:f},c.a.createElement(h.a,{code:w,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"List comprehension\"),c.a.createElement(\"ul\",null,c.a.createElement(\"li\",null,\"A elegant and fast way to create a new list from an existing list.\"),c.a.createElement(\"li\",null,\"List comprehension consists of an expression followed by a for statement inside square brackets.\")),c.a.createElement(\"div\",{style:f},c.a.createElement(h.a,{code:A,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Sets\"),c.a.createElement(\"ul\",null,c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"update() :\"),\"Updates a set with the union of itself and others.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"union() :\"),\"Returns the union of sets in a new set.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"difference() :\"),\"Returns the difference of two or more sets as a new set.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"difference_update() :\"),\"Removes all elements of another set from this set.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"discard() :\"),\"Removes an element from set if it is a member. (Do nothing if the element is not in set).\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"intersection() :\"),\"Returns the intersection of two sets as a new set.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"intersection_update() :\"),\"Updates the set with the intersection of itself and another.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"isdisjoint() :\"),\"Returns True if two sets have a null intersection.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"issubset() :\"),\"Returns True if another set contains this set.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"issuperset() :\"),\"Returns True if this set contains another set.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"symmetric_difference() :\"),\"Returns the symmetric difference of two sets as a new set.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"symmetric_difference_update() :\"),\"Updates a set with the symmetric difference of itself and another.\")),c.a.createElement(\"br\",null),c.a.createElement(\"div\",{style:f},c.a.createElement(h.a,{code:N,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Union and Intersection\"),c.a.createElement(\"b\",null,\"union() :\"),\" combine elements from both sets, no duplication. This does not change the two sets\",c.a.createElement(\"br\",null),c.a.createElement(\"b\",null,\"intersection():\"),\" take elements that are in both sets\",c.a.createElement(\"div\",{style:f},c.a.createElement(h.a,{code:j,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Difference of sets\"),c.a.createElement(\"b\",null,\"difference() :\"),\" returns a set with all the elements from the setA that are not in setB.\",c.a.createElement(\"br\",null),\"A.difference(B) is not the same as B.difference(A)\",c.a.createElement(\"br\",null),c.a.createElement(\"br\",null),c.a.createElement(\"b\",null,\"symmetric_difference() :\"),\" returns a set with all the elements that are in setA and setB but not in both\",c.a.createElement(\"br\",null),\"A.symmetric_difference(B) = B.symmetric_difference(A)\",c.a.createElement(\"br\",null),c.a.createElement(\"div\",{style:f},c.a.createElement(h.a,{code:B,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Updating sets\"),c.a.createElement(\"b\",null,\"update() :\"),\" Update the set by adding elements from another set.\",c.a.createElement(\"br\",null),c.a.createElement(\"br\",null),c.a.createElement(\"b\",null,\"intersection_update() :\"),\" Update the set by keeping only the elements found in both\",c.a.createElement(\"br\",null),c.a.createElement(\"b\",null,\"difference_update() :\"),\" Update the set by removing elements found in another set.\",c.a.createElement(\"br\",null),c.a.createElement(\"b\",null,\"symmetric_difference_update() :\"),\" Update the set by only keeping the elements found in either set, but not in both\",c.a.createElement(\"br\",null),c.a.createElement(\"br\",null),c.a.createElement(\"b\",null,\"Note:\"),\" all update methods also work with other iterables as argument, e.g lists, tuples\",c.a.createElement(\"div\",{style:f},c.a.createElement(h.a,{code:R,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Subset, Superset, and Disjoint\"),c.a.createElement(\"div\",{style:f},c.a.createElement(h.a,{code:T,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Frozenset\"),\"Frozen set is just an immutable version of normal set. While elements of a set can be modified at any time, elements of frozen set remains the same after creation.\",c.a.createElement(\"br\",null),c.a.createElement(\"b\",null,\"my_frozenset = frozenset(iterable)\"),c.a.createElement(\"div\",{style:f},c.a.createElement(h.a,{code:U,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Dictionaries\"),c.a.createElement(\"ul\",null,c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"get() :\"),\"It is a conventional method to access a value for a key.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"dictionary_name.values() :\"),\"returns a list of all the values available in a given dictionary.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"str() :\"),\"Produces a printable string representation of a dictionary.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"update() :\"),\"Adds dictionary dict2\\u2019s key-values pairs to dict.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"setdefault() :\"),\"Set dict[key]=default if key is not already in dict.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"keys() :\"),\"Returns list of dictionary dict\\u2019s keys.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"items() :\"),\"Returns a list of dict\\u2019s (key, value) tuple pairs.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"has_key() :\"),\"Returns true if key in dictionary dict, false otherwise.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"fromkeys() :\"),\"Create a new dictionary with keys from seq and values set to value.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"type() :\"),\"Returns the type of the passed variable.\"),c.a.createElement(\"li\",null,c.a.createElement(\"b\",null,\"cmp() :\"),\"Compares elements of both dict.\")),c.a.createElement(\"br\",null),c.a.createElement(\"div\",{style:f},c.a.createElement(h.a,{code:C,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Check for keys\"),c.a.createElement(\"div\",{style:f},c.a.createElement(h.a,{code:z,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Looping through dictionary\"),c.a.createElement(\"div\",{style:f},c.a.createElement(h.a,{code:L,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Merge two dictionaries\"),\"Use the update() method to merge 2 dicts existing keys are overwritten, new keys are added\",c.a.createElement(\"div\",{style:f},c.a.createElement(h.a,{code:O,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Possible key types\"),\"Any immutable type, like strings or numbers can be used as a key. Also, a tuple can be used if it contains only immutable elements.\",c.a.createElement(\"br\",null),c.a.createElement(\"br\",null),\"do not mistake the keys as indices of a list, e.g my_dict[0] is not possible here\",c.a.createElement(\"div\",{style:f},c.a.createElement(h.a,{code:M,language:\"js\",plugins:[\"line-numbers\"]}))))))}}]),t}(m.Component);t.default=Object(y.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:\"center\"}}}))(P)}}]);","extractedComments":[]}