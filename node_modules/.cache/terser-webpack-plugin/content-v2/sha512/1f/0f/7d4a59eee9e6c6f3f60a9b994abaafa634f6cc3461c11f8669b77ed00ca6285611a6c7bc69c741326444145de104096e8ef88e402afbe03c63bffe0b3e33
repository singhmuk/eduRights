{"map":{"version":3,"sources":["static/js/51.9ea2a770.chunk.js"],"names":["this","push","344","module","__webpack_exports__","__webpack_require__","d","Sidebar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_MenuList__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__","useStyles","Object","theme","root","display","paper","marginRight","spacing","line","textDecoration","classes","a","createElement","className","to","476","r","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_5___default","prismjs__WEBPACK_IMPORTED_MODULE_6__","prismjs__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","_sidebar__WEBPACK_IMPORTED_MODULE_12__","_ReactJs_prismCode__WEBPACK_IMPORTED_MODULE_13__","titles","backgroundColor","padding","fontSize","childsFile","trim","flowers","opencv","split","images","Transfer","_Component","apply","arguments","key","value","setTimeout","highlightAll","props","container","item","xs","style","code","language","plugins","margin","smMargin","actionDiv","textAlign"],"mappings":"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"},"code":"(this[\"webpackJsonpmern-stack-client\"]=this[\"webpackJsonpmern-stack-client\"]||[]).push([[51],{344:function(e,a,n){\"use strict\";n.d(a,\"a\",(function(){return c}));var t=n(0),l=n.n(t),r=n(12),s=n(14),i=n(50),o=n(49),m=Object(o.a)((function(e){return{root:{display:\"flex\"},paper:{marginRight:e.spacing(2)},line:{textDecoration:\"none\"}}}));function c(){var e=m();return l.a.createElement(\"div\",{className:e.root},l.a.createElement(i.a,null,l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/introAngular\",className:e.line},\"AI\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/tensorflow\",className:e.line},\"Tensorflow\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/tensors\",className:e.line},\"Tensorboards\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/angCompiler\",className:e.line},\"Compiler\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/neural\",className:e.line},\"NeuralKeras\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/activationFunctions\",className:e.line},\"activationFuncs\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/loss\",className:e.line},\"Loss\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/gradientNeural\",className:e.line},\"GradientNeural\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/stochastic\",className:e.line},\"Stochastic\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/benchmarking\",className:e.line},\"Benchmarking\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/customer\",className:e.line},\"Customer\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/regularizationDeep\",className:e.line},\"Regularization Deep\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/imbalanced\",className:e.line},\"Imbalanced\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/imbalanced2\",className:e.line},\"Imbalanced2\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/convolutionals\",className:e.line},\"Convolutionals\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/data_augmentation\",className:e.line},\"data Augmentation\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/transfer\",className:e.line},\"Transfer\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/word_embedding\",className:e.line},\"Embedding\"))),l.a.createElement(\"div\",null))}},476:function(e,a,n){\"use strict\";n.r(a);var t=n(4),l=n(3),r=n(5),s=n(6),i=n(8),o=n(0),m=n.n(o),c=n(7),d=n.n(c),u=n(2),p=n(9),g=n(13),_=n(11),f=(n(16),n(344)),E=n(1),b={backgroundColor:\"#F0F8FF\",padding:\"1px\",fontSize:\"16px\"},h='\\nimport numpy as np\\nimport cv2\\nimport PIL.Image as Image\\nimport os\\nimport matplotlib.pylab as plt\\nimport tensorflow as tf\\nimport tensorflow_hub as hub\\nfrom tensorflow import keras\\nfrom tensorflow.keras import layers\\nfrom tensorflow.keras.models import Sequential\\n\\n\\nIMAGE_SHAPE = (224, 224)                                      #Make predictions using ready made model (without training).\\n\\nclassifier = tf.keras.Sequential([\\n    hub.KerasLayer(\"https://tfhub.dev/google/tf2-preview/mobilenet_v2/classification/4\", input_shape=IMAGE_SHAPE+(3,))\\n])\\n\\ngold_fish = Image.open(\"goldfish.jpg\").resize(IMAGE_SHAPE)\\ngold_fish = np.array(gold_fish)/255.0\\n\\ngold_fish[np.newaxis, ...]\\nresult = classifier.predict(gold_fish[np.newaxis, ...])\\n\\npredicted_label_index = np.argmax(result)\\npredicted_label_index\\n\\n# tf.keras.utils.get_file(\\'ImageNetLabels.txt\\',\\n#                         \\'https://storage.googleapis.com/download.tensorflow.org/data/ImageNetLabels.txt\\')\\nimage_labels = []\\nwith open(\"ImageNetLabels.txt\", \"r\") as f:\\n    image_labels = f.read().splitlines()\\nimage_labels[:5]\\n\\nimage_labels[predicted_label_index]\\n'.trim(),w=\"\\ndataset_url = \\\"https://storage.googleapis.com/download.tensorflow.org/example_images/flower_photos.tgz\\\"\\ndata_dir = tf.keras.utils.get_file('flower_photos', origin=dataset_url,  cache_dir='.', untar=True)\\n\\ndata_dir\\n\\nimport pathlib\\ndata_dir = pathlib.Path(data_dir)\\n\\nlist(data_dir.glob('*/*.jpg'))[:5]\\nimage_count = len(list(data_dir.glob('*/*.jpg')))\\nprint(image_count)\\n\\nroses = list(data_dir.glob('roses/*'))\\nroses[:5]\\n\\nPIL.Image.open(str(roses[1]))\\n\\ntulips = list(data_dir.glob('tulips/*'))\\nPIL.Image.open(str(tulips[0]))\\n\".trim(),y=\"\\nflowers_images_dict = {\\n  'roses': list(data_dir.glob('roses/*')),\\n  'daisy': list(data_dir.glob('daisy/*')),\\n  'dandelion': list(data_dir.glob('dandelion/*')),\\n  'sunflowers': list(data_dir.glob('sunflowers/*')),\\n  'tulips': list(data_dir.glob('tulips/*')),\\n}\\n\\nflowers_labels_dict = {\\n  'roses': 0,\\n  'daisy': 1,\\n  'dandelion': 2,\\n  'sunflowers': 3,\\n  'tulips': 4,\\n}\\n\\nflowers_images_dict['roses'][:5]\\nstr(flowers_images_dict['roses'][0])\\n\\nimg = cv2.imread(str(flowers_images_dict['roses'][0]))\\ncv2.resize(img,(224,224)).shape\\nX, y = [], []\\n\\nfor flower_name, images in flowers_images_dict.items():\\n    for image in images:\\n        img = cv2.imread(str(image))\\n        resized_img = cv2.resize(img,(224,224))\\n        X.append(resized_img)\\n        y.append(flowers_labels_dict[flower_name])\\n        \\nX = np.array(X)\\ny = np.array(y)\\n\".trim(),v=\"\\nfrom sklearn.model_selection import train_test_split\\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)\\n\\nX_train_scaled = X_train / 255\\nX_test_scaled = X_test / 255\\n\\n\\nX[0].shape                                                #Make prediction using pre-trained model on new flowers dataset.\\nIMAGE_SHAPE+(3,)\\n\\nx0_resized = cv2.resize(X[0], IMAGE_SHAPE)\\nx1_resized = cv2.resize(X[1], IMAGE_SHAPE)\\nx2_resized = cv2.resize(X[2], IMAGE_SHAPE)\\n\\nplt.axis('off')\\nplt.imshow(X[0])\\n\\nplt.axis('off')\\nplt.imshow(X[1])\\n\\nplt.axis('off')\\nplt.imshow(X[2])\\n\\npredicted = classifier.predict(np.array([x0_resized, x1_resized, x2_resized]))\\npredicted = np.argmax(predicted, axis=1)\\npredicted\\n\\nimage_labels[795]\\n\".trim(),x='\\nfeature_extractor_model = \"https://tfhub.dev/google/tf2-preview/mobilenet_v2/feature_vector/4\"\\n\\npretrained_model_without_top_layer = hub.KerasLayer(\\n    feature_extractor_model, input_shape=(224, 224, 3), trainable=False)\\n    \\nnum_of_flowers = 5\\nmodel = tf.keras.Sequential([pretrained_model_without_top_layer, tf.keras.layers.Dense(num_of_flowers)])\\n\\nmodel.summary()\\n\\n\\nmodel.compile(\\n  optimizer=\"adam\",\\n  loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),\\n  metrics=[\\'acc\\'])\\n\\nmodel.fit(X_train_scaled, y_train, epochs=5)\\n\\nmodel.evaluate(X_test_scaled,y_test)\\n'.trim(),N=function(e){function a(){return Object(t.a)(this,a),Object(r.a)(this,Object(s.a)(a).apply(this,arguments))}return Object(i.a)(a,e),Object(l.a)(a,[{key:\"componentDidMount\",value:function(){setTimeout((function(){return d.a.highlightAll()}),0)}},{key:\"render\",value:function(){var e=this.props.classes;return m.a.createElement(u.a,{container:!0},m.a.createElement(u.a,{item:!0,xs:2},m.a.createElement(p.a,{className:e.paper},m.a.createElement(\"h4\",null,m.a.createElement(f.a,null)))),m.a.createElement(u.a,{item:!0,xs:10},m.a.createElement(p.a,{className:e.paper},m.a.createElement(g.a,null,m.a.createElement(\"h3\",null,\"Transfer learning in image classification\"),\"We will use transfer learning and take pre-trained model from google's Tensorflow Hub and re-train that on flowers dataset.\",m.a.createElement(\"br\",null),m.a.createElement(\"br\",null),m.a.createElement(\"div\",{style:b},m.a.createElement(E.a,{code:h,language:\"js\",plugins:[\"line-numbers\"]})),m.a.createElement(\"br\",null),m.a.createElement(\"h3\",null,\"Load flowers dataset\"),m.a.createElement(\"i\",null,\"cache_dir indicates where to download data.\"),m.a.createElement(\"br\",null),m.a.createElement(\"div\",{style:b},m.a.createElement(E.a,{code:w,language:\"js\",plugins:[\"line-numbers\"]})),m.a.createElement(\"br\",null),m.a.createElement(\"h3\",null,\"Read flowers images from disk into numpy array using opencv\"),m.a.createElement(\"div\",{style:b},m.a.createElement(E.a,{code:y,language:\"js\",plugins:[\"line-numbers\"]})),m.a.createElement(\"br\",null),m.a.createElement(\"h3\",null,\"Train test split\"),m.a.createElement(\"div\",{style:b},m.a.createElement(E.a,{code:v,language:\"js\",plugins:[\"line-numbers\"]})),m.a.createElement(\"br\",null),m.a.createElement(\"h3\",null,\"Now take pre-trained model and retrain it using flowers images\"),m.a.createElement(\"div\",{style:b},m.a.createElement(E.a,{code:x,language:\"js\",plugins:[\"line-numbers\"]}))))))}}]),a}(o.Component);a.default=Object(_.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:\"center\"}}}))(N)}}]);","extractedComments":[]}