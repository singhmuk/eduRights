{"map":{"version":3,"sources":["static/js/120.4b443c6b.chunk.js"],"names":["this","push","460","module","__webpack_exports__","__webpack_require__","r","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_5___default","n","prismjs__WEBPACK_IMPORTED_MODULE_6__","prismjs__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","_sidebar__WEBPACK_IMPORTED_MODULE_12__","_ReactJs_prismCode__WEBPACK_IMPORTED_MODULE_13__","titles","backgroundColor","padding","fontSize","threeSumClosest","trim","firstMissingPositive","largestNumber","maxSubArray","searchInsert","maximumGap","getFactors","addTwoNumbers","DSLogic7","_Component","Object","apply","arguments","key","value","setTimeout","a","highlightAll","classes","props","createElement","container","item","xs","className","paper","style","code","language","plugins","theme","margin","spacing","smMargin","actionDiv","textAlign"],"mappings":"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"},"code":"(this[\"webpackJsonpmern-stack-client\"]=this[\"webpackJsonpmern-stack-client\"]||[]).push([[120],{460:function(n,e,t){\"use strict\";t.r(e);var a=t(4),l=t(3),r=t(5),i=t(6),u=t(8),s=t(0),m=t.n(s),c=t(7),o=t.n(c),g=t(2),d=t(9),h=t(13),b=t(11),f=(t(16),t(23)),E=t(1),p=(t(44),{backgroundColor:\"#F0F8FF\",padding:\"1px\",fontSize:\"16px\"}),x=\"\\nfunction threeSumClosest(nums, target) {\\n  let diff = Infinity;\\n  let result = 0;\\n  nums.sort((a, b) => a - b);\\n\\n  for (let i = 0; i < nums.length; i++) {\\n    let left = i + 1;\\n    let right = nums.length - 1;\\n    while (left < right) {\\n      const sum = nums[i] + nums[left] + nums[right];\\n      const currentDiff = sum - target;\\n\\n      if (currentDiff > 0) {\\n        right -= 1;\\n      } else {\\n        left += 1;\\n      }\\n      if (Math.abs(currentDiff) < diff) {\\n        result = sum;\\n      }\\n      diff = Math.min(Math.abs(currentDiff), diff);\\n    }\\n  }\\n  return result;\\n}\\n\\nconsole.log(threeSumClosest([-1,2,1,-4]))\\n\".trim(),v=\"\\nfunction firstMissingPositive(nums = []){\\n  function swap(a, b){\\n    const temp = nums[a]\\n    nums[a] = nums[b]\\n    nums[b] = temp\\n  }\\n\\n  let index = 0\\n  while (index < nums.length) {\\n    if (nums[index] !== nums[nums[index] - 1] && nums[index] > 0 && nums[index] <= nums.length){\\n          swap(index, nums[index] - 1)\\n      } else {\\n          index += 1\\n      }\\n   }\\n\\n  for (let i=0; i<nums.length; i++) {\\n    if (nums[i] !== i + 1) return i + 1;\\n  }\\n  return nums.length + 1\\n}\\n\\nconsole.log(firstMissingPositive([3,4,-1,1]))\\n\".trim(),w=\"\\nfunction largestNumber(nums = []) {\\n  nums.sort((a, b) => {\\n    const digitsA = a.toString(10) + b.toString(10);\\n    const digitsB = b.toString(10) + a.toString(10);\\n\\n    for (let i = 0; i < digitsA.length; i++) {\\n      const digitB = parseInt(digitsB[i], 10);\\n      const digitA = parseInt(digitsA[i], 10);\\n\\n      if (digitB > digitA || digitB < digitA) return digitB - digitA;\\n    }\\n    return 0\\n  })\\n  \\n  const result = nums.join('')\\n  return result[0] === '0' ? '0' : result\\n}\\n\\nconsole.log(largestNumber([10,2]))\\n\".trim(),y=\"\\nfunction maxSubArray(nums){\\n  let max = -Infinity;\\n  let currentMax = -Infinity;\\n\\n  for (let i=0; i<nums.length; i++) {\\n    currentMax = Math.max(\\n      currentMax + nums[i],\\n      nums[i],\\n    )\\n    max = Math.max(max, currentMax)\\n  }\\n  return max\\n}\\n\\nconsole.log(maxSubArray([-2,1,-3,4,-1,2,1,-5,4]))\\n\".trim(),M=\"\\nfunction searchInsert(nums, target){\\n  function aux(low, high){\\n    if (low > high) return low;\\n\\n    const middle = Math.floor((low + high) / 2)\\n    \\n    if (target === nums[middle]) {\\n      return middle\\n    } if (target > nums[middle]) {\\n      return aux(middle + 1, high)\\n    }\\n    return aux(low, middle - 1)\\n  }\\n  return aux(0, nums.length - 1)\\n}\\n\\nconsole.log(searchInsert([1,3,5,6], 5))\\n\".trim(),j=\"\\nfunction maximumGap(nums = []) {\\n  const maxValue = Math.max(...nums)\\n\\n  function countingSort(place){\\n    const count = []\\n    nums.forEach((num) => {\\n      const index = Math.floor(num / place) % 10\\n      count[index] = count[index] || []\\n      count[index].push(num)\\n    })\\n    return count.reduce((acc, v) => {\\n      if (v !== undefined) {\\n        acc = acc.concat(v)\\n      }\\n      return acc\\n    }, [])\\n  }\\n\\n  let place = 1\\n  while (Math.floor(maxValue / place) > 0) {\\n    nums = countingSort(place)\\n    place *= 10\\n  }\\n  let max = 0\\n  for (let i = 1; i < nums.length; i++) {\\n    max = Math.max(max, nums[i] - nums[i - 1])\\n  }\\n  return max\\n}\\n\\nconsole.log(maximumGap([3,6,9,1]))\\n\".trim(),I=\"\\nfunction getFactors(n){\\n  const result = [];\\n\\n  function aux(remain, start = 2, current = []){\\n    if (remain === 1) {\\n      if (current.length > 1) {\\n        result.push([...current])\\n      }\\n      return\\n    }\\n    \\n    for (let i = start; i <= remain; i++) {\\n      if (remain % i === 0) {\\n        current.push(i)\\n        aux(remain / i, i, current)\\n        current.pop()\\n      }\\n    }\\n  }\\n  aux(n)\\n  return result\\n}\\n\\nconsole.log(getFactors(345))\\n\".trim(),S=\"\\nfunction ListNode(val) {\\n  this.val = val\\n  this.next = null\\n}\\n\\nconst addTwoNumbers = (l1, l2) => {\\n  let h1 = l1\\n  let h2 = l2\\n  let digit = 0\\n  let head = null\\n  let current = null\\n  while (h1 || h2) {\\n    const num1 = h1 ? h1.val : 0\\n    const num2 = h2 ? h2.val : 0\\n    let value = num1 + num2 + digit\\n    if (value >= 10) {\\n      value -= 10\\n      digit = 1\\n    } else {\\n      digit = 0\\n    }\\n    h1 = h1 ? h1.next : null\\n    h2 = h2 ? h2.next : null\\n    const node = new ListNode(value)\\n    if (!head) {\\n      head = node\\n      current = node\\n    } else {\\n      current.next = node\\n      current = node\\n    }\\n  }\\n  if (digit === 1) {\\n    current.next = new ListNode(1)\\n  }\\n  return head\\n}\\n\\nconsole.log(addTwoNumbers())\".trim(),A=function(n){function e(){return Object(a.a)(this,e),Object(r.a)(this,Object(i.a)(e).apply(this,arguments))}return Object(u.a)(e,n),Object(l.a)(e,[{key:\"componentDidMount\",value:function(){setTimeout((function(){return o.a.highlightAll()}),0)}},{key:\"render\",value:function(){var n=this.props.classes;return m.a.createElement(g.a,{container:!0},m.a.createElement(g.a,{item:!0,xs:2},m.a.createElement(d.a,{className:n.paper},m.a.createElement(\"h4\",null,m.a.createElement(f.a,null)))),m.a.createElement(g.a,{item:!0,xs:10},m.a.createElement(d.a,{className:n.paper},m.a.createElement(h.a,null,m.a.createElement(\"h3\",null,\"1. 3 Sum Closest\"),\"Given an array nums of n integers and an integer target, find three integers in nums such that the sum is closest to target. Return the sum of the three integers. You may assume that each input would have exactly one solution.\",m.a.createElement(\"br\",null),m.a.createElement(\"br\",null),m.a.createElement(\"b\",null,\"Ex. \"),m.a.createElement(\"b\",null,\"Input: \"),\"nums = [-1,2,1,-4], target = 1\",m.a.createElement(\"br\",null),m.a.createElement(\"b\",null,\"Output: \"),\"2\",m.a.createElement(\"br\",null),m.a.createElement(\"b\",null,\"Explanation: \"),\"The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).\",m.a.createElement(\"div\",{style:p},m.a.createElement(E.a,{code:x,language:\"js\",plugins:[\"line-numbers\"]})),m.a.createElement(\"br\",null),m.a.createElement(\"h3\",null,\"2. First Missing Positive.\"),m.a.createElement(\"b\",null,\"Input: \"),\"[3,4,-1,1]\",m.a.createElement(\"br\",null),m.a.createElement(\"b\",null,\"Output: \"),\"2\",m.a.createElement(\"div\",{style:p},m.a.createElement(E.a,{code:v,language:\"js\",plugins:[\"line-numbers\"]})),m.a.createElement(\"br\",null),m.a.createElement(\"h3\",null,\"3. Largest Number.\"),\"Given a list of non negative integers, arrange them such that they form the largest number.\",m.a.createElement(\"div\",{style:p},m.a.createElement(E.a,{code:w,language:\"js\",plugins:[\"line-numbers\"]})),m.a.createElement(\"br\",null),m.a.createElement(\"h3\",null,\"4. Maximum Subarray.\"),m.a.createElement(\"b\",null,\"Input: \"),\"nums = [-2,1,-3,4,-1,2,1,-5,4]\",m.a.createElement(\"br\",null),m.a.createElement(\"b\",null,\"Output: \"),\"6\",m.a.createElement(\"br\",null),m.a.createElement(\"b\",null,\"Explanation: \"),\"[4,-1,2,1] has the largest sum = 6.\",m.a.createElement(\"div\",{style:p},m.a.createElement(E.a,{code:y,language:\"js\",plugins:[\"line-numbers\"]})),m.a.createElement(\"br\",null),m.a.createElement(\"h3\",null,\"5. Search Insert Position.\"),\"Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.\",m.a.createElement(\"br\",null),m.a.createElement(\"b\",null,\"Input: \"),\"[1,3,5,6], 5\",m.a.createElement(\"br\",null),m.a.createElement(\"b\",null,\"Output: \"),\"2\",m.a.createElement(\"br\",null),m.a.createElement(\"br\",null),m.a.createElement(\"b\",null,\"Example 2:\"),m.a.createElement(\"br\",null),m.a.createElement(\"b\",null,\"Input: \"),\"[1,3,5,6], 2\",m.a.createElement(\"br\",null),m.a.createElement(\"b\",null,\"Output: \"),\"1\",m.a.createElement(\"div\",{style:p},m.a.createElement(E.a,{code:M,language:\"js\",plugins:[\"line-numbers\"]})),m.a.createElement(\"br\",null),m.a.createElement(\"h3\",null,\"6. Maximum Gap.\"),m.a.createElement(\"div\",{style:p},m.a.createElement(E.a,{code:j,language:\"js\",plugins:[\"line-numbers\"]})),m.a.createElement(\"br\",null),m.a.createElement(\"h3\",null,\"7. Factor Combinations.\"),m.a.createElement(\"div\",{style:p},m.a.createElement(E.a,{code:I,language:\"js\",plugins:[\"line-numbers\"]})),m.a.createElement(\"br\",null),m.a.createElement(\"h3\",null,\"8. Add Two Numbers.\"),\"You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.\",m.a.createElement(\"br\",null),\"You may assume the two numbers do not contain any leading zero, except the number 0 itself.\",m.a.createElement(\"br\",null),m.a.createElement(\"b\",null,\"Example: \"),m.a.createElement(\"b\",null,\"Input: \"),\"(2  4  3) + (5  6  4)\",m.a.createElement(\"br\",null),m.a.createElement(\"b\",null,\"Output: \"),\"7  0  8\",m.a.createElement(\"br\",null),m.a.createElement(\"b\",null,\"Explanation: \"),\"342 + 465 = 807.\",m.a.createElement(\"div\",{style:p},m.a.createElement(E.a,{code:S,language:\"js\",plugins:[\"line-numbers\"]}))))))}}]),e}(s.Component);e.default=Object(b.a)((function(n){return{paper:{margin:n.spacing(1),padding:n.spacing(1)},smMargin:{margin:n.spacing(1)},actionDiv:{textAlign:\"center\"}}}))(A)}}]);","extractedComments":[]}