{"map":{"version":3,"sources":["static/js/89.bb9afcbf.chunk.js"],"names":["this","push","140","module","__webpack_exports__","__webpack_require__","d","PrismCode","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_5___default","n","prismjs__WEBPACK_IMPORTED_MODULE_6__","prismjs__WEBPACK_IMPORTED_MODULE_6___default","_React$Component","props","_this","Object","call","highlight","ref","current","a","highlightElement","createRef","key","value","_this$props","code","language","plugins","createElement","className","concat","trim","Component","141","exports","153","Sidebar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_MenuList__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__","useStyles","theme","root","display","paper","marginRight","spacing","line","textDecoration","classes","to","339","r","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","_sidebar__WEBPACK_IMPORTED_MODULE_12__","_ReactJs_prismCode__WEBPACK_IMPORTED_MODULE_13__","titles","backgroundColor","padding","fontSize","actions","reducers","comp","servers","MernRedux","_Component","apply","arguments","setTimeout","highlightAll","container","item","xs","style","margin","smMargin","actionDiv","textAlign"],"mappings":"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"},"code":"(this[\"webpackJsonpmern-stack-client\"]=this[\"webpackJsonpmern-stack-client\"]||[]).push([[89],{140:function(e,n,t){\"use strict\";t.d(n,\"a\",(function(){return m}));var r=t(45),s=t(28),a=t(136),i=t(137),o=t(139),d=t(0),c=t.n(d),l=t(138),p=t.n(l),m=(t(59),function(e){function n(e){var t;return Object(r.a)(this,n),(t=Object(a.a)(this,Object(i.a)(n).call(this,e))).highlight=function(){t.ref&&t.ref.current&&p.a.highlightElement(t.ref.current)},t.ref=c.a.createRef(),t}return Object(o.a)(n,e),Object(s.a)(n,[{key:\"componentDidMount\",value:function(){this.highlight()}},{key:\"componentDidUpdate\",value:function(){this.highlight()}},{key:\"render\",value:function(){var e=this.props,n=e.code,t=(e.plugins,e.language);return c.a.createElement(\"pre\",{className:\"code-prism\"},c.a.createElement(\"code\",{ref:this.ref,className:\"language-\".concat(t)},n.trim()))}}]),n}(c.a.Component))},141:function(e,n,t){},153:function(e,n,t){\"use strict\";t.d(n,\"a\",(function(){return l}));var r=t(0),s=t.n(r),a=t(26),i=t(297),o=t(295),d=t(114),c=Object(d.a)((function(e){return{root:{display:\"flex\"},paper:{marginRight:e.spacing(2)},line:{textDecoration:\"none\"}}}));function l(){var e=c();return s.a.createElement(\"div\",{className:e.root},s.a.createElement(o.a,null,s.a.createElement(i.a,null,s.a.createElement(a.b,{to:\"/introRedux\",className:e.line},\"Intro\")),s.a.createElement(i.a,null,s.a.createElement(a.b,{to:\"/counter\",className:e.line},\"Counter Select\")),s.a.createElement(i.a,null,s.a.createElement(a.b,{to:\"/reduxState\",className:e.line},\"Redux State-Curd\")),s.a.createElement(i.a,null,s.a.createElement(a.b,{to:\"/reduxMethods\",className:e.line},\"Redux Methods\")),s.a.createElement(i.a,null,s.a.createElement(a.b,{to:\"/react_redux\",className:e.line},\"Filter\")),s.a.createElement(i.a,null,s.a.createElement(a.b,{to:\"/reduxCurd\",className:e.line},\"Redux Curd\")),s.a.createElement(i.a,null,s.a.createElement(a.b,{to:\"/expenseTraMern\",className:e.line},\"ReactCurdPlaceholder\")),s.a.createElement(i.a,null,s.a.createElement(a.b,{to:\"/contactKeeperApi\",className:e.line},\"ReactReduxCurdPlaceholder\")),s.a.createElement(i.a,null,s.a.createElement(a.b,{to:\"/mernRedux\",className:e.line},\"Mern Redux\")),s.a.createElement(i.a,null,s.a.createElement(a.b,{to:\"/signUp\",className:e.line},\"SignUP\")),s.a.createElement(i.a,null,s.a.createElement(a.b,{to:\"/git\",className:e.line},\"Git\")),s.a.createElement(i.a,null,s.a.createElement(a.b,{to:\"/gitConcepts\",className:e.line},\"Git Concepts\")),s.a.createElement(i.a,null,s.a.createElement(a.b,{to:\"/skills\",className:e.line},\"Skills\")),s.a.createElement(i.a,null,s.a.createElement(a.b,{to:\"/comskills\",className:e.line},\"Comskills\")),s.a.createElement(i.a,null,s.a.createElement(a.b,{to:\"/techskills\",className:e.line},\"Techskills\")),s.a.createElement(i.a,null,s.a.createElement(a.b,{to:\"/techinto\",className:e.line},\"TechsInto\"))),s.a.createElement(\"div\",null))}},339:function(e,n,t){\"use strict\";t.r(n);var r=t(45),s=t(28),a=t(136),i=t(137),o=t(139),d=t(0),c=t.n(d),l=t(138),p=t.n(l),m=t(120),u=t(57),h=t(296),y=t(5),E=(t(141),t(153)),f=t(140),g={backgroundColor:\"#F0F8FF\",padding:\"1px\",fontSize:\"16px\"},b=\"\\n//actions/types.js\\nexport const NEW_ENTRY = 'NEW_ENTRY';\\nexport const LIST = 'LIST';\\nexport const UPDATE_ENTRY = 'UPDATE_ENTRY';\\nexport const DELETE_ENTRY = 'DELETE_ENTRY';\\nexport const LIST_BY_ID = 'LIST_BY_ID';\\n\\n\\n//actions/index.js\\nimport axios from 'axios';\\nimport { NEW_ENTRY, LIST, UPDATE_ENTRY, DELETE_ENTRY, LIST_BY_ID } from './types';\\n\\n\\nexport function newDirectoryEntry( fields ){\\n   const request = axios.post('/create', fields );\\n   return {\\n      type: NEW_ENTRY,\\n      payload: request\\n   }\\n}\\n\\nexport function directoryList(){\\n   const request = axios.get('/read');\\n   return {\\n      type: LIST,\\n      payload: request\\n   }\\n}\\n\\n/* Retrieve a single record by  id */\\nexport function directoryListById( id ){\\n   const request = axios.get('/readbyid/', { params: { id: id } });\\n   return {\\n      type: LIST_BY_ID,\\n      payload: request\\n   }\\n}\\n\\nexport function updateDirectoryEntry( fields ){\\n   const request = axios.put('/update', fields );\\n   return {\\n      type: UPDATE_ENTRY,\\n      payload: request\\n   }\\n}\\n\\nexport function deleteDirectoryEntry( entryid ){\\n   const request = axios.delete('/delete', { params : { entryid: entryid } } );\\n   return {\\n      type: DELETE_ENTRY,\\n      payload: request\\n   }\\n}\\n\".trim(),v=\"\\n//reducers/index.js\\nimport { NEW_ENTRY, LIST, UPDATE_ENTRY, DELETE_ENTRY, LIST_BY_ID } from '../actions/types';\\n\\n\\nexport default function( state = [], action ) {\\n    switch(action.type){\\n      case NEW_ENTRY:\\n        return { ...state, directory: action.payload };\\n      case LIST:\\n        return { ...state, directory: action.payload };\\n      case LIST_BY_ID:\\n        return { ...state, directory: action.payload };\\n      case UPDATE_ENTRY:\\n        return { ...state, directory: action.payload };\\n      case DELETE_ENTRY:\\n        return { ...state, directory: action.payload };\\n      default:\\n        return state;\\n    }\\n}\\n\".trim(),_=\"\\n//components/form.js\\nimport React, { Component } from 'react';\\nimport { Redirect } from 'react-router-dom'\\nimport { connect } from 'react-redux';\\nimport { bindActionCreators } from 'redux';\\nimport { Formik, Field, Form } from 'formik';\\nimport Yup from 'yup';\\nimport { updateDirectoryEntry, newDirectoryEntry } from '../actions/index';\\n\\nconst validationSchema = Yup.object().shape({\\n    name: Yup.string().required('Business name is required!'),\\n    description: Yup.string().required('Business description is required!'),\\n    phone: Yup.string().required('Phone is required!'),\\n    email_address: Yup.string().email('Invalid email address!').required('Email address is required!'),\\n    physical_address: Yup.string().required('Physical address is required!'),\\n});\\n\\nclass form extends Component {\\n   constructor(props){\\n      super(props);\\n      this.state = { id: typeof this.props.row._id !== 'undefined' ? this.props.row._id : '', \\n      name: typeof this.props.row.name !== 'undefined' ? this.props.row.name : '', \\n      description: typeof this.props.row.description !== 'undefined' ? this.props.row.description : '', \\n      phone: typeof this.props.row.phone !== 'undefined' ? this.props.row.phone : '', \\n      email_address: typeof this.props.row.email_address !== 'undefined' ? this.props.row.email_address : '', \\n      physical_address: typeof this.props.row.physical_address !== 'undefined' ? this.props.row.physical_address : '', \\n      redirect: false \\n      }\\n   }\\n   async createUpdateRecord(values){\\n      let results;\\n      if( this.props.mode === 'edit' ) {\\n        results = await this.props.updateDirectoryEntry(values);\\n        if( results.payload.data.response === 'success' ) {\\n            this.setState({ redirect: true });\\n        } else {\\n            console.log(results.payload.data.response);\\n        }\\n      } else {\\n        results = await this.props.newDirectoryEntry(values);\\n        if( results.payload.data.response === 'success' ) {\\n            this.setState({ redirect: true });\\n        } else {\\n            console.log(results.payload.data.response);\\n        }\\n      }\\n   }\\n   render(){\\n      if( this.state.redirect ) {\\n          return (\\n            <Redirect to=\\\"/\\\" />\\n          );\\n      }\\n      return(\\n         <div>\\n           <Formik\\n             initialValues={{\\n               name: this.state.name,\\n               description: this.state.description,\\n               phone: this.state.phone,\\n               email_address: this.state.email_address,\\n               physical_address: this.state.physical_address,\\n               id: this.state.id\\n             }}\\n             validationSchema={validationSchema}\\n             onSubmit={ values => {\\n                this.createUpdateRecord(values);\\n             }}\\n             render={({ errors, touched }) => (\\n               <Form>\\n                 <div>\\n                   <div>\\n                   <h2>{ this.props.mode === 'edit' ? 'Edit Entry' : 'New Entry' }</h2>\\n                   </div>\\n                 </div> \\n                 <div>\\n                   <div className={''$'{errors.name && touched.name && 'has-error'}'}>\\n                     <p>Business Name</p>\\n                     <Field name=\\\"name\\\" type=\\\"text\\\" />\\n                   </div>\\n                   <div className={''$'{errors.description && touched.description && 'has-error'}'}>\\n                     <p>Business Description</p>\\n                     <Field name=\\\"description\\\" type=\\\"text\\\" />\\n                      { errors.description && touched.description && <span>{errors.description}</span> }\\n                   </div>\\n                 </div>\\n                 <div className=\\\"row\\\">\\n                   <div className={''$'{errors.phone && touched.phone && 'has-error'}'}>\\n                     <p>Phone</p>\\n                     <Field name=\\\"phone\\\" type=\\\"text\\\" />\\n                      { errors.phone && touched.phone && <span>{errors.phone}</span> }\\n                   </div>\\n                   <div className={''$'{errors.email_address && touched.email_address && 'has-error'}'}>\\n                     <p>Email Address</p>\\n                     <Field name=\\\"email_address\\\" type=\\\"text\\\" />\\n                      { errors.email_address && touched.email_address && <span>{errors.email_address}</span> }\\n                   </div>\\n                 </div>\\n                 <div className=\\\"row\\\">\\n                   <div className={''$'{errors.physical_address && touched.physical_address && 'has-error'}'}>\\n                     <p>Physical Address</p>\\n                     <Field name=\\\"physical_address\\\" type=\\\"text\\\" />\\n                      { errors.physical_address && touched.physical_address && <span>{errors.physical_address}</span> }\\n                   </div>\\n                 </div> \\n                 <div>\\n                   <div>\\n                      <button>Submit</button>\\n                   </div>\\n                 </div>\\n               </Form>\\n             )} />\\n         </div>\\n      );\\n   }\\n}\\n\\nconst mapStateToDispatch = (dispatch) => {\\n  return bindActionCreators({ updateDirectoryEntry, newDirectoryEntry }, dispatch);\\n};\\n\\nexport default connect(null, mapStateToDispatch)(form);\\n\\n\\n\\n//components/list.js\\nimport React, { Component } from 'react';\\nimport { bindActionCreators } from 'redux';\\nimport { connect } from 'react-redux';\\nimport { deleteDirectoryEntry, directoryList } from '../actions/index';\\nimport { Link } from \\\"react-router-dom\\\";\\n\\nclass List extends Component {\\n   constructor(props){\\n     super(props);\\n     this.state = { list: [] };\\n     this.confirmDelete = this.confirmDelete.bind(this);\\n   }\\n   async getAList() {\\n     let results = await this.props.directoryList();\\n     this.setState({ list : results.payload.data });\\n   }\\n   componentDidMount(){\\n     this.getAList();\\n   }\\n   async confirmDelete(e){\\n     if ( window.confirm('Are you sure you wish to delete this item?') ) {\\n          let results = await this.props.deleteDirectoryEntry(e.target.id);\\n          if( results.payload.data.response === 'success' ) {\\n              this.getAList();\\n          }\\n     }\\n   }\\n   displayAList(){\\n     if( Object.keys(this.state.list).length > 0 ) {\\n         const row = this.state.list.map( ( item, i ) => {\\n            let rowNumber = i + 1;\\n            return <tr key={i}><th scope=\\\"row\\\">{rowNumber}</th><td>{item.name}</td><td>{item.description}</td>\\n            <td>{item.phone}</td>\\n            <td>{item.email_address}</td><td>{item.physical_address}</td>\\n            <td><Link className=\\\"btn btn-warning\\\" to={\\\"/edit/\\\"+item._id}>Edit</Link>&nbsp;\\n            <Link id={item._id} onClick={this.confirmDelete} to=\\\"/\\\">Delete</Link></td></tr>\\n         });\\n         return (\\n            <table className=\\\"table\\\">\\n              <thead>\\n                <tr>\\n                  <th>#</th>\\n                  <th>Name</th>\\n                  <th>Description</th>\\n                  <th>Phone</th>\\n                  <th>Email</th>\\n                  <th>Address</th>\\n                  <th>Edit / Delete</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                { row }\\n              </tbody>\\n            </table>\\n         );\\n     } else {\\n         return <p><em>There are no listings at the moment.</em></p>;\\n     }\\n   }\\n   render(){\\n      return(\\n        <div>\\n          <h2>Listings</h2>\\n          { this.displayAList() }\\n        </div> \\n      );\\n   }\\n}\\n\\nconst mapStateToDispatch = (dispatch) => {\\n  return bindActionCreators({ directoryList, deleteDirectoryEntry }, dispatch);\\n};\\n\\nexport default connect(null, mapStateToDispatch)(List);\\n\\n\\n//components/edit.js\\nimport React, { Component } from 'react';\\nimport { bindActionCreators } from 'redux';\\nimport { connect } from 'react-redux';\\nimport { directoryListById } from '../actions/index';\\nimport Form from './form';\\n\\nclass Edit extends Component {\\n   constructor(props){\\n      super(props);\\n      this.id = this.props.match.params.id;\\n      this.state = { row: [] }\\n   }\\n   async getRecord() {\\n      let result = await this.props.directoryListById(this.id);\\n      this.setState({ row : Object.assign( this.state.row, result.payload.data ) });\\n   }\\n   componentDidMount(){\\n      this.getRecord();\\n   }\\n   callForm(){\\n      if ( Object.keys(this.state.row).length > 0 ) {\\n           return <Form mode=\\\"edit\\\" row={this.state.row} />;\\n      }\\n   }\\n   render(){\\n      return(\\n        <div>\\n          { this.callForm() }\\n        </div> \\n      );\\n   }\\n}\\n\\nconst mapStateToDispatch = (dispatch) => {\\n  return bindActionCreators({ directoryListById }, dispatch);\\n};\\n\\nexport default connect(null, mapStateToDispatch)(Edit);\\n\\n\\n//components/entry.js\\nimport Form from './form';\\n\\nconst Entry = () => {\\n    return(\\n      <div>\\n        <Form mode=\\\"new\\\" row=\\\"[]\\\" />\\n      </div>\\n    );\\n}\\n\\n\\n//App.js\\nimport { Link, Route } from \\\"react-router-dom\\\";\\nimport Entry from \\\"./components/entry\\\";\\nimport List from \\\"./components/list\\\";\\nimport Edit from \\\"./components/edit\\\";\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"row\\\">\\n         <Link to=\\\"/\\\">Listings</Link>\\n          <Link to=\\\"/entry\\\">Entry</Link>\\n          <Route exact path=\\\"/\\\" component={List} />\\n          <Route path=\\\"/entry\\\" component={Entry} />\\n          <Route path=\\\"/edit/:id\\\" component={Edit} />\\n      </div>\\n    );\\n  }\\n}\\n\\n\\n//index.js\\nimport { Provider } from \\\"react-redux\\\";\\nimport { createStore, applyMiddleware } from \\\"redux\\\";\\nimport { Router } from \\\"react-router-dom\\\";\\nimport createBrowserHistory from \\\"history/createBrowserHistory\\\";\\nimport promise from \\\"redux-promise\\\";\\n\\nimport reducers from \\\"./reducers\\\";\\nimport App from \\\"./App\\\";\\nimport 'bootstrap/dist/css/bootstrap.min.css';\\n\\nconst createStoreWithMiddleware = applyMiddleware(promise)(createStore);\\nconst history = createBrowserHistory();\\n\\n\\nReactDOM.render(\\n    <Provider store={createStoreWithMiddleware(reducers)}>\\n        <Router history={history}>\\n            <App />\\n        </Router>\\n    </Provider>, document.querySelector(\\\".container\\\") );\".trim(),x=\"\\n//models/directory.js\\nconst DirectorySchema = new Schema({\\n  name: { type: String, required: true },\\n  description: { type: String, required: true },\\n  phone: { type: String, required: true },\\n  email_address: { type: String, required: true },\\n  physical_address: { type: String, required: true },\\n  createdAt: { type: Date, required: true }\\n});\\n\\n\\nmodule.exports = mongoose.model('Directory', DirectorySchema);\\n\\n\\n//routes/index.js\\nconst Directory = require('../models/directory');\\n\\nmodule.exports = function() {\\n  router.get('/read', async (req, res) => {\\n      let directory_list = await Directory.find({});\\n      res.send(directory_list);\\n  });\\n\\n  router.post(\\\"/create\\\", async ( req, res ) => {\\n      let directory = new Directory({\\n         name: req.body.name,\\n         description: req.body.description,\\n         phone: req.body.phone,\\n         email_address: req.body.email_address,\\n         physical_address: req.body.physical_address,\\n         createdAt: new Date(Date.now())\\n      });\\n\\n        let newDirectory = await directory.save();\\n        res.send({ response: 'success'});\\n  });\\n\\n  router.get('/readbyid/', async ( req, res ) => {\\n       let record = await Directory.findOne({ _id: req.query.id });\\n       res.send(record);\\n  });\\n     \\n  router.put('/update', async ( req, res ) => {\\n        let directory = await Directory.findOneAndUpdate({ _id: req.body.id }, req.body, { new: true });\\n        res.send({ response: 'success' });\\n  });\\n\\n  router.delete('/delete', async (req, res) => {\\n        let directory = await Directory.findOneAndRemove({ _id: req.query.entryid });\\n        return res.send({ response: 'success' });\\n  });\\n\\n  return router;\\n\\n};\\n\\n\\n//server.js\\nconst path = require('path');\\n\\nconst routes = require('./routes/index')();\\n\\napp.use(express.json());\\napp.use('/', routes);\\n\\nconst port = process.env.PORT || 3001;\\napp.listen(port, () => { console.log('Server listening on port ') });\\n\\n\".trim(),D=function(e){function n(){return Object(r.a)(this,n),Object(a.a)(this,Object(i.a)(n).apply(this,arguments))}return Object(o.a)(n,e),Object(s.a)(n,[{key:\"componentDidMount\",value:function(){setTimeout((function(){return p.a.highlightAll()}),0)}},{key:\"render\",value:function(){var e=this.props.classes;return c.a.createElement(m.a,{container:!0},c.a.createElement(m.a,{item:!0,xs:2},c.a.createElement(u.a,{className:e.paper},c.a.createElement(\"h4\",null,c.a.createElement(E.a,null)))),c.a.createElement(m.a,{item:!0,xs:10},c.a.createElement(u.a,{className:e.paper},c.a.createElement(h.a,null,c.a.createElement(\"h3\",null,\"Actions\"),c.a.createElement(\"div\",{style:g},c.a.createElement(f.a,{code:b,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Reducers\"),c.a.createElement(\"div\",{style:g},c.a.createElement(f.a,{code:v,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Components\"),c.a.createElement(\"div\",{style:g},c.a.createElement(f.a,{code:_,language:\"js\",plugins:[\"line-numbers\"]})),c.a.createElement(\"br\",null),c.a.createElement(\"h3\",null,\"Server\"),c.a.createElement(\"div\",{style:g},c.a.createElement(f.a,{code:x,language:\"js\",plugins:[\"line-numbers\"]}))))))}}]),n}(d.Component);n.default=Object(y.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:\"center\"}}}))(D)}}]);","extractedComments":[]}