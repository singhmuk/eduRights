{"map":{"version":3,"sources":["static/js/86.edfa2cff.chunk.js"],"names":["this","push","342","module","__webpack_exports__","__webpack_require__","d","Sidebar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_MenuList__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__","useStyles","Object","theme","root","display","paper","marginRight","spacing","line","textDecoration","classes","a","createElement","className","to","512","r","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_5___default","prismjs__WEBPACK_IMPORTED_MODULE_6__","prismjs__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","_sidebar__WEBPACK_IMPORTED_MODULE_12__","_ReactJs_prismCode__WEBPACK_IMPORTED_MODULE_13__","titles","backgroundColor","padding","fontSize","images","trim","images_2","detection","shape","JoinImages","_Component","apply","arguments","key","value","setTimeout","highlightAll","props","container","item","xs","style","code","language","plugins","margin","smMargin","actionDiv","textAlign"],"mappings":"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"},"code":"(this[\"webpackJsonpmern-stack-client\"]=this[\"webpackJsonpmern-stack-client\"]||[]).push([[86],{342:function(e,a,n){\"use strict\";n.d(a,\"a\",(function(){return o}));var r=n(0),i=n.n(r),t=n(12),c=n(14),l=n(50),s=n(49),m=Object(s.a)((function(e){return{root:{display:\"flex\"},paper:{marginRight:e.spacing(2)},line:{textDecoration:\"none\"}}}));function o(){var e=m();return i.a.createElement(\"div\",{className:e.root},i.a.createElement(l.a,null,i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/infoMl\",className:e.line},\"InfoMl\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/gredient_decents\",className:e.line},\"Gredient Decents\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/training\",className:e.line},\"Traning\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/regularizations\",className:e.line},\"Regularizations\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/featuresEng\",className:e.line},\"FeaturesEng\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/adaboost\",className:e.line},\"Adaboots\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/greedSearch\",className:e.line},\"Greed Search\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/perceptron\",className:e.line},\"Perceptron\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/pcaPy\",className:e.line},\"PCA\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/leanearRegression\",className:e.line},\"Leanear Regression\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/logisticReg\",className:e.line},\"Logistic Regression\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/lda\",className:e.line},\"Lda\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/knn\",className:e.line},\"Knn\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/k_meanClustring\",className:e.line},\"K_Mean\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/naiveBar\",className:e.line},\"Naive Bayes\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/randomForest\",className:e.line},\"Random Forest\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/decisiontree\",className:e.line},\"Decision Tree\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/svmPy\",className:e.line},\"SVM\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/numpyPy\",className:e.line},\"Numpy\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/pandas\",className:e.line},\"Pandas\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/bagging\",className:e.line},\"Matplotlib\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/logisticRegrations\",className:e.line},\"Scikit Learn\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/regrations\",className:e.line},\"SciPy\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/libraries\",className:e.line},\"OpenCV\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/capture\",className:e.line},\"Capture\")),i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/joinImages\",className:e.line},\"JoinImages\")),i.a.createElement(\"br\",null),\"Deep Learning\",i.a.createElement(c.a,null,i.a.createElement(t.b,{to:\"/superwise\",className:e.line},\"Superwise\"))),i.a.createElement(\"div\",null))}},512:function(e,a,n){\"use strict\";n.r(a);var r=n(4),i=n(3),t=n(5),c=n(6),l=n(8),s=n(0),m=n.n(s),o=n(7),g=n.n(o),y=n(2),p=n(9),u=n(13),h=n(11),v=(n(16),n(342)),A=n(1),x={backgroundColor:\"#F0F8FF\",padding:\"1px\",fontSize:\"16px\"},E='\\nimport cv2\\nimport numpy as np\\n\\nimg = cv2.imread(\"D:PythonMachin_LearningopenCVResourcesimgs.jpg\")\\n\\nimgHor = np.hstack((img, img))\\n\\ncv2.imshow(\"Horizontal\", imgHor)\\n\\ncv2.waitKey(0)\\n'.trim(),b=\"import cv2\\nimport numpy as np\\n\\n\\ndef stackImages(scale,imgArray):\\n    rows = len(imgArray)\\n    cols = len(imgArray[0])\\n    rowsAvailable = isinstance(imgArray[0], list)\\n    width = imgArray[0][0].shape[1]\\n    height = imgArray[0][0].shape[0]\\n    if rowsAvailable:\\n        for x in range ( 0, rows):\\n            for y in range(0, cols):\\n                if imgArray[x][y].shape[:2] == imgArray[0][0].shape [:2]:\\n                    imgArray[x][y] = cv2.resize(imgArray[x][y], (0, 0), None, scale, scale)\\n                else:\\n                    imgArray[x][y] = cv2.resize(imgArray[x][y], (imgArray[0][0].shape[1], imgArray[0][0].shape[0]), \\n                                        None, scale, scale)\\n                if len(imgArray[x][y].shape) == 2: imgArray[x][y]= cv2.cvtColor( imgArray[x][y], cv2.COLOR_GRAY2BGR)\\n        imageBlank = np.zeros((height, width, 3), np.uint8)\\n        hor = [imageBlank]*rows\\n        hor_con = [imageBlank]*rows\\n        for x in range(0, rows):\\n            hor[x] = np.hstack(imgArray[x])\\n        ver = np.vstack(hor)\\n    else:\\n        for x in range(0, rows):\\n            if imgArray[x].shape[:2] == imgArray[0].shape[:2]:\\n                imgArray[x] = cv2.resize(imgArray[x], (0, 0), None, scale, scale)\\n            else:\\n                imgArray[x] = cv2.resize(imgArray[x], (imgArray[0].shape[1], imgArray[0].shape[0]), None,scale, scale)\\n            if len(imgArray[x].shape) == 2: imgArray[x] = cv2.cvtColor(imgArray[x], cv2.COLOR_GRAY2BGR)\\n        hor= np.hstack(imgArray)\\n        ver = hor\\n    return ver\\n\\nimg = cv2.imread('D:PythonMachin_LearningopenCVResourcesimgs.jpg')\\nimgGray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)\\n\\nimgStack = stackImages(0.5,([img,imgGray,img],[img,img,img]))\\n\\n\\ncv2.imshow(\\\"ImageStack\\\",imgStack)\\n\\ncv2.waitKey(0)\\n\".trim(),k='\\nimport cv2\\nimport numpy as np\\n\\ndef empty(a):\\n    pass\\n\\ndef stackImages(scale,imgArray):\\n    rows = len(imgArray)\\n    cols = len(imgArray[0])\\n    rowsAvailable = isinstance(imgArray[0], list)\\n    width = imgArray[0][0].shape[1]\\n    height = imgArray[0][0].shape[0]\\n    if rowsAvailable:\\n        for x in range ( 0, rows):\\n            for y in range(0, cols):\\n                if imgArray[x][y].shape[:2] == imgArray[0][0].shape [:2]:\\n                    imgArray[x][y] = cv2.resize(imgArray[x][y], (0, 0), None, scale, scale)\\n                else:\\n                    imgArray[x][y] = cv2.resize(imgArray[x][y], (imgArray[0][0].shape[1], imgArray[0][0].shape[0]), \\n                                                None, scale, scale)\\n                if len(imgArray[x][y].shape) == 2: imgArray[x][y]= cv2.cvtColor( imgArray[x][y], cv2.COLOR_GRAY2BGR)\\n        imageBlank = np.zeros((height, width, 3), np.uint8)\\n        hor = [imageBlank]*rows\\n        hor_con = [imageBlank]*rows\\n        for x in range(0, rows):\\n            hor[x] = np.hstack(imgArray[x])\\n        ver = np.vstack(hor)\\n    else:\\n        for x in range(0, rows):\\n            if imgArray[x].shape[:2] == imgArray[0].shape[:2]:\\n                imgArray[x] = cv2.resize(imgArray[x], (0, 0), None, scale, scale)\\n            else:\\n                imgArray[x] = cv2.resize(imgArray[x], (imgArray[0].shape[1], imgArray[0].shape[0]), None,scale, scale)\\n            if len(imgArray[x].shape) == 2: imgArray[x] = cv2.cvtColor(imgArray[x], cv2.COLOR_GRAY2BGR)\\n        hor= np.hstack(imgArray)\\n        ver = hor\\n    return ver\\n\\n\\n\\npath = \\'D:PythonMachin_LearningopenCVResourcesimgs.jpg\\'\\ncv2.namedWindow(\"TrackBars\")\\ncv2.resizeWindow(\"TrackBars\",640,240)\\ncv2.createTrackbar(\"Hue Min\",\"TrackBars\",0,179,empty)\\ncv2.createTrackbar(\"Hue Max\",\"TrackBars\",19,179,empty)\\ncv2.createTrackbar(\"Sat Min\",\"TrackBars\",110,255,empty)\\ncv2.createTrackbar(\"Sat Max\",\"TrackBars\",240,255,empty)\\ncv2.createTrackbar(\"Val Min\",\"TrackBars\",153,255,empty)\\ncv2.createTrackbar(\"Val Max\",\"TrackBars\",255,255,empty)\\n\\nwhile True:\\n    img = cv2.imread(path)\\n    imgHSV = cv2.cvtColor(img,cv2.COLOR_BGR2HSV)\\n    h_min = cv2.getTrackbarPos(\"Hue Min\",\"TrackBars\")\\n    h_max = cv2.getTrackbarPos(\"Hue Max\", \"TrackBars\")\\n    s_min = cv2.getTrackbarPos(\"Sat Min\", \"TrackBars\")\\n    s_max = cv2.getTrackbarPos(\"Sat Max\", \"TrackBars\")\\n    v_min = cv2.getTrackbarPos(\"Val Min\", \"TrackBars\")\\n    v_max = cv2.getTrackbarPos(\"Val Max\", \"TrackBars\")\\n    print(h_min,h_max,s_min,s_max,v_min,v_max)\\n    lower = np.array([h_min,s_min,v_min])\\n    upper = np.array([h_max,s_max,v_max])\\n    mask = cv2.inRange(imgHSV,lower,upper)\\n    imgResult = cv2.bitwise_and(img,img,mask=mask)\\n\\n\\n    # cv2.imshow(\"Original\",img)\\n    # cv2.imshow(\"HSV\",imgHSV)\\n    # cv2.imshow(\"Mask\", mask)\\n    # cv2.imshow(\"Result\", imgResult)\\n\\n    imgStack = stackImages(0.6,([img,imgHSV],[mask,imgResult]))\\n    cv2.imshow(\"Stacked Images\", imgStack)\\n\\n    cv2.waitKey(1)\\n'.trim(),f='\\nimport cv2\\nimport numpy as np\\n\\ndef stackImages(scale,imgArray):\\n    rows = len(imgArray)\\n    cols = len(imgArray[0])\\n    rowsAvailable = isinstance(imgArray[0], list)\\n    width = imgArray[0][0].shape[1]\\n    height = imgArray[0][0].shape[0]\\n    if rowsAvailable:\\n        for x in range ( 0, rows):\\n            for y in range(0, cols):\\n                if imgArray[x][y].shape[:2] == imgArray[0][0].shape [:2]:\\n                    imgArray[x][y] = cv2.resize(imgArray[x][y], (0, 0), None, scale, scale)\\n                else:\\n                    imgArray[x][y] = cv2.resize(imgArray[x][y], (imgArray[0][0].shape[1], imgArray[0][0].shape[0]), \\n                                     None, scale, scale)\\n                if len(imgArray[x][y].shape) == 2: imgArray[x][y]= cv2.cvtColor( imgArray[x][y], cv2.COLOR_GRAY2BGR)\\n        imageBlank = np.zeros((height, width, 3), np.uint8)\\n        hor = [imageBlank]*rows\\n        hor_con = [imageBlank]*rows\\n        for x in range(0, rows):\\n            hor[x] = np.hstack(imgArray[x])\\n        ver = np.vstack(hor)\\n    else:\\n        for x in range(0, rows):\\n            if imgArray[x].shape[:2] == imgArray[0].shape[:2]:\\n                imgArray[x] = cv2.resize(imgArray[x], (0, 0), None, scale, scale)\\n            else:\\n                imgArray[x] = cv2.resize(imgArray[x], (imgArray[0].shape[1], imgArray[0].shape[0]), None,scale, scale)\\n            if len(imgArray[x].shape) == 2: imgArray[x] = cv2.cvtColor(imgArray[x], cv2.COLOR_GRAY2BGR)\\n        hor= np.hstack(imgArray)\\n        ver = hor\\n    return ver\\n\\ndef getContours(img):\\n    contours,hierarchy = cv2.findContours(img,cv2.RETR_EXTERNAL,cv2.CHAIN_APPROX_NONE)\\n    for cnt in contours:\\n        area = cv2.contourArea(cnt)\\n        print(area)\\n        if area>500:\\n            cv2.drawContours(imgContour, cnt, -1, (255, 0, 0), 3)\\n            peri = cv2.arcLength(cnt,True)\\n            #print(peri)\\n            approx = cv2.approxPolyDP(cnt,0.02*peri,True)\\n            print(len(approx))\\n            objCor = len(approx)\\n            x, y, w, h = cv2.boundingRect(approx)\\n\\n            if objCor ==3: objectType =\"Tri\"\\n            elif objCor == 4:\\n                aspRatio = w/float(h)\\n                if aspRatio >0.98 and aspRatio <1.03: objectType= \"Square\"\\n                else:objectType=\"Rectangle\"\\n            elif objCor>4: objectType= \"Circles\"\\n            else:objectType=\"None\"\\n\\n\\n\\n            cv2.rectangle(imgContour,(x,y),(x+w,y+h),(0,255,0),2)\\n            cv2.putText(imgContour,objectType,\\n                        (x+(w//2)-10,y+(h//2)-10),cv2.FONT_HERSHEY_COMPLEX,0.7,\\n                        (0,0,0),2)\\n\\n\\n\\n\\npath = \\'D:PythonMachin_LearningopenCVResourcesimgs.jpg\\'\\nimg = cv2.imread(path)\\nimgContour = img.copy()\\n\\nimgGray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)\\nimgBlur = cv2.GaussianBlur(imgGray,(7,7),1)\\nimgCanny = cv2.Canny(imgBlur,50,50)\\ngetContours(imgCanny)\\n\\nimgBlank = np.zeros_like(img)\\nimgStack = stackImages(0.8,([img,imgGray,imgBlur],\\n                            [imgCanny,imgContour,imgBlank]))\\n\\ncv2.imshow(\"Stack\", imgStack)\\n\\ncv2.waitKey(0)\\nimport cv2\\n\\nfaceCascade= cv2.CascadeClassifier(\"Resources/haarcascade_frontalface_default.xml\")\\nimg = cv2.imread(\\'D:PythonMachin_LearningopenCVResourcesimgs.jpg\\')\\nimgGray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)\\n\\nfaces = faceCascade.detectMultiScale(imgGray,1.1,4)\\n\\nfor (x,y,w,h) in faces:\\n    cv2.rectangle(img,(x,y),(x+w,y+h),(255,0,0),2)\\n\\n\\ncv2.imshow(\"Result\", img)\\ncv2.waitKey(0)\\n'.trim(),d=function(e){function a(){return Object(r.a)(this,a),Object(t.a)(this,Object(c.a)(a).apply(this,arguments))}return Object(l.a)(a,e),Object(i.a)(a,[{key:\"componentDidMount\",value:function(){setTimeout((function(){return g.a.highlightAll()}),0)}},{key:\"render\",value:function(){var e=this.props.classes;return m.a.createElement(y.a,{container:!0},m.a.createElement(y.a,{item:!0,xs:2},m.a.createElement(p.a,{className:e.paper},m.a.createElement(\"h4\",null,m.a.createElement(v.a,null)))),m.a.createElement(y.a,{item:!0,xs:10},m.a.createElement(p.a,{className:e.paper},m.a.createElement(u.a,null,m.a.createElement(\"h3\",null,\"Joining images:\"),m.a.createElement(\"div\",{style:x},m.a.createElement(A.a,{code:E,language:\"js\",plugins:[\"line-numbers\"]})),m.a.createElement(\"br\",null),m.a.createElement(\"br\",null),m.a.createElement(\"h3\",null,\"Joining Multiple Images to Display:\"),m.a.createElement(\"div\",{style:x},m.a.createElement(A.a,{code:b,language:\"js\",plugins:[\"line-numbers\"]})),m.a.createElement(\"br\",null),m.a.createElement(\"br\",null),m.a.createElement(\"h3\",null,\"Color Detection:\"),m.a.createElement(\"div\",{style:x},m.a.createElement(A.a,{code:k,language:\"js\",plugins:[\"line-numbers\"]})),m.a.createElement(\"br\",null),m.a.createElement(\"br\",null),m.a.createElement(\"h3\",null,\"Contour/Shape Detection\"),m.a.createElement(\"div\",{style:x},m.a.createElement(A.a,{code:f,language:\"js\",plugins:[\"line-numbers\"]}))))))}}]),a}(s.Component);a.default=Object(h.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:\"center\"}}}))(d)}}]);","extractedComments":[]}