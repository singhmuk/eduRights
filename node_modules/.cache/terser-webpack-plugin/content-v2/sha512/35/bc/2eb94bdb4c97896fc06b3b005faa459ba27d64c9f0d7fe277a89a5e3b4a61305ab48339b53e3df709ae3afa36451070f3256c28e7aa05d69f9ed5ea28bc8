{"map":{"version":3,"sources":["static/js/47.b58e822c.chunk.js"],"names":["this","push","344","module","__webpack_exports__","__webpack_require__","d","Sidebar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_MenuList__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__","useStyles","Object","theme","root","display","paper","marginRight","spacing","line","textDecoration","classes","a","createElement","className","to","473","r","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_home_mukeshs_Projects_edurights_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_5___default","prismjs__WEBPACK_IMPORTED_MODULE_6__","prismjs__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","_sidebar__WEBPACK_IMPORTED_MODULE_12__","_ReactJs_prismCode__WEBPACK_IMPORTED_MODULE_13__","titles","backgroundColor","padding","fontSize","prediction","trim","visualization","categorical","split","keras","pipes","Imbalanced","_Component","apply","arguments","key","value","setTimeout","highlightAll","props","container","item","xs","style","code","language","plugins","margin","smMargin","actionDiv","textAlign"],"mappings":"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"},"code":"(this[\"webpackJsonpmern-stack-client\"]=this[\"webpackJsonpmern-stack-client\"]||[]).push([[47],{344:function(e,n,a){\"use strict\";a.d(n,\"a\",(function(){return u}));var t=a(0),l=a.n(t),r=a(12),s=a(14),i=a(50),c=a(49),o=Object(c.a)((function(e){return{root:{display:\"flex\"},paper:{marginRight:e.spacing(2)},line:{textDecoration:\"none\"}}}));function u(){var e=o();return l.a.createElement(\"div\",{className:e.root},l.a.createElement(i.a,null,l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/introAngular\",className:e.line},\"AI\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/tensorflow\",className:e.line},\"Tensorflow\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/tensors\",className:e.line},\"Tensorboards\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/angCompiler\",className:e.line},\"Compiler\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/neural\",className:e.line},\"NeuralKeras\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/activationFunctions\",className:e.line},\"activationFuncs\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/loss\",className:e.line},\"Loss\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/gradientNeural\",className:e.line},\"GradientNeural\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/stochastic\",className:e.line},\"Stochastic\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/benchmarking\",className:e.line},\"Benchmarking\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/customer\",className:e.line},\"Customer\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/regularizationDeep\",className:e.line},\"Regularization Deep\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/imbalanced\",className:e.line},\"Imbalanced\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/imbalanced2\",className:e.line},\"Imbalanced2\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/convolutionals\",className:e.line},\"Convolutionals\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/data_augmentation\",className:e.line},\"data Augmentation\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/transfer\",className:e.line},\"Transfer\")),l.a.createElement(s.a,null,l.a.createElement(r.b,{to:\"/word_embedding\",className:e.line},\"Embedding\"))),l.a.createElement(\"div\",null))}},473:function(e,n,a){\"use strict\";a.r(n);var t=a(4),l=a(3),r=a(5),s=a(6),i=a(8),c=a(0),o=a.n(c),u=a(7),m=a.n(u),d=a(2),p=a(9),_=a(13),f=a(11),h=(a(16),a(344)),g=a(1),E={backgroundColor:\"#F0F8FF\",padding:\"1px\",fontSize:\"16px\"},b=\"\\ndf = pd.read_csv(\\\"customer_churn.csv\\\")\\n\\ndf.Churn.value_counts()\\n517400/ df.shape[0]\\n\\ndf.drop('customerID',axis='columns',inplace=True)\\n\\ndf.TotalCharges.values\\npd.to_numeric(df.TotalCharges,errors='coerce').isnull()\\ndf[pd.to_numeric(df.TotalCharges,errors='coerce').isnull()]\\n\\ndf.iloc[488].TotalCharges\\ndf[df.TotalCharges!=' '].shape\\ndf1 = df[df.TotalCharges!=' ']\\n\\ndf1.TotalCharges = pd.to_numeric(df1.TotalCharges)\\ndf1.TotalCharges.values\\ndf1[df1.Churn=='No']\\n\".trim(),y=\"\\ntenure_churn_no = df1[df1.Churn=='No'].tenure\\ntenure_churn_yes = df1[df1.Churn=='Yes'].tenure\\n\\nplt.xlabel(\\\"tenure\\\")\\nplt.ylabel(\\\"Number Of Customers\\\")\\nplt.title(\\\"Customer Churn Prediction Visualiztion\\\")\\n\\nblood_sugar_men = [113, 85, 90, 150, 149, 88, 93, 115, 135, 80, 77, 82, 129]\\nblood_sugar_women = [67, 98, 89, 120, 133, 150, 84, 69, 89, 79, 120, 112, 100]\\n\\nplt.hist([tenure_churn_yes, tenure_churn_no], rwidth=0.95, color=['green','red'],label=['Churn=Yes','Churn=No'])\\nplt.legend()\\n\\n\\nmc_churn_no = df1[df1.Churn=='No'].MonthlyCharges      \\nmc_churn_yes = df1[df1.Churn=='Yes'].MonthlyCharges      \\n\\nplt.xlabel(\\\"Monthly Charges\\\")\\nplt.ylabel(\\\"Number Of Customers\\\")\\nplt.title(\\\"Customer Churn Prediction Visualiztion\\\")\\n\\nblood_sugar_men = [113, 85, 90, 150, 149, 88, 93, 115, 135, 80, 77, 82, 129]\\nblood_sugar_women = [67, 98, 89, 120, 133, 150, 84, 69, 89, 79, 120, 112, 100]\\n\\nplt.hist([mc_churn_yes, mc_churn_no], rwidth=0.95, color=['green','red'],label=['Churn=Yes','Churn=No'])\\nplt.legend()\\n\\n\\ndef print_unique_col_values(df):\\n       for column in df:\\n            if df[column].dtypes=='object':\\n                print(f'{column}: {df[column].unique()}') \\n                \\nprint_unique_col_values(df1)\\n\\ndf1.replace('No internet service','No',inplace=True)\\ndf1.replace('No phone service','No',inplace=True)\\nprint_unique_col_values(df1)\\n\\nyes_no_columns = ['Partner','Dependents','PhoneService','MultipleLines','OnlineSecurity','OnlineBackup',\\n                  'DeviceProtection','TechSupport','StreamingTV','StreamingMovies','PaperlessBilling','Churn']\\nfor col in yes_no_columns:\\n    df1[col].replace({'Yes': 1,'No': 0},inplace=True)\\n    \\n    \\nfor col in df1:\\n    print(f'{col}: {df1[col].unique()}') \\n    \\ndf1['gender'].replace({'Female':1,'Male':0},inplace=True)\\ndf1.gender.unique()\\n\".trim(),C=\"\\nfrom sklearn.preprocessing import MinMaxScaler\\n\\ndf2 = pd.get_dummies(data=df1, columns=['InternetService','Contract','PaymentMethod'])\\n\\ncols_to_scale = ['tenure','MonthlyCharges','TotalCharges']\\n\\nscaler = MinMaxScaler()\\ndf2[cols_to_scale] = scaler.fit_transform(df2[cols_to_scale])\\n\\nfor col in df2:\\n    print(f'{col}: {df2[col].unique()}')\\n\".trim(),v=\"\\nX = df2.drop('Churn',axis='columns')\\ny = testLabels = df2.Churn.astype(np.float32)\\n\\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=15, stratify=y)\\n\\ny_train.value_counts()\\n5163/1869\\nlen(X_train.columns)\\n\".trim(),N=\"\\nfrom tensorflow_addons import losses\\nimport tensorflow as tf\\nfrom tensorflow import keras\\nfrom sklearn.metrics import confusion_matrix , classification_report\\n\\ndef ANN(X_train, y_train, X_test, y_test, loss, weights):\\n    model = keras.Sequential([\\n        keras.layers.Dense(26, input_dim=26, activation='relu'),\\n        keras.layers.Dense(15, activation='relu'),\\n        keras.layers.Dense(1, activation='sigmoid')\\n    ])\\n\\n    model.compile(optimizer='adam', loss=loss, metrics=['accuracy'])\\n    \\n    if weights == -1:\\n        model.fit(X_train, y_train, epochs=100)\\n    else:\\n        model.fit(X_train, y_train, epochs=100, class_weight = weights)\\n    \\n    print(model.evaluate(X_test, y_test))\\n    \\n    y_preds = model.predict(X_test)\\n    y_preds = np.round(y_preds)\\n    \\n    print(\\\"Classification Report:\\\", classification_report(y_test, y_preds))\\n    \\n    return y_preds\\n    \\ny_preds = ANN(X_train, y_train, X_test, y_test, 'binary_crossentropy', -1)\\n\".trim(),w=\"\\n# Method 1: Undersampling\\ncount_class_0, count_class_1 = df1.Churn.value_counts()\\n\\ndf_class_0 = df2[df2['Churn'] == 0]\\ndf_class_1 = df2[df2['Churn'] == 1]\\n\\ndf_class_0_under = df_class_0.sample(count_class_1)\\ndf_test_under = pd.concat([df_class_0_under, df_class_1], axis=0)\\n\\nprint('Random under-sampling:')\\nprint(df_test_under.Churn.value_counts())\\n\\nX = df_test_under.drop('Churn',axis='columns')\\ny = df_test_under['Churn']\\n\\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=15, stratify=y)\\ny_train.value_counts()\\n\\ny_preds = ANN(X_train, y_train, X_test, y_test, 'binary_crossentropy', -1)\\n\".trim(),T=function(e){function n(){return Object(t.a)(this,n),Object(r.a)(this,Object(s.a)(n).apply(this,arguments))}return Object(i.a)(n,e),Object(l.a)(n,[{key:\"componentDidMount\",value:function(){setTimeout((function(){return m.a.highlightAll()}),0)}},{key:\"render\",value:function(){var e=this.props.classes;return o.a.createElement(d.a,{container:!0},o.a.createElement(d.a,{item:!0,xs:2},o.a.createElement(p.a,{className:e.paper},o.a.createElement(\"h4\",null,o.a.createElement(h.a,null)))),o.a.createElement(d.a,{item:!0,xs:10},o.a.createElement(p.a,{className:e.paper},o.a.createElement(_.a,null,o.a.createElement(\"h3\",null,\"Handling imbalanced data in customer churn prediction\"),o.a.createElement(\"b\",null,\"Handling imbalanced dataset:\"),o.a.createElement(\"ul\",null,o.a.createElement(\"li\",null,\"1. Under sampling majority class.\"),o.a.createElement(\"li\",null,\"2. Over sampling minority class by duplication.\"),o.a.createElement(\"ul\",null,o.a.createElement(\"li\",null,\"Generate new sample from current sample by simply duplicating them.\")),o.a.createElement(\"br\",null),o.a.createElement(\"li\",null,\"3. Over sampling minority class using SMOTE.\"),o.a.createElement(\"ul\",null,o.a.createElement(\"li\",null,\"Generate synthetic example using KNN aglo.\"),o.a.createElement(\"li\",null,o.a.createElement(\"b\",null,\"SMOTE: \"),\"Synthetic Minority Over-sampling Technique.\")),o.a.createElement(\"br\",null),o.a.createElement(\"li\",null,\"Ensemble Method.\"),o.a.createElement(\"li\",null,\"Focal loss.\"),o.a.createElement(\"ul\",null,o.a.createElement(\"li\",null,\"Focal loss will penalize majority samples during loss calculation and give weight to minority class samples.\"))),o.a.createElement(\"br\",null),o.a.createElement(\"i\",null,\"Customer churn prediction is to measure why customers are leaving a business. Looking at customer churn in telecom business. We will build a deep learning model to predict the churn and use precision,recall, f1-score to measure performance of our model. We will then handle imbalance in data using various techniques and improve f1-score.\"),o.a.createElement(\"br\",null),o.a.createElement(\"div\",{style:E},o.a.createElement(g.a,{code:b,language:\"js\",plugins:[\"line-numbers\"]})),o.a.createElement(\"br\",null),o.a.createElement(\"h3\",null,\"Data Visualization\"),o.a.createElement(\"div\",{style:E},o.a.createElement(g.a,{code:y,language:\"js\",plugins:[\"line-numbers\"]})),o.a.createElement(\"br\",null),o.a.createElement(\"h3\",null,\"One hot encoding for categorical columns\"),o.a.createElement(\"div\",{style:E},o.a.createElement(g.a,{code:C,language:\"js\",plugins:[\"line-numbers\"]})),o.a.createElement(\"br\",null),o.a.createElement(\"h3\",null,\"Train test split\"),o.a.createElement(\"div\",{style:E},o.a.createElement(g.a,{code:v,language:\"js\",plugins:[\"line-numbers\"]})),o.a.createElement(\"br\",null),o.a.createElement(\"h3\",null,\"Build a model (ANN) in tensorflow/ keras\"),o.a.createElement(\"div\",{style:E},o.a.createElement(g.a,{code:N,language:\"js\",plugins:[\"line-numbers\"]})),o.a.createElement(\"br\",null),o.a.createElement(\"h3\",null,\"Mitigating Skewdness of Data\"),o.a.createElement(\"div\",{style:E},o.a.createElement(g.a,{code:w,language:\"js\",plugins:[\"line-numbers\"]})),o.a.createElement(\"br\",null),o.a.createElement(\"i\",null,\"Printing Classification in the last, Scroll down till the last epoch to watch the classification report.\")))))}}]),n}(c.Component);n.default=Object(f.a)((function(e){return{paper:{margin:e.spacing(1),padding:e.spacing(1)},smMargin:{margin:e.spacing(1)},actionDiv:{textAlign:\"center\"}}}))(T)}}]);","extractedComments":[]}